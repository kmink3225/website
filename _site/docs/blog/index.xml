<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kwangmin Kim</title>
<link>kmink3225.netlify.app/docs/blog/index.html</link>
<atom:link href="kmink3225.netlify.app/docs/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>A great sample blog</description>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Fri, 30 Apr 2100 15:00:00 GMT</lastBuildDate>
<item>
  <title>Content List, Statistics</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<ul>
<li>2023-02-05, <a href="../../../../../docs/blog/posts/statistics/2023-02-05_probability/index.html">Probability</a></li>
<li>2023-02-05, <a href="../../../../../docs/blog/posts/statistics/2023-02-05_conditional_probability/index.html">Conditional Probability</a></li>
<li>2023-02-05, <a href="../../../../../docs/blog/posts/statistics/2023-02-05_bayes_rule/index.html">Bayes’ Rule</a></li>
<li>2023-02-05, Random Variable</li>
<li>1111-11-11, Probability Distribution</li>
<li>1111-11-11, Discrete Random Variable</li>
<li>1111-11-11, Continuous Random Variable</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Joint Distribution and Marginal Distribution</li>
<li>2023-02-21, <a href="../../../../../docs/blog/posts/statistics/2023-02-21_transformation/index.html">Transformation of Random Variables</a></li>
<li>1111-11-11, Expected Value vs Realizaed Value</li>
<li>1111-11-11, Variance</li>
<li>1111-11-11, Covariance and Correlation</li>
<li>1111-11-11, Estimation</li>
<li>1111-11-11, Maximum Likelihood Estimation (MLE)</li>
<li>1111-11-11, Variance and Bias</li>
<li>1111-11-11, Exponential Family Distributions
<ul>
<li>1111-11-11, Bernoulli Distribution</li>
<li>1111-11-11, Binomial Distribution</li>
<li>1111-11-11, Poisson Distribution</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Exponential Distribution</li>
<li>1111-11-11, Beta Distribution</li>
<li>1111-11-11, Chi-squared Distribution</li>
<li>1111-11-11, Geometric Distribution</li>
<li>1111-11-11, Hypergeometric Distribution</li>
<li>1111-11-11,</li>
</ul></li>
</ul>
</section>
<section id="test" class="level2">
<h2 class="anchored" data-anchor-id="test">Test</h2>
<ul>
<li>1111-11-11, Hypothesis Testing</li>
<li>2022-12-28, <a href="../../../../../docs/blog/posts/statistics/2022-12-08-P-value/index.html">p-values</a></li>
<li>1111-11-11, Permutation Test</li>
<li>1111-11-11, Power</li>
<li>1111-11-11, Multiple Testing</li>
<li>1111-11-11, Sample Size Calculation</li>
<li>1111-11-11, A/B Testing</li>
<li>2023-01-07, <a href="../../../../../docs/blog/posts/statistics/2023-01-07-anova/index.html">ANOVA</a>
<ul>
<li>2023-01-27, <a href="../2023-01-27_ANCOVA/">ANCOVA</a></li>
<li>2023-01-27, <a href="../2023-01-27_rmANOVA/">repeated measures ANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANOVA/">MANOVA</a></li>
</ul></li>
</ul>
</section>
<section id="regression" class="level2">
<h2 class="anchored" data-anchor-id="regression">Regression</h2>
<ul>
<li>1111-11-11, Least Square and Simple Linear Regression</li>
<li>1111-11-11, Multiple Linear Regression</li>
</ul>
<section id="generalized-linear-models" class="level3">
<h3 class="anchored" data-anchor-id="generalized-linear-models">Generalized Linear Models</h3>
<ul>
<li>1111-11-11, Logistic Regression</li>
<li>1111-11-11, Multinomial Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
</ul>
</section>
<section id="mixed-models" class="level3">
<h3 class="anchored" data-anchor-id="mixed-models">Mixed Models</h3>
<ul>
<li>1111-11-11, Linear Mixed Models</li>
</ul>
</section>
</section>
<section id="generalized-additive-models" class="level2">
<h2 class="anchored" data-anchor-id="generalized-additive-models">Generalized Additive Models</h2>
</section>
<section id="survival-analysis" class="level2">
<h2 class="anchored" data-anchor-id="survival-analysis">Survival Analysis</h2>
<ul>
<li>1111-11-11, Cox-Hazard Model</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/guide_map/index.html</guid>
  <pubDate>Fri, 30 Apr 2100 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Machine Learning</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<section id="r" class="level3">
<h3 class="anchored" data-anchor-id="r">R</h3>
</section>
<section id="python" class="level3">
<h3 class="anchored" data-anchor-id="python">Python</h3>
<section id="tensor-flow-framework" class="level4">
<h4 class="anchored" data-anchor-id="tensor-flow-framework">Tensor Flow Framework</h4>
<ul>
<li>2023-02-03, <a href="../../../../../docs/blog/posts/ML/2023-02-03_tf_introduction/index.html">Tensor Flow Introduction</a></li>
</ul>
</section>
<section id="pytorch-framework" class="level4">
<h4 class="anchored" data-anchor-id="pytorch-framework">Pytorch Framework</h4>
<ul>
<li>2023-02-03, <a href="../../../../../docs/blog/posts/ML/2023-02-03_pytorch_introduction/index.html">Pytorch Introduction</a></li>
</ul>
</section>
</section>
</section>
<section id="machine-learning-methods" class="level2">
<h2 class="anchored" data-anchor-id="machine-learning-methods">Machine Learning Methods</h2>
<section id="supervised-learning" class="level3">
<h3 class="anchored" data-anchor-id="supervised-learning">Supervised Learning</h3>
<ul>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Logistic Regression]</li>
<li>0000-00=00, [Generative Models]
<ul>
<li>0000-00=00, [Linear Discriminant Analysis]</li>
<li>0000-00=00, [Quadratic Discriminant Analysis]</li>
<li>0000-00=00, [Naive Bayes]</li>
</ul></li>
<li>0000-00=00, [Resampling Methods]</li>
<li>0000-00=00, [Regularization]</li>
<li>0000-00=00, [Smoothing]</li>
<li>0000-00=00, [Tree Based Methods]</li>
<li>0000-00=00, [Support Vector Machine]</li>
<li>0000-00=00, [PCR]</li>
<li>0000-00=00, [PLS]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
</ul>
</section>
<section id="unupervised-learning" class="level3">
<h3 class="anchored" data-anchor-id="unupervised-learning">Unupervised Learning</h3>
<ul>
<li>0000-00=00, [PCA]</li>
<li>0000-00=00, [K means clustering]</li>
<li>0000-00=00, [Hierarchical Clustering]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
<li>0000-00=00, [Linear Regression]</li>
</ul>


</section>
</section>
</section>

 ]]></description>
  <category>ML</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/guide_map/index.html</guid>
  <pubDate>Wed, 31 Mar 2100 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Mathematics</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/guide_map/index.html</link>
  <description><![CDATA[ 



<section id="contents" class="level1">
<h1>Contents</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<ul>
<li>1111-11-11, <a href="../../../../../docs/blog/posts/Mathmatics/function/index.html">Function</a>
<ul>
<li>2023-01-31, <a href="../../../../../docs/blog/posts/Mathmatics/function/univariable_scalar_function.html">Function (1) - Univariable Scalar Function (One to One)</a></li>
<li>2023-01-31, <a href="../../../../../docs/blog/posts/Mathmatics/function/multivariable_scalar_function.html">Function (2) - Multi-variable Scalar Function (Many to One)</a></li>
<li>2023-01-31, <a href="../../../../../docs/blog/posts/Mathmatics/function/univariable_vector_function.html">Function (3) - Univariable Vector Function (One to Many)</a></li>
<li>2023-01-31, <a href="../../../../../docs/blog/posts/Mathmatics/function/mutivariable_vector_function.html">Function (4) - Multi-variable Vector Function (Many to Many)</a></li>
<li>2023-02-18, <a href="../../../../../docs/blog/posts/Mathmatics/function/composite_function.html">Function (5) - Composite Function</a></li>
</ul></li>
<li>2023-02-18, <a href="../../../../../docs/blog/posts/Mathmatics/transformation/index.html">Transformations of Functions</a></li>
<li>1111-11-11, Vector &amp; Matrix</li>
<li>1111-11-11, Limit, <img src="https://latex.codecogs.com/png.latex?%5Cepsilon-%5Cdelta"> Method</li>
<li>Differentiation
<ul>
<li>2023-02-04, <a href="../../../../../docs/blog/posts/Mathmatics/differentiation/2023-02-04_uni_derivative.html">Derivative (1) - Univariable Scalar Funtion</a></li>
<li>1111-11-11, <a href="../../../../../docs/blog/posts/Mathmatics/differentiation/2023-02-10_composite_partial_derivative.html">Derivative (2) - Chain Rule &amp; Partial Derivative</a></li>
<li>1111-11-11, Derivative (3) - Higher Order Derivative</li>
<li>1111-11-11, Derivative (4) - Mean Value Theorem</li>
<li>1111-11-11, Derivative (5) - Gradient</li>
</ul></li>
<li>1111-11-11, Talyer’s Series</li>
<li>1111-11-11, Gradient Direction</li>
<li>1111-11-11, Random Variable</li>
<li>1111-11-11, Probability Distribution</li>
<li>1111-11-11, Information Theory - Entropy</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>
</section>
<section id="linear-algebra" class="level2">
<h2 class="anchored" data-anchor-id="linear-algebra">Linear Algebra</h2>
<ul>
<li>1111-11-11, Vector Space</li>
<li>1111-11-11, Subspace</li>
<li>1111-11-11, Inner Product</li>
<li>1111-11-11, Linear Combination</li>
<li>1111-11-11, Quadratic Form</li>
<li>1111-11-11, Linear Independence</li>
<li>1111-11-11, Basis, Dimension, &amp; Rank</li>
<li>1111-11-11, Outer Product</li>
<li>1111-11-11, Eigen Value &amp; Eigen Vector</li>
<li>1111-11-11, Eigen Decomposition</li>
<li>1111-11-11, Singular Value Decomposition (SVD)</li>
<li>1111-11-11, Gram-Schmidt</li>
<li>1111-11-11, Group</li>
<li>1111-11-11, Orthogonal Matrix</li>
<li>1111-11-11, Rotation &amp; Group</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>
</section>
<section id="optimization" class="level2">
<h2 class="anchored" data-anchor-id="optimization">Optimization</h2>
<ul>
<li>1111-11-11, Convex Set</li>
<li>1111-11-11, Convex Function</li>
<li>1111-11-11, Unconstrained Optimization</li>
<li>1111-11-11, Non-linear Least Square</li>
<li>1111-11-11, Largrange Multiplier Method
<ul>
<li>1111-11-11, Largrange Primal Function</li>
<li>1111-11-11, Largrange Dual Function</li>
<li>1111-11-11, KKT conditions</li>
</ul></li>
<li>1111-11-11, Gradient Descent Optimizers</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<ul>
<li>Statistics
<ul>
<li>George Casella &amp; Rogeer L. Berger - Statistcal Inference, 2nd Edition</li>
<li>슬기로운 통계생활 - https://www.youtube.com/<span class="citation" data-cites="statisticsplaybook">@statisticsplaybook</span></li>
<li>슬기로운 통계생활 - https://github.com/statisticsplaybook</li>
<li>다수의 Youtube, and Documents from Googling</li>
</ul></li>
<li>Mathematics
<ul>
<li>James Stewart - Calculus Early Transcedentals, 7th Eidition</li>
<li>any James Stewart series</li>
<li>임장환 - 머신러닝, 인공지능, 컴퓨터 비전 전공자를 위한 최적화 이론</li>
<li>다수의 Youtube, and Documents from Googling</li>
</ul></li>
<li>Deep Learning
<ul>
<li>조준우 - 머신러닝·딥러닝에 필요한 기초 수학 with 파이썬</li>
<li>조준우 - https://github.com/metamath1/noviceml</li>
<li>동빈나 - https://www.youtube.com/c/dongbinna</li>
<li>혁펜하임 - https://www.youtube.com/channel/UCcbPAIfCa4q0x7x8yFXmBag</li>
<li>다수의 Youtube, and Documents from Googling</li>
</ul></li>
</ul>


</section>
</section>

 ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/guide_map/index.html</guid>
  <pubDate>Sun, 28 Feb 2100 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Deep Learning</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/DL/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>


</section>
</section>

 ]]></description>
  <category>DL</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/DL/guide_map/index.html</guid>
  <pubDate>Thu, 31 Dec 2099 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Engineering</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/index.html</link>
  <description><![CDATA[ 



<section id="it-terminology" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="it-terminology"><span class="header-section-number">1</span> IT Terminology</h2>
<ul>
<li>0000-00-00, PoC (Proof of Concept)</li>
</ul>
</section>
<section id="data-structure" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="data-structure"><span class="header-section-number">2</span> Data Structure</h2>
<ul>
<li>2023-01-17, <a href="../2023-01-17_data_structure_overview/">Overview</a></li>
<li>2023-01-18, <a href="../2023-01-18_array/">Array</a></li>
<li>2023-01-18, <a href="../2023-01-18_linked_list/">Linked List</a></li>
<li>2023-01-18, <a href="../2023-01-18_python_list/">Python List</a></li>
<li>2023-01-19, <a href="../2023-01-19_stack/">Stack</a></li>
<li>2023-01-19, <a href="../2023-01-19_queue/">Queue</a></li>
<li>2023-01-26, <a href="../2023-01-19_deque/">Deque</a></li>
<li>2023-01-26, <a href="../2023-01-20_binary_search_tree/">Binary Search Tree</a></li>
<li>2023-01-20, <a href="../2023-01-20_priority_queue/">Priority Queue</a></li>
<li>2023-01-20, <a href="../2023-01-20_graph/">Graph</a></li>
</ul>
</section>
<section id="conda" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="conda"><span class="header-section-number">3</span> Conda</h2>
</section>
<section id="docker" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="docker"><span class="header-section-number">4</span> Docker</h2>
<ul>
<li>2023-01-30, Docker Install</li>
<li>2023-01-31, Docker Compose</li>
<li>2023-02-01, Docker Container</li>
</ul>
</section>
<section id="dynamic-documentation" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="dynamic-documentation"><span class="header-section-number">5</span> Dynamic Documentation</h2>
<ul>
<li>2023-01-19, <a href="https://quarto.org/docs/get-started/">Quarto</a></li>
<li>2023-01-19, <a href="https://github.com/yihui/xaringan">xaringan[R]</a></li>
<li>2023-01-19, <a href="https://bookdown.org/yihui/bookdown/get-started.html">Bookdown[R]</a></li>
<li>2023-01-19, <a href="https://decile-team-distil.readthedocs.io/en/latest/index.html">DISTL</a></li>
<li>2023-01-26, <a href="https://www.sphinx-doc.org/en/master/">Sphinx[Python]</a></li>
</ul>
</section>
<section id="aws-cloud" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="aws-cloud"><span class="header-section-number">6</span> AWS Cloud</h2>
</section>
<section id="azure-cloud" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="azure-cloud"><span class="header-section-number">7</span> Azure Cloud</h2>
</section>
<section id="data-modeling" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="data-modeling"><span class="header-section-number">8</span> Data Modeling</h2>
</section>
<section id="apache-airflow" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="apache-airflow"><span class="header-section-number">9</span> Apache Airflow</h2>
</section>
<section id="apache-spark" class="level2" data-number="10">
<h2 data-number="10" class="anchored" data-anchor-id="apache-spark"><span class="header-section-number">10</span> Apache Spark</h2>
</section>
<section id="front-end" class="level2" data-number="11">
<h2 data-number="11" class="anchored" data-anchor-id="front-end"><span class="header-section-number">11</span> Front End</h2>
</section>
<section id="back-end" class="level2" data-number="12">
<h2 data-number="12" class="anchored" data-anchor-id="back-end"><span class="header-section-number">12</span> Back End</h2>


</section>

 ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/index.html</guid>
  <pubDate>Thu, 31 Dec 2099 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Language</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Language/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="r" class="level2">
<h2 class="anchored" data-anchor-id="r">R</h2>
<ul>
<li>1111-11-11, tidyverse
<ul>
<li>1111-11-11, dplyr</li>
<li>1111-11-11, ggplot2</li>
<li>1111-11-11, tidyr</li>
<li>1111-11-11, readr</li>
<li>1111-11-11, purrr</li>
<li>1111-11-11, tibble</li>
<li>1111-11-11, stringr</li>
<li>1111-11-11, forcats</li>
</ul></li>
<li>1111-11-11, tidymodels</li>
<li>1111-11-11, R shiny</li>
</ul>
</section>
<section id="python" class="level2">
<h2 class="anchored" data-anchor-id="python">Python</h2>
<ul>
<li>1111-11-11, numpy</li>
<li>1111-11-11, pandas</li>
<li>1111-11-11, matplotlib</li>
<li>1111-11-11, seaborn</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>
</section>
<section id="sql" class="level2">
<h2 class="anchored" data-anchor-id="sql">SQL</h2>
<section id="sqlite" class="level3">
<h3 class="anchored" data-anchor-id="sqlite">SQLite</h3>
</section>
<section id="oracle-sql" class="level3">
<h3 class="anchored" data-anchor-id="oracle-sql">Oracle SQL</h3>
</section>
<section id="ms-sql" class="level3">
<h3 class="anchored" data-anchor-id="ms-sql">MS-SQL</h3>
</section>
<section id="postgre-sql" class="level3">
<h3 class="anchored" data-anchor-id="postgre-sql">Postgre SQL</h3>
</section>
</section>
<section id="linux" class="level2">
<h2 class="anchored" data-anchor-id="linux">Linux</h2>
</section>
<section id="powershell" class="level2">
<h2 class="anchored" data-anchor-id="powershell">Powershell</h2>
</section>
<section id="c" class="level2">
<h2 class="anchored" data-anchor-id="c">C++</h2>
</section>
<section id="javascript" class="level2">
<h2 class="anchored" data-anchor-id="javascript">Javascript</h2>


</section>
</section>

 ]]></description>
  <category>Language</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Language/guide_map/index.html</guid>
  <pubDate>Thu, 31 Dec 2099 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Patent</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Patent/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>


</section>
</section>

 ]]></description>
  <category>Patent</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Patent/guide_map/index.html</guid>
  <pubDate>Thu, 31 Dec 2099 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Content List, Validation</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Validation/guide_map/index.html</link>
  <description><![CDATA[ 



<section id="sgs" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="sgs"><span class="header-section-number">1</span> SGS</h2>
<ul>
<li>0000-00-00, EN62304</li>
</ul>
</section>
<section id="fda" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="fda"><span class="header-section-number">2</span> FDA</h2>
<ul>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html">General Principles of SW Validation</a></li>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html">General Principles of SW Validation - Diagram Summary</a></li>
<li>1111-11-11, Guidance for the Content of Premarket Submissions for Software Contained in Medical Devices</li>
</ul>
</section>
<section id="dhf" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="dhf"><span class="header-section-number">3</span> DHF</h2>
</section>
<section id="public-health" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="public-health"><span class="header-section-number">4</span> Public Health</h2>
</section>
<section id="wet-lab" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="wet-lab"><span class="header-section-number">5</span> Wet Lab</h2>
<ul>
<li>0000-00-00, PCR (Polymerase Chain Reaction) Experiment</li>
</ul>


</section>

 ]]></description>
  <category>Validation</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Validation/guide_map/index.html</guid>
  <pubDate>Sat, 31 Dec 2089 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Transformation of Random Variables</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-21_transformation/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="trnasformation-of-random-variables" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="trnasformation-of-random-variables"><span class="header-section-number">1</span> Trnasformation of Random Variables</h2>
<section id="introduction" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1.1</span> Introduction</h3>
<p>확률 변수 2개 이상에 대한 확률 분포를 joint probability distribution (결합확률분포)라고 하는데 두 확률 변수 <img src="https://latex.codecogs.com/png.latex?X"> 와 <img src="https://latex.codecogs.com/png.latex?Y"> 의 관계에 대해서 규명해야 할 때가 있다. 예를 들어, X 와 Y의 높은 상관계수라든지 또는 비선형적인 관계가 관찰될 때 그 관계가 수리적으로 모델링이 가능하고 한 확률 변수의 분포에 대한 정보를 알고있다면 미지의 다른 확률 변수의 분포가 추정가능해진다. 이 때 두 변수에 대한 관계 정도가 높으면 높을수록 추정이 쉬워진다.</p>
<p>이번 블로그에서는 주어진 확률 변수 <img src="https://latex.codecogs.com/png.latex?X"> 에 대해서 <img src="https://latex.codecogs.com/png.latex?X"> 의 pmf (probability mass function) 또는 pdf (probability density function) <img src="https://latex.codecogs.com/png.latex?f_x(x)"> 를 알고있을 때 확률 변수에 <img src="https://latex.codecogs.com/png.latex?X"> 에 적절한 함수의 변환을 적용해 확률 변수 <img src="https://latex.codecogs.com/png.latex?Y"> 를 <img src="https://latex.codecogs.com/png.latex?Y=u(X)"> 라는 관계식이 정의 가능할 때 <img src="https://latex.codecogs.com/png.latex?Y"> 의 pmf 또는 pdf를 구하는 방법에 집중한다. 후에 MGF (Momment Generating Function) 학습에 응용될 수 있는 개념으로 잘 정리할 필요가 있다.</p>
</section>
<section id="trnasformation-of-discrete-random-variables" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="trnasformation-of-discrete-random-variables"><span class="header-section-number">1.2</span> Trnasformation of Discrete Random Variables</h3>
<div id="thm-discrete" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 </strong></span>Discrete random variable <img src="https://latex.codecogs.com/png.latex?X"> 의 probability distribution이 <img src="https://latex.codecogs.com/png.latex?f_X(x)"> 이고 <img src="https://latex.codecogs.com/png.latex?X"> 와 <img src="https://latex.codecogs.com/png.latex?Y"> 사이에는 <img src="https://latex.codecogs.com/png.latex?Y=u(X)"> 라는 one-to-one relation이 성립될 때 <img src="https://latex.codecogs.com/png.latex?y=u(x)"> 를 유일한 <img src="https://latex.codecogs.com/png.latex?x"> 를 <img src="https://latex.codecogs.com/png.latex?y"> 에 대한 함수인 <img src="https://latex.codecogs.com/png.latex?x=w(y)"> 로 표현 가능하다면 <img src="https://latex.codecogs.com/png.latex?Y"> 의 probability distribution는 <img src="https://latex.codecogs.com/png.latex?%0Af_Y(y)=f_X(w(y))%0A"> 이다.</p>
</div>
<section id="example" class="level4" data-number="1.2.1">
<h4 data-number="1.2.1" class="anchored" data-anchor-id="example"><span class="header-section-number">1.2.1</span> Example</h4>
<ul>
<li>In the case of a One-to-One relation</li>
</ul>
<p>동전을 독립적으로 2번 던질 때, 확률 변수 <img src="https://latex.codecogs.com/png.latex?X"> 가 앞면이 나오는 수라고 정의했을 때, 확률 분포 아래 표 (a)와 같다. <img src="https://latex.codecogs.com/png.latex?Y=2X+1"> 라는 관계가 성립할 때 <img src="https://latex.codecogs.com/png.latex?Y"> 의 분포는 아래 표 (b)와 같다.</p>
<div id="tbl-panel" class="tbl-parent quarto-layout-panel anchored">
<div class="panel-caption table-caption">
<p>Table&nbsp;1: Exmaple: Transformation of Discrete Random Variable (One to One)</p>
</div>
<div class="quarto-layout-row quarto-layout-valign-top">
<div id="tbl-panel-1" class="quarto-layout-cell quarto-layout-cell-subref anchored" data-ref-parent="tbl-panel" style="flex-basis: 50.0%;justify-content: center;">
<table class="table">
<caption>(a) Probability Distribution of <img src="https://latex.codecogs.com/png.latex?X"></caption>
<thead>
<tr class="header">
<th style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?X"></th>
<th style="text-align: center;">0</th>
<th style="text-align: center;">1</th>
<th style="text-align: center;">2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?P_X(X=x)"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B2%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
</tr>
</tbody>
</table>
</div>
<div id="tbl-panel-2" class="quarto-layout-cell quarto-layout-cell-subref anchored" data-ref-parent="tbl-panel" style="flex-basis: 50.0%;justify-content: center;">
<table class="table">
<caption>(b) Probability Distribution of <img src="https://latex.codecogs.com/png.latex?Y=2X+1"></caption>
<thead>
<tr class="header">
<th style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?Y=2X+1"></th>
<th style="text-align: center;">1</th>
<th style="text-align: center;">3</th>
<th style="text-align: center;">5</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?P_Y(Y=y)"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B2%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<ul>
<li>In the case of not a One-to-One relation</li>
</ul>
<p>동전을 독립적으로 2번 던질 때, 확률 변수 <img src="https://latex.codecogs.com/png.latex?X"> 가 앞면이 나오는 수의 합이라고 정의 했을때, <img src="https://latex.codecogs.com/png.latex?X"> 의 확률 분포는 아래 표 (a) 와 같다. 이 때 <img src="https://latex.codecogs.com/png.latex?Y=mod(X,2)"> 라는 관계가 성립할 때 <img src="https://latex.codecogs.com/png.latex?Y"> 의 분포는 아래 표 (b) 같다.</p>
<div id="tbl-panel" class="tbl-parent quarto-layout-panel anchored">
<div class="panel-caption table-caption">
<p>Table&nbsp;2: Exmaple: Transformation of Discrete Random Variable (Not One to One)</p>
</div>
<div class="quarto-layout-row quarto-layout-valign-top">
<div id="tbl-panel-3" class="quarto-layout-cell quarto-layout-cell-subref anchored" data-ref-parent="tbl-panel" style="flex-basis: 50.0%;justify-content: center;">
<table class="table">
<caption>(a) Probability Distribution of <img src="https://latex.codecogs.com/png.latex?X"></caption>
<thead>
<tr class="header">
<th style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?X"></th>
<th style="text-align: center;">0</th>
<th style="text-align: center;">1</th>
<th style="text-align: center;">2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?P_X(X=x)"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B2%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
</tr>
</tbody>
</table>
</div>
<div id="tbl-panel-4" class="quarto-layout-cell quarto-layout-cell-subref anchored" data-ref-parent="tbl-panel" style="flex-basis: 50.0%;justify-content: center;">
<table class="table">
<caption>(b) Probability Distribution of <img src="https://latex.codecogs.com/png.latex?Y=mod(x,2)"></caption>
<thead>
<tr class="header">
<th style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?Y=mod(x,2)"></th>
<th style="text-align: center;">0</th>
<th style="text-align: center;">1</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?P_Y(Y=y)"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B2%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B2%7D%7B4%7D"></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>위의 예시와 같이 두 확률 변수가 one to one 관계일 때는 확률분포가 그대로 유지되어서 쉽게 변환된 확률 변수의 분포가 추정가능하지만 one to one 관계가 아닐 경우 확률 분포가 바뀌게 된다.</p>
<ul>
<li>another example (In the case of not a One-to-One relation)</li>
</ul>
<p>기하분포 (Geometric Distribution)란 동일한 베르누이 (Bernoulli) 분포의 시행을 독립적으로 반복할 때 첫 성공까지의 시행 횟수를 확률변수 <img src="https://latex.codecogs.com/png.latex?X"> 로 하는 분포이다. 즉, <img src="https://latex.codecogs.com/png.latex?x-1"> 번째까지 베르누이 시행이 실패하고 <img src="https://latex.codecogs.com/png.latex?x"> 번째 시행에서 성공할 확률 분포를 말한다.</p>
<p>Notation은 <img src="https://latex.codecogs.com/png.latex?X%20%5Csim%20Geometric(p)"> 또는 <img src="https://latex.codecogs.com/png.latex?X%20%5Csim%20Geo(p)"> 라고 표현하고, <img src="https://latex.codecogs.com/png.latex?p"> 는 독립 시행에서 성공할 확률이다. (참고: <img src="https://latex.codecogs.com/png.latex?text%7BE%7D(X)=%5Cfrac%7B1%7D%7Bp%7D">, <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVar%7D(X)=%5Cfrac%7B1-p%7D%7Bp%5E2%7D">)</p>
<p><img src="https://latex.codecogs.com/png.latex?X%20%5Csim%20Geometric(%5Cfrac%7B4%7D%7B5%7D)"> 일 때 <img src="https://latex.codecogs.com/png.latex?X"> 의 확률분포 <img src="https://latex.codecogs.com/png.latex?f(x)=%5Cfrac%7B4%7D%7B5%7D(%5Cfrac%7B1%7D%7B5%7D)%5E%7B(x-1)%7D">, <img src="https://latex.codecogs.com/png.latex?x=1,2,3%20..."> 가 기하분포일 때 <img src="https://latex.codecogs.com/png.latex?Y=X%5E2"> 의 확률분포는</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20y&amp;=u(x)=x%5E2%20%5C%5C%0A%20%20x&amp;=w(y)=%5Csqrt%7By%7D%20%5Ctext%7B%20%7D%20(x%3E0)%5C%5C%0A%20%20f_Y(y)&amp;=f_X(w(y))=f_X(%5Csqrt%7By%7D)=%5Cfrac%7B4%7D%7B5%7D(%5Cfrac%7B1%7D%7B5%7D%5E%7B(%5Csqrt%7By%7D-1)%7D)%5C%5C%0A%20%20%5Ctherefore%20f_Y(y)&amp;=%0A%20%20%5Cbegin%7Bcases%7D%0A%20%20%20%20%5Cfrac%7B4%7D%7B5%7D(%5Cfrac%7B1%7D%7B5%7D%5E%7B(%5Csqrt%7By%7D-1)%7D)%20&amp;%5Ctext%7Bif%7D%20%5Ctext%7B%20%20%7D%20y%20=1,%204,%209,%20...%5C%5C%0A%20%20%20%20%200%20%5Ctext%7B%20%20%7D%20&amp;%20%5Ctext%7Botherwise%7D%0A%20%20%20%20%5Cend%7Bcases%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>이다.</p>
</section>
</section>
<section id="trnasformation-of-joint-discrete-random-variables" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="trnasformation-of-joint-discrete-random-variables"><span class="header-section-number">1.3</span> Trnasformation of Joint Discrete Random Variables</h3>
<div id="thm-discrete_joint" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2 </strong></span>Two discrete random variables <img src="https://latex.codecogs.com/png.latex?X_1"> 과 <img src="https://latex.codecogs.com/png.latex?X_2"> 의 joint probability distribution이 <img src="https://latex.codecogs.com/png.latex?f(x_1,x_2)"> 이고 <img src="https://latex.codecogs.com/png.latex?(x_1,x_2)"> 와 <img src="https://latex.codecogs.com/png.latex?(y_1,y_2)"> 가 one-to-one relation이 성립되어 <img src="https://latex.codecogs.com/png.latex?y_1=u_1(x_1,x_2)"> 와 <img src="https://latex.codecogs.com/png.latex?y_2=u_2(x_1,x_2)"> 를 유일한 <img src="https://latex.codecogs.com/png.latex?x_1=w_1(y_1,y_2)"> 와 <img src="https://latex.codecogs.com/png.latex?x_2=w_2(y_1,y_2)"> 의 함수로 표현 가능하다면 새로운 확률변수 <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BY%7D">, 즉, <img src="https://latex.codecogs.com/png.latex?Y_1"> 과 <img src="https://latex.codecogs.com/png.latex?Y_2"> 의 joint probability distribution는 <img src="https://latex.codecogs.com/png.latex?%0Af_Y(y_1,y_2)=f_X(w_1(y_1,y_2),w_2(y_1,y_2))%0A"> 이다.</p>
</div>
<section id="example-1" class="level4" data-number="1.3.1">
<h4 data-number="1.3.1" class="anchored" data-anchor-id="example-1"><span class="header-section-number">1.3.1</span> Example</h4>
<ul>
<li>exmaple 1</li>
</ul>
<p>다항 분포(multinomial distribution)란 2개 이상의 독립적인 확률 변수 <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D=X_1,%20X_2,%20..."> 들에 대한 확률분포로, 여러 독립 시행에서 각 각의 값이 특정 횟수가 나타날 확률을 정의하고 독립 변수가 2개인 경우 다항 분포의 특별한 case로 이항 분포 (binomial distribution)가 된다.</p>
<p>참고<a href="https://en.wikipedia.org/wiki/Multinomial_distribution">( Source: wiki)</a> :</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20f_(x)%20&amp;%20=%5Cfrac%7Bn!%7D%7Bx_1!x_2!%5Cdots%20x_k!%7Dp_1%5E%7Bx_1%7Dp_2%5E%7Bx_2%7D%5Cdots%20p_k%5E%7Bx_k%7D%5C%5C%0A%20%20%5Ctext%7BE%7D(x)&amp;=np_i%5C%5C%0A%20%20%5Ctext%7BVar%7D(x)&amp;=np_i(1-p_i)%0A%5Cend%7Baligned%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?X_1"> and <img src="https://latex.codecogs.com/png.latex?X_2"> 가 다음과 같은 multinomial distribution을 따를 때 <img src="https://latex.codecogs.com/png.latex?%0Af(x_1,x_2)%20=%20%5Cbinom%7B2%7D%7Bx_1,x_2,2-x_1-x_2%7D%5Cfrac%7B1%7D%7B4%7D%5E%7Bx_1%7D%5Cfrac%7B1%7D%7B3%7D%5E%7Bx_2%7D%5Cfrac%7B5%7D%7B12%7D%5E%7B2-x_1-x_2%7D%20x_1=0,1,2,%20%5Cspace%20x_2=0,1,2,%20%5Cspace%20x_1+x_2%5Cle%202%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?Y_1=X_1+X_2"> 와 <img src="https://latex.codecogs.com/png.latex?Y_2=X_1-X_2"> 의 결합 확률 분포는</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20y_1&amp;=u_1(x_1,x_2)=x_1+x_2%5C%5C%0A%20%20y_2&amp;=u_2(x_1,x_2)=x_1-x_2%5C%5C%0A%20%20x_1&amp;=w_1(y_1,y_2)=%5Cfrac%7By_1+y_2%7D%7B2%7D%5C%5C%0A%20%20x_2&amp;=w_2(y_1,y_2)=%5Cfrac%7By_1-y_2%7D%7B2%7D%5C%5C%0A%20%20f_Y(y_1,y_2)&amp;=%5Cbinom%7B2%7D%7B%5Cfrac%7By_1+y_2%7D%7B2%7D,%5Cfrac%7By_1-y_2%7D%7B2%7D,2-y_1%20%7D%5Cfrac%7B1%7D%7B4%7D%5E%7B%5Cfrac%7By_1+y_2%7D%7B2%7D%7D%5Cfrac%7B5%7D%7B12%7D%5E%7B2-y_1%7D%20y_1=0,1,2,%20%5Cspace%20y_2=-2,-1,0,1,2%0A%5Cend%7Baligned%7D%0A"> 이다.</p>
<ul>
<li>exmaple 2</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?X_1"> 과 <img src="https://latex.codecogs.com/png.latex?X_2"> 의 결합확률분포가 다음과 같을 때 변환된 <img src="https://latex.codecogs.com/png.latex?Y_1=X_1+X_2"> 와 <img src="https://latex.codecogs.com/png.latex?Y_2=X_1X_2"> 의 결합확률 분포는?</p>
<div id="tbl-panel" class="tbl-parent quarto-layout-panel anchored">
<div class="panel-caption table-caption">
<p>Table&nbsp;3: Exmaple: Transformation of Joint Discrete Random Variable (Not One to One)</p>
</div>
<div class="quarto-layout-row quarto-layout-valign-top">
<div id="tbl-panel-5" class="quarto-layout-cell quarto-layout-cell-subref anchored" data-ref-parent="tbl-panel" style="flex-basis: 50.0%;justify-content: center;">
<table class="table">
<caption>(a) Probability Distribution of <img src="https://latex.codecogs.com/png.latex?X"></caption>
<colgroup>
<col style="width: 25%">
<col style="width: 15%">
<col style="width: 17%">
<col style="width: 20%">
<col style="width: 20%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?(x_1,x_2)"></th>
<th style="text-align: center;">(0, 0)</th>
<th style="text-align: center;">(0, 1)</th>
<th style="text-align: center;">(1, 0)</th>
<th style="text-align: center;">(1, 1)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?f_X(x_1,x_2)"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
</tr>
</tbody>
</table>
</div>
<div id="tbl-panel-6" class="quarto-layout-cell quarto-layout-cell-subref anchored" data-ref-parent="tbl-panel" style="flex-basis: 50.0%;justify-content: center;">
<table class="table">
<caption>(b) Probability Distribution of <img src="https://latex.codecogs.com/png.latex?Y"></caption>
<thead>
<tr class="header">
<th style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?(y_1,y_2)"></th>
<th style="text-align: center;">(0, 0)</th>
<th style="text-align: center;">(1, 0)</th>
<th style="text-align: center;">(2, 1)</th>
<th style="text-align: center;"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?f_Y(y_1,y_2)"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B2%7D%7B4%7D"></td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B4%7D"></td>
<td style="text-align: center;"></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</section>
</section>
<section id="trnasformation-of-continuous-random-variables" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="trnasformation-of-continuous-random-variables"><span class="header-section-number">1.4</span> Trnasformation of Continuous Random Variables</h3>
<div id="thm-continuous" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 </strong></span>continuous random variable <img src="https://latex.codecogs.com/png.latex?X"> 의 probability distribution이 <img src="https://latex.codecogs.com/png.latex?f_X(x)"> 이고 <img src="https://latex.codecogs.com/png.latex?X"> 와 <img src="https://latex.codecogs.com/png.latex?Y"> 사이에는 <img src="https://latex.codecogs.com/png.latex?Y=u(X)"> 라는 one-to-one relation이 성립될 때 <img src="https://latex.codecogs.com/png.latex?y=u(x)"> 를 유일한 <img src="https://latex.codecogs.com/png.latex?x"> 를 <img src="https://latex.codecogs.com/png.latex?y"> 에 대한 함수인 <img src="https://latex.codecogs.com/png.latex?x=w(y)"> 로 표현 가능할 때 Y의 확률 분포는 <img src="https://latex.codecogs.com/png.latex?%0Af_Y(y)=f_X(w(y))%7CJ%7C%0A"> 이다. (<img src="https://latex.codecogs.com/png.latex?J=w'(y)">, called ‘Jacobian’)</p>
</div>
<section id="example-2" class="level4" data-number="1.4.1">
<h4 data-number="1.4.1" class="anchored" data-anchor-id="example-2"><span class="header-section-number">1.4.1</span> Example</h4>
<ul>
<li>In the case of a One-to-One relation</li>
</ul>
<p>지수분포(exponential distribution)는 연속 확률 분포 중 하나로, 사건이 서로 독립적일 때, 일정 시간동안 발생하는 사건의 횟수가 푸아송 분포를 따른다면, 다음 사건이 발생할 때까지의 대기 시간을 확률 변수 <img src="https://latex.codecogs.com/png.latex?X%20%5Cin%20%5B0,%20%5Cinfty)"> 로 하는 분포이다. <a href="https://en.wikipedia.org/wiki/Exponential_distribution">(Source: Wiki)</a>.</p>
<p>참고: <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20X&amp;%5Csim%20Exp(%5Clambda)%20%5C%5C%0A%20%20%5Ctext%20E%5BX%5D%20&amp;=%20%5Cfrac%7B1%7D%7B%5Clambda%7D%5C%5C%0A%20%20%5Ctext%7BVar%7D%5BX%5D%20&amp;=%20%5Cfrac%7B1%7D%7B%5Clambda%5E2%7D%5C%5C%0A%20%20f(x;%5Clambda)&amp;=%0A%20%20%5Cbegin%7Bcases%7D%0A%20%20%20%20%5Clambda%20e%5E%7B-%5Clambda%20x%7D%20&amp;%20x%20%5Cge%200%5C%5C%0A%20%20%20%200%20&amp;%20x%3C0%0A%20%20%5Cend%7Bcases%7D%5C%5C%0A%5Cend%7Baligned%7D%0A"> <img src="https://latex.codecogs.com/png.latex?%5Clambda%3E0"> is the parameter of the distribution, called ‘rate parameter’.</p>
<p>Transformation of Linear Function. When two random variables <img src="https://latex.codecogs.com/png.latex?X%20%5Csim%20%5Ctext%7Bexp%7D(%5Clambda)"> and <img src="https://latex.codecogs.com/png.latex?Y"> has the relation, <img src="https://latex.codecogs.com/png.latex?Y=aX+b"> <img src="https://latex.codecogs.com/png.latex?(a%5Cne%200)">. When <img src="https://latex.codecogs.com/png.latex?f_X(x)=%5Clambda%20e%5E%7B-%5Clambda%20x%7D">, <img src="https://latex.codecogs.com/png.latex?f_Y(y)"> is</p>
<p><strong>By Theorem</strong></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20Y&amp;=u(X)=aX+b%5C%5C%0A%20%20y&amp;=u(x)=ax+b%5C%5C%0A%20%20x&amp;=w(y)=%5Cfrac%7By-b%7D%7Ba%7D%5C%5C%0A%20%20f_Y(y)&amp;=f_X(w(y))%7CJ%7C=f_X(%5Cfrac%7By-b%7D%7Ba%7D)%7CJ%7C%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=f_X(%5Cfrac%7By-b%7D%7Ba%7D)%7Cw'(y)%7C%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=f_X(%5Cfrac%7By-b%7D%7Ba%7D)%7C%5Cfrac%7B1%7D%7Ba%7D%7C%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=%5Cfrac%7Bf_X(%5Cfrac%7By-b%7D%7Ba%7D)%7D%7B%7Ca%7C%7D%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<p><strong>By Definition</strong></p>
<div class="columns">
<div class="column" style="width:50%;">
<ul>
<li><img src="https://latex.codecogs.com/png.latex?a%3E0"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AF_Y(Y)&amp;=P_Y(Y%5Cle%20y)%5C%5C%0A%20%20%20%20%20%20&amp;=P_Y(aX+b%5Cle%20y)%5C%5C%0A%20%20%20%20%20%20&amp;=P_Y(X%5Cle%20%5Cfrac%7By-b%7D%7Ba%7D)%5C%5C%0A%20%20%20%20%20%20&amp;=F_X(%5Cfrac%7By-b%7D%7Ba%7D)%5C%5C%0AF'_Y(Y)&amp;=%5Cfrac%7Bd%7D%7Bdy%7DF_X(%5Cfrac%7By-b%7D%7Ba%7D)%5C%5C%0A%20%20%20%20%20%20%20&amp;=f_X(%5Cfrac%7By-b%7D%7Ba%7D)%5Cfrac%7B1%7D%7Ba%7D%5C%5C%0A%5Cend%7Baligned%7D%0A"></li>
</ul>
</div><div class="column" style="width:50%;">
<ul>
<li><img src="https://latex.codecogs.com/png.latex?a%5Cle%200"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AF_Y(Y)&amp;=P_Y(Y%5Cle%20y)%5C%5C%0A%20%20%20%20%20%20&amp;=P_Y(aX+b%5Cle%20y)%5C%5C%0A%20%20%20%20%20%20&amp;=P_Y(X%3E%20%5Cfrac%7By-b%7D%7Ba%7D)%5C%5C%0A%20%20%20%20%20%20&amp;=1-F_X(%5Cfrac%7By-b%7D%7Ba%7D)%5C%5C%0AF'_Y(Y)&amp;=%5Cfrac%7Bd%7D%7Bdy%7D(1-F_X(%5Cfrac%7By-b%7D%7Ba%7D))%5C%5C%0A%20%20%20%20%20%20%20&amp;=-f_X(%5Cfrac%7By-b%7D%7Ba%7D)%5Cfrac%7B1%7D%7Ba%7D%5C%5C%20%20%0A%5Cend%7Baligned%7D%0A"></li>
</ul>
</div><p><img src="https://latex.codecogs.com/png.latex?%0A%5Ctherefore%20f_Y(y)=%5Cfrac%7Bf_X(%5Cfrac%7By-b%7D%7Ba%7D)%7D%7B%7Ca%7C%7D=%5Cfrac%7B%5Clambda%20exp(-%5Clambda%20(%5Cfrac%7By-b%7D%7Ba%7D))%7D%7B%7Ca%7C%7D%0A"></p>
</div>
<p>위의 정리를 유도를 하진 않았지만 증명을 해보면 사실, <img src="https://latex.codecogs.com/png.latex?%7CJ%7C"> 는 역함수의 미분의 계수인 것을 할 수 있다. 위의 예시를 <strong>By definition</strong> 으로 푼 것을 보면 <img src="https://latex.codecogs.com/png.latex?y=u(x)"> 와 <img src="https://latex.codecogs.com/png.latex?x=w(y)"> 의 관계인 것을 알 수 있고 <img src="https://latex.codecogs.com/png.latex?%7CJ%7C"> 에 해당되는 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Ba%7D"> 는 CDF <img src="https://latex.codecogs.com/png.latex?F(Y)"> 의 derivative를 구하는 과정에서 발생하는 chain rule에 의해 생긴 것을 알 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20y&amp;=u(x)%5C%5C%0A%20%20%5Cfrac%7Bdy%7D%7Bdx%7D&amp;=u'(x)%5C%5C%0A%20%20x&amp;=w(y)=u%5E%7B-1%7D(y)%5C%5C%0A%20%20%5Cfrac%7Bdx%7D%7Bdy%7D&amp;=w'(y)%20%5C%5C%0A%20%20w'(y)&amp;=%5Cfrac%7Bdx%7D%7Bdy%7D=(%5Cfrac%7Bdy%7D%7Bdx%7D)%5E%7B-1%7D=%5Cfrac%7B1%7D%7Bu'(x)%7D%0A%5Cend%7Baligned%7D%0A"></p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb1-5">y <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb1-6">y2 <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb1-9"></span>
<span id="cb1-10"></span>
<span id="cb1-11">ax.axhline(y<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb1-12">ax.axvline(x<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb1-13">ax.grid(<span class="va" style="color: #111111;">True</span>, which<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'both'</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15">ax.plot(x,x,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$y=x$'</span>, linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'dashed'</span>)</span>
<span id="cb1-16">ax.plot(x,<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$x=w(y) \rightarrow y=2x-2 $'</span>)</span>
<span id="cb1-17">ax.plot(x,y2,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$y=u(x)=\frac</span><span class="sc" style="color: #5E5E5E;">{1}{2}</span><span class="vs" style="color: #20794D;">x+1$'</span>)</span>
<span id="cb1-18">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-19">ax.set_title(<span class="vs" style="color: #20794D;">r"Example of Relation of X and Y, $y=u(x)$ vs $x=w(y)$"</span>)</span>
<span id="cb1-20">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb1-21">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb1-22">ax.set_xlim(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">40</span>)</span>
<span id="cb1-23"></span>
<span id="cb1-24">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">1.1</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb1-25">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-21_transformation/index_files/figure-html/cell-2-output-1.png" width="560" height="526"></p>
</div>
</div>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb2-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb2-3"></span>
<span id="cb2-4">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb2-5">y <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-6">y2 <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-7"></span>
<span id="cb2-8">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb2-9"></span>
<span id="cb2-10"></span>
<span id="cb2-11">ax.axhline(y<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb2-12">ax.axvline(x<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb2-13">ax.grid(<span class="va" style="color: #111111;">True</span>, which<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'both'</span>)</span>
<span id="cb2-14"></span>
<span id="cb2-15">ax.plot(x,y,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$y=2x+1$'</span>)</span>
<span id="cb2-16">ax.plot(x,y2,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$y=\frac</span><span class="sc" style="color: #5E5E5E;">{1}{2}</span><span class="vs" style="color: #20794D;">x+1$'</span>)</span>
<span id="cb2-17">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-18">ax.set_title(<span class="vs" style="color: #20794D;">r"Transformation of Linear Function, $f_Y(y)=\frac{f_X(\frac{y-b}</span><span class="sc" style="color: #5E5E5E;">{a}</span><span class="vs" style="color: #20794D;">)}{|a|}$"</span>)</span>
<span id="cb2-19">ax.set_xlabel(<span class="st" style="color: #20794D;">"X"</span>)</span>
<span id="cb2-20">ax.set_ylabel(<span class="st" style="color: #20794D;">"Y=u(X)"</span>)</span>
<span id="cb2-21">ax.set_xlim(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">40</span>)</span>
<span id="cb2-22">ax.text(<span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">0</span>,<span class="st" style="color: #20794D;">'|'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, horizontalalignment<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'center'</span>, verticalalignment<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'center'</span>)</span>
<span id="cb2-23">ax.text(<span class="dv" style="color: #AD0000;">10</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="vs" style="color: #20794D;">r'$\frac{y-b}</span><span class="sc" style="color: #5E5E5E;">{a}</span><span class="vs" style="color: #20794D;">$'</span>, horizontalalignment<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'center'</span>,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>)</span>
<span id="cb2-24">ax.text(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">5</span>,<span class="st" style="color: #20794D;">'--'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, horizontalalignment<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'center'</span>, verticalalignment<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'center'</span>)</span>
<span id="cb2-25">ax.text(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="vs" style="color: #20794D;">r'$ax+b$'</span>, verticalalignment<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'center'</span>,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>)</span>
<span id="cb2-26"></span>
<span id="cb2-27">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">1.1</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb2-28">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-21_transformation/index_files/figure-html/cell-3-output-1.png" width="544" height="510"></p>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?P(Y%5Cle%20y)=P(X%5Cle%20%5Cfrac%7By-b%7D%7Ba%7D)"> 이기 때문에 <img src="https://latex.codecogs.com/png.latex?X"> 의 특정 구간의 확률과 대응되는 <img src="https://latex.codecogs.com/png.latex?Y"> 의 구간의 확률이 같다고 했을 때 <img src="https://latex.codecogs.com/png.latex?Y%20%5Cle%20y"> 의 범위는 <img src="https://latex.codecogs.com/png.latex?X"> 를 <img src="https://latex.codecogs.com/png.latex?b"> 만큼 이동한 후 <img src="https://latex.codecogs.com/png.latex?a"> 배한 <img src="https://latex.codecogs.com/png.latex?x"> 좌표 이하 구간에 대응 된다 즉, <img src="https://latex.codecogs.com/png.latex?X%5Cle%20%5Cfrac%7By-b%7D%7Ba%7D">. 이 때, 두 구간에서의 확률 밀도가 같아야 하기 때문에 <img src="https://latex.codecogs.com/png.latex?f_x(x)"> 가 <img src="https://latex.codecogs.com/png.latex?f_Y(y)"> 의 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7Ba%7D"> 배 인 것을 알 수 있다.</p>
<p>위의 그림에서 처럼, 두 확률 변수 <img src="https://latex.codecogs.com/png.latex?X"> 와 <img src="https://latex.codecogs.com/png.latex?Y"> 의 관계를 <img src="https://latex.codecogs.com/png.latex?y%20=%202x+1"> <img src="https://latex.codecogs.com/png.latex?(a%3E1)"> 와 <img src="https://latex.codecogs.com/png.latex?y%20=%20%5Cfrac%7B1%7D%7B2%7Dx+1"> <img src="https://latex.codecogs.com/png.latex?(0%20%5Cle%20a%5Cle%201)"> 로 두 가지의 예로 들면, 위의 그래프의 경우, <img src="https://latex.codecogs.com/png.latex?y%20=%202x+1"> <img src="https://latex.codecogs.com/png.latex?(a%3E1)"> 일 때 <img src="https://latex.codecogs.com/png.latex?0%3CX%3C10"> 는 <img src="https://latex.codecogs.com/png.latex?1%3CY%3C21"> 의 구간이 2배가 되는 것을 관찰 할 수 있다. 반대로, <img src="https://latex.codecogs.com/png.latex?y%20=%20%5Cfrac%7B1%7D%7B2%7Dx+1"> <img src="https://latex.codecogs.com/png.latex?(0%20%5Cle%20a%5Cle%201)"> 일 때 <img src="https://latex.codecogs.com/png.latex?0%3CX%3C10"> 는 <img src="https://latex.codecogs.com/png.latex?1%3CY%3C6"> 의 구간이 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D"> 배가 된다. 이 때 각 예시의 경우에 <img src="https://latex.codecogs.com/png.latex?X"> 와 <img src="https://latex.codecogs.com/png.latex?Y"> 의 확률 값이 같기 때문에 (<img src="https://latex.codecogs.com/png.latex?P(Y%5Cle%20y)=P(X%5Cle%20%5Cfrac%7By-1%7D%7B2%7D)"> 와 <img src="https://latex.codecogs.com/png.latex?P(Y%5Cle%20y)=P(X%5Cle%20%5Cfrac%7By-1%7D%7B%5Cfrac%7B1%7D%7B2%7D%7D)">). <img src="https://latex.codecogs.com/png.latex?f_x(x)"> 가 <img src="https://latex.codecogs.com/png.latex?f_Y(y)"> 의 각 각 <img src="https://latex.codecogs.com/png.latex?2"> 배와 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D"> 배 인 것을 추정 할 수 있다.</p>
<ul>
<li>In the case of not a One-to-One relation</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?Y=X%5E2"> 일 때,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20F_Y(Y)&amp;=P_Y(Y%5Cle%20y)%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=P_Y(X%5E2%5Cle%20y)%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=P_Y(-%5Csqrt%7By%7D%5Cle%20X%20%5Cle%20%5Csqrt%20y)%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=F_X(%5Csqrt%7By%7D)-F_X(-%5Csqrt%7By%7D)%5C%5C%0A%20%20F'_Y(Y)&amp;=%5Cfrac%7Bd%7D%7Bdy%7D(F_X(%5Csqrt%7By%7D)-F_X(-%5Csqrt%7By%7D))%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=f_X(%5Csqrt%7By%7D)%5Cfrac%7B1%7D%7B2%5Csqrt%7By%7D%7D+f_X(-%5Csqrt%7By%7D)%5Cfrac%7B1%7D%7B2%5Csqrt%7By%7D%7D%5C%5C%0A%20%20%20%20%20%20%20%20&amp;=%5Cfrac%7Bf_X(%5Csqrt%7By%7D)%7D%7B2%5Csqrt%7By%7D%7D+%5Cfrac%7Bf_X(-%5Csqrt%7By%7D)%7D%7B2%5Csqrt%7By%7D%7D%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb3-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb3-3"></span>
<span id="cb3-4">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb3-5">y <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">*</span>x</span>
<span id="cb3-6"></span>
<span id="cb3-7">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb3-8"></span>
<span id="cb3-9"></span>
<span id="cb3-10">ax.axhline(y<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb3-11">ax.axvline(x<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb3-12">ax.grid(<span class="va" style="color: #111111;">True</span>, which<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'both'</span>)</span>
<span id="cb3-13"></span>
<span id="cb3-14">ax.plot(x,y,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$y=x^2$'</span>)</span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;">#ax.text(3.0,0.5,r'$\sqrt{y}$')</span></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;">#ax.text(-4,0.5,r'$-\sqrt{y}$')</span></span>
<span id="cb3-17">ax.set_xlim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>])</span>
<span id="cb3-18">ax.set_ylim([<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">10</span>])</span>
<span id="cb3-19"></span>
<span id="cb3-20">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb3-21">ax.set_title(<span class="vs" style="color: #20794D;">r"Transformation of Random Variables, $y=x^2$"</span>)</span>
<span id="cb3-22">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb3-23">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb3-24"></span>
<span id="cb3-25">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.2</span>, <span class="fl" style="color: #AD0000;">1.1</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb3-26">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-21_transformation/index_files/figure-html/cell-4-output-1.png" width="659" height="369"></p>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?X"> 의 분포를 알고 <img src="https://latex.codecogs.com/png.latex?X"> 와 <img src="https://latex.codecogs.com/png.latex?Y"> 의 relation을 알고있을 때 <img src="https://latex.codecogs.com/png.latex?X"> 의 분포로부터 <img src="https://latex.codecogs.com/png.latex?Y"> 의 분포를 추정 가능한 것의 이점 중 하나는 <img src="https://latex.codecogs.com/png.latex?Y"> 의 통계량을 <img src="https://latex.codecogs.com/png.latex?Y"> 의 분포를 사용하지 않고 계산해낼 수 있다는 점이다.</p>
<p>예를 들어, <img src="https://latex.codecogs.com/png.latex?X%20%5Csim%20N(0,1)"> 이고 <img src="https://latex.codecogs.com/png.latex?Y=u(X)"> 라는 관계를 알고있을 때, <img src="https://latex.codecogs.com/png.latex?Y"> 의 통계량 <img src="https://latex.codecogs.com/png.latex?E(Y)">, <img src="https://latex.codecogs.com/png.latex?Var(Y)"> 를 알고싶다면 굳이 힘들게 <img src="https://latex.codecogs.com/png.latex?Y"> 의 분포를 계산할 필요가 없다. 이미 <img src="https://latex.codecogs.com/png.latex?X"> 의 확률 분포 <img src="https://latex.codecogs.com/png.latex?f_X(x)"> 를 알고있기 때문에 아래와 같이 <img src="https://latex.codecogs.com/png.latex?Y"> 의 통계량을 계산해낼 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20%5Ctext%7BE%7D(Y)&amp;=%5Cint%20Y%20f_Y(y)%20dy%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;=%5Cint%20u(X)%20f_X(x)%20dx%5C%5C%0A%20%20%5Ctext%7BE%7D(Y%5E2)&amp;=%5Cint%20Y%5E2%20f_Y(y)%20dy%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;=%5Cint%20u(X)%5E2%20f_X(x)%20dx%5C%5C%0A%20%20%5Ctext%7BVar%7D(Y)&amp;=%5Ctext%7BE%7D(Y%5E2)-%5Ctext%7BE%7D(Y)%5E2%5C%5C%0A%20%20&amp;=%5Ctext%7BE%7D(g(X)%5E2)-%5Ctext%7BE%7D(g(X))%5E2%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
</section>
</section>
<section id="trnasformation-of-joint-continuous-random-variables" class="level3" data-number="1.5">
<h3 data-number="1.5" class="anchored" data-anchor-id="trnasformation-of-joint-continuous-random-variables"><span class="header-section-number">1.5</span> Trnasformation of Joint Continuous Random Variables</h3>
<div id="thm-continuous_joint" class="theorem">
<p><span class="theorem-title"><strong>Theorem 4 </strong></span>Two continuous random variable <img src="https://latex.codecogs.com/png.latex?X_1"> 과 <img src="https://latex.codecogs.com/png.latex?X_2"> 의 joint probability distribution이 <img src="https://latex.codecogs.com/png.latex?f(x_1,x_2)"> 이고 <img src="https://latex.codecogs.com/png.latex?(x_1,x_2)"> 와 <img src="https://latex.codecogs.com/png.latex?(y_1,y_2)"> 가 one-to-one relation이 성립될 때 <img src="https://latex.codecogs.com/png.latex?y_1=u_1(x_1,x_2)"> 와 <img src="https://latex.codecogs.com/png.latex?y_2=u_2(x_1,x_2)"> 를 유일한 <img src="https://latex.codecogs.com/png.latex?x_1=w_1(y_1,y_2)"> 와 <img src="https://latex.codecogs.com/png.latex?x_2=w_2(y_1,y_2)"> 의 함수로 표현 가능할 때 <img src="https://latex.codecogs.com/png.latex?Y_1=u_1(X_1,X_2)"> 와 <img src="https://latex.codecogs.com/png.latex?Y_2=u_2(X_1,X_2)"> 로 정의되는 새로운 확률변수 <img src="https://latex.codecogs.com/png.latex?Y_1"> 과 <img src="https://latex.codecogs.com/png.latex?Y_2"> 의 joint probability distribution는 <img src="https://latex.codecogs.com/png.latex?%0Ag(y_1.y_2)=f(w_1(y_1,y_2),w_2(y_1,y_2))%20%7CJ%7C%0A"> 이다.<br>
여기서, <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%20%20%7CJ%7C=%7C%0A%20%20%5Cbegin%7Bbmatrix%7D%0A%20%20%5Cfrac%7B%5Cpartial%20x_1%7D%7B%5Cpartial%20y_1%7D&amp;%5Cfrac%7B%5Cpartial%20x_1%7D%7B%5Cpartial%20y_2%7D%5C%5C%0A%20%20%5Cfrac%7B%5Cpartial%20x_2%7D%7B%5Cpartial%20y_1%7D&amp;%5Cfrac%7B%5Cpartial%20x_2%7D%7B%5Cpartial%20y_2%7D%5C%5C%0A%20%20%5Cend%7Bbmatrix%7D%7C%20=%20%7C%20%5Cbegin%7Bbmatrix%7D%0A%20%20%5Cfrac%7B%5Cpartial%20w_1(y_1,y_2)%7D%7B%5Cpartial%20y_1%7D&amp;%5Cfrac%7B%5Cpartial%20w_1(y_1,y_2)%7D%7B%5Cpartial%20y_2%7D%5C%5C%0A%20%20%5Cfrac%7B%5Cpartial%20w_2(y_1,y_2)%7D%7B%5Cpartial%20y_1%7D&amp;%5Cfrac%7B%5Cpartial%20w_2(y_1,y_2)%7D%7B%5Cpartial%20y_2%7D%5C%5C%0A%20%20%5Cend%7Bbmatrix%7D%20%7C%0A%5Cend%7Baligned%7D%0A"> called ‘the determinant of jacobian matrix’</p>
</div>
<section id="example-3" class="level4" data-number="1.5.1">
<h4 data-number="1.5.1" class="anchored" data-anchor-id="example-3"><span class="header-section-number">1.5.1</span> Example</h4>
<ul>
<li>예제</li>
</ul>
<p>연속확률변수 <img src="https://latex.codecogs.com/png.latex?X_1"> 과 <img src="https://latex.codecogs.com/png.latex?X_2"> 는 결합확률분포 <img src="https://latex.codecogs.com/png.latex?%0Af(x_1,x_2)=%0A%20%20%5Cbegin%7Bcases%7D%0A%20%20%20%204x_1x_2,%20&amp;%20%5Ctext%7Bif%20%20%7D%200%3Cx_1%3C1,&amp;%200%3C%20x_2%20%3C1%20%5C%5C%0A%20%20%20%200,%20&amp;%20%5Ctext%7Botherwise%7D%0A%20%20%5Cend%7Bcases%7D%0A"> 일 때, <img src="https://latex.codecogs.com/png.latex?Y_1=X_1%5E2"> 과 <img src="https://latex.codecogs.com/png.latex?Y_2=X_1X_2"> 의 결합확률 분포는</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Ay_1&amp;=u_1(x_1,x_2)=%20x_1%5E2%5C%5C%0Ay_2&amp;=u_2(x_1,x_2)=%20x_1x_2%5C%5C%0Ax_1&amp;=w_1(y_1,y_2)=%20%5Csqrt%7By_1%7D%20&amp;%20(y_1%3E0)%5C%5C%0Ax_2&amp;=w_2(y_1,y_2)=%20%5Cfrac%7By_2%7D%7Bx_1%7D%20=%20%5Cfrac%7By_2%7D%7B%5Csqrt%7By_1%7D%7D%20%20&amp;%20(y_1%3E0)%5C%5C%0Ag(y_1.y_2)&amp;=f(w_1(y_1,y_2),w_2(y_1,y_2))%7CJ%7C%5C%5C%0Ag(y_1.y_2)&amp;=f(w_1(y_1,y_2),w_2(y_1,y_2))%7CJ%7C%5C%5C%0A%20%20%20%20%20%20%20%20%20%20&amp;=4%5Csqrt%7By_1%7D%5Cfrac%7By_2%7D%7B%5Csqrt%7By_1%7D%7D%5Cfrac%7B1%7D%7B2y_1%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20&amp;=%5Cbegin%7Bcases%7D%0A%20%20%20%20%20%20%20%20%20%20%5Cfrac%7B2y_2%7D%7By_1%7D%20&amp;%20%5Ctext%7Bif%20%20%7D%20y_2%5E2%3Cy_1%3C1,%20%5Ctext%7B%20%20%7D%200%3Cy_2%3C1%5C%5C%0A%20%20%20%20%20%20%20%20%20%200%20&amp;%20%5Ctext%7Botherwise%7D%0A%20%20%20%20%20%20%20%20%20%20%5Cend%7Bcases%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%7CJ%7C&amp;=%7C%0A%20%20%20%20%20%20%20%20%20%20%5Cbegin%7Bbmatrix%7D%0A%20%20%20%20%20%20%20%20%20%20%5Cfrac%7B%5Cpartial%20x_1%7D%7B%5Cpartial%20y_1%7D&amp;%5Cfrac%7B%5Cpartial%20x_1%7D%7B%5Cpartial%20y_2%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%5Cfrac%7B%5Cpartial%20x_2%7D%7B%5Cpartial%20y_1%7D&amp;%5Cfrac%7B%5Cpartial%20x_2%7D%7B%5Cpartial%20y_2%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%5Cend%7Bbmatrix%7D%7C%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20&amp;=%7C%0A%20%20%20%20%20%20%20%20%20%20%5Cbegin%7Bbmatrix%7D%0A%20%20%20%20%20%20%20%20%20%20%5Cfrac%7B1%7D%7B2%5Csqrt%7By_1%7D%7D&amp;0%5C%5C%0A%20%20%20%20%20%20%20%20%20%20y_2(-%5Cfrac%7B1%7D%7B2%7Dy_1%5E%7B%5Cfrac%7B-3%7D%7B2%7D%7D)&amp;%5Cfrac%7B1%7D%7B%5Csqrt%7By_1%7D%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%5Cend%7Bbmatrix%7D%7C%5C%5C%0A%20%20%20%20%20%20%20%20%20%20&amp;=%5Cfrac%7B1%7D%7B2y_1%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>이다.</p>
</section>
</section>
</section>
</div>
</div>
<section id="blog-guide-map-link" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">2</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-21_transformation/index.html</guid>
  <pubDate>Mon, 20 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Transofrmations of Functions</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="transformations-of-functions" class="level2">
<h2 class="anchored" data-anchor-id="transformations-of-functions">Transformations of Functions</h2>
<section id="translations" class="level3">
<h3 class="anchored" data-anchor-id="translations">Translations</h3>
<p>Thanslations are about vertical and horizontal sifts. To be more sepecific, if <img src="https://latex.codecogs.com/png.latex?c"> is a positive number, then</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)+c">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units upward</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)-c">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units downward</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x-c)">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units to the right</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x+c)">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units to the left</li>
</ul>
<section id="example" class="level4">
<h4 class="anchored" data-anchor-id="example">Example</h4>
<p>draw <img src="https://latex.codecogs.com/png.latex?y=x">, <img src="https://latex.codecogs.com/png.latex?y=(x-3)">, <img src="https://latex.codecogs.com/png.latex?y=x-3">, <img src="https://latex.codecogs.com/png.latex?y=(x+3)">, <img src="https://latex.codecogs.com/png.latex?y=x+3"></p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb1-4">y <span class="op" style="color: #5E5E5E;">=</span> x</span>
<span id="cb1-5">y2 <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb1-6">y3 <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"></span>
<span id="cb1-9">plt.xlabel(<span class="st" style="color: #20794D;">'X'</span>)</span>
<span id="cb1-10">plt.ylabel(<span class="st" style="color: #20794D;">'Y'</span>)</span>
<span id="cb1-11">plt.axhline(y<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb1-12">plt.axvline(x<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb1-13">plt.grid(<span class="va" style="color: #111111;">True</span>, which<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'both'</span>)</span>
<span id="cb1-14"></span>
<span id="cb1-15">plt.plot(x,y,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=x'</span>)</span>
<span id="cb1-16">plt.plot(x,y2,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=(x-3) or (y+3)=x'</span>)</span>
<span id="cb1-17">plt.plot(x,y3,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=(x+3) or (y-3)=x'</span>)</span>
<span id="cb1-18"></span>
<span id="cb1-19">plt.title(<span class="st" style="color: #20794D;">'Traslation of Functions'</span>)</span>
<span id="cb1-20">plt.legend()</span>
<span id="cb1-21">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-2-output-1.png" width="596" height="449"></p>
</div>
</div>
</section>
</section>
<section id="transformations" class="level3">
<h3 class="anchored" data-anchor-id="transformations">Transformations</h3>
<p>There are largely two types of transofrmations of functions: stretching and reflecting. To be more sepecific, if <img src="https://latex.codecogs.com/png.latex?c"> is larger than 1, then</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=cf(x)">, stretch the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> vertically by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
<li><img src="https://latex.codecogs.com/png.latex?y=%5Cfrac%7B1%7D%7Bc%7Df(x)">, shrink the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> vertically by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(cx)">, shrink the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> horizontally by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(%5Cfrac%7Bx%7D%7Bc%7D)">, stretch the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> horizontally by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
</ul>
<section id="example-1" class="level4">
<h4 class="anchored" data-anchor-id="example-1">Example</h4>
<p>draw <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?y=%5Csin%202x">, <img src="https://latex.codecogs.com/png.latex?y=%5Cfrac%7B1%7D%7B2%7D%20%5Csin%20x"></p>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb2-2">y <span class="op" style="color: #5E5E5E;">=</span> np.sin(x)</span>
<span id="cb2-3">y2 <span class="op" style="color: #5E5E5E;">=</span> np.sin(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x)</span>
<span id="cb2-4">y3 <span class="op" style="color: #5E5E5E;">=</span> np.sin(x<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-5">y4 <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.sin(x)</span>
<span id="cb2-6">y5 <span class="op" style="color: #5E5E5E;">=</span> np.sin(x)<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb2-7"></span>
<span id="cb2-8">plt.xlabel(<span class="st" style="color: #20794D;">'X'</span>)</span>
<span id="cb2-9">plt.ylabel(<span class="st" style="color: #20794D;">'Y'</span>)</span>
<span id="cb2-10">plt.axhline(y<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb2-11">plt.axvline(x<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb2-12">plt.grid(<span class="va" style="color: #111111;">True</span>, which<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'both'</span>)</span>
<span id="cb2-13"></span>
<span id="cb2-14">plt.plot(x,y,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=sin(x)'</span>)</span>
<span id="cb2-15">plt.plot(x,y2,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=sin(2x)'</span>)</span>
<span id="cb2-16">plt.plot(x,y3,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'y=sin($\frac</span><span class="sc" style="color: #5E5E5E;">{x}{2}</span><span class="vs" style="color: #20794D;">$)'</span>)</span>
<span id="cb2-17">plt.plot(x,y4,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'y=2sin(x)'</span>)</span>
<span id="cb2-18">plt.plot(x,y5,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'orange'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'y=$\frac</span><span class="sc" style="color: #5E5E5E;">{1}{2}</span><span class="vs" style="color: #20794D;">$sin(x) or (2y)=sin(x)'</span>)</span>
<span id="cb2-19"></span>
<span id="cb2-20">plt.title(<span class="st" style="color: #20794D;">'Trasformation of Functions'</span>)</span>
<span id="cb2-21">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.2</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb2-22">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-3-output-1.png" width="644" height="541"></p>
</div>
</div>
</section>
<section id="example-2" class="level4">
<h4 class="anchored" data-anchor-id="example-2">Example</h4>
<ul>
<li>draw <img src="https://latex.codecogs.com/png.latex?x%5E2+y%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bx%5E2%7D%7B4%7D+%5Cfrac%7By%5E2%7D%7B9%7D=1">, <img src="https://latex.codecogs.com/png.latex?(x-3)%5E2+(y-3)%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B(x-3)%5E2%7D%7B4%7D+%5Cfrac%7B(y-3)%5E2%7D%7B9%7D=1"></li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># initialize x and y using radian</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;"># theta = np.linspace(0, 2*np.pi, 1000)</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;"># x = np.cos(theta)</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;"># y = np.sin(theta)</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;"># initialize x and y without using radian</span></span>
<span id="cb3-7">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb3-8">y1 <span class="op" style="color: #5E5E5E;">=</span> np.sqrt(<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">-</span> x<span class="op" style="color: #5E5E5E;">*</span>x)</span>
<span id="cb3-9">y2 <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span>np.sqrt(<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">-</span> x<span class="op" style="color: #5E5E5E;">*</span>x)</span>
<span id="cb3-10"></span>
<span id="cb3-11">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;"># unit circle</span></span>
<span id="cb3-14">ax.plot(x, y1, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$x^2+y^2=1$'</span>)</span>
<span id="cb3-15">ax.plot(x, y2, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>)</span>
<span id="cb3-16">ax.plot(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">0</span>,<span class="st" style="color: #20794D;">'o'</span>,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'(0,0)'</span>)</span>
<span id="cb3-17"></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;"># unit circle translated by 2</span></span>
<span id="cb3-19">ax.plot(x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, y1<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$(x-3)^2+(y-3)^2=1$'</span>)</span>
<span id="cb3-20">ax.plot(x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, y2<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>)</span>
<span id="cb3-21">ax.plot(<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="st" style="color: #20794D;">'o'</span>,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'(3,3)'</span>)</span>
<span id="cb3-22"></span>
<span id="cb3-23"><span class="co" style="color: #5E5E5E;"># eplipse: a unit circle transformed by 2,3 in x, y</span></span>
<span id="cb3-24">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y1, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$\frac{x^2}</span><span class="sc" style="color: #5E5E5E;">{4}</span><span class="vs" style="color: #20794D;">+\frac{y^2}</span><span class="sc" style="color: #5E5E5E;">{9}</span><span class="vs" style="color: #20794D;">=1$'</span>)</span>
<span id="cb3-25">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y2, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>)</span>
<span id="cb3-26">ax.plot(<span class="dv" style="color: #AD0000;">0</span>,<span class="op" style="color: #5E5E5E;">-</span>np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>), <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$F_1=(0,\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">),F_2=(0,-\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">)$'</span>)</span>
<span id="cb3-27">ax.plot(<span class="dv" style="color: #AD0000;">0</span>,np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>), <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>)</span>
<span id="cb3-28"></span>
<span id="cb3-29"><span class="co" style="color: #5E5E5E;"># translated eplipse: a unit circle translated by 2 and transformed by 2,3 in x, y</span></span>
<span id="cb3-30">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y1<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$\frac{(x-3)^2}</span><span class="sc" style="color: #5E5E5E;">{4}</span><span class="vs" style="color: #20794D;">+\frac{(y-3)^2}</span><span class="sc" style="color: #5E5E5E;">{9}</span><span class="vs" style="color: #20794D;">=1$'</span>)</span>
<span id="cb3-31">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y2<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>)</span>
<span id="cb3-32">ax.plot(<span class="dv" style="color: #AD0000;">0</span><span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>,<span class="op" style="color: #5E5E5E;">-</span>np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>)<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$F_1=(3,\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">+3),F_2=(3,-\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">+3)$'</span>)</span>
<span id="cb3-33">ax.plot(<span class="dv" style="color: #AD0000;">0</span><span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>,np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>)<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>)</span>
<span id="cb3-34"></span>
<span id="cb3-35"><span class="co" style="color: #5E5E5E;"># height/width=1</span></span>
<span id="cb3-36">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb3-37"></span>
<span id="cb3-38">ax.set_xlim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb3-39">ax.set_ylim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb3-40"></span>
<span id="cb3-41">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb3-42">ax.set_title(<span class="st" style="color: #20794D;">"Transformation of Functions"</span>)</span>
<span id="cb3-43">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb3-44">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb3-45"></span>
<span id="cb3-46">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb3-47"></span>
<span id="cb3-48"><span class="co" style="color: #5E5E5E;"># show the plot</span></span>
<span id="cb3-49">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-4-output-1.png" width="574" height="614"></p>
</div>
</div>
<ul>
<li>Try using <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20(%5Ctheta)">, <img src="https://latex.codecogs.com/png.latex?x=%5Ccos%20(%5Ctheta)">, by yourself, to draw <img src="https://latex.codecogs.com/png.latex?x%5E2+y%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bx%5E2%7D%7B4%7D+%5Cfrac%7By%5E2%7D%7B9%7D=1">, <img src="https://latex.codecogs.com/png.latex?(x-3)%5E2+(y-3)%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B(x-3)%5E2%7D%7B4%7D+%5Cfrac%7B(y-3)%5E2%7D%7B9%7D=1"></li>
</ul>
</section>
</section>
<section id="reflections" class="level3">
<h3 class="anchored" data-anchor-id="reflections">Reflections</h3>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=-f(x)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the x-axis</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(-x)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the y-axis</li>
<li><img src="https://latex.codecogs.com/png.latex?-y=f(-x)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the origin on the 2D plain</li>
<li><img src="https://latex.codecogs.com/png.latex?x=f(y)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the <img src="https://latex.codecogs.com/png.latex?y=x"></li>
</ul>
<section id="example-3" class="level4">
<h4 class="anchored" data-anchor-id="example-3">Example</h4>
<ul>
<li>draw <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20(-x)">, <img src="https://latex.codecogs.com/png.latex?y=-%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?-y=-%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?x=-%5Csin%20y"></li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.pi, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb4-2">x1 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.pi, <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.pi, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb4-3">y <span class="op" style="color: #5E5E5E;">=</span> np.sin(x)</span>
<span id="cb4-4"></span>
<span id="cb4-5">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;"># unit circle</span></span>
<span id="cb4-8">ax.plot(x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=\sin (x)$'</span>)</span>
<span id="cb4-9">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=\sin (-x)$'</span>)</span>
<span id="cb4-10">ax.plot(x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=-\sin (x)$'</span>)</span>
<span id="cb4-11">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'orange'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$-y=-\sin (x)$'</span>)</span>
<span id="cb4-12">ax.plot(x1,x1, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=x$'</span>)</span>
<span id="cb4-13">ax.plot(np.sin(y),x, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=sin^{-1}(x)$'</span>,linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'dashed'</span>)</span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;"># height/width=1</span></span>
<span id="cb4-16">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb4-17"></span>
<span id="cb4-18">ax.set_xlim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb4-19">ax.set_ylim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb4-20"></span>
<span id="cb4-21">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb4-22">ax.set_title(<span class="st" style="color: #20794D;">"Reflection of Functions"</span>)</span>
<span id="cb4-23">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb4-24">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb4-25">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb4-26"><span class="co" style="color: #5E5E5E;"># show the plot</span></span>
<span id="cb4-27">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-5-output-1.png" width="481" height="557"></p>
</div>
</div>
<ul>
<li>Draw <img src="https://latex.codecogs.com/png.latex?S(x)=%5Cfrac%7B1%7D%7B1+e%5E%7B-x%7D%7D"></li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb5-2">y <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">+</span>np.exp(<span class="op" style="color: #5E5E5E;">-</span>x))</span>
<span id="cb5-3"></span>
<span id="cb5-4">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb5-5"></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;"># unit circle</span></span>
<span id="cb5-7">ax.plot(x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=S(x)$'</span>)</span>
<span id="cb5-8">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=S(-x)$'</span>)</span>
<span id="cb5-9">ax.plot(x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=-S(x)$'</span>)</span>
<span id="cb5-10">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'orange'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$-y=-S(x)$'</span>)</span>
<span id="cb5-11">ax.plot(x,x, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=x$'</span>)</span>
<span id="cb5-12">ax.plot(np.sin(y),x, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=S^{-1}(x)$'</span>,linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'dashed'</span>)</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;"># height/width=1</span></span>
<span id="cb5-15">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb5-16"></span>
<span id="cb5-17">ax.set_xlim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>])</span>
<span id="cb5-18">ax.set_ylim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>])</span>
<span id="cb5-19"></span>
<span id="cb5-20">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb5-21">ax.set_title(<span class="st" style="color: #20794D;">"Reflection of Functions"</span>)</span>
<span id="cb5-22">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb5-23">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb5-24">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb5-25"><span class="co" style="color: #5E5E5E;"># show the plot</span></span>
<span id="cb5-26">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-6-output-1.png" width="485" height="557"></p>
</div>
</div>
</section>
<section id="application-standardization" class="level4">
<h4 class="anchored" data-anchor-id="application-standardization">Application: Standardization</h4>
<ul>
<li>Distribution of Raw Data</li>
</ul>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">data1 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">6.0</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>) <span class="co" style="color: #5E5E5E;">#loc=mean, scale=sd</span></span>
<span id="cb6-2">data2 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">4</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">2.0</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb6-3">data3 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">7</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">2.5</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb6-4">data4 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;"># the range of values to evaluate the PDF</span></span>
<span id="cb6-7">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(data2.<span class="bu" style="color: null;">min</span>(), data1.<span class="bu" style="color: null;">max</span>(), <span class="dv" style="color: #AD0000;">10000</span>)</span>
<span id="cb6-8"></span>
<span id="cb6-9">bins_number<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb6-12">plt.hist(data1, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(5,6^2)$'</span>)</span>
<span id="cb6-13">plt.hist(data2, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-4,2^2)$'</span>)</span>
<span id="cb6-14">plt.hist(data3, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-7,2.5^2)$'</span>)</span>
<span id="cb6-15">plt.hist(data4, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb6-16"></span>
<span id="cb6-17">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb6-18">plt.title(<span class="st" style="color: #20794D;">"Distribution of Raw Data"</span>)</span>
<span id="cb6-19">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-7-output-1.png" width="670" height="508"></p>
</div>
</div>
<ul>
<li>Distribution of Translated Raw Data</li>
</ul>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb7-2">plt.hist(data1<span class="op" style="color: #5E5E5E;">-</span>data1.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(5-5,6^2)$'</span>)</span>
<span id="cb7-3">plt.hist(data2<span class="op" style="color: #5E5E5E;">-</span>data2.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-4-(-4),2^2)$'</span>)</span>
<span id="cb7-4">plt.hist(data3<span class="op" style="color: #5E5E5E;">-</span>data3.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-7-(-7),2.5^2)$'</span>)</span>
<span id="cb7-5">plt.hist(data4<span class="op" style="color: #5E5E5E;">-</span>data4.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0-0,1)$'</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb7-8">plt.title(<span class="st" style="color: #20794D;">"Distribution of Translated Raw Data"</span>)</span>
<span id="cb7-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-8-output-1.png" width="670" height="508"></p>
</div>
</div>
<ul>
<li>Distribution of Transformed Raw Data</li>
</ul>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb8-2">plt.hist(data1<span class="op" style="color: #5E5E5E;">/</span>data1.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(5,6^2/6^2)$'</span>)</span>
<span id="cb8-3">plt.hist(data2<span class="op" style="color: #5E5E5E;">/</span>data2.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-4,2^2/2^2)$'</span>)</span>
<span id="cb8-4">plt.hist(data3<span class="op" style="color: #5E5E5E;">/</span>data3.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-7,2.5^2/5^2)$'</span>)</span>
<span id="cb8-5">plt.hist(data4<span class="op" style="color: #5E5E5E;">/</span>data4.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1/1)$'</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb8-8">plt.title(<span class="st" style="color: #20794D;">"Distribution of Transformed Raw Data"</span>)</span>
<span id="cb8-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-9-output-1.png" width="670" height="508"></p>
</div>
</div>
<ul>
<li>Distribution of Standardized Raw Data</li>
</ul>
<div class="cell" data-execution_count="9">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb9-2">plt.hist((data1<span class="op" style="color: #5E5E5E;">-</span>data1.mean())<span class="op" style="color: #5E5E5E;">/</span>data1.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb9-3">plt.hist((data2<span class="op" style="color: #5E5E5E;">-</span>data2.mean())<span class="op" style="color: #5E5E5E;">/</span>data2.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb9-4">plt.hist((data3<span class="op" style="color: #5E5E5E;">-</span>data3.mean())<span class="op" style="color: #5E5E5E;">/</span>data3.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb9-5">plt.hist((data4<span class="op" style="color: #5E5E5E;">-</span>data4.mean())<span class="op" style="color: #5E5E5E;">/</span>data4.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb9-6"></span>
<span id="cb9-7">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb9-8">plt.title(<span class="st" style="color: #20794D;">"Distribution of Standardized Raw Data"</span>)</span>
<span id="cb9-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-10-output-1.png" width="670" height="500"></p>
</div>
</div>
</section>
</section>
</section>
<section id="thinking-about" class="level2">
<h2 class="anchored" data-anchor-id="thinking-about">Thinking About …</h2>
<ul>
<li>Transformation in Statistics? ex) transformation of random variable</li>
<li>Transformation in Linear Algebra? ex) linear transformation or linear mapping (transformation matrix)</li>
<li>Transformation in Machine Learning? ex) scaling (min-max normalization or standardization)</li>
</ul>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<section id="transformations-of-functions-1" class="level2">
<h2 class="anchored" data-anchor-id="transformations-of-functions-1">Transformations of Functions</h2>
<section id="translations-1" class="level3">
<h3 class="anchored" data-anchor-id="translations-1">Translations</h3>
<p>Thanslations are about vertical and horizontal sifts. To be more sepecific, if <img src="https://latex.codecogs.com/png.latex?c"> is a positive number, then</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)+c">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units upward</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)-c">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units downward</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x-c)">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units to the right</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x+c)">, shift the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> a distance <img src="https://latex.codecogs.com/png.latex?c"> units to the left</li>
</ul>
<section id="example-4" class="level4">
<h4 class="anchored" data-anchor-id="example-4">Example</h4>
<p>draw <img src="https://latex.codecogs.com/png.latex?y=x">, <img src="https://latex.codecogs.com/png.latex?y=(x-3)">, <img src="https://latex.codecogs.com/png.latex?y=x-3">, <img src="https://latex.codecogs.com/png.latex?y=(x+3)">, <img src="https://latex.codecogs.com/png.latex?y=x+3"></p>
<div class="cell" data-execution_count="10">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb10-2">y <span class="op" style="color: #5E5E5E;">=</span> x</span>
<span id="cb10-3">y2 <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb10-4">y3 <span class="op" style="color: #5E5E5E;">=</span> x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb10-5"></span>
<span id="cb10-6"></span>
<span id="cb10-7">plt.xlabel(<span class="st" style="color: #20794D;">'X'</span>)</span>
<span id="cb10-8">plt.ylabel(<span class="st" style="color: #20794D;">'Y'</span>)</span>
<span id="cb10-9">plt.axhline(y<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb10-10">plt.axvline(x<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb10-11">plt.grid(<span class="va" style="color: #111111;">True</span>, which<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'both'</span>)</span>
<span id="cb10-12"></span>
<span id="cb10-13">plt.plot(x,y,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=x'</span>)</span>
<span id="cb10-14">plt.plot(x,y2,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=(x-3) or (y+3)=x'</span>)</span>
<span id="cb10-15">plt.plot(x,y3,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=(x+3) or (y-3)=x'</span>)</span>
<span id="cb10-16"></span>
<span id="cb10-17">plt.title(<span class="st" style="color: #20794D;">'Traslation of Functions'</span>)</span>
<span id="cb10-18">plt.legend()</span>
<span id="cb10-19">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-11-output-1.png" width="596" height="449"></p>
</div>
</div>
</section>
</section>
<section id="transformations-1" class="level3">
<h3 class="anchored" data-anchor-id="transformations-1">Transformations</h3>
<p>There are largely two types of transofrmations of functions: stretching and reflecting. To be more sepecific, if <img src="https://latex.codecogs.com/png.latex?c"> is larger than 1, then</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=cf(x)">, stretch the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> vertically by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
<li><img src="https://latex.codecogs.com/png.latex?y=%5Cfrac%7B1%7D%7Bc%7Df(x)">, shrink the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> vertically by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(cx)">, shrink the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> horizontally by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(%5Cfrac%7Bx%7D%7Bc%7D)">, stretch the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> horizontally by a factor of <img src="https://latex.codecogs.com/png.latex?c"></li>
</ul>
<section id="example-5" class="level4">
<h4 class="anchored" data-anchor-id="example-5">Example</h4>
<p>draw <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?y=%5Csin%202x">, <img src="https://latex.codecogs.com/png.latex?y=%5Cfrac%7B1%7D%7B2%7D%20%5Csin%20x"></p>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb11-2">y <span class="op" style="color: #5E5E5E;">=</span> np.sin(x)</span>
<span id="cb11-3">y2 <span class="op" style="color: #5E5E5E;">=</span> np.sin(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x)</span>
<span id="cb11-4">y3 <span class="op" style="color: #5E5E5E;">=</span> np.sin(x<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb11-5">y4 <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.sin(x)</span>
<span id="cb11-6">y5 <span class="op" style="color: #5E5E5E;">=</span> np.sin(x)<span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb11-7"></span>
<span id="cb11-8">plt.xlabel(<span class="st" style="color: #20794D;">'X'</span>)</span>
<span id="cb11-9">plt.ylabel(<span class="st" style="color: #20794D;">'Y'</span>)</span>
<span id="cb11-10">plt.axhline(y<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb11-11">plt.axvline(x<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb11-12">plt.grid(<span class="va" style="color: #111111;">True</span>, which<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'both'</span>)</span>
<span id="cb11-13"></span>
<span id="cb11-14">plt.plot(x,y,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=sin(x)'</span>)</span>
<span id="cb11-15">plt.plot(x,y2,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'y=sin(2x)'</span>)</span>
<span id="cb11-16">plt.plot(x,y3,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'y=sin($\frac</span><span class="sc" style="color: #5E5E5E;">{x}{2}</span><span class="vs" style="color: #20794D;">$)'</span>)</span>
<span id="cb11-17">plt.plot(x,y4,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'y=2sin(x)'</span>)</span>
<span id="cb11-18">plt.plot(x,y5,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'orange'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'y=$\frac</span><span class="sc" style="color: #5E5E5E;">{1}{2}</span><span class="vs" style="color: #20794D;">$sin(x) or (2y)=sin(x)'</span>)</span>
<span id="cb11-19"></span>
<span id="cb11-20">plt.title(<span class="st" style="color: #20794D;">'Trasformation of Functions'</span>)</span>
<span id="cb11-21">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.2</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb11-22">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-12-output-1.png" width="644" height="541"></p>
</div>
</div>
</section>
<section id="example-6" class="level4">
<h4 class="anchored" data-anchor-id="example-6">Example</h4>
<ul>
<li>draw <img src="https://latex.codecogs.com/png.latex?x%5E2+y%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bx%5E2%7D%7B4%7D+%5Cfrac%7By%5E2%7D%7B9%7D=1">, <img src="https://latex.codecogs.com/png.latex?(x-3)%5E2+(y-3)%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B(x-3)%5E2%7D%7B4%7D+%5Cfrac%7B(y-3)%5E2%7D%7B9%7D=1"></li>
</ul>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># initialize x and y using radian</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;"># theta = np.linspace(0, 2*np.pi, 1000)</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;"># x = np.cos(theta)</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;"># y = np.sin(theta)</span></span>
<span id="cb12-5"></span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;"># initialize x and y without using radian</span></span>
<span id="cb12-7">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb12-8">y1 <span class="op" style="color: #5E5E5E;">=</span> np.sqrt(<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">-</span> x<span class="op" style="color: #5E5E5E;">*</span>x)</span>
<span id="cb12-9">y2 <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span>np.sqrt(<span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">-</span> x<span class="op" style="color: #5E5E5E;">*</span>x)</span>
<span id="cb12-10"></span>
<span id="cb12-11">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;"># unit circle</span></span>
<span id="cb12-14">ax.plot(x, y1, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$x^2+y^2=1$'</span>)</span>
<span id="cb12-15">ax.plot(x, y2, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>)</span>
<span id="cb12-16">ax.plot(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">0</span>,<span class="st" style="color: #20794D;">'o'</span>,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'(0,0)'</span>)</span>
<span id="cb12-17"></span>
<span id="cb12-18"><span class="co" style="color: #5E5E5E;"># unit circle translated by 2</span></span>
<span id="cb12-19">ax.plot(x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, y1<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$(x-3)^2+(y-3)^2=1$'</span>)</span>
<span id="cb12-20">ax.plot(x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, y2<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>)</span>
<span id="cb12-21">ax.plot(<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="st" style="color: #20794D;">'o'</span>,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'(3,3)'</span>)</span>
<span id="cb12-22"></span>
<span id="cb12-23"><span class="co" style="color: #5E5E5E;"># eplipse: a unit circle transformed by 2,3 in x, y</span></span>
<span id="cb12-24">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y1, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$\frac{x^2}</span><span class="sc" style="color: #5E5E5E;">{4}</span><span class="vs" style="color: #20794D;">+\frac{y^2}</span><span class="sc" style="color: #5E5E5E;">{9}</span><span class="vs" style="color: #20794D;">=1$'</span>)</span>
<span id="cb12-25">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y2, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>)</span>
<span id="cb12-26">ax.plot(<span class="dv" style="color: #AD0000;">0</span>,<span class="op" style="color: #5E5E5E;">-</span>np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>), <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$F_1=(0,\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">),F_2=(0,-\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">)$'</span>)</span>
<span id="cb12-27">ax.plot(<span class="dv" style="color: #AD0000;">0</span>,np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>), <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>)</span>
<span id="cb12-28"></span>
<span id="cb12-29"><span class="co" style="color: #5E5E5E;"># translated eplipse: a unit circle translated by 2 and transformed by 2,3 in x, y</span></span>
<span id="cb12-30">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y1<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$\frac{(x-3)^2}</span><span class="sc" style="color: #5E5E5E;">{4}</span><span class="vs" style="color: #20794D;">+\frac{(y-3)^2}</span><span class="sc" style="color: #5E5E5E;">{9}</span><span class="vs" style="color: #20794D;">=1$'</span>)</span>
<span id="cb12-31">ax.plot(<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span><span class="op" style="color: #5E5E5E;">*</span>y2<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>)</span>
<span id="cb12-32">ax.plot(<span class="dv" style="color: #AD0000;">0</span><span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>,<span class="op" style="color: #5E5E5E;">-</span>np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>)<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$F_1=(3,\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">+3),F_2=(3,-\sqrt</span><span class="sc" style="color: #5E5E5E;">{5}</span><span class="vs" style="color: #20794D;">+3)$'</span>)</span>
<span id="cb12-33">ax.plot(<span class="dv" style="color: #AD0000;">0</span><span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>,np.sqrt(<span class="dv" style="color: #AD0000;">9</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>)<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>, <span class="st" style="color: #20794D;">'o'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>)</span>
<span id="cb12-34"></span>
<span id="cb12-35"><span class="co" style="color: #5E5E5E;"># height/width=1</span></span>
<span id="cb12-36">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb12-37"></span>
<span id="cb12-38">ax.set_xlim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb12-39">ax.set_ylim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb12-40"></span>
<span id="cb12-41">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb12-42">ax.set_title(<span class="st" style="color: #20794D;">"Transformation of Functions"</span>)</span>
<span id="cb12-43">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb12-44">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb12-45"></span>
<span id="cb12-46">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb12-47"></span>
<span id="cb12-48"><span class="co" style="color: #5E5E5E;"># show the plot</span></span>
<span id="cb12-49">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-13-output-1.png" width="574" height="614"></p>
</div>
</div>
<ul>
<li>Try using <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20(%5Ctheta)">, <img src="https://latex.codecogs.com/png.latex?x=%5Ccos%20(%5Ctheta)">, by yourself, to draw <img src="https://latex.codecogs.com/png.latex?x%5E2+y%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bx%5E2%7D%7B4%7D+%5Cfrac%7By%5E2%7D%7B9%7D=1">, <img src="https://latex.codecogs.com/png.latex?(x-3)%5E2+(y-3)%5E2=1">, <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B(x-3)%5E2%7D%7B4%7D+%5Cfrac%7B(y-3)%5E2%7D%7B9%7D=1"></li>
</ul>
</section>
</section>
<section id="reflections-1" class="level3">
<h3 class="anchored" data-anchor-id="reflections-1">Reflections</h3>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=-f(x)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the x-axis</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(-x)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the y-axis</li>
<li><img src="https://latex.codecogs.com/png.latex?-y=f(-x)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the origin on the 2D plain</li>
<li><img src="https://latex.codecogs.com/png.latex?x=f(y)">, reflect the graph of <img src="https://latex.codecogs.com/png.latex?y=f(x)"> about the <img src="https://latex.codecogs.com/png.latex?y=x"></li>
</ul>
<section id="example-7" class="level4">
<h4 class="anchored" data-anchor-id="example-7">Example</h4>
<ul>
<li>draw <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?y=%5Csin%20(-x)">, <img src="https://latex.codecogs.com/png.latex?y=-%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?-y=-%5Csin%20x">, <img src="https://latex.codecogs.com/png.latex?x=-%5Csin%20y"></li>
</ul>
<div class="cell" data-execution_count="13">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.pi, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb13-2">x1 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.pi, <span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">*</span>np.pi, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb13-3">y <span class="op" style="color: #5E5E5E;">=</span> np.sin(x)</span>
<span id="cb13-4"></span>
<span id="cb13-5">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;"># unit circle</span></span>
<span id="cb13-8">ax.plot(x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=\sin (x)$'</span>)</span>
<span id="cb13-9">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=\sin (-x)$'</span>)</span>
<span id="cb13-10">ax.plot(x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=-\sin (x)$'</span>)</span>
<span id="cb13-11">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'orange'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$-y=-\sin (x)$'</span>)</span>
<span id="cb13-12">ax.plot(x1,x1, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=x$'</span>)</span>
<span id="cb13-13">ax.plot(np.sin(y),x, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=sin^{-1}(x)$'</span>,linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'dashed'</span>)</span>
<span id="cb13-14"></span>
<span id="cb13-15"><span class="co" style="color: #5E5E5E;"># height/width=1</span></span>
<span id="cb13-16">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb13-17"></span>
<span id="cb13-18">ax.set_xlim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb13-19">ax.set_ylim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb13-20"></span>
<span id="cb13-21">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb13-22">ax.set_title(<span class="st" style="color: #20794D;">"Reflection of Functions"</span>)</span>
<span id="cb13-23">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb13-24">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb13-25">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb13-26"><span class="co" style="color: #5E5E5E;"># show the plot</span></span>
<span id="cb13-27">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-14-output-1.png" width="481" height="557"></p>
</div>
</div>
<ul>
<li>Draw <img src="https://latex.codecogs.com/png.latex?S(x)=%5Cfrac%7B1%7D%7B1+e%5E%7B-x%7D%7D"></li>
</ul>
<div class="cell" data-execution_count="14">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb14-2">y <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">+</span>np.exp(<span class="op" style="color: #5E5E5E;">-</span>x))</span>
<span id="cb14-3"></span>
<span id="cb14-4">fig, ax <span class="op" style="color: #5E5E5E;">=</span> plt.subplots()</span>
<span id="cb14-5"></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;"># unit circle</span></span>
<span id="cb14-7">ax.plot(x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=S(x)$'</span>)</span>
<span id="cb14-8">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'blue'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=S(-x)$'</span>)</span>
<span id="cb14-9">ax.plot(x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'green'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=-S(x)$'</span>)</span>
<span id="cb14-10">ax.plot(<span class="op" style="color: #5E5E5E;">-</span>x, <span class="op" style="color: #5E5E5E;">-</span>y, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'orange'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$-y=-S(x)$'</span>)</span>
<span id="cb14-11">ax.plot(x,x, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=x$'</span>)</span>
<span id="cb14-12">ax.plot(np.sin(y),x, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'$y=S^{-1}(x)$'</span>,linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'dashed'</span>)</span>
<span id="cb14-13"></span>
<span id="cb14-14"><span class="co" style="color: #5E5E5E;"># height/width=1</span></span>
<span id="cb14-15">ax.set_aspect(<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb14-16"></span>
<span id="cb14-17">ax.set_xlim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>])</span>
<span id="cb14-18">ax.set_ylim([<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>])</span>
<span id="cb14-19"></span>
<span id="cb14-20">ax.grid(<span class="va" style="color: #111111;">True</span>)</span>
<span id="cb14-21">ax.set_title(<span class="st" style="color: #20794D;">"Reflection of Functions"</span>)</span>
<span id="cb14-22">ax.set_xlabel(<span class="st" style="color: #20794D;">"x-axis"</span>)</span>
<span id="cb14-23">ax.set_ylabel(<span class="st" style="color: #20794D;">"y-axis"</span>)</span>
<span id="cb14-24">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb14-25"><span class="co" style="color: #5E5E5E;"># show the plot</span></span>
<span id="cb14-26">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-15-output-1.png" width="485" height="557"></p>
</div>
</div>
</section>
<section id="application-standardization-1" class="level4">
<h4 class="anchored" data-anchor-id="application-standardization-1">Application: Standardization</h4>
<ul>
<li>Distribution of Raw Data</li>
</ul>
<div class="cell" data-execution_count="15">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">data1 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">5</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">6.0</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>) <span class="co" style="color: #5E5E5E;">#loc=mean, scale=sd</span></span>
<span id="cb15-2">data2 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">4</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">2.0</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb15-3">data3 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=-</span><span class="dv" style="color: #AD0000;">7</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">2.5</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb15-4">data4 <span class="op" style="color: #5E5E5E;">=</span> np.random.normal(loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>,scale<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>,size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;"># the range of values to evaluate the PDF</span></span>
<span id="cb15-7">x <span class="op" style="color: #5E5E5E;">=</span> np.linspace(data2.<span class="bu" style="color: null;">min</span>(), data1.<span class="bu" style="color: null;">max</span>(), <span class="dv" style="color: #AD0000;">10000</span>)</span>
<span id="cb15-8"></span>
<span id="cb15-9">bins_number<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb15-10"></span>
<span id="cb15-11"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb15-12">plt.hist(data1, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(5,6^2)$'</span>)</span>
<span id="cb15-13">plt.hist(data2, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-4,2^2)$'</span>)</span>
<span id="cb15-14">plt.hist(data3, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-7,2.5^2)$'</span>)</span>
<span id="cb15-15">plt.hist(data4, density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb15-16"></span>
<span id="cb15-17">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb15-18">plt.title(<span class="st" style="color: #20794D;">"Distribution of Raw Data"</span>)</span>
<span id="cb15-19">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-16-output-1.png" width="670" height="508"></p>
</div>
</div>
<ul>
<li>Distribution of Translated Raw Data</li>
</ul>
<div class="cell" data-execution_count="16">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb16-2">plt.hist(data1<span class="op" style="color: #5E5E5E;">-</span>data1.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(5-5,6^2)$'</span>)</span>
<span id="cb16-3">plt.hist(data2<span class="op" style="color: #5E5E5E;">-</span>data2.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-4-(-4),2^2)$'</span>)</span>
<span id="cb16-4">plt.hist(data3<span class="op" style="color: #5E5E5E;">-</span>data3.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-7-(-7),2.5^2)$'</span>)</span>
<span id="cb16-5">plt.hist(data4<span class="op" style="color: #5E5E5E;">-</span>data4.mean(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0-0,1)$'</span>)</span>
<span id="cb16-6"></span>
<span id="cb16-7">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb16-8">plt.title(<span class="st" style="color: #20794D;">"Distribution of Translated Raw Data"</span>)</span>
<span id="cb16-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-17-output-1.png" width="670" height="508"></p>
</div>
</div>
<ul>
<li>Distribution of Transformed Raw Data</li>
</ul>
<div class="cell" data-execution_count="17">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb17-2">plt.hist(data1<span class="op" style="color: #5E5E5E;">/</span>data1.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(5,6^2/6^2)$'</span>)</span>
<span id="cb17-3">plt.hist(data2<span class="op" style="color: #5E5E5E;">/</span>data2.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-4,2^2/2^2)$'</span>)</span>
<span id="cb17-4">plt.hist(data3<span class="op" style="color: #5E5E5E;">/</span>data3.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(-7,2.5^2/5^2)$'</span>)</span>
<span id="cb17-5">plt.hist(data4<span class="op" style="color: #5E5E5E;">/</span>data4.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1/1)$'</span>)</span>
<span id="cb17-6"></span>
<span id="cb17-7">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb17-8">plt.title(<span class="st" style="color: #20794D;">"Distribution of Transformed Raw Data"</span>)</span>
<span id="cb17-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-18-output-1.png" width="670" height="508"></p>
</div>
</div>
<ul>
<li>Distribution of Standardized Raw Data</li>
</ul>
<div class="cell" data-execution_count="18">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;"># Plot the data and PDF</span></span>
<span id="cb18-2">plt.hist((data1<span class="op" style="color: #5E5E5E;">-</span>data1.mean())<span class="op" style="color: #5E5E5E;">/</span>data1.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"red"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb18-3">plt.hist((data2<span class="op" style="color: #5E5E5E;">-</span>data2.mean())<span class="op" style="color: #5E5E5E;">/</span>data2.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"green"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb18-4">plt.hist((data3<span class="op" style="color: #5E5E5E;">-</span>data3.mean())<span class="op" style="color: #5E5E5E;">/</span>data3.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"blue"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb18-5">plt.hist((data4<span class="op" style="color: #5E5E5E;">-</span>data4.mean())<span class="op" style="color: #5E5E5E;">/</span>data4.std(), density<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"black"</span>, alpha<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">0.5</span>, bins<span class="op" style="color: #5E5E5E;">=</span>bins_number,label<span class="op" style="color: #5E5E5E;">=</span><span class="vs" style="color: #20794D;">r'$X \sim N(0,1)$'</span>)</span>
<span id="cb18-6"></span>
<span id="cb18-7">plt.legend(shadow<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, loc<span class="op" style="color: #5E5E5E;">=</span>(<span class="op" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.25</span>, <span class="fl" style="color: #AD0000;">1.05</span>), handlelength<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.5</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb18-8">plt.title(<span class="st" style="color: #20794D;">"Distribution of Standardized Raw Data"</span>)</span>
<span id="cb18-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index_files/figure-html/cell-19-output-1.png" width="670" height="500"></p>
</div>
</div>
</section>
</section>
</section>
<section id="thinking-about-1" class="level2">
<h2 class="anchored" data-anchor-id="thinking-about-1">Thinking About …</h2>
<ul>
<li>Transformation in Statistics? ex) transformation of random variable</li>
<li>Transformation in Linear Algebra? ex) linear transformation or linear mapping (transformation matrix)</li>
<li>Transformation in Machine Learning? ex) scaling (min-max normalization or standardization)</li>
</ul>
</section>
</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/transformation/index.html</guid>
  <pubDate>Fri, 17 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Differentiation - Chain Rule &amp; Partial Derivative</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/differentiation/2023-02-10_composite_partial_derivative.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>Neural Network (NN)는 여러 노드(node)가 여러 층(layer)을 갖고 층 사이에 함수 관계가 있는 구조이다. NN의 결과값을 계산할 때 순방향(forward)으로 전 층의 노드가 그 다음 층의 입력값으로 들어가 복잡한 합성 함수가 만들어져 결과값을 출력하고, 학습을 할 때 역방향(backword)으로 그 합성 함수의 미분을 수행하게 된다 (Back Propagation). NN은 deep learning의 기본 구조가 되므로 합성 함수가 무엇이고 어떤 원리로 미분이 되는지 알 필요가 있다.</p>
</section>
<section id="chain-rule" class="level2">
<h2 class="anchored" data-anchor-id="chain-rule">Chain Rule</h2>
<div id="thm-chianRule" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 </strong></span>If the fucntions, <img src="https://latex.codecogs.com/png.latex?f(x)">, <img src="https://latex.codecogs.com/png.latex?g(x)">, are differentiable, then the composite function of <img src="https://latex.codecogs.com/png.latex?f(x)"> and <img src="https://latex.codecogs.com/png.latex?g(x)">, <img src="https://latex.codecogs.com/png.latex?u=f%5Ccirc%20g"> defined by <img src="https://latex.codecogs.com/png.latex?u(x)=g(f(x))"> is differentiable at <img src="https://latex.codecogs.com/png.latex?x"> and <img src="https://latex.codecogs.com/png.latex?u"> is given by the product, the chain rule is <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Au'(x)&amp;=g'(f(x))f'(x)%0A%5Cend%7Baligned%7D%0A"></p>
<p>In Leibniz notation, if <img src="https://latex.codecogs.com/png.latex?y=f(x)"> and <img src="https://latex.codecogs.com/png.latex?u=g(y)"> are both differentiable functions, then <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bdu%7D%7Bdx%7D%20=%20%5Cfrac%7Bdu%7D%7Bdy%7D%5Cfrac%7Bdy%7D%7Bdx%7D%0A"></p>
</div>
<p>Chain rule은 합성 함수의 미분으로 겉에 있는 함수를 미분하고 안에 있는 함수를 미분을 연달아 하는 방식이다.</p>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<p>다음 식들의 도함수를 chain rule에 따라 구해본다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?u(x)=(4x%5E2+7x)%5E%7B50%7D"></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A&amp;%5Ctext%7Bwhen%20the%20two%20functions%20are%20%7Df(x)=4x%5E2+7x,%20%5Cspace%20g(x)=x%5E%7B50%7D,%20%5C%5C%0A&amp;u(x)=(4x%5E2+7x)%5E%7B50%7D=g(f(x))%5C%5C%0A&amp;f'(x)=8x+7%5C%5C%0A&amp;g'(x)=50x%5E%7B49%7D%5C%5C%0A&amp;u'(x)=g'(f(x))=g'(f(x))f'(x)%5C%5C%0A&amp;u'(x)=50f(x)%5E%7B49%7D(8x+7)=50(4x%5E2+7x)%5E%7B49%7D(8x+7)%0A%5Cend%7Baligned%7D%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=x+1">, <img src="https://latex.codecogs.com/png.latex?g(x)=%5Csqrt%7Bx+1%7D">, <img src="https://latex.codecogs.com/png.latex?u(x)=g(f(x))"></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A&amp;f(x)=x+1,%20%5Cspace%20g(x)=%5Csqrt%7Bx+1%7D%20%5C%5C%0A&amp;u(x)=g(f(x))=%5Csqrt%7B(x+1)+1%7D%5C%5C%0A&amp;f'(x)=1%5C%5C%0A&amp;g'(x)=%5Cfrac%7B1%7D%7B2%5Csqrt%7Bx+1%7D%7D%5C%5C%0A&amp;u'(x)=g'(f(x))f'(x)%5C%5C%0A&amp;u'(x)=%5Cfrac%7B1%7D%7B2%5Csqrt%7Bf(x)+1%7D%7Df'(x)=%5Cfrac%7B1%7D%7B2%5Csqrt%7B(x+1)+1%7D%7D%0A%5Cend%7Baligned%7D%0A"></p>
$$
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0A%5Clim_%7B%5CDelta%20x%20%5Cto0%7D%5Cfrac%7B%5CDelta%20u%7D%7B%5CDelta%20x%7D&amp;=%0A%5Clim_%7B%5CDelta%20y%20%5Cto0%7D%5Cfrac%7B%5CDelta%20u%7D%7B%5CDelta%20y%7D%5Clim_%7B%5CDelta%20x%20%5Cto0%7D%5Cfrac%7B%5CDelta%20y%7D%7B%5CDelta%20x%7D%5C%5C&amp;=%5Clim_%7B%5CDelta%20y%20%5Cto0%7D%5Cfrac%7B%5CDelta%20u%7D%7B%5CDelta%20y%7D%5Cfrac%7Bdy%7D%7Bdx%7D%5C%5C%0A%5Cfrac%7Bdz%7D%7Bdx%7D&amp;=%5Cfrac%7Bdz%7D%7Bdy%7D%5Cfrac%7Bdy%7D%7Bdx%7D%20%5C%5C%0A&amp;(%5Cbecause%20%5CDelta%20x%20%5Cto%200%20%5CLongrightarrow%20%5CDelta%20y%20%5Cto%200%20)%0A%0A%5Cend%7Baligned%7D">
<p>$$</p>
<p><img src="https://latex.codecogs.com/png.latex?%5CDelta%20x%5Crightarrow%20%5CDelta%20y%20%5Crightarrow%20%5CDelta%20z"></p>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../Mathmatics/guide_map/index.qmd">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/differentiation/2023-02-10_composite_partial_derivative.html</guid>
  <pubDate>Thu, 09 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Naive Bayes Classification</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-06_naive_bayes/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="naive-bayes" class="level2">
<h2 class="anchored" data-anchor-id="naive-bayes">Naive Bayes</h2>
</section>
<section id="navie-bayes-application" class="level2">
<h2 class="anchored" data-anchor-id="navie-bayes-application">Navie Bayes Application</h2>
<ul>
<li>얼굴 인식: 분류기로 얼굴, 코, 입, 눈 등과 같은 여러 특징을 식별</li>
<li>날씨 예측: 날씨가 좋을지 나쁠지 예측</li>
<li>의료 진단: 의료 전문가는 나이브 베이즈를 사용하여 환자가 심장병, 암 및 기타 질병과 같은 특정 질병 및 상태에 대한 고위험군인지 여부를 확인</li>
<li>뉴스 분류: google 뉴스는 뉴스 유형을 분류</li>
<li>쇼핑: 한 사람이 제품을 구매할지 여부를 예측하기 위해 요일, 할인 및 무료 배송의 특정 조합으로 나이브 베이즈 분류기 사용. 쇼핑한 날이 주중인지 주말인지 공휴일인지 기록하고 지정된 날짜에 대해 할인 및 무료 배송이 있는지 여부를 확인.</li>
</ul>
</section>
<section id="장점" class="level2">
<h2 class="anchored" data-anchor-id="장점">장점</h2>
<ul>
<li>간단하고 구현하기 쉬움</li>
<li>훈련 데이터가 많이 필요하지 않음</li>
<li>연속 데이터와 이산 데이터를 모두 처리</li>
<li>예측 변수와 데이터 포인트의 수로 확장성이 뛰어남</li>
<li>빠르고 실시간 예측에 사용</li>
<li>관련 없는 특성에 민감하지 않음</li>
<li>텍스트 분류는 나이브 베이즈 분류기의 가장 인기있는 응용 프로그램</li>
</ul>
</section>
<section id="원리" class="level2">
<h2 class="anchored" data-anchor-id="원리">원리</h2>
<p>나이브 베이즈를 이용하면 조건이 주어질 때의 사건 발생 여부를 에측한다. 즉, 주어진 데이터를 이용해 사건 발생 확률 모형을 생성하고 새로운 데이터가 들어왔을 때 예측을 한다. 예측 결과는 사건이 발생할 확률과 사건이 발생하지 않을 확률이 출력되며 확률 높은 쪽을 선택하여 결과를 출력한다. 주어진 데이터는 조건이라고 가정하고 사건 조건부 발생 활률을 추정하는 것이다.</p>
<p>조건이 주어졌을 때 조건부 확률을 계산하는 방식은 베이즈 정리를 이용한다.</p>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
</div>
<div class="cell" data-execution_count="1">
<div class="cell-output cell-output-display">
<p>The radius of the circle is 10.</p>
</div>
</div>



</div></ul> ]]></description>
  <category>template</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-06_naive_bayes/index.html</guid>
  <pubDate>Sun, 05 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Bayes’ Rule</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_bayes_rule/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="bayes-rule" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="bayes-rule"><span class="header-section-number">1</span> Bayes’ Rule</h2>
<p>Bayes’ rule (베이즈 정리)는 prior probability(사전 확률)과 posterior probability(사후 확률)의 관계를 조건부 확률을 이용하여 확립한 것이다.</p>
<ul>
<li>prior probability(사전 확률)는 데이터를 얻기 전 연구자의 가설이 들어간 일종의 사건 발생의 신뢰도로 해석하기도 하고 prior probability density function (사전 확률 밀도 함수) 라고도 표현된다.</li>
<li>posterior probability(사후 확률)는 데이터가 주어진 후 연구자의 가설이 들어간 사건 발생의 신뢰도로 해석하기도 하고 posterior probability desnsity function(사후 확률 밀도 함수) 라고도 표현된다.</li>
</ul>
<p>좀 더 구체적으로, 2개의 사건 A와 B로 한정시켜 생각해봤을 때, 조건부 확률 <img src="https://latex.codecogs.com/png.latex?P(A%7CB)"> 는 각 사건의 확률 <img src="https://latex.codecogs.com/png.latex?P(A),%20P(B),%20P(B%7CA)"> 를 사용하여 게산될 수 있다. 그래서 베이즈 정리는 <img src="https://latex.codecogs.com/png.latex?P(B%7CA)">, <img src="https://latex.codecogs.com/png.latex?P(B%7C%5Coverline%7BA%7D)">, <img src="https://latex.codecogs.com/png.latex?P(A)"> 의 정보를 알고있거나 계산 가능할 때 아래와 같은 <img src="https://latex.codecogs.com/png.latex?P(A%7CB)"> 의 확률을 구할 수 있는 공식을 제공한다(Equation&nbsp;1).</p>
<section id="activating-schema" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="activating-schema"><span class="header-section-number">1.1</span> Activating Schema</h3>
<p>Bayes’ rule을 좀 더 직관적으로 이해하기 위해선 Bayes’ rule와 연관된 친숙한 개념들을 상기시킬 필요가 있다. 우리에게 친숙한 개념인 연역법과 귀납법에 대해서 간단이 살펴본다.</p>
<section id="deduction-vs-induction-method" class="level4" data-number="1.1.1">
<h4 data-number="1.1.1" class="anchored" data-anchor-id="deduction-vs-induction-method"><span class="header-section-number">1.1.1</span> Deduction vs Induction Method</h4>
<section id="deduction-method" class="level5" data-number="1.1.1.1">
<h5 data-number="1.1.1.1" class="anchored" data-anchor-id="deduction-method"><span class="header-section-number">1.1.1.1</span> Deduction Method</h5>
<p>연역법 (deduction method or deductive reasoning)는 하나 (=대전제) 또는 둘 이상의 명제(=대전제+소전제들)를 전제로 하여 명확한 논리에 근거해 새로운 명제(결론)를 도출하는 방법이다. 보통 일반적인 명제에서 구체적인 명제로 도출해내는 방식으로 연역법을 설명하기도 한다. 연역법은 전제와 결론의 타당성보다는 결론을 이끌어내는 논리 전개에 엄격함을 요구한다. 그래서 명쾌한 논리가 보장된다면 연역적 추론의 결론은 그 전제들이 결정적 근거가 되어 전제와 결론이 필연성을 갖게 된다. 따라서, 전제가 진리(=참)이면 결론도 항상 진리(=참)이고 전제가 거짓이면 결론도 거짓으로 도출된다. 하지만, 모든 연역적 추론에서 출발되는 최초의 명제가 결코 연역에 의해 도출될 수 없다는 약점을 갖고있다. 즉, 반드시 검증된 명제를 대전제로 하여 연역적 추리를 시작해야한다. <a href="https://terms.naver.com/entry.naver?docId=1126605&amp;cid=40942&amp;categoryId=31530">Source: naver encyclopedia -deductive method</a> (cf.&nbsp;<a href="https://en.wikipedia.org/wiki/Proof_by_contradiction">귀류법</a>)</p>
<p>예를 들어, 아리스토텔레스의 삼단논법의 논리 형식이 가장 많이 인용이 된다. 대전제와 소전제가 하나씩있는 둘 이상의 명제로부터 결론이 도출되는 예를 살펴보자.</p>
<ol type="1">
<li>대전제: 모든 사람은 죽는다.</li>
<li>소전제: 소크라테스는 사람이다.</li>
<li>결론: 그러므로 소크라테스도 죽는다.</li>
</ol>
</section>
<section id="induction-method" class="level5" data-number="1.1.1.2">
<h5 data-number="1.1.1.2" class="anchored" data-anchor-id="induction-method"><span class="header-section-number">1.1.1.2</span> Induction Method</h5>
<p>귀납법 (Induction method or Inductive reasoning)은 전제와 결론을 뒷받침하는 논리에 의해 그 타당성이 평가된다. 귀납적 추론은 관찰과 실험에서 얻은 특수한 사례 (= data)를 근거로 전체에 적용시키는 <strong>귀납적 비약</strong>을 통해 이루어진다. 이와 같이 귀납에서 얻어진 결론은 일정한 개연성을 지닐 뿐이며, 특정 data에 따라 귀납적 추론의 타당성에 영향을 미친다. 그러므로, 검증된 data가 많을 수록 신뢰도와 타당성이 증가한다는 특징이 있다.하지만, 귀납적 추론의 결론이 진리인 것은 아니다. <a href="https://terms.naver.com/entry.naver?docId=1068410&amp;cid=40942&amp;categoryId=31530">Source: naver encyclopedia - inductive method</a></p>
<ol type="1">
<li>특수한 사례 (or data): 소크라테스는 죽었다, 플라톤도 죽었다, 아리스토텔레스도 죽었다.</li>
<li>소전제: 소크라테스는 사람이다.</li>
<li>결론: 그러므로 소크라테스도 죽는다.</li>
</ol>
<p>위와 같이 연역적 추론과 귀납적 추론은 서로 반대되는 개념으로 각 각 강점과 약점이 있으며 현실에서는 서로 상호 보완적으로 쓰이고 있다. 따라서, 전제로 삼는 대전제 역시 검증 과정이 필요하고 그 가설에서 몇 개의 명제를 연역해 실험과 관찰 등을 수행하는 가설연역법(hypothetical deductive method)이 널리 쓰이고 있다.</p>
</section>
</section>
<section id="frequentism-vs-bayeseanism" class="level4" data-number="1.1.2">
<h4 data-number="1.1.2" class="anchored" data-anchor-id="frequentism-vs-bayeseanism"><span class="header-section-number">1.1.2</span> Frequentism vs Bayeseanism</h4>
<p>통계학에선 모수(parameter)를 추정하는 여러 방법론들이 있는데 이번 블로그에서는 Frequentism와 Bayeseanism, 이 2가지 방법론에 초점을 둔다.</p>
<section id="frequentism-frequentist-statistics" class="level5" data-number="1.1.2.1">
<h5 data-number="1.1.2.1" class="anchored" data-anchor-id="frequentism-frequentist-statistics"><span class="header-section-number">1.1.2.1</span> Frequentism (frequentist statistics)</h5>
<p>통계학에서 가장 널리쓰이고 있는 방법론으로, 연역법에 근거한 결론 도출 방식을 이용한다. 간단히 말하면, 이미 알려진 분포에서 연구자의 관측치가 발생할 확률을 관찰하여 결론을 유도 하는 방법이다. p-value에 의한 결론 도출방식이 그 대표적인 예이다. 연구자의 데이터가 여러 수학자와 통계학자들이 증명해 놓은 분포하에서 발생한 사실이 입증이 됐을 때 연구자의 관측치가 그 named distribution(like normal distribution)에서 발생할 확률이 낮을 수록 p-value가 작아지고 일정 유의수준에 따라 연구자는 귀무가설을 기각하는 논리방식을 따른다.</p>
</section>
<section id="bayeseanism" class="level5" data-number="1.1.2.2">
<h5 data-number="1.1.2.2" class="anchored" data-anchor-id="bayeseanism"><span class="header-section-number">1.1.2.2</span> Bayeseanism</h5>
<p>통계학에서 역시 많이 쓰이는 방법론으로, 귀납법에 근거한 결론 도출 방식을 이용한다. 간단히 말하면, 확률을 확률변수가 갖는 sample space에 대한 특정 사건이 발생한 사건의 비로 보는 것 (equally likely라고 가정)이 아니라 내가 설정한 가설에 대한 신뢰도로 바라보는 것이다. 따라서, 사전에 이미 알고있는 데이터가 있어 사전 확률 (prior probability)을 알고있고 이 사전 확률이 추가적인 data에 의해 조정되는 사후 확률 (posterior probability)이 계산된다. 이때 사전 확률자체보다는 추가적인 data와 사후 확률을 계산하는데 사용되는 likelihood의 타당성이 더 중요하다. 더 구체적인 내용은 Bayesean statistics에 기본이 되는 Bayes’ rule에서 살펴보기로 한다.</p>
<p><a href="https://www.redjournal.org/article/S0360-3016(21)03256-9/fulltext">source: Frequentism vs Bayeseanism</a></p>
</section>
</section>
</section>
<section id="bayes-rule-formula" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="bayes-rule-formula"><span class="header-section-number">1.2</span> Bayes’ Rule Formula</h3>
<div id="thm-Bayes" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 </strong></span><span id="eq-Bayes_rule"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(A%7CB)&amp;=%5Cfrac%7BP(B%7CA)P(A)%7D%7BP(B)%7D%5C%5C%0A%20%20%20%20%20%20&amp;=%5Cfrac%7BP(B%7CA)P(A)%7D%7BP(B%7CA)P(A)+P(B%7C%5Coverline%20A)P(%5Coverline%20A)%7D%0A%5Cend%7Baligned%7D%0A%5Ctag%7B1%7D"></span></p>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(A%7CB)">: posterior probability, B(data)가 주어졌을때 가설 A에 대한 신뢰도</li>
<li><img src="https://latex.codecogs.com/png.latex?P(A)">: prior probability, 가설 A에대한 신뢰도</li>
<li><img src="https://latex.codecogs.com/png.latex?P(B%7CA)">: likelihood, 가설 A가 주어졌을때 B(Data)가 발생할 신뢰도</li>
<li><img src="https://latex.codecogs.com/png.latex?P(B)">: marginal probability, Data의 신뢰도</li>
</ul>
<p>Equation&nbsp;1 의 두 분째 등식을 이해하기 위해선, Law of Total Probability (전 확률 법칙) 또는 Total Probability Rule (전 확률 정리)을 이해해야한다.</p>
</section>
<section id="total-probability-rule" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="total-probability-rule"><span class="header-section-number">1.3</span> Total Probability Rule</h3>
<div id="thm-general" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2 </strong></span>Let <img src="https://latex.codecogs.com/png.latex?A_1,%20A_2,%20...,%20A_k"> be a set of mutually exclusive and exhaustive events. Let <img src="https://latex.codecogs.com/png.latex?A"> be a event and a partition of sample space <img src="https://latex.codecogs.com/png.latex?%5COmega">, then</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(B)=%5Csum_%7Bi=1%7D%5E%7Bn%7DP(B%7CA_i)P(A_i)%0A"></p>
</div>
<div class="columns">
<div class="column" style="width:50%;">
<div id="fig-two_events" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_bayes_rule/law of total probability2.PNG" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Law of Total Probability Example - Two Events</figcaption><p></p>
</figure>
</div>
<p><a href="https://byjus.com/maths/total-probability-theorem/">Source: Law of ToTal Probability with Proof</a></p>
</div><div class="column" style="width:50%;">
<div id="fig-multiple_events" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_bayes_rule/law of total probability.PNG" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Law of Total Probability Example - Multiple Events</figcaption><p></p>
</figure>
</div>
<p><a href="https://www.youtube.com/watch?v=8odFouBR2wE">Source: MIT RES.6-012 Introduction to Probability, Spring 2018 - Youtube</a></p>
</div>
</div>
<p><span id="eq-total_conditional_probability"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(B)&amp;=P(B%5Ccap%20A)%20+%20P(B%5Ccap%20%5Coverline%20A)%5C%5C%0A%20%20%20%20&amp;=P(B%5Ccap%20A)%20+%20P(B%5Ccap%20%5Coverline%20A)%5C%5C%0A%20%20%20%20&amp;=P(B%7CA)P(A)+P(B%7C%5Coverline%20A)P(%5Coverline%20A)%5C%5C%0AP(A%5Ccap%20B)&amp;=P(B%7CA)P(A)=P(A%7CB)P(B)%5C%5C%0A%5Ctherefore%0AP(A%7CB)&amp;=%5Cfrac%7BP(A%20%5Ccap%20B)%7D%7BP(B)%7D%5C%5C%0A%20%20%20%20%20%20&amp;=%5Cfrac%7BP(B%7CA)P(A)%7D%7BP(B%7CA)P(A)+P(B%7C%5Coverline%20A)P(%5Coverline%20A)%7D%0A%5Cend%7Baligned%7D%0A%5Ctag%7B2%7D"></span></p>
<p>Law of total probability 를 이용하여 Bayes’ rule이 Equation&nbsp;2 와 같이 변형되었다. 최종식을 보면 좀 더 직관적인 해석이 가능해지는데 P(B) 가 A와의 교집합 확률의 총합이 되면서 분자가 그 일부가 되는 비율의 개념으로 해석될 수 있다. Figure&nbsp;1 를 보면 <img src="https://latex.codecogs.com/png.latex?P(A%7CB)=%5Cfrac%7BP(B%20%5Ccap%20A)%7D%7BP(B)%7D=%5Cfrac%7BP(B%20%5Ccap%20A)%7D%7BP(B%20%5Ccap%20A)+P(B%20%5Ccap%20%5Coverline%20A)%7D"> 로 표현되는 것을 볼 수 있다. 그 것을 조금 더 일반화 한 경우는 Figure&nbsp;2 를 참고하여 유추할 수 있다.</p>
</section>
<section id="notation" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="notation"><span class="header-section-number">1.4</span> Notation</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(A%7CB)&amp;=%5Cfrac%7BP(B%7CA)P(A)%7D%7BP(B%7CA)P(A)+P(B%7C%5Coverline%20A)P(%5Coverline%20A)%7D%5C%5C%0AP(%5Ctheta%7Cx)&amp;=%5Cfrac%7BP(x%7C%5Ctheta)P(%5Ctheta)%7D%7BP(x%7C%5Ctheta)P(%5Ctheta)+P(x%7C%5Coverline%20%5Ctheta)P(%5Coverline%20%5Ctheta)%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>많은 참고 문헌에서 사건 A, B를 모수, <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 와 data, <img src="https://latex.codecogs.com/png.latex?x"> 로 표현하기도 한다. 즉, data <img src="https://latex.codecogs.com/png.latex?x"> 가 주어졌을 때 모수 <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 가 발생할 확률이 data에 의해서 update된다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(%5Ctheta)">
<ul>
<li>prior probability density function</li>
<li>데이터없이 초기에 임시로 부여된 모델 또는 모수의 확률</li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?P(x%7C%5Ctheta)">
<ul>
<li>likelihood</li>
<li>초기에 임시로 부여된 모델 또는 모수가 주어졌을 때 data x가 발생할 우도</li>
<li>좀 더 파격적으로 해석하면, 초기에 임시로 부여된 모델 또는 모수가 data x에 들어맞을(or fittng) 확률</li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?P(x)">
<ul>
<li>marginal proability</li>
<li>데이터가 발생할 확률로 <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 와 상관없기 때문에 상수로 취급한다.</li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?P(%5Ctheta%7Cx)">
<ul>
<li>posterior probability density function</li>
<li>data가 주어졌을 때 모델 또는 모수의 확률</li>
<li>Bayes’ Rule에 의한 최적화에서 다음 최적화 iteration에서 Prior로 쓰인다.</li>
</ul></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?P(x)"> 는 상수이기 때문에 생략가능 하여 아래의 식과 같이 정리 할 수 있다. <img src="https://latex.codecogs.com/png.latex?%0AP(%5Ctheta%7Cx)%5Cpropto%20P(x%7C%5Ctheta)P(%5Ctheta)%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?P(%5Ctheta%7Cx)"> 는 <img src="https://latex.codecogs.com/png.latex?P(x%7C%5Ctheta)P(%5Ctheta)"> 에만 영향을 받는 것을 볼 수 있다.</p>
</section>
<section id="예제" class="level3" data-number="1.5">
<h3 data-number="1.5" class="anchored" data-anchor-id="예제"><span class="header-section-number">1.5</span> 예제</h3>
<p>펭수는 평소 관심이 있던 코니에게서 초콜릿을 선물받았다. 펭수는 초콜릿을 준 코니가 나를 좋아하는지가 궁금하기 때문에 이것을 통계적으로 계산해본다.</p>
<p>펭수는 먼저 다음 두 상황을 가정한다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(like)=0.5">
<ul>
<li>코니가 펭수를 좋아한다는 가설의 신뢰도는 반 반이다. 즉, 정보없는 상태에서의 펭수의 prior probability.</li>
<li>0.5로 설정한 이유는 다음의 원리를 따랐다. <strong>The Principle of Insufficient Reason(이유불충분의 원리- 하나의 사건을 기대할만한 어떤 이유가 없는 경우에는 가능한 모든 사건에 동일한 확률을 할당해야 한다는 원칙).</strong></li>
</ul></li>
<li><img src="https://latex.codecogs.com/png.latex?P(choco)">
<ul>
<li>초콜릿을 받았다라는 data가 발생할 신뢰도</li>
</ul></li>
</ul>
<p><strong>펭수는 코니에게 자신을 좋아하는지 알 길이 없으니 사람이 호감이 있을 때에 대한 초콜릿 선물 데이터를 조사</strong>하기 시작한다. 즉, 호감의 근거는 초콜릿으로 한정했고 초콜릿 선물 방식의 불확실성을 호감으로 설명하는 문헌을 찾기 시작했다. 그리고 펭수는 도서관에 있는 일반인 100명을 대상으로 초콜릿과 호감과의 관계를 연구한 <em>초콜릿과 호감</em> 논문을 통해 두 가지 정보를 알게된다.</p>
<ul>
<li>일반적으로, 어떤 사람이 상대방에게 호감이 있어서 초콜릿을 줄 확률은 <img src="https://latex.codecogs.com/png.latex?40%25"> 이다. 즉, <img src="https://latex.codecogs.com/png.latex?P(choco%7Clike)=0.4"></li>
<li>일반적으로, 어떤 사람이 상대방에게 호감이 없지만 <em>예의상</em> 초콜릿을 줄 확률은 <img src="https://latex.codecogs.com/png.latex?30%25"> 이다. 즉, <img src="https://latex.codecogs.com/png.latex?P(choco%7C%5Coverline%7Blike%7D)=0.3"></li>
<li>위의 2가지 정보로 유추 가능한 정보
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(%5Coverline%7Bchoco%7D%7Clike)=0.6"></li>
<li><img src="https://latex.codecogs.com/png.latex?P(%5Coverline%7Bchoco%7D%7C%5Coverline%7Blike%7D)=0.7"></li>
</ul></li>
<li>초콜릿에 관한 조사를 토대로 얻은 4가지 정보로 유추할 수 있는 정보
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(choco%7Clike)=0.4">: like를 받고 있는 50명 중 <img src="https://latex.codecogs.com/png.latex?40%25"> 인 20명은 초콜릿을 받는다.</li>
<li><img src="https://latex.codecogs.com/png.latex?P(%5Coverline%7Bchoco%7D%7Clike)=0.6">: like를 받고 있는 50명 중 <img src="https://latex.codecogs.com/png.latex?60%25"> 인 30명은 초콜릿을 받지 못한다.</li>
<li><img src="https://latex.codecogs.com/png.latex?P(choco%7C%5Coverline%7Blike%7D)=0.3">: like를 받지 않는 50명 중 <img src="https://latex.codecogs.com/png.latex?30%25"> 인 15명은 예의상 준 초콜릿을 받는다.</li>
<li><img src="https://latex.codecogs.com/png.latex?P(%5Coverline%7Bchoco%7D%7C%5Coverline%7Blike%7D)=0.7">: like를 받지 않는 50명 중 <img src="https://latex.codecogs.com/png.latex?70%25"> 인 35명은 초콜릿을 받지 못한다.</li>
</ul></li>
</ul>
<p>펭수의 관점으로 정보를 재분류</p>
<ul>
<li>펭수가 궁금한 정보
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(like%7Cchoco)=?">, posterior probability</li>
</ul></li>
<li>펭수가 가정한 정보
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(like)=0.5">, prior probability by <strong>The Principle of Insufficient Reason</strong></li>
</ul></li>
<li>펭수가 조사한 정보
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(choco%7Clike)=0.4">, likelihood</li>
<li><img src="https://latex.codecogs.com/png.latex?P(choco)">: marginal probability
<ul>
<li><img src="https://latex.codecogs.com/png.latex?P(choco)=P(choco%7Clike)+P(choco%7C%5Coverline%7Blike%7D)=%5Cfrac%7B20+15%7D%7B100%7D=0.35"></li>
</ul></li>
</ul></li>
</ul>
<p>위의 정리한 정보를 Bayes’ rule에 대입하면,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(like%7Cchoco)=%5Cfrac%7BP(choco%7Clike)%5Ctimes%20P(like)%7D%7BP(choco)%7D=%5Cfrac%7B0.4%5Ctimes%200.5%7D%7B0.35%7D=0.57%0A"></p>
<p>펭수의 prior probability(<img src="https://latex.codecogs.com/png.latex?P(A)=0.5">)가 posterior probability(<img src="https://latex.codecogs.com/png.latex?P(A%7CB)=0.57">)로 업데이트 될 수 있다. <em>초콜릿과 호감</em> 논문을 읽고 코니가 자신을 좋아할 확률이 높아진 것에 대해 기대감을 얻은 용기가 없는 펭수는 100명 보다 더 많은 독립적인 사람들로 실험한 논문을 찾아 다시 자신의 업데이트 된 사전 확률을 계속해서 업데이트할 생각이다. 그리고 자신의 사전 확률을 추가적인 데이터를 갖고 사후 확률로 계속해서 업데이트시켜 정확한 확률을 구한다.</p>
<p>위의 예시는 <a href="https://www.youtube.com/watch?v=Y4ecU7NkiEI&amp;t=29s">영상 자료: 초콜릿을 준 코니의 마음</a>을 시청하고 영감을 얻은 슬기로운 통계생활 tistory에 있는 <a href="https://statisticsplaybook.tistory.com/30">Source: 베이즈 정리(Bayes’ rule) 완벽히 정리하기 슬기로운 통계생활 블로그</a>를 요약 및 약간의 각색을 한 것이다.</p>
</section>
</section>
<section id="generalized-bayes-rule" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="generalized-bayes-rule"><span class="header-section-number">2</span> Generalized Bayes’ Rule</h2>
<div id="thm-general" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 </strong></span>Let <img src="https://latex.codecogs.com/png.latex?A_1,%20A_2,%20...,%20A_k"> be a set of mutually exclusive and exhaustive events. Let <img src="https://latex.codecogs.com/png.latex?A"> be a event, then</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(A_i%7CB)=%5Cfrac%7BP(B%7CA_i)P(A_i)%7D%7B%5Csum_%7Bj=1%7D%5E%7Bk%7DP(B%7CA_i)P(A_i)%7D%0A"></p>
</div>
</section>
<section id="maximum-a-posterior-estimation-map" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="maximum-a-posterior-estimation-map"><span class="header-section-number">3</span> Maximum a Posterior Estimation (MAP)</h2>
<p>Maximum a posterior estimation는 statistical estimation methods의 큰 기둥 중 하나인 maximum likelihood estimation과 더불어 parameter <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 를 추정하는데 많이 사용되는 방법론이다. 사후 확률 밀도 함수 <img src="https://latex.codecogs.com/png.latex?f(x%7C%5Ctheta)"> 또는 <img src="https://latex.codecogs.com/png.latex?P(x%7C%5Ctheta)"> 를 최대화하는 <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 의 추정치를 구하는 방법이며 아래와 같은 argument로 표현할 수 있다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Chat%7B%5Ctheta%7D&amp;=%5Carg%20%5Cmax_%7B%5Ctheta%7D%5Cfrac%7Bf(x%7C%5Ctheta)f(%5Ctheta)%7D%7B%5Cint%20f(x%7C%5Ctheta)f(%5Ctheta)%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20&amp;%5Cpropto%5Carg%20%5Cmax_%7B%5Ctheta%7Df(x%7C%5Ctheta)f(%5Ctheta)%0A%5Cend%7Baligned%7D%0A"></p>
<p>최대 우도 추정량과 달리 최대 사후 추정량에는 최대화하는 식에 사전 확률이 추가되어 있는 것을 볼 수 있다. 그러므로 분자 부분인 <img src="https://latex.codecogs.com/png.latex?f(x%7C%5Ctheta)f(%5Ctheta)"> 만을 최대화 한다. 분모 부분인 <img src="https://latex.codecogs.com/png.latex?%5Cint%20f(x%7C%5Ctheta)f(%5Ctheta)"> nomarlizing penalty 또는 constant로 간주한다. 여기서 <img src="https://latex.codecogs.com/png.latex?P(%5Ctheta)"> 초기 가정치 인데 아무렇게나 설정하기 보다는 good estimate로 설정해야 통계학자들로부터의 공격을 최소화시킬 수 있다. MAP는 나이브 베이즈의 알고리즘의 핵심이다.</p>
<p>[참고] 최대 우도 추정량 <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Chat%7B%5Ctheta%7D=%5Carg%20%5Cmax_%7B%5Ctheta%7DL(x%7C%5Ctheta)=%5Carg%20%5Cmax_%7B%5Ctheta%7D%5CPi_%7Bi=1%7D%5E%7Bn%7Df(x%7C%5Ctheta)%0A%5Cend%7Baligned%7D%0A"></p>
</section>
<section id="naive-bayes-classifier" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="naive-bayes-classifier"><span class="header-section-number">4</span> Naive Bayes Classifier</h2>
<p>Naive Bayes에 대한 구체적인 글은 <a href="../../../../../docs/blog/posts/ML/2023-02-06_naive_bayes/index.html">다른 블로그</a>에 소개한다. Naive Bayes는 Bayes’ Rule을 이용해 <img src="https://latex.codecogs.com/png.latex?%5Ctheta"> 를 최적화 시킨다. Naive Bayes의 Naive는 features 또는 explanotry variables이 서로 conditionally indepdent라고 가정한 것에서 이름 붙여졌다.</p>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<p>Bayes’ rule provides a formula how to calculate <img src="https://latex.codecogs.com/png.latex?P(A%7CB)"> if <img src="https://latex.codecogs.com/png.latex?P(B%7CA)">, <img src="https://latex.codecogs.com/png.latex?P(B%7C%5Coverline%7BA%7D)">, <img src="https://latex.codecogs.com/png.latex?P(A)"> are available</p>
</div>
</div>
<section id="blog-guide-map-link" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">5</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_bayes_rule/index.html</guid>
  <pubDate>Sat, 04 Feb 2023 15:00:00 GMT</pubDate>
  <media:content url="kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_bayes_rule/law%20of%20total%20probability2.PNG" medium="image"/>
</item>
<item>
  <title>Conditional Probability</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_conditional_probability/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="conditional-probability" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="conditional-probability"><span class="header-section-number">1</span> Conditional Probability</h2>
<p>조건부 확률은 조건이 주어졌을 때 한 사건이 발생할 확률이며 하나의 사건이 다른 사건에 영향을 미쳐 그 확률값이 달라지는 것을 의미한다. 즉, 한 사건, B가 조건으로 주어지고 다른 사건A가 발생할 확률 <img src="https://latex.codecogs.com/png.latex?P(A%7CB)"> 가 사건 A가 발생할 확률 <img src="https://latex.codecogs.com/png.latex?P(A)"> 와 다르다는 것을 의미한다 (<img src="https://latex.codecogs.com/png.latex?P(A)%5Cnot=P(A%7CB)">).</p>
<p>예를 들어, 주사위를 던질 때 특정 주사위의 눈 (1~6)이 나올 확률은 <strong><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B6%7D"> 으로 같다 (eqaully likely)라고 가정할 때</strong> 주사위의 눈이 나올 수 있는 모든 집합 표본 공간 <img src="https://latex.codecogs.com/png.latex?S"> 에 대한 특정 주사위의 눈이 나오는 사건 <img src="https://latex.codecogs.com/png.latex?A"> 가 발생할 확률은 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bn(A)%7D%7Bn(S)%7D"> 와 같다. 다시 말해서, 조건부 확률은 2개 이상의 사건에 대해서 하나의 사건이 다른 사건이 발생할 확률에 영향을 미치는 개념을 말한다. 가장 간단한 2개의 사건 <img src="https://latex.codecogs.com/png.latex?A,%20B"> 에 대해서 살펴볼 때 조건부 확률은 다음과 (Equation&nbsp;1)과 같다.</p>
<div id="def-conditional_probability" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 1 </strong></span>If <img src="https://latex.codecogs.com/png.latex?A"> and <img src="https://latex.codecogs.com/png.latex?B"> are events in sample space <img src="https://latex.codecogs.com/png.latex?S">, and <img src="https://latex.codecogs.com/png.latex?P(B)%3E0">, then the conditional probability of <img src="https://latex.codecogs.com/png.latex?A"> given <img src="https://latex.codecogs.com/png.latex?B">, written <img src="https://latex.codecogs.com/png.latex?P(A%7CB)">, is <span id="eq-conditional_probability"><img src="https://latex.codecogs.com/png.latex?%0AP(A%7CB)=%5Cfrac%7BP(A%5Ccap%20B)%7D%7BP(B)%7D%0A%5Ctag%7B1%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?0%20%3C%20P(B)%20%5Cle%201"></p>
</div>
<p>위의 정의에서 볼 수 있듯이, sample space <img src="https://latex.codecogs.com/png.latex?S"> 가 B로 update 되어 P(B|B)=1이 되고 사건 A의 outcome이 B에 관해서 조정된다.</p>
<p>예를 들어, 사건 <img src="https://latex.codecogs.com/png.latex?A"> 는 주사위의 눈이 1이 나오는 사건, 사건 <img src="https://latex.codecogs.com/png.latex?B"> 는 주사위의 눈이 3 이하가 나오는 사건이라고 했을 때 사건 <img src="https://latex.codecogs.com/png.latex?A"> 가 사건 <img src="https://latex.codecogs.com/png.latex?B"> 의 부분 집합이므로 두 사건이 서로 독립이 아니다. 즉, $ AB $ 사건에서 주사위의 눈이 1 나오는 경우 밖에 없다. 이렇게 사건 <img src="https://latex.codecogs.com/png.latex?B"> 가 주어졌을 때 혹은 <img src="https://latex.codecogs.com/png.latex?B"> 가 먼저 일어났을 때 1이 나올 확률은 달라지게 된다. 즉, <img src="https://latex.codecogs.com/png.latex?A"> 의 sample space = <img src="https://latex.codecogs.com/png.latex?%5C%7B1,2,3,4,5,6%5C%7D"> 이고 <img src="https://latex.codecogs.com/png.latex?A%7CB"> 의 sample space = <img src="https://latex.codecogs.com/png.latex?%5C%7B1,2,3%5C%7D"> 이 되기 때문에 <img src="https://latex.codecogs.com/png.latex?P(A)%20%5Cnot=%20P(A%7CB)"> 가 된다.</p>
<p>좀 더 구체적으로 계산을 하게 되면, <img src="https://latex.codecogs.com/png.latex?P(A)=%5Cfrac%7B1%7D%7B6%7D,%20P(B)=%5Cfrac%7B3%7D%7B6%7D,%20P(A%5Ccap%20B)=%5Cfrac%7B1%7D%7B6%7D"> 일 때,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(A%7CB)=%5Cfrac%7BP(A%5Ccap%20B)%7D%7BP(B)%7D=%5Cfrac%7B%5Cfrac%7B1%7D%7B6%7D%7D%7B%5Cfrac%7B3%7D%7B6%7D%7D=%5Cfrac%7B1%7D%7B3%7D%0A"></p>
<p>인 것을 알 수 있다.</p>
<div id="def-independence" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 2 </strong></span>Independence <span id="eq-independence"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(A)&amp;=P(A%7CB)%5C%5C%0AP(B)&amp;=P(B%7CA)%5C%5C%0A%5Cend%7Baligned%7D%0A%5Ctag%7B2%7D"></span></p>
<p>A and B are independent.</p>
</div>
<p>사건 A, B가 독립일 때 두 두사건이 동시에 발생할 확률은 <img src="https://latex.codecogs.com/png.latex?P(A%20%5Ccap%20B)=P(A)P(B)=P(B)P(A)"> 이다. 반면에, 두 사건이 독립이 아니라면 Equation&nbsp;1 을 이용하여 <img src="https://latex.codecogs.com/png.latex?P(A%20%5Ccap%20B)"> 는 <img src="https://latex.codecogs.com/png.latex?P(B%7CA)P(A)"> 또는 <img src="https://latex.codecogs.com/png.latex?P(A%7CB)P(B)"> 로 표현될 수 있다.독립일 때 동시에 발생할 확률에서 <img src="https://latex.codecogs.com/png.latex?P(A)"> 가 B를 조건으로 봤을 때 동시에 발생할 확률 <img src="https://latex.codecogs.com/png.latex?P(A%7CB)"> 로 바뀐 것을 볼 수 있다.</p>
<div id="thm-multiplicativeRule" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 </strong></span>Multiplicative Rule A,B dependent <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(A%5Ccap%20B)&amp;=P(A)P(B%7CA)%0A%5Cend%7Baligned%7D%0A"></p>
<p>A,B independent <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(A%5Ccap%20B)&amp;=P(A)P(B)%0A%5Cend%7Baligned%7D%0A"></p>
</div>
<div id="thm-generalMultiplicativeRule" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2 </strong></span>Generalized multiplicative rule $$</p>
<p>$$</p>
</div>
<div id="thm-totalProbabilityRule" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 </strong></span>Total Probability Rule $$</p>
<p>$$</p>
</div>
</section>
</div>
</div>
<section id="blog-guide-map-link" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">2</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_conditional_probability/index.html</guid>
  <pubDate>Sat, 04 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Probability</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_probability/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="terms" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="terms"><span class="header-section-number">1</span> Terms</h2>
<ul>
<li>experiment(실험): 연구 수행 방식.</li>
<li>trial (시행): 연구 실험 시행.</li>
<li>sample space(표본 공간, (<img src="https://latex.codecogs.com/png.latex?%5Ctext%7BS%20or%20%7D%20%5COmega">): 실험의 가능한 모든 결과의 모음 또는 근원 사상의 집합.</li>
<li>element (근원 사상, <img src="https://latex.codecogs.com/png.latex?%5Comega">): 표본 공간의 원소.</li>
<li>event (사건, <img src="https://latex.codecogs.com/png.latex?E">): 근원 사상의 집합 또는 표본 공간의 부분 집합.</li>
</ul>
</section>
<section id="notations" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="notations"><span class="header-section-number">2</span> Notations</h2>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20A"> : <img src="https://latex.codecogs.com/png.latex?%5Comega"> is an element of a set A</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cnot%5Cin%20A"> : <img src="https://latex.codecogs.com/png.latex?%5Comega"> is not an element of a set A</li>
<li><img src="https://latex.codecogs.com/png.latex?B%20%5Csubset%20A"> : B is a subset of A, which means if <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20B">, then <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20A"></li>
<li><img src="https://latex.codecogs.com/png.latex?A%20=%20B"> : <img src="https://latex.codecogs.com/png.latex?B%20%5Csubset%20A">, <img src="https://latex.codecogs.com/png.latex?A%20%5Csubset%20B"></li>
<li><img src="https://latex.codecogs.com/png.latex?B%20%5Cnot%5Csubset%20A"> : B is not a subset of A, which means if <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20B">, then <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cnot%5Cin%20A"></li>
</ul>
</section>
<section id="overview" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="overview"><span class="header-section-number">3</span> Overview</h2>
<p>확률은 우연 (또는 가능성)과 불확실성에 대한 연구이다. 그 이론은 집합 이론을 기반으로 한다. 고전 확률은 가능성 조합 게임, 이론 오류와 같은 도박과 같다. 확률은 통계학, 경제학, 연산연구, 심리학, 생물학, 역학, 의학 등에 사용된다. 확률을 이해하기 위해 미적분학과 집합론의 지식이 요구되며 관련 학문은 ​​해석학, 측도론, 확률과정 등이 있다. 확률을 정의하려면 사건 수집에 대한 규칙성이 필요하다.</p>
</section>
<section id="probability" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="probability"><span class="header-section-number">4</span> Probability</h2>
<ul>
<li>확률은 사건이 발생할 가능성을 나타낸다.</li>
<li>고전적 정의</li>
</ul>
<div id="def-probability" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 1 </strong></span>The probability of event A is the sum of the probabilities assigned to all sample points in event A. Therefore, <img src="https://latex.codecogs.com/png.latex?0%20%5Cle%20P(A)%20%5Cle%201,%20P(%5Cemptyset)=0,%20P(%5COmega)=1">. In addition, if <img src="https://latex.codecogs.com/png.latex?A_1,%20A_2,%20A_3,%20..."> are mutually exclusive,</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP(A_1%20%5Ccup%20A_2%20%5Ccup%20A_3%20%5Cdots)=P(A_1)%20+%20P(A_2)%20+%20P(A_3)%20+%20%5Cdots%20=%5Csum_%7Bi=1%7D%5E%7B%5Cinfty%7DP(A_i)%0A"></p>
</div>
<p>위의 정의에서 <em>the probabilities assigned to all sample points in event A</em> 의 표현은 사건 A안에 있는 element의 가중치로 해석할 수 있다. 즉, 쉽게 말하면, 확률은 표본 공간, sample space <img src="https://latex.codecogs.com/png.latex?%5COmega"> 의 원소 (element) <img src="https://latex.codecogs.com/png.latex?%5Comega"> 에 할당된 가중치를 더한 것이다.</p>
<p>예를 들어, 주사위 모양을 어떤식으로든 조작해 홀수가 짝수보다 2배 더 많이 발생하게끔 만들어 1 번 던질 때 3 보다 작은 수가 나올 사건을 A라고 하면 <img src="https://latex.codecogs.com/png.latex?%5COmega=%5C%7B1,2,3,4,5,6%5C%7D"> 이고 각 홀수 원소에 가중치가 2배씩 붙기 때문에 홀수 눈이 발생할 확률은 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B2x%7D%7B2x+x+2x+x+2x+x%7D=%5Cfrac%7B2%7D%7B9%7D">, 반면에, 짝수의 눈이 나올 확률은 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bx%7D%7B2x+x+2x+x+2x+x%7D=%5Cfrac%7B1%7D%7B9%7D"> 이다. 이 때 확률은 위의 정의를 따라야 하므로</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?0%5Cle%20P(evenNumber)=%5Cfrac%7B2%7D%7B9%7D,%20P(oddNumber)=%5Cfrac%7B1%7D%7B9%7D%5Cle%201"> 이고</li>
<li><img src="https://latex.codecogs.com/png.latex?P(%5COmega=%5C%7B1,2,3,4,5,6%5C%7D)=P(evenNumbers)+P(oddNumbers)=1"></li>
</ul>
<p>이므로 확률이라고 할 수있다.</p>
<ul>
<li>그러므로 <img src="https://latex.codecogs.com/png.latex?P(A=%7B1,2%7D)=P(1)+P(2)=%5Cfrac%7B2%7D%7B9%7D+%5Cfrac%7B1%7D%7B9%7D=%5Cfrac%7B3%7D%7B9%7D"> 이다.</li>
</ul>
<div id="thm-eqaullyLikely" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 </strong></span>Countable sample space <img src="https://latex.codecogs.com/png.latex?%5COmega"> consists of <img src="https://latex.codecogs.com/png.latex?N"> distinctive equally likely elements (i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?n(S)=N">), and an event <img src="https://latex.codecogs.com/png.latex?A"> is a subset of the sample space. The event A consists of <img src="https://latex.codecogs.com/png.latex?n"> distinctive equally likely elements (i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?n(A)=n">). Then <img src="https://latex.codecogs.com/png.latex?%0AP(A)=%5Cfrac%7Bn%7D%7BN%7D%0A"></p>
</div>
<p>element가 오직 동일한 확률로 발생할 때에만 (equally likely), 확률은 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bn(A)%7D%7Bn(%5COmega%20%5Cspace%20or%20%5Cspace%20S)%7D"> 의 비율(proportion)로 표현될 수 있다.</p>
<p>예를 들어, 주사위의 눈이 3 보다 작은 수가 나올 사건을 A라고 하면 <img src="https://latex.codecogs.com/png.latex?P(A)=%20%5Cfrac%7Bn(A)%7D%7Bn(S)%7D=%5Cfrac%7Bn(%5C%7B1,2%5C%7D)%7D%7Bn(%5C%7B1,2,3,4,5,6%5C%7D)%7D=%5Cfrac%7B2%7D%7B6%7D"> 가 된다.</p>
<div id="thm-inftyEquallyLikely" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2 </strong></span>If in <img src="https://latex.codecogs.com/png.latex?N"> identical and independent repeated experiments, an event <img src="https://latex.codecogs.com/png.latex?A"> happens <img src="https://latex.codecogs.com/png.latex?n"> times, the the probability of <img src="https://latex.codecogs.com/png.latex?A"> is defined by <img src="https://latex.codecogs.com/png.latex?%0AP(A)=%5Clim_%7BN%5Cto%5Cinfty%7D%5Cfrac%7Bn%7D%7BN%7D%0A"></p>
</div>
<div id="thm-basic" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 </strong></span>Basic probability theorem: the complement and additive rule. <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AP(E%5Ec)&amp;=1-P(E)%20%5C%5C%0AP(E_1%20%5Ccup%20E_2)&amp;=%20P(E_1)%20+%20P(E_2)%20-%20P(E_1%20%5Ccap%20E_2)%20%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?E_1"> and <img src="https://latex.codecogs.com/png.latex?E_2"> are mutually exclusive.</p>
</div>
<div id="thm-additiveRule" class="theorem">
<p><span class="theorem-title"><strong>Theorem 4 </strong></span>&nbsp;</p>
Generalized additive rule $$
<img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0A%0A%5Cend%7Baligned%7D">
<p>$$</p>
</div>
<p>나머지는 확률 이론 서적을 살펴 보길 바란다.</p>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<section id="terms-1" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="terms-1"><span class="header-section-number">5</span> Terms</h2>
<ul>
<li>experiment: the way carry out a study, study design.</li>
<li>trial: study experiment trial.</li>
<li>sample space (<img src="https://latex.codecogs.com/png.latex?%5Ctext%7BS%20or%20%7D%20%5COmega">): the set of all possible elements (i.e.&nbsp;the collection of all possible outcomes of an experiment).</li>
<li>element (<img src="https://latex.codecogs.com/png.latex?%5Comega">): each outcome of sample space, it is also called ‘sample point’.</li>
<li>event (<img src="https://latex.codecogs.com/png.latex?E">): a set of sample points or outcomes or a subset of sample space.</li>
</ul>
</section>
<section id="notations-1" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="notations-1"><span class="header-section-number">6</span> Notations</h2>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20A"> : <img src="https://latex.codecogs.com/png.latex?%5Comega"> is an element of a set A</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cnot%5Cin%20A"> : <img src="https://latex.codecogs.com/png.latex?%5Comega"> is not an element of a set A</li>
<li><img src="https://latex.codecogs.com/png.latex?B%20%5Csubset%20A"> : B is a subset of A, which means if <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20B">, then <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20A"></li>
<li><img src="https://latex.codecogs.com/png.latex?A%20=%20B"> : <img src="https://latex.codecogs.com/png.latex?B%20%5Csubset%20A">, <img src="https://latex.codecogs.com/png.latex?A%20%5Csubset%20B"></li>
<li><img src="https://latex.codecogs.com/png.latex?B%20%5Cnot%5Csubset%20A"> : B is not a subset of A, which means if <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cin%20B">, then <img src="https://latex.codecogs.com/png.latex?%5Comega%20%5Cnot%5Cin%20A"></li>
</ul>
</section>
<section id="overview-1" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="overview-1"><span class="header-section-number">7</span> Overview</h2>
<p>Probability is on study of chance and uncertainty. Its theory builds on set theory. Classic probability is like a gambling of combinatorial games of chance, theory errors. Probability is used in statistics, economics, operation research, psychology, biology, epidemiology, medicine, etc. The prerequisite for probability is calculus and set theory, and the related study is real analysis, measure theory, and stochastic process. To define probability, some regularity on the collection of events is required.</p>
</section>
<section id="probability-1" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="probability-1"><span class="header-section-number">8</span> Probability</h2>
<ul>
<li>probability shows the possibility of the occurrence of an event.</li>
<li>classic definition ::: {#def-classic}</li>
</ul>
<p>Countable sample space <img src="https://latex.codecogs.com/png.latex?%5COmgega"> consists of <img src="https://latex.codecogs.com/png.latex?N"> distinctive equally likely elements (i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?n(S)=N">), and an event <img src="https://latex.codecogs.com/png.latex?A"> is a subset of the sample space. The event A consists of <img src="https://latex.codecogs.com/png.latex?n"> distinctive equally likely elements (i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?n(A)=n">). Then <img src="https://latex.codecogs.com/png.latex?%0AP(A)=%5Cfrac%7Bn%7D%7BN%7D%0A"></p>
</section>
</div>
<div id="thm-classic" class="theorem">
<p><span class="theorem-title"><strong>Theorem 5 </strong></span>If in <img src="https://latex.codecogs.com/png.latex?N"> identical and independent repeated experiments, an event <img src="https://latex.codecogs.com/png.latex?A"> happens <img src="https://latex.codecogs.com/png.latex?n"> times, the the probability of <img src="https://latex.codecogs.com/png.latex?A"> is defined by <img src="https://latex.codecogs.com/png.latex?%0AP(A)=%5Clim_%7BN%5Cto%5Cinfty%7D%5Cfrac%7Bn%7D%7BN%7D%0A"></p>
</div>
<ul>
<li>The case of the sample space consisting of <img src="https://latex.codecogs.com/png.latex?N"> distinctive not equally likely elements,</li>
<li>The case of the uncountable sample space</li>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>
</ul>
<p>:::</p>
</div>
<section id="blog-guide-map-link" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">9</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-02-05_probability/index.html</guid>
  <pubDate>Sat, 04 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Differentiation - Univariabe Function</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/differentiation/2023-02-04_uni_derivative.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>미분은 최적화 문제를 푼다는 의미는 목적함수를 최적화한다는 말이고 그 과정에서 대부분의 경우 미분을 사용하여 상황에 맞게 목적함수의 극소값이나 극대값을 구하게 된다. 예를 들어, 목적 함수 <img src="https://latex.codecogs.com/png.latex?f(x;w)"> 가 매개변수 또는 가중치 <img src="https://latex.codecogs.com/png.latex?w"> 에 의해 그 모양이 결정되므로 <img src="https://latex.codecogs.com/png.latex?f(x;w)"> 를 최소화하는 최적화 문제를 풀고 싶을 때 <img src="https://latex.codecogs.com/png.latex?f(x;w)"> 를 cost function (=<img src="https://latex.codecogs.com/png.latex?f(x;w)"> 의 함수) 또는 loss function (=<img src="https://latex.codecogs.com/png.latex?f(x;w)"> 의 함수) 으로 잘 정의를 한 후 cost function 또는 loss function을 최소화하는 매개변수 <img src="https://latex.codecogs.com/png.latex?w"> 를 구해야한다. 대부분의 경우, Machine Learning (Deep Learning 포함) 에서 미분은 error를 줄이기 위해 사용한다.</p>
<p>목적 함수 <img src="https://latex.codecogs.com/png.latex?f(x;w)"> 가 정의 됐을 때 목적 함수의 극 값을 구하기 위해서 변화량을 관찰해야 한다. 비단 목적함수를 포함한 어떤 현상을 함수로 표현할 때에도 문제를 해결하기 위해 변화량을 관찰하는 경우가 빈번하다.</p>
<p>예를 들어, 선풍기 바람의 세기를 조절할 때 입력값은 바람 세기 버튼 출력값은 바람의 세기로 가정한다면 선풍기 바람 세기 입력에 따라 적절한 출력값을 갖도록 조정하고 싶을 것이다. 이때 변화량 관찰이 요구된다. 변화량을 잘 대변하는 것이 함수의 기울기이다. 함수의 기울기는 민감도 (sensitivity)로 표현되기도 한다(wiki). 기울기는 아래와 같이 정의된다.</p>
</section>
<section id="미분의-종류" class="level2">
<h2 class="anchored" data-anchor-id="미분의-종류">미분의 종류</h2>
<ul>
<li>직접 미분
<ul>
<li>이번 블로그에서 정리한 내용</li>
<li>수동 미분: 식을 알고 손으로 미분하여 도함수를 얻음</li>
<li>symbolic 연산: 기호를 이용하여 미분 연산 <img src="https://latex.codecogs.com/png.latex?%5Crightarrow"> sympy package 이용</li>
<li>함수 복잡하면 풀기 매우 어려움</li>
</ul></li>
<li>간접 미분
<ul>
<li>수치 미분 (numerical differentiation): 도함수를 몰라도 미분계수를 구하는데 사용</li>
<li>함수 복잡하면 시간 오래 걸림</li>
</ul></li>
<li>자동 미분 (automatic differentiation)
<ul>
<li>복잡한 함수를 간단한 함수로 쪼개어 직접 미분 - Pytorch</li>
<li>실무에서, 정합성 검사를 위해 자동 미분의 결과를 간접 미분의 결과와 맞추기도 한다.</li>
<li>간접 미분이 정답이 된다.</li>
</ul></li>
</ul>
</section>
<section id="일-변수-함수의-미분" class="level2">
<h2 class="anchored" data-anchor-id="일-변수-함수의-미분">일 변수 함수의 미분</h2>
<div id="def-Slope" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 1 </strong></span>The slope of line connected with the two points <img src="https://latex.codecogs.com/png.latex?P_1(x_1,y_1)"> and <img src="https://latex.codecogs.com/png.latex?P_2(x_2,y_2)"> is <img src="https://latex.codecogs.com/png.latex?%0Am=%5Cfrac%7By_2-y_1%7D%7Bx_2-x_1%7D%0A"></p>
</div>
<div id="thm-PointSlope" class="theorem">
<p><span class="theorem-title"><strong>Theorem 1 </strong></span>The point slope equation of line through <img src="https://latex.codecogs.com/png.latex?P_1(x_1,y_1)"> with slope <img src="https://latex.codecogs.com/png.latex?m"> is <img src="https://latex.codecogs.com/png.latex?%0Ay-y_1=m(x-x_1)%0A"></p>
</div>
<div id="thm-SlopeIntercept" class="theorem">
<p><span class="theorem-title"><strong>Theorem 2 </strong></span>The slope intercept euation of line with slope m and y-intercept b is <img src="https://latex.codecogs.com/png.latex?%0Ay=mx+b%0A"></p>
</div>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Ctext%7B%EA%B8%B0%EC%9A%B8%EA%B8%B0%7D(slope)&amp;=%5Cfrac%7B%5Ctext%7B%EC%B6%9C%EB%A0%A5%EC%9D%98%20%EB%B3%80%ED%99%94%EB%9F%89%7D%7D%7B%5Ctext%7B%EC%9E%85%EB%A0%A5%EC%9D%98%20%EB%B3%80%ED%99%94%EB%9F%89%7D%7D%5C%5C%0A&amp;=%20%5Ctext%7B%EC%9E%85%EB%A0%A5%20%EB%B3%80%ED%99%94%EB%9F%89%EC%97%90%20%EB%8C%80%ED%95%9C%20%EC%B6%9C%EB%A0%A5%20%EB%B3%80%ED%99%94%EB%9F%89%7D%20%5C%5C%0A&amp;=%5Cfrac%7B%5CDelta%20output%7D%7B%5CDelta%20input%7D%5C%5C%0A&amp;=%20%5Ctext%7B%EB%8B%A8%EC%9C%84%20%EC%9E%85%EB%A0%A5%EB%8B%B9%20%EC%B6%9C%EB%A0%A5%EC%9D%98%20%EB%B3%80%ED%99%94%EB%9F%89%7D%5C%5C%0A&amp;=%20%5Ctext%7B%EB%AF%BC%EA%B0%90%EB%8F%84,%20%ED%8F%89%EA%B7%A0%20%EB%B3%80%ED%99%94%EC%9C%A8%20(Rates%20Of%20Change),%20or%20etc%7D.%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<div id="def-평균변화율" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 2 </strong></span><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Ctext%7B%ED%8F%89%EA%B7%A0%20%EB%B3%80%ED%99%94%EC%9C%A8%7D&amp;=%5CDelta%20x%5Ctext%7B%EC%97%90%20%EB%8C%80%ED%95%9C%7D%20%5CDelta%20y%5Ctext%7B%EC%9D%98%20%EB%B9%84%EC%9C%A8%7D%5C%5C%0A&amp;=%5Cfrac%7B%5CDelta%20y%7D%7B%5CDelta%20x%7D=%5Cfrac%7Bf(b)-f(a)%7D%7Bb-a%7D%5C%5C%0A&amp;=%5Cfrac%7Bf(a+%5CDelta%20x)-f(a)%7D%7B%5CDelta%20x%7D%0A%5Cend%7Baligned%7D%0A"></p>
</div>
<ul>
<li>입력에 대한 변화율을 조절하고 싶을 때 필요한 개념
<ul>
<li>ex) 시약 농도 대비 신호 증폭의 변화율을 관찰</li>
</ul></li>
<li>하지만 관심의 대상의 관계 그래프가 직선이 아닌 <strong>곡선의 형태</strong>의 경우 평균 변화율이 대략적인 추세 정보만 제공해줄뿐 변화량의 자세한 정보를 제공해주지 못함
<ul>
<li>sigmoid 형태의 경우 첫 포인트와 마지막 포인트의 평균 변화율을 보는 것 보다 구간을 짧게하여 여러 군데서 관찰하는 것이 graph의 shape를 더 잘 설명하는 것</li>
</ul></li>
<li>이 때, 입력값의 구간을 <strong>충분히</strong> 짧게 만들어 출력값의 변화량을 관찰하는 것이 미분이다. (limit의 개념, <img src="https://latex.codecogs.com/png.latex?%5Cepsilon-%5Cdelta"> method)</li>
</ul>
<div id="def-TangentLine" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 3 </strong></span>The tangent line to the curve <img src="https://latex.codecogs.com/png.latex?y=f(x)"> at the point <img src="https://latex.codecogs.com/png.latex?P(a,f(a))"> is the line through P with slope</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Am%20=%20%5Clim_%7Bx%5Cto%20a%7D%20f(x)%0A"></p>
<p>provided that this limit exists.</p>
</div>
<div id="def-Derivative" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 4 </strong></span>When <img src="https://latex.codecogs.com/png.latex?f:%20%5Cmathbb%7BR%7D%20%5Crightarrow%20%5Cmathbb%7BR%7D"> is continuous and differentiable, the derivative of a function <img src="https://latex.codecogs.com/png.latex?f"> at a number <img src="https://latex.codecogs.com/png.latex?a%20%5Cin%20%5Cmathbb%20R">, denoted by <img src="https://latex.codecogs.com/png.latex?f'(a)">, is</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0Af'(a)%20&amp;=%20%5Clim_%7Bh%5Cto%200%7D%20%5Cfrac%7Bf(a+h)-f(a)%7D%7Bh%7D%5C%5C%0A%20%20%20%20%20%20&amp;=%20%5Clim_%7Bx%5Cto%20a%7D%20%5Cfrac%7Bf(x)-f(a)%7D%7Bx-a%7D%0A%5Cend%7Baligned%7D%0A"></p>
<p>provided that this limit exists. 이때 위의 함수의 극한값, <img src="https://latex.codecogs.com/png.latex?f'(a)"> 라고도 표시하며 점 <img src="https://latex.codecogs.com/png.latex?a"> 에서의 <img src="https://latex.codecogs.com/png.latex?f(x)"> 의 도함수 (derivative) 라고 한다.</p>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/differentiation/derivative.PNG" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">James Stewart - Calculus Early Transcedentals, 7th Eidition, P.143</figcaption><p></p>
</figure>
</div>
<div id="def-Differentiable" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 5 </strong></span>A function <img src="https://latex.codecogs.com/png.latex?f"> is differentiable at <img src="https://latex.codecogs.com/png.latex?a"> if <img src="https://latex.codecogs.com/png.latex?f'(a)"> exists. It is differentiable on an open interval (a,b) [or (a,<img src="https://latex.codecogs.com/png.latex?%5Cinfty">), (-<img src="https://latex.codecogs.com/png.latex?%5Cinfty">,a) or (-<img src="https://latex.codecogs.com/png.latex?%5Cinfty">,<img src="https://latex.codecogs.com/png.latex?%5Cinfty">)] if it is differentiable at every number in the interval.</p>
</div>
<div id="thm-Continuous" class="theorem">
<p><span class="theorem-title"><strong>Theorem 3 </strong></span>If <img src="https://latex.codecogs.com/png.latex?f"> is differentiable at <img src="https://latex.codecogs.com/png.latex?a">, then <img src="https://latex.codecogs.com/png.latex?f"> is continuous at <img src="https://latex.codecogs.com/png.latex?a">.</p>
</div>
<ul>
<li>순간 변화율 = 미분 계수 = 접선의 기울기</li>
<li>미분 (differentiation) : 순간 변화율 구하는 행위</li>
<li>도함수 (derivative) : 도함수 자체는 equation 으로, 특정 포인트에서의 순간 변화율 (값)을 출력하는 함수</li>
<li>문제를 풀때 도함수를 구하는 것인지, 미분계수를 계산하는 것인지를 구별해야함</li>
<li>전체 도함수를 구하는것은 보통 굉장히 어려움. 하지만 한점에서의 순간변화율 즉, 미분계수를 구하는 것은 가능</li>
<li>에러를 줄이는 데에는 값으로 나오는 순간 변화율을 구하는 것이 일반적으로 실현성이 있는 문제</li>
</ul>
<div id="def-NaturalNumber" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 6 </strong></span>The natural number, <img src="https://latex.codecogs.com/png.latex?e"> is the number such that <img src="https://latex.codecogs.com/png.latex?%5Clim_%7Bh%5Cto%200%7D%20%5Cfrac%7Be%5Eh-1%7D%7Bh%7D=1">.</p>
</div>
<p>모든 지수 함수 <img src="https://latex.codecogs.com/png.latex?f(x)=a%5Ex"> 중에서 <img src="https://latex.codecogs.com/png.latex?f(x)=e%5Ex"> 가 점 (0.1) 에서의 접선의 기울기가 <img src="https://latex.codecogs.com/png.latex?f'(0)=1"> 이 되는 수를 <img src="https://latex.codecogs.com/png.latex?e=2.71828..."> 라고 정의한다.</p>
<section id="notation" class="level3">
<h3 class="anchored" data-anchor-id="notation">Notation</h3>
<p><img src="https://latex.codecogs.com/png.latex?f'(x)"> 는 다음과 같은 기호들로도 흔히 표현된다.</p>
<ul>
<li>Lagrange’s notation
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y',%20f'(x)"></li>
<li>어떤 변수로 미분하는지에 대해서 명시적으로 표현되지 않았음. 고등학교때까진 univariable function을 미분 했기떄문에 이 표기법이 많이 사용되었음.</li>
</ul></li>
<li>Leibniz’s notation
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bdy%7D%7Bdx%7D=%5Cfrac%7Bdf%7D%7Bdx%7D=%5Cfrac%7Bd%7D%7Bdx%7Df(x)"></li>
<li>입력 변수와 출력 변수까지 모두 명시되어있음</li>
</ul></li>
<li>Newton’s notation:
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cdot%7By%7D,%20%5Cddot%7By%7D"></li>
<li>최적화 논문과 financial engineering 에서 본적 있음</li>
</ul></li>
<li>Euler’s notation
<ul>
<li><img src="https://latex.codecogs.com/png.latex?D_xy,%20D_xf(x)"></li>
<li>시계열 논문과 미분방정식 논문에서 본적 있음</li>
</ul></li>
</ul>
</section>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<p>다음의 함수를 미분의 정의를 이용하여 도함수를 계산하시오</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?f(x)=c"> where c is a constant</li>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=%5Clog%20x"></li>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=e%5Ex"></li>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=%5Csin%20x"></li>
</ol>
<p><a href="https://byjus.com/calculus-formulas/">Derivative Formula</a>는 모두 미분의 정의를 이용해서 구할 수 있음</p>
<div id="thm-Differentiation_Rules" class="theorem">
<p><span class="theorem-title"><strong>Theorem 4 </strong></span>&nbsp;</p>
<ol type="1">
<li><p><strong>The Power Rule</strong>, if <img src="https://latex.codecogs.com/png.latex?n"> is any real number, then the power function, <img src="https://latex.codecogs.com/png.latex?x%5En"> is differentiated like the following: <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bd%7D%7Bdx%7D(x%5En)=nx%5E%7Bn-1%7D%0A"></p></li>
<li><p><strong>The Constant Multiple Rule</strong>, if <img src="https://latex.codecogs.com/png.latex?c"> is a constand and <img src="https://latex.codecogs.com/png.latex?f"> is a differentiable function, then <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bd%7D%7Bdx%7D(cf'(x))=c%5Cfrac%7Bd%7D%7Bdx%7Df(x)=cf'(x)%0A"></p></li>
<li><p><strong>The Sum Rule</strong>, if <img src="https://latex.codecogs.com/png.latex?f"> and <img src="https://latex.codecogs.com/png.latex?g"> are both differentiable, then <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bd%7D%7Bdx%7D%5Bf(x)+g(x)%5D=%5Cfrac%7Bd%7D%7Bdx%7D%5Bf(x)%5D+%5Cfrac%7Bd%7D%7Bdx%7D%5Bg(x)%5D=f'(x)%20+g'(x)%0A"></p></li>
<li><p><strong>The Difference Rule</strong>, if <img src="https://latex.codecogs.com/png.latex?f"> and <img src="https://latex.codecogs.com/png.latex?g"> are both differentiable, then <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7Bd%7D%7Bdx%7D%5Bf(x)-g(x)%5D=%5Cfrac%7Bd%7D%7Bdx%7D%5Bf(x)%5D-%5Cfrac%7Bd%7D%7Bdx%7D%5Bg(x)%5D=f'(x)%20-g'(x)%0A"></p></li>
<li><p><strong>The Product Rule</strong>, if <img src="https://latex.codecogs.com/png.latex?f"> and <img src="https://latex.codecogs.com/png.latex?g"> are both differentiable, then <img src="https://latex.codecogs.com/png.latex?%0Ay=f(x)g(x),%20y'=f'(x)g(x)+f(x)g'(x)%0A"></p></li>
<li><p><strong>The quotient rule</strong>, if <img src="https://latex.codecogs.com/png.latex?f"> and <img src="https://latex.codecogs.com/png.latex?g"> are both differentiable, then <img src="https://latex.codecogs.com/png.latex?%0Ay=%5Cfrac%7Bf(x)%7D%7Bg(x)%7D,%20y'=%5Cfrac%7Bf'(x)g(x)-f(x)g'(x)%7D%7Bg(x)%5E2%7D%0A"></p></li>
</ol>
</div>
<p>증명은 James Stewart의 Calculus Series 중 1개를 골라 참고하시기 바랍니다.</p>
</section>
<section id="example-1" class="level3">
<h3 class="anchored" data-anchor-id="example-1">Example</h3>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?S(x)=%5Cfrac%7B1%7D%7B1+e%5E%7B-ax%7D%7D"> 를 <img src="https://latex.codecogs.com/png.latex?x"> 에 대해 미분해보시오.</li>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=%5Calpha_1%20+%20%5Cfrac%7B%5Calpha_2-%5Calpha_1%7D%7B1+e%5E%7B-%5Calpha_4(x-%5Calpha_3)%7D%7D"> 를 어떻게 미분할 것인지 생각해 보시오.</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)=(4x+3)%5E2"> 를 <img src="https://latex.codecogs.com/png.latex?x"> 에 대해 미분해보시오</li>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)=(4x+3)%5E%7B20%7D"> 를 <img src="https://latex.codecogs.com/png.latex?x"> 에 대해 어떻게 미분할 것인지 생각해보시오. (hint: composite function - Leibniz)</li>
</ol>
</section>
<section id="example-answer" class="level3">
<h3 class="anchored" data-anchor-id="example-answer">Example Answer</h3>
<section id="sympy-package-example" class="level4">
<h4 class="anchored" data-anchor-id="sympy-package-example">sympy package example</h4>
<p>앞서와 언급한대로 파이썬 sympy package를 사용할 것인데 간단한 예를 본다. 먼저 기호의 정의를 해주고 수학 연산을 진행하면 된다.</p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># import packages</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> sympy <span class="im" style="color: #00769E;">as</span> S</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> matplotlib <span class="im" style="color: #00769E;">as</span> mpl</span>
<span id="cb1-6"><span class="im" style="color: #00769E;">from</span> mpl_toolkits <span class="im" style="color: #00769E;">import</span> mplot3d</span>
<span id="cb1-7"><span class="im" style="color: #00769E;">import</span> matplotlib.font_manager <span class="im" style="color: #00769E;">as</span> mfm</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># 심볼 정의</span></span>
<span id="cb2-2">x<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'x'</span>)</span>
<span id="cb2-3">h<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'h'</span>)</span>
<span id="cb2-4">n<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'n'</span>)</span>
<span id="cb2-5">a<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'a'</span>)</span>
<span id="cb2-6">a1<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'a1'</span>)</span>
<span id="cb2-7">a2<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'a2'</span>)</span>
<span id="cb2-8">a3<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'a3'</span>)</span>
<span id="cb2-9">a4<span class="op" style="color: #5E5E5E;">=</span>S.Symbol(<span class="st" style="color: #20794D;">'a4'</span>)</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;">## 인수분해</span></span>
<span id="cb2-12">S.factor(x<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">4</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">4</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="2">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft(x%20+%202%5Cright)%5E%7B2%7D"></p>
</div>
</div>
<ul>
<li>인수분해와 값 넣기</li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">f<span class="op" style="color: #5E5E5E;">=</span>S.factor(x<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">6</span>)</span>
<span id="cb3-2"><span class="bu" style="color: null;">print</span>(f.subs({x:<span class="dv" style="color: #AD0000;">3</span>}))</span>
<span id="cb3-3"><span class="bu" style="color: null;">print</span>(f.subs({x:<span class="dv" style="color: #AD0000;">5</span>}))</span>
<span id="cb3-4">f</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>0
6</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="3">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cleft(x%20-%203%5Cright)%20%5Cleft(x%20-%202%5Cright)"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?2%5Ex"> 미분과 값 넣기</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">df<span class="op" style="color: #5E5E5E;">=</span>S.limit((<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">**</span>(x<span class="op" style="color: #5E5E5E;">+</span>h)<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">**</span>x)<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb5-2"><span class="bu" style="color: null;">print</span>(df.subs({x:<span class="dv" style="color: #AD0000;">3</span>}))</span>
<span id="cb5-3"><span class="bu" style="color: null;">print</span>(df.subs({x:<span class="dv" style="color: #AD0000;">5</span>}))</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="bu" style="color: null;">print</span>(df.subs({x:<span class="dv" style="color: #AD0000;">3</span>}).evalf()) <span class="co" style="color: #5E5E5E;"># 정확한 값을 원할 경우</span></span>
<span id="cb5-6">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>8*log(2)
32*log(2)
5.54517744447956</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="4">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%202%5E%7Bx%7D%20%5Clog%7B%5Cleft(2%20%5Cright)%7D"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?x%5En"> 미분</li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">df<span class="op" style="color: #5E5E5E;">=</span>S.limit(((x<span class="op" style="color: #5E5E5E;">+</span>h)<span class="op" style="color: #5E5E5E;">**</span>n<span class="op" style="color: #5E5E5E;">-</span>x<span class="op" style="color: #5E5E5E;">**</span>n)<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb7-2"><span class="bu" style="color: null;">print</span>(df.subs({x:<span class="dv" style="color: #AD0000;">3</span>}))</span>
<span id="cb7-3"><span class="bu" style="color: null;">print</span>(df.subs({x:<span class="dv" style="color: #AD0000;">5</span>}))</span>
<span id="cb7-4">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>3**(n - 1)*n
5**(n - 1)*n</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="5">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20n%20x%5E%7Bn%20-%201%7D"></p>
</div>
</div>
</section>
<section id="example-answers" class="level4">
<h4 class="anchored" data-anchor-id="example-answers">Example Answers</h4>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=c"> 의 도함수 where c is a constant. c=2로 고정</li>
</ul>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">f<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb9-2">df<span class="op" style="color: #5E5E5E;">=</span>S.limit(((<span class="dv" style="color: #AD0000;">2</span>)<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>)<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb9-3">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="6">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%200"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=%5Clog%20x"> 의 도함수</li>
</ul>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">f<span class="op" style="color: #5E5E5E;">=</span>S.log(x)</span>
<span id="cb10-2">df<span class="op" style="color: #5E5E5E;">=</span>S.limit((S.log(x<span class="op" style="color: #5E5E5E;">+</span>h)<span class="op" style="color: #5E5E5E;">-</span>S.log(x))<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb10-3">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="7">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7B1%7D%7Bx%7D"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=e%5Ex"> 의 도함수</li>
</ul>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">f<span class="op" style="color: #5E5E5E;">=</span>S.exp(x)</span>
<span id="cb11-2">df<span class="op" style="color: #5E5E5E;">=</span>S.limit((S.exp(x<span class="op" style="color: #5E5E5E;">+</span>h)<span class="op" style="color: #5E5E5E;">-</span>S.exp(x))<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb11-3">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="8">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20e%5E%7Bx%7D"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=%5Csin%20x"> 의 도함수</li>
</ul>
<div class="cell" data-execution_count="9">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">f<span class="op" style="color: #5E5E5E;">=</span>S.sin(x)</span>
<span id="cb12-2">df<span class="op" style="color: #5E5E5E;">=</span>S.limit((S.sin(x<span class="op" style="color: #5E5E5E;">+</span>h)<span class="op" style="color: #5E5E5E;">-</span>S.sin(x))<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb12-3">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="9">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Ccos%7B%5Cleft(x%20%5Cright)%7D"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?S(x)=%5Cfrac%7B1%7D%7B1+e%5E%7B-ax%7D%7D"> 를 <img src="https://latex.codecogs.com/png.latex?x"> 에 대해 미분해보시오.</li>
</ul>
<div class="cell" data-execution_count="10">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">f<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">+</span>S.exp(<span class="op" style="color: #5E5E5E;">-</span>a<span class="op" style="color: #5E5E5E;">*</span>x))</span>
<span id="cb13-2">df<span class="op" style="color: #5E5E5E;">=</span>S.limit((<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">+</span>S.exp(<span class="op" style="color: #5E5E5E;">-</span>a<span class="op" style="color: #5E5E5E;">*</span>(x<span class="op" style="color: #5E5E5E;">+</span>h)))<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">+</span>S.exp(<span class="op" style="color: #5E5E5E;">-</span>a<span class="op" style="color: #5E5E5E;">*</span>x)))<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb13-3">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="10">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7Ba%20e%5E%7Ba%20x%7D%7D%7B%5Cleft(e%5E%7Ba%20x%7D%20+%201%5Cright)%5E%7B2%7D%7D"></p>
</div>
</div>
<p>이번 문제에서 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bae%5Ex%7D%7B(e%5E%7B-ax%7D+1)%5E2%7D"> 라는 sigmoid function의 도함수를 얻었다. 이 도함수를 간단한 수학적 조작으로 다른 표현으로 유도해보면 다음과 같다. <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A%5Cfrac%7Bd%7D%7Bdx%7DS(x)&amp;=%5Cfrac%7Bae%5E%7B-ax%7D%7D%7B(e%5E%7Bax%7D+1)%5E2%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;=a%5Cfrac%7B1%7D%7B(e%5E%7Bax%7D+1)%7D%5Cfrac%7Be%5E%7B-ax%7D%7D%7B(e%5E%7Bax%7D+1)%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;=a%5Cfrac%7B1%7D%7B(e%5E%7Bax%7D+1)%7D%5Cfrac%7B1+e%5E%7B-ax%7D-1%7D%7B(e%5E%7Bax%7D+1)%7D%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;=a%5Cfrac%7B1%7D%7B(e%5E%7Bax%7D+1)%7D(1-%5Cfrac%7B1%7D%7B(e%5E%7Bax%7D+1)%7D)%5C%5C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20&amp;=aS(x)(1-S(x))%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<p>위와 같이 <img src="https://latex.codecogs.com/png.latex?S(x)"> 의 도함수는 <img src="https://latex.codecogs.com/png.latex?aS(x)(1-S(x))"> 로 표현될 수 있다. sigmoid function은 neural network에서 activation function으로 사용되는데 forward propagation에서 이미 한 번 계산이 된다. backward propagation에서 activation function인 <img src="https://latex.codecogs.com/png.latex?S(x)"> 의 도함수를 다시 연산을 해야하는데 도함수가 <img src="https://latex.codecogs.com/png.latex?aS(x)(1-S(x))"> 것을 알면 복잡한 고차원 행렬곱 연산을 다시 수행하지 않아도 된다. 그래서 <img src="https://latex.codecogs.com/png.latex?S(x)"> 의 도함수를 <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bae%5Ex%7D%7B(e%5E%7B-ax%7D+1)%5E2%7D"> 라고 코딩하는 것 보다는 <img src="https://latex.codecogs.com/png.latex?S(x)"> 의 행렬을 재활용하여 <img src="https://latex.codecogs.com/png.latex?aS(x)(1-S(x))"> 로 코딩해놓으면 연산 과정에서의 시간 복잡도를 줄일 수 있다. 이처럼 machine learning에서 수학적 통계적 지식을 잘 활용하면 좀 더 효율적인 모델링을 구현 할 수 있다.</p>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">x1 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb14-2">sx <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">+</span>np.exp(<span class="op" style="color: #5E5E5E;">-</span>x1))</span>
<span id="cb14-3">d_sx <span class="op" style="color: #5E5E5E;">=</span> sx<span class="op" style="color: #5E5E5E;">*</span>(<span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">-</span>sx)</span>
<span id="cb14-4"></span>
<span id="cb14-5">plt.plot(x1,sx,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'S(x)'</span>)</span>
<span id="cb14-6">plt.plot(x1,d_sx,color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'red'</span>,label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'dS(x)'</span>)</span>
<span id="cb14-7"></span>
<span id="cb14-8">plt.xlabel(<span class="st" style="color: #20794D;">'X'</span>)</span>
<span id="cb14-9">plt.xlabel(<span class="st" style="color: #20794D;">'S(x)'</span>)</span>
<span id="cb14-10">plt.title(<span class="st" style="color: #20794D;">'Simgoid Curve with its Derivative'</span>)</span>
<span id="cb14-11">plt.legend()</span>
<span id="cb14-12">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/differentiation/2023-02-04_uni_derivative_files/figure-html/cell-12-output-1.png" width="571" height="449"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f(x;%5Cmathbf%5Calpha)=%5Calpha_1%20+%20%5Cfrac%7B%5Calpha_2-%5Calpha_1%7D%7B1+e%5E%7B-%5Calpha_4(x-%5Calpha_3)%7D%7D"> 를 어떻게 미분할 것인지 생각해 보시오.</li>
</ul>
<p>위의 식은 logistic fucntion의 genral formular 형태인데 sigmoid function이 특수한 예이다. 함수의 shpae는 parameter에 의해 결정되는데 위의 경우 <img src="https://latex.codecogs.com/png.latex?%5Calpha_1"> 은 함수의 최솟값 , <img src="https://latex.codecogs.com/png.latex?%5Calpha_2"> 은 함수의 최댓값, <img src="https://latex.codecogs.com/png.latex?%5Calpha_3"> 은 함수의 변곡점 및 <img src="https://latex.codecogs.com/png.latex?%5Calpha_4"> logistic curve가 변곡점을 지나면서 증가하는 변화율을 묘사한다. sigmoid 형태의 data를 fitting하기 위해 위의 함수를 이용한다면 error를 최소화하는 parameter를 구해야하는데 이 또한 최적화 문제로 4개의 변수에 대한 미분이 필요하다. 2개 이상의 변수에 대해서 미분은 partial derivative (편미분)라고 하는데 다음 블로그에서 다룰 것이다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)=(4x+3)%5E2"> 를 <img src="https://latex.codecogs.com/png.latex?x"> 에 대해 미분해보시오.</li>
</ul>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">S.limit(((<span class="dv" style="color: #AD0000;">4</span><span class="op" style="color: #5E5E5E;">*</span>(x<span class="op" style="color: #5E5E5E;">+</span>h)<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">-</span>(<span class="dv" style="color: #AD0000;">4</span><span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">3</span>)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>)<span class="op" style="color: #5E5E5E;">/</span>h,h,<span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="12">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%2032%20x%20+%2024"></p>
</div>
</div>
<p>위의 도함수는 미분 공식 중 곱의 법칙을 사용하면 구할 수 있다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x)=(4x+3)%5E%7B20%7D"> 를 <img src="https://latex.codecogs.com/png.latex?x"> 에 대해 어떻게 미분할 것인지 생각해보시오. (hint: composite function - Leibniz)</li>
</ul>
<p>위의 문제처럼 곱의 법칙을 사용하면 20개의 인수에 대해서 차례대로 미분을 해야하므로 계산량이 엄청나게 많아진다. 이때 composite function (합성 함수)의 derivative를 구하는 chain rule을 이용하면 간단한 연산으로 도함수를 구할 수 있게 된다. deep learning 모델의 기초인 neural network는 layer nodes이 복잡하게 합성이 되는 합성 함수를 만들면서 forward propagation을 진행하고 backward propabation에서 이 복잡한 합성 함수의 미분을 수행하게 된다. 그러므로 합성 함수의 미분이 어떻게 수행되는지 아는 것은 deep learning을 수리적으로 이해하고 싶은 사람에게 있어서 중요할 수 있다. 합성 함수의 미분은 다른 블로그에서 다루도록 하겠다.</p>
</section>
</section>
</section>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../Mathmatics/guide_map/index.qmd">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/differentiation/2023-02-04_uni_derivative.html</guid>
  <pubDate>Fri, 03 Feb 2023 15:00:00 GMT</pubDate>
  <media:content url="kmink3225.netlify.app/docs/blog/posts/Mathmatics/differentiation/derivative.PNG" medium="image"/>
</item>
<item>
  <title>Data Structure (9) Priority Queue</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_priority_queue/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="우선순위-큐priority-queue" class="level2">
<h2 class="anchored" data-anchor-id="우선순위-큐priority-queue">우선순위 큐(Priority Queue)</h2>
<ul>
<li>우선순위 큐는 우선순위에 따라서 데이터를 추출하는 자료구조다.</li>
<li>컴퓨터 운영체제, 온라인 게임 매칭 등에서 활용된다.</li>
<li>우선순위 큐는 일반적으로 힙(heap)을 이용해 구현한다.</li>
</ul>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of data structure</caption>
<thead>
<tr class="header">
<th>Number</th>
<th>Data Structure</th>
<th>추출되는 데이터</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>stack</td>
<td>가장 나중에 삽입된 데이터</td>
</tr>
<tr class="even">
<td>2</td>
<td>queue</td>
<td>가장 먼저 삽입된 데이터</td>
</tr>
<tr class="odd">
<td>3</td>
<td>priority queue</td>
<td>가장 우선 순위가 높은 데이터</td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;2.</p>
</section>
<section id="우선순위-큐를-구현하는-방법" class="level2">
<h2 class="anchored" data-anchor-id="우선순위-큐를-구현하는-방법">우선순위 큐를 구현하는 방법</h2>
<ul>
<li>우선순위 큐는 다양한 방법으로 구현할 수 있다.</li>
<li>데이터의 개수가 N개일 때, 구현 방식에 따른 시간 복잡도는 다음과 같다.</li>
<li>삭제 할때는 우선 순위가 가장 높은 것을 찾아야 하기 때문에 <img src="https://latex.codecogs.com/png.latex?O(N)"> 만큼 소요될 수 있다.</li>
</ul>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;2: a list of the priority queue building methods in Python</caption>
<thead>
<tr class="header">
<th>Number</th>
<th>우선 순위 큐 구현 방식</th>
<th>삽입 시간</th>
<th>삭제 시간</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>리스트 자료형</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
</tr>
<tr class="even">
<td>2</td>
<td>힙 (Heap)</td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;2.</p>
<ul>
<li>일반적인 형태의 큐는 선형적인 구조를 가진다.</li>
<li>반면에 우선순위 큐는 이진 트리(binary tree) 구조를 사용하는 것이 일반적이다.</li>
</ul>
</section>
<section id="이진-트리binary-tree" class="level2">
<h2 class="anchored" data-anchor-id="이진-트리binary-tree">이진 트리(Binary Tree)</h2>
<ul>
<li>이진 트리(binary tree)는 최대 2개까지의 자식을 가질 수 있다.</li>
</ul>
<section id="포화-이진-트리full-binary-tree" class="level3">
<h3 class="anchored" data-anchor-id="포화-이진-트리full-binary-tree">포화 이진 트리(Full Binary Tree)</h3>
<ul>
<li>포화 이진 트리는 리프 노드를 제외한 모든 노드가 두 자식을 가지고 있는 트리다.</li>
</ul>
</section>
<section id="완전-이진-트리complete-binary-tree" class="level3">
<h3 class="anchored" data-anchor-id="완전-이진-트리complete-binary-tree">완전 이진 트리(Complete Binary Tree)</h3>
<ul>
<li>완전 이진 트리는 모든 노드가 왼쪽 자식부터 차근차근 채워진 트리다.</li>
</ul>
</section>
<section id="높이-균형-트리height-balanced-tree" class="level3">
<h3 class="anchored" data-anchor-id="높이-균형-트리height-balanced-tree">높이 균형 트리(Height Balanced Tree)</h3>
<ul>
<li>왼쪽 자식 트리와 오른쪽 자식 트리의 높이가 1 이상 차이 나지 않는 트리다.</li>
</ul>
</section>
</section>
<section id="힙heap" class="level2">
<h2 class="anchored" data-anchor-id="힙heap">힙(Heap)</h2>
<ul>
<li>힙(Heap)은 원소들 중에서 최댓값 혹은 최솟값을 빠르게 찾아내는 자료구조다.</li>
<li>최대 힙(Max Heap): 값이 큰 원소부터 추출한다.</li>
<li>최소 힙(Min Heap): 값이 작은 원소부터 추출한다.</li>
<li>힙은 원소의 삽입과 삭제를 위해 <img src="https://latex.codecogs.com/png.latex?O(logN)"> 의 수행 시간을 요구한다.</li>
<li>단순한 N개의 데이터를 힙에 넣었다가 모두 꺼내는 작업은 정렬과 동일하다.</li>
<li>이 경우 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(NlogN)"> 이다.</li>
</ul>
<section id="최대-힙max-heap" class="level3">
<h3 class="anchored" data-anchor-id="최대-힙max-heap">최대 힙(Max Heap)</h3>
<ul>
<li>최대 힙(max heap)은 부모 노드가 자식 노드보다 값이 큰 완전 이진 트리를 의미한다.</li>
<li>최대 힙(max heap)의 루트 노드는 전체 트리에서 가장 큰 값을 가진다는 특징이 있다.</li>
</ul>
</section>
<section id="힙heap의-특징" class="level3">
<h3 class="anchored" data-anchor-id="힙heap의-특징">힙(Heap)의 특징</h3>
<ul>
<li>힙은 완전 이진 트리 자료구조를 따른다.</li>
<li>힙에서는 우선순위가 높은 노드가 루트(root)에 위치한다.</li>
</ul>
<ol type="1">
<li>최대 힙(max heap)</li>
</ol>
<ul>
<li>부모 노드의 키 값이 자식 노드의 키 값보다 항상 크다.</li>
<li>루트 노드가 가장 크며, 값이 큰 데이터가 우선순위를 가진다.</li>
</ul>
<ol start="2" type="1">
<li>최소 힙(min heap)</li>
</ol>
<ul>
<li>부모 노드의 키 값이 자식 노드의 키 값보다 항상 작다.</li>
<li>루트 노드가 가장 작으며, 값이 작은 데이터가 우선순위를 가진다.</li>
<li>힙의 삽입과 삭제 연산을 수행할 때를 고려해 보자.</li>
<li>직관적으로, 거슬러 갈 때마다 처리해야 하는 범위에 포함된 원소의 개수가 절반씩 줄어든다.</li>
<li>따라서 삽입과 삭제에 대한 시간 복잡도는 O logN 이다.</li>
</ul>
</section>
<section id="최소-힙-구성-함수-heapify" class="level3">
<h3 class="anchored" data-anchor-id="최소-힙-구성-함수-heapify">최소 힙 구성 함수: Heapify</h3>
<ul>
<li>(상향식) 부모로 거슬러 올라가며, 부모보다 자신이 더 작은 경우에 위치를 교체한다.</li>
</ul>
</section>
<section id="힙에-새로운-원소가-삽입될-때" class="level3">
<h3 class="anchored" data-anchor-id="힙에-새로운-원소가-삽입될-때">힙에 새로운 원소가 삽입될 때</h3>
<ul>
<li>(상향식) 부모로 거슬러 올라가며, 부모보다 자신이 더 작은 경우에 위치를 교체한다.</li>
<li>새로운 원소가 삽입되었을 때 O logN 의 시간 복잡도로 힙 성질을 유지하도록 할 수 있다.</li>
</ul>
</section>
<section id="힙에-새로운-원소가-삭제될-때" class="level3">
<h3 class="anchored" data-anchor-id="힙에-새로운-원소가-삭제될-때">힙에 새로운 원소가 삭제될 때</h3>
<ul>
<li>원소가 제거되었을 때 O logN 의 시간 복잡도로 힙 성질을 유지하도록 할 수 있다.</li>
<li>원소를 제거할 때는 가장 마지막 노드가 루트 노드의 위치에 오도록 한다.</li>
<li>이후에 루트 노드에서부터 하향식으로(더 작은 자식 노드로) Heapify()를 진행한다.</li>
</ul>
</section>
<section id="파이썬의-힙heap-라이브러리" class="level3">
<h3 class="anchored" data-anchor-id="파이썬의-힙heap-라이브러리">파이썬의 힙(Heap) 라이브러리</h3>
<ul>
<li>파이썬에서는 힙(Heap) 라이브러리를 제공한다.</li>
<li>heapq 라이브러리의 삽입 및 삭제에 대한 시간 복잡도는 모두 O logN 이다.</li>
</ul>
<section id="힙-초기화" class="level4">
<h4 class="anchored" data-anchor-id="힙-초기화">힙 초기화</h4>
<ul>
<li>단순히 하나의 빈 리스트를 만들면, 그것을 힙(heap) 자료구조로 사용할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb1-2"></span>
<span id="cb1-3">heap <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb1-4"><span class="bu" style="color: null;">print</span>(heap)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[]</code></pre>
</div>
</div>
</section>
<section id="삽입push과-추출pop" class="level4">
<h4 class="anchored" data-anchor-id="삽입push과-추출pop">삽입(push)과 추출(pop)</h4>
<ul>
<li>원소의 삽입: heappush() 메서드</li>
<li>원소의 추출: heappop() 메서드</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb3-2"></span>
<span id="cb3-3">heap <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb3-4"></span>
<span id="cb3-5">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb3-6">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb3-7">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb3-8">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="cf" style="color: #003B4F;">while</span> heap:</span>
<span id="cb3-11">  element <span class="op" style="color: #5E5E5E;">=</span> heapq.heappop(heap)</span>
<span id="cb3-12">  <span class="bu" style="color: null;">print</span>(element, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4 5 7 8 </code></pre>
</div>
</div>
</section>
<section id="최솟값-구하기" class="level4">
<h4 class="anchored" data-anchor-id="최솟값-구하기">최솟값 구하기</h4>
<ul>
<li>원소의 삽입: heappush() 메서드</li>
<li>원소의 추출: heappop() 메서드</li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb5-2"></span>
<span id="cb5-3">heap <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb5-4"></span>
<span id="cb5-5">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb5-6">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-7">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb5-8">heapq.heappush(heap, <span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="bu" style="color: null;">print</span>(heap[<span class="dv" style="color: #AD0000;">0</span>])</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4</code></pre>
</div>
</div>
</section>
<section id="리스트를-힙으로-변환" class="level4">
<h4 class="anchored" data-anchor-id="리스트를-힙으로-변환">리스트를 힙으로 변환</h4>
<ul>
<li>heappush() 메서드를 이용해 하나씩 원소를 삽입하지 않을 수 있다.</li>
<li>heapify() 메서드는 새로운 리스트를 반환하지 않고, 리스트 내부를 직접 수정한다.</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb7-2"></span>
<span id="cb7-3">heap <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb7-4">heapq.heapify(heap)</span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="cf" style="color: #003B4F;">while</span> heap:</span>
<span id="cb7-7">  element <span class="op" style="color: #5E5E5E;">=</span> heapq.heappop(heap)</span>
<span id="cb7-8">  <span class="bu" style="color: null;">print</span>(element, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>1 3 4 5 7 8 9 </code></pre>
</div>
</div>
</section>
<section id="최대-힙max-heap-1" class="level4">
<h4 class="anchored" data-anchor-id="최대-힙max-heap-1">최대 힙(Max Heap)</h4>
<ul>
<li>파이썬의 heapq 라이브러리는 기본적으로 최소 힙 기능을 제공한다.</li>
<li>최대 힙을 위해서는 1 삽입과 2 추출할 때 키(key)에 음수(-) 부호를 취한다.</li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb9-2"></span>
<span id="cb9-3">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb9-4">heap <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb9-7">  heapq.heappush(heap, <span class="op" style="color: #5E5E5E;">-</span>x)</span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="cf" style="color: #003B4F;">while</span> heap:</span>
<span id="cb9-10">  x <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span>heapq.heappop(heap)</span>
<span id="cb9-11">  <span class="bu" style="color: null;">print</span>(x, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>9 8 7 5 4 3 1 </code></pre>
</div>
</div>
</section>
<section id="활용-예시-1-힙-정렬heap-sort" class="level4">
<h4 class="anchored" data-anchor-id="활용-예시-1-힙-정렬heap-sort">활용 예시 1 힙 정렬(Heap Sort)</h4>
<ul>
<li>단순히 힙에 원소를 넣었다가 꺼내는 것 만으로도 정렬을 수행할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="kw" style="color: #003B4F;">def</span> heap_sort(arr):</span>
<span id="cb11-4">  heap <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb11-5">  <span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb11-6">    heapq.heappush(heap, x)</span>
<span id="cb11-7"></span>
<span id="cb11-8">  result <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb11-9">  <span class="cf" style="color: #003B4F;">while</span> heap:</span>
<span id="cb11-10">    x <span class="op" style="color: #5E5E5E;">=</span> heapq.heappop(heap)</span>
<span id="cb11-11">    result.append(x)</span>
<span id="cb11-12"></span>
<span id="cb11-13">  <span class="cf" style="color: #003B4F;">return</span> result</span>
<span id="cb11-14"></span>
<span id="cb11-15"><span class="bu" style="color: null;">print</span>(heap_sort([<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">7</span>]))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1, 3, 4, 5, 7, 8, 9]</code></pre>
</div>
</div>
</section>
<section id="활용-예시-2-n번째로-작은-값" class="level4">
<h4 class="anchored" data-anchor-id="활용-예시-2-n번째로-작은-값">활용 예시 2 N번째로 작은 값</h4>
<ul>
<li>최소 힙이나 최대 힙을 사용하여 n번째로 작은 값이나 n번째로 큰 값을 얻을 수 있다.</li>
<li>힙(heap)을 만든 뒤에 추출(pop) 함수를 n번 호출한다.</li>
</ul>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;">def</span> n_smallest(n, arr):</span>
<span id="cb13-4">  heap <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb13-5">  <span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb13-6">    heapq.heappush(heap, x)</span>
<span id="cb13-7">    result <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb13-8">  <span class="cf" style="color: #003B4F;">for</span> _ <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n):</span>
<span id="cb13-9">    result <span class="op" style="color: #5E5E5E;">=</span> heapq.heappop(heap)</span>
<span id="cb13-10">  <span class="cf" style="color: #003B4F;">return</span> result</span>
<span id="cb13-11"></span>
<span id="cb13-12">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb13-13"><span class="bu" style="color: null;">print</span>(n_smallest(<span class="dv" style="color: #AD0000;">3</span>, arr))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4</code></pre>
</div>
</div>
<ul>
<li>파이썬에서는 N번째로 작은 값을 구하는 메서드를 제공한다.</li>
<li>nsmallest() 메서드는 가장 작은 n개의 값을 반환한다.</li>
</ul>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb15-2"></span>
<span id="cb15-3">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb15-4">result <span class="op" style="color: #5E5E5E;">=</span> heapq.nsmallest(<span class="dv" style="color: #AD0000;">3</span>, arr)</span>
<span id="cb15-5"><span class="bu" style="color: null;">print</span>(result[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>])</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4</code></pre>
</div>
</div>
</section>
<section id="활용-예시-3-n번째로-큰-값" class="level4">
<h4 class="anchored" data-anchor-id="활용-예시-3-n번째로-큰-값">활용 예시 3 N번째로 큰 값</h4>
<ul>
<li>파이썬에서는 N번째로 큰 값을 구하는 메서드를 제공한다.</li>
<li>nlargest() 메서드는 가장 큰 n개의 값을 반환한다.</li>
</ul>
<div class="cell" data-execution_count="9">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;">import</span> heapq</span>
<span id="cb17-2"></span>
<span id="cb17-3">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb17-4">result <span class="op" style="color: #5E5E5E;">=</span> heapq.nlargest(<span class="dv" style="color: #AD0000;">3</span>, arr)</span>
<span id="cb17-5"><span class="bu" style="color: null;">print</span>(result[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>])</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>7</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;">class</span> Heap(<span class="bu" style="color: null;">object</span>):</span>
<span id="cb19-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb19-3">        <span class="co" style="color: #5E5E5E;"># 첫번째 원소는 사용하지 않음</span></span>
<span id="cb19-4">        <span class="va" style="color: #111111;">self</span>.arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="va" style="color: #111111;">None</span>]</span>
<span id="cb19-5"></span>
<span id="cb19-6">    <span class="co" style="color: #5E5E5E;"># 원소 삽입(push)</span></span>
<span id="cb19-7">    <span class="kw" style="color: #003B4F;">def</span> push(<span class="va" style="color: #111111;">self</span>, x):</span>
<span id="cb19-8">        <span class="co" style="color: #5E5E5E;"># 마지막 위치에 원소를 삽입</span></span>
<span id="cb19-9">        <span class="va" style="color: #111111;">self</span>.arr.append(x)</span>
<span id="cb19-10">        <span class="co" style="color: #5E5E5E;"># 첫 원소인 경우 종료</span></span>
<span id="cb19-11">        <span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.arr) <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">2</span>:</span>
<span id="cb19-12">            <span class="cf" style="color: #003B4F;">return</span></span>
<span id="cb19-13">        <span class="co" style="color: #5E5E5E;"># 값의 크기를 비교하며 부모를 타고 올라감</span></span>
<span id="cb19-14">        i <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.arr) <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb19-15">        <span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb19-16">            parent <span class="op" style="color: #5E5E5E;">=</span> i <span class="op" style="color: #5E5E5E;">//</span> <span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb19-17">            <span class="co" style="color: #5E5E5E;"># 작은 값을 부모 쪽으로 계속 이동</span></span>
<span id="cb19-18">            <span class="cf" style="color: #003B4F;">if</span> <span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">&lt;=</span> parent <span class="kw" style="color: #003B4F;">and</span> <span class="va" style="color: #111111;">self</span>.arr[parent] <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="va" style="color: #111111;">self</span>.arr[i]:</span>
<span id="cb19-19">                <span class="va" style="color: #111111;">self</span>.arr[parent], <span class="va" style="color: #111111;">self</span>.arr[i] <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.arr[i], <span class="va" style="color: #111111;">self</span>.arr[parent]</span>
<span id="cb19-20">                i <span class="op" style="color: #5E5E5E;">=</span> parent</span>
<span id="cb19-21">            <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb19-22">                <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb19-23"></span>
<span id="cb19-24">    <span class="co" style="color: #5E5E5E;"># 원소 추출(pop)</span></span>
<span id="cb19-25">    <span class="kw" style="color: #003B4F;">def</span> pop(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb19-26">        <span class="co" style="color: #5E5E5E;"># 마지막 원소</span></span>
<span id="cb19-27">        i <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.arr) <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb19-28">        <span class="co" style="color: #5E5E5E;"># 남은 원소가 없다면 종료</span></span>
<span id="cb19-29">        <span class="cf" style="color: #003B4F;">if</span> i <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1</span>:</span>
<span id="cb19-30">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb19-31">        <span class="co" style="color: #5E5E5E;"># 루트 원소와 마지막 원소를 교체하여, 마지막 원소 추출</span></span>
<span id="cb19-32">        <span class="va" style="color: #111111;">self</span>.arr[<span class="dv" style="color: #AD0000;">1</span>], <span class="va" style="color: #111111;">self</span>.arr[i] <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.arr[i], <span class="va" style="color: #111111;">self</span>.arr[<span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb19-33">        result <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.arr.pop()</span>
<span id="cb19-34">        <span class="co" style="color: #5E5E5E;"># 루트(root)에서부터 원소 정렬</span></span>
<span id="cb19-35">        <span class="va" style="color: #111111;">self</span>.heapify()</span>
<span id="cb19-36">        <span class="cf" style="color: #003B4F;">return</span> result</span>
<span id="cb19-37"></span>
<span id="cb19-38">    <span class="co" style="color: #5E5E5E;"># 루트(root)에서부터 자식 방향으로 내려가며 재정렬</span></span>
<span id="cb19-39">    <span class="kw" style="color: #003B4F;">def</span> heapify(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb19-40">        <span class="co" style="color: #5E5E5E;"># 남은 원소가 1개 이하라면 종료</span></span>
<span id="cb19-41">        <span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.arr) <span class="op" style="color: #5E5E5E;">&lt;=</span> <span class="dv" style="color: #AD0000;">2</span>:</span>
<span id="cb19-42">            <span class="cf" style="color: #003B4F;">return</span></span>
<span id="cb19-43">        <span class="co" style="color: #5E5E5E;"># 루트 원소</span></span>
<span id="cb19-44">        i <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb19-45">        <span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb19-46">            <span class="co" style="color: #5E5E5E;"># 왼쪽 자식</span></span>
<span id="cb19-47">            child <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">*</span> i</span>
<span id="cb19-48">            <span class="co" style="color: #5E5E5E;"># 왼쪽 자식과 오른쪽 자식 중 더 작은 것을 선택</span></span>
<span id="cb19-49">            <span class="cf" style="color: #003B4F;">if</span> child <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.arr):</span>
<span id="cb19-50">                <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.arr[child] <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="va" style="color: #111111;">self</span>.arr[child <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>]:</span>
<span id="cb19-51">                    child <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb19-52">            <span class="co" style="color: #5E5E5E;"># 더 이상 자식이 없거나, 적절한 위치를 찾은 경우</span></span>
<span id="cb19-53">            <span class="cf" style="color: #003B4F;">if</span> child <span class="op" style="color: #5E5E5E;">&gt;=</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.arr) <span class="kw" style="color: #003B4F;">or</span> <span class="va" style="color: #111111;">self</span>.arr[child] <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="va" style="color: #111111;">self</span>.arr[i]:</span>
<span id="cb19-54">                <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb19-55">            <span class="co" style="color: #5E5E5E;"># 원소를 교체하며, 자식 방향으로 내려가기</span></span>
<span id="cb19-56">            <span class="va" style="color: #111111;">self</span>.arr[i], <span class="va" style="color: #111111;">self</span>.arr[child] <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.arr[child], <span class="va" style="color: #111111;">self</span>.arr[i]</span>
<span id="cb19-57">            i <span class="op" style="color: #5E5E5E;">=</span> child</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb20-2">heap <span class="op" style="color: #5E5E5E;">=</span> Heap()</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb20-5">    heap.push(x)</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb20-8">    x <span class="op" style="color: #5E5E5E;">=</span> heap.pop()</span>
<span id="cb20-9">    <span class="cf" style="color: #003B4F;">if</span> x <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb20-10">        <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb20-11">    <span class="bu" style="color: null;">print</span>(x, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>1 3 4 5 7 8 9 </code></pre>
</div>
</div>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;">import</span> random</span>
<span id="cb22-2"><span class="im" style="color: #00769E;">import</span> time</span>
<span id="cb22-3"></span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="co" style="color: #5E5E5E;"># N개의 무작위 데이터 생성</span></span>
<span id="cb22-6">arr <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb22-7">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">100000</span></span>
<span id="cb22-8"><span class="cf" style="color: #003B4F;">for</span> _ <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n):</span>
<span id="cb22-9">    arr.append(random.randint(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1000000</span>))</span>
<span id="cb22-10"></span>
<span id="cb22-11"><span class="co" style="color: #5E5E5E;"># 시간 측정 시작</span></span>
<span id="cb22-12">start_time <span class="op" style="color: #5E5E5E;">=</span> time.time()</span>
<span id="cb22-13"></span>
<span id="cb22-14"><span class="co" style="color: #5E5E5E;"># 힙에 모든 원소 삽입</span></span>
<span id="cb22-15">heap <span class="op" style="color: #5E5E5E;">=</span> Heap()</span>
<span id="cb22-16"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb22-17">    heap.push(x)</span>
<span id="cb22-18"></span>
<span id="cb22-19"><span class="co" style="color: #5E5E5E;"># 힙에서 모든 원소 추출</span></span>
<span id="cb22-20">result <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb22-21"><span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb22-22">    x <span class="op" style="color: #5E5E5E;">=</span> heap.pop()</span>
<span id="cb22-23">    <span class="cf" style="color: #003B4F;">if</span> x <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb22-24">        <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb22-25">    result.append(x)</span>
<span id="cb22-26"></span>
<span id="cb22-27"><span class="co" style="color: #5E5E5E;"># 시간 측정 종료</span></span>
<span id="cb22-28"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Elapsed time: </span><span class="sc" style="color: #5E5E5E;">{</span>time<span class="sc" style="color: #5E5E5E;">.</span>time() <span class="op" style="color: #5E5E5E;">-</span> start_time<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> seconds."</span>)</span>
<span id="cb22-29"></span>
<span id="cb22-30"><span class="co" style="color: #5E5E5E;"># 오름차순 정렬 여부 확인</span></span>
<span id="cb22-31">ascending <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span></span>
<span id="cb22-32"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span>):</span>
<span id="cb22-33">    <span class="cf" style="color: #003B4F;">if</span> result[i] <span class="op" style="color: #5E5E5E;">&gt;</span> result[i <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>]:</span>
<span id="cb22-34">        ascending <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span>
<span id="cb22-35"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"Sorted:"</span>, ascending)</span>
<span id="cb22-36"></span>
<span id="cb22-37"><span class="co" style="color: #5E5E5E;"># 가장 작은 5개 원소와 가장 큰 5개 원소 출력</span></span>
<span id="cb22-38"><span class="bu" style="color: null;">print</span>(result[:<span class="dv" style="color: #AD0000;">5</span>])</span>
<span id="cb22-39"><span class="bu" style="color: null;">print</span>(result[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>:])</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Elapsed time: 0.9669857025146484 seconds.
Sorted: True
[7, 8, 15, 28, 37]
[999961, 999966, 999968, 999980, 999986]</code></pre>
</div>
</div>
</section>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_priority_queue/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Pytorch Introduction</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_pytorch_introduction/index.html</link>
  <description><![CDATA[ 



<p>아직 GPU를 못잡았음 -&gt; Google Colab에서만 돌아감</p>
<section id="pytorch-overview" class="level2">
<h2 class="anchored" data-anchor-id="pytorch-overview">Pytorch Overview</h2>
<ul>
<li>PyTorch는 기계 학습 프레임워크(framework) 중 하나다.
<ul>
<li>PyTorch의 텐서(tensor)는 NumPy 배열과 매우 유사하다.</li>
<li>Tensor flow 보다 사용 비중이 늘어나고 있다.</li>
<li>Tensor: 고차원 데이터 (배열)를 의미, 3차원 배열 이상</li>
</ul></li>
<li>PyTorch를 사용하면, GPU 연동을 통해 효율적으로 딥러닝 모델을 학습할 수 있다.</li>
<li>Google Colab을 이용하면, 손쉽게 PyTorch를 시작할 수 있다.</li>
<li>Google Colab에서는 <b>[런타임]</b> - <b>[런타임 유형 변경]</b>에서 <b>GPU를 선택</b>할 수 있다.</li>
<li>Google Colab에선 pytoch가 내장되어 있기 때문에 따로 설치할 필요 없음</li>
</ul>
<section id="gpu-사용-여부-체크하기" class="level3">
<h3 class="anchored" data-anchor-id="gpu-사용-여부-체크하기">GPU 사용 여부 체크하기</h3>
<ul>
<li>텐서간의 연산을 수행할 때, 기본적으로 <strong>두 텐서가 같은 장치</strong>에 있어야 한다.</li>
<li>연산을 수행하는 텐서들을 모두 GPU에 올린 뒤에 연산을 수행한다.</li>
<li>GPU는 고차원 행렬곱같은 병렬 처리 연산에 최적화 되어 있다.</li>
</ul>
<p>tensor 자체가 고차원 배열이기 때문에 데이터를 불러오면 tensor 형태로 바꿀 수 있다.</p>
</section>
<section id="텐서tensor-객체-생성-기본-python-데이터-유형" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-객체-생성-기본-python-데이터-유형">텐서(tensor) 객체 생성 (기본 python 데이터 유형)</h3>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> torch</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># data initialization: 초기화된 데이터는 gpu에 있음</span></span>
<span id="cb1-4">data <span class="op" style="color: #5E5E5E;">=</span> [</span>
<span id="cb1-5">  [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb1-6">  [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb1-7">]</span>
<span id="cb1-8"></span>
<span id="cb1-9">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(data) <span class="co" style="color: #5E5E5E;"># list를 tensor 형태로 바꾸기. </span></span>
<span id="cb1-10"><span class="bu" style="color: null;">print</span>(x.is_cuda)</span>
<span id="cb1-11"></span>
<span id="cb1-12">x <span class="op" style="color: #5E5E5E;">=</span> x.cuda() <span class="co" style="color: #5E5E5E;"># CPU -&gt; GPU로 옮기기</span></span>
<span id="cb1-13"><span class="bu" style="color: null;">print</span>(x.is_cuda)</span>
<span id="cb1-14"></span>
<span id="cb1-15">x <span class="op" style="color: #5E5E5E;">=</span> x.cpu() <span class="co" style="color: #5E5E5E;"># GPU -&gt; CPU로 옮기기</span></span>
<span id="cb1-16"><span class="bu" style="color: null;">print</span>(x.is_cuda)</span></code></pre></div>
</details>
</div>
<ul>
<li><b>서로 다른 장치(device)</b>에 있는 텐서끼리 연산을 수행하면 오류가 발생한다.</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># GPU 장치의 텐서</span></span>
<span id="cb2-2">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb2-3">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb2-4">    [<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb2-5">]).cuda()</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;"># CPU 장치의 텐서</span></span>
<span id="cb2-8">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb2-9">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>],</span>
<span id="cb2-10">    [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb2-11">])</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;"># print(torch.matmul(a, b)) # 오류 발생</span></span>
<span id="cb2-14"><span class="bu" style="color: null;">print</span>(torch.matmul(a.cpu(), b))</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-소개-및-생성-방법" class="level3">
<h3 class="anchored" data-anchor-id="텐서-소개-및-생성-방법"><b>2. 텐서 소개 및 생성 방법</b></h3>
<section id="텐서의-속성" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-속성"><b>1) 텐서의 속성</b></h4>
<ul>
<li>텐서의 <b>기본 속성</b>으로는 다음과 같은 것들이 있다.
<ul>
<li>모양(shape): 텐서 객체의 차원을 확인할 수 있다. (tensor_var.shape)</li>
<li>자료형(data type) : 텐서의 기본 자료형은 float type (tensor_var.dtype)</li>
<li>저장된 장치: CPU인지 GPU인지 확인 (tensor_var.device)</li>
</ul></li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.rand(<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="bu" style="color: null;">print</span>(tensor)</span>
<span id="cb3-4"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Shape: </span><span class="sc" style="color: #5E5E5E;">{</span>tensor<span class="sc" style="color: #5E5E5E;">.</span>shape<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb3-5"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Data type: </span><span class="sc" style="color: #5E5E5E;">{</span>tensor<span class="sc" style="color: #5E5E5E;">.</span>dtype<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb3-6"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Device: </span><span class="sc" style="color: #5E5E5E;">{</span>tensor<span class="sc" style="color: #5E5E5E;">.</span>device<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-초기화" class="level4">
<h4 class="anchored" data-anchor-id="텐서-초기화"><b>2) 텐서 초기화</b></h4>
<ul>
<li>리스트 데이터에서 직접 텐서를 초기화할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">data <span class="op" style="color: #5E5E5E;">=</span> [</span>
<span id="cb4-2">  [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb4-3">  [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb4-4">]</span>
<span id="cb4-5">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(data)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="bu" style="color: null;">print</span>(x)</span></code></pre></div>
</details>
</div>
<ul>
<li>NumPy 배열에서 텐서를 초기화할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">5</span>])</span>
<span id="cb5-2">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb5-3"></span>
<span id="cb5-4">c <span class="op" style="color: #5E5E5E;">=</span> (a <span class="op" style="color: #5E5E5E;">+</span> b).numpy() <span class="co" style="color: #5E5E5E;"># tensor -&gt; numpy array</span></span>
<span id="cb5-5"><span class="bu" style="color: null;">print</span>(c)</span>
<span id="cb5-6"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">type</span>(c)) <span class="co" style="color: #5E5E5E;"># ndarray: numpy array </span></span>
<span id="cb5-7"></span>
<span id="cb5-8">result <span class="op" style="color: #5E5E5E;">=</span> c <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb5-9">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.from_numpy(result) <span class="co" style="color: #5E5E5E;"># numpy array -&gt; tensor </span></span>
<span id="cb5-10"><span class="bu" style="color: null;">print</span>(tensor)</span>
<span id="cb5-11"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">type</span>(tensor))</span></code></pre></div>
</details>
</div>
</section>
<section id="다른-텐서로부터-data를-가져와-텐서-초기화하기" class="level4">
<h4 class="anchored" data-anchor-id="다른-텐서로부터-data를-가져와-텐서-초기화하기"><b>3) 다른 텐서로부터 data를 가져와 텐서 초기화하기</b></h4>
<ul>
<li>다른 텐서의 정보를 토대로 텐서를 초기화할 수 있다.</li>
<li><b>텐서의 속성</b>은 모양(shape)과 자료형(data type)이 있다</li>
</ul>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb6-2">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">7</span>],</span>
<span id="cb6-3">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb6-4">])</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;"># x와 같은 shape와 data type을 가지지만, 값이 1인 텐서 생성</span></span>
<span id="cb6-7">x_ones <span class="op" style="color: #5E5E5E;">=</span> torch.ones_like(x)</span>
<span id="cb6-8"><span class="bu" style="color: null;">print</span>(x_ones)</span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;"># x와 같은 shape를 가지되, 자료형은 float으로 덮어쓰고, 값은 랜덤으로 채우기</span></span>
<span id="cb6-10">x_rand <span class="op" style="color: #5E5E5E;">=</span> torch.rand_like(x, dtype<span class="op" style="color: #5E5E5E;">=</span>torch.float32) <span class="co" style="color: #5E5E5E;"># uniform distribution [0, 1)</span></span>
<span id="cb6-11"><span class="bu" style="color: null;">print</span>(x_rand)</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="텐서의-형변환-및-차원-조작" class="level3">
<h3 class="anchored" data-anchor-id="텐서의-형변환-및-차원-조작"><b>3. 텐서의 형변환 및 차원 조작</b></h3>
<ul>
<li>텐서는 넘파이(NumPy) 배열처럼 조작할 수 있다.</li>
</ul>
<section id="텐서의-특정-차원-접근하기" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-특정-차원-접근하기"><b>1) 텐서의 특정 차원 접근하기</b></h4>
<ul>
<li>텐서의 원하는 차원에 접근할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb7-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb7-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb7-4">    [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">11</span>, <span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb7-5">])</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="bu" style="color: null;">print</span>(tensor[<span class="dv" style="color: #AD0000;">0</span>]) <span class="co" style="color: #5E5E5E;"># the first row</span></span>
<span id="cb7-8"><span class="bu" style="color: null;">print</span>(tensor[:, <span class="dv" style="color: #AD0000;">0</span>]) <span class="co" style="color: #5E5E5E;"># indexing the first column with all the rows</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;"># whatever the previous columns are, indexing the last column with all the rows</span></span>
<span id="cb7-10"><span class="bu" style="color: null;">print</span>(tensor[..., <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]) </span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-이어붙이기concatenate" class="level4">
<h4 class="anchored" data-anchor-id="텐서-이어붙이기concatenate"><b>2) 텐서 이어붙이기(Concatenate)</b></h4>
<ul>
<li>두 텐서를 이어 붙여 연결하여 새로운 텐서를 만들 수 있다.</li>
</ul>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb8-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb8-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb8-4">    [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">11</span>, <span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb8-5">])</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;"># dim: 텐서를 이어 붙이기 위한 축</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;"># 0번 축(행)을 기준으로 이어 붙이기: 즉, row bind로 연결</span></span>
<span id="cb8-9">result <span class="op" style="color: #5E5E5E;">=</span> torch.cat([tensor, tensor, tensor], dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>) </span>
<span id="cb8-10"><span class="bu" style="color: null;">print</span>(result)</span>
<span id="cb8-11"><span class="bu" style="color: null;">print</span>(result.shape) <span class="co" style="color: #5E5E5E;"># 9x4</span></span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;"># 1번 축(열)을 기준으로 이어 붙이기: 즉, column bind로 연결</span></span>
<span id="cb8-14">result <span class="op" style="color: #5E5E5E;">=</span> torch.cat([tensor, tensor, tensor], dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)  </span>
<span id="cb8-15"><span class="bu" style="color: null;">print</span>(result)</span>
<span id="cb8-16"><span class="bu" style="color: null;">print</span>(result.shape) <span class="co" style="color: #5E5E5E;"># 3x12</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-형변환type-casting" class="level4">
<h4 class="anchored" data-anchor-id="텐서-형변환type-casting"><b>3) 텐서 형변환(Type Casting)</b></h4>
<ul>
<li>텐서의 자료형(정수, 실수 등)을 변환할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="9">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">2</span>], dtype<span class="op" style="color: #5E5E5E;">=</span>torch.<span class="bu" style="color: null;">int</span>) <span class="co" style="color: #5E5E5E;"># integers</span></span>
<span id="cb9-2">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">5.0</span>]) <span class="co" style="color: #5E5E5E;"># real numbers</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="bu" style="color: null;">print</span>(a.dtype)</span>
<span id="cb9-5"><span class="bu" style="color: null;">print</span>(b.dtype)</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;"># 텐서 a는 자동으로 float32형으로 형변환 처리</span></span>
<span id="cb9-8"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b)</span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;"># 텐서 b를 int32형으로 형변환하여 덧셈 수행</span></span>
<span id="cb9-10"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b.<span class="bu" style="color: null;">type</span>(torch.int32))</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-모양-변경" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-모양-변경"><b>4) 텐서의 모양 변경</b></h4>
<ul>
<li>view()는 텐서의 shape를 변경할 때 사용한다.</li>
<li>이때, 텐서(tensor)의 순서는 변경되지 않는다.</li>
</ul>
<div class="cell" data-execution_count="10">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># view()는 텐서의 모양을 변경할 때 사용한다.</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;"># 이때, 텐서(tensor)의 순서는 변경되지 않는다.</span></span>
<span id="cb10-3">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>])</span>
<span id="cb10-4">b <span class="op" style="color: #5E5E5E;">=</span> a.view(<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>) <span class="co" style="color: #5E5E5E;"># 4*2=8 개, # call by reference</span></span>
<span id="cb10-5"><span class="bu" style="color: null;">print</span>(b)</span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;"># a의 값을 변경하면 b도 변경: 메모리 주소값을 공유</span></span>
<span id="cb10-8">a[<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">7</span></span>
<span id="cb10-9"><span class="bu" style="color: null;">print</span>(b)</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;"># a의 값을 복사(copy)한 뒤에 변경, 새로운 메모리값 할당</span></span>
<span id="cb10-12">c <span class="op" style="color: #5E5E5E;">=</span> a.clone().view(<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>) <span class="co" style="color: #5E5E5E;"># call by value, 아예 다른 객체</span></span>
<span id="cb10-13">a[<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">9</span></span>
<span id="cb10-14"><span class="bu" style="color: null;">print</span>(c)</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-차원-교환" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-차원-교환"><b>5) 텐서의 차원 교환</b></h4>
<ul>
<li>하나의 텐서에서 특정한 차원끼리 순서를 교체할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.rand((<span class="dv" style="color: #AD0000;">64</span>, <span class="dv" style="color: #AD0000;">32</span>, <span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb11-2"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb11-3"></span>
<span id="cb11-4">b <span class="op" style="color: #5E5E5E;">=</span> a.permute(<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>) <span class="co" style="color: #5E5E5E;"># 차원을 바꿔줌</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;"># (2번째 축, 1번째 축, 0번째 축)의 형태가 되도록 한다.</span></span>
<span id="cb11-6"><span class="bu" style="color: null;">print</span>(b.shape)</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="텐서의-연산과-함수" class="level3">
<h3 class="anchored" data-anchor-id="텐서의-연산과-함수"><b>4. 텐서의 연산과 함수</b></h3>
<section id="텐서의-연산" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-연산"><b>1) 텐서의 연산</b></h4>
<ul>
<li>텐서에 대하여 사칙연산 등 기본적인 연산을 수행할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># 같은 크기를 가진 두 개의 텐서에 대하여 사칙연산 가능</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;"># 기본적으로 요소별(element-wise) 연산, 행렬의 연산과 다름</span></span>
<span id="cb12-3">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb12-4">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb12-5">    [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb12-6">])</span>
<span id="cb12-7">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb12-8">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>],</span>
<span id="cb12-9">    [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb12-10">])</span>
<span id="cb12-11"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b)</span>
<span id="cb12-12"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">-</span> b)</span>
<span id="cb12-13"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">*</span> b)</span>
<span id="cb12-14"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">/</span> b)</span></code></pre></div>
</details>
</div>
<ul>
<li>행렬 곱을 수행할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="13">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb13-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb13-3">    [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb13-4">])</span>
<span id="cb13-5">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb13-6">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>],</span>
<span id="cb13-7">    [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb13-8">])</span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;"># 행렬 곱(matrix multiplication) 수행</span></span>
<span id="cb13-10"><span class="bu" style="color: null;">print</span>(a.matmul(b))</span>
<span id="cb13-11"><span class="bu" style="color: null;">print</span>(torch.matmul(a, b))</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-평균-함수" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-평균-함수"><b>2) 텐서의 평균 함수</b></h4>
<ul>
<li>텐서의 평균(mean)을 계산할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="14">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb14-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb14-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb14-4">])</span>
<span id="cb14-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb14-6"><span class="bu" style="color: null;">print</span>(a.mean()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 평균</span></span>
<span id="cb14-7"><span class="bu" style="color: null;">print</span>(a.mean(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 평균 계산</span></span>
<span id="cb14-8"><span class="bu" style="color: null;">print</span>(a.mean(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 평균 계산</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-합계-함수" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-합계-함수"><b>3) 텐서의 합계 함수</b></h4>
<ul>
<li>텐서의 합계(sum)를 계산할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="15">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb15-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb15-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb15-4">])</span>
<span id="cb15-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb15-6"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">sum</span>()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 합계</span></span>
<span id="cb15-7"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">sum</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 합계 계산</span></span>
<span id="cb15-8"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">sum</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 합계 계산</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-최대-함수" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-최대-함수"><b>4) 텐서의 최대 함수</b></h4>
<ul>
<li><b>max() 함수</b>는 원소의 최댓값을 반환한다.</li>
<li><b>argmax() 함수</b>는 가장 큰 원소(최댓값)의 인덱스를 반환한다.</li>
</ul>
<div class="cell" data-execution_count="16">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb16-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb16-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb16-4">])</span>
<span id="cb16-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb16-6"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">max</span>()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 최댓값</span></span>
<span id="cb16-7"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">max</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 최댓값 계산</span></span>
<span id="cb16-8"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">max</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 최댓값 계산</span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="17">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb17-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb17-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb17-4">])</span>
<span id="cb17-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb17-6"><span class="bu" style="color: null;">print</span>(a.argmax()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 최댓값의 인덱스</span></span>
<span id="cb17-7"><span class="bu" style="color: null;">print</span>(a.argmax(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 최댓값의 인덱스 계산</span></span>
<span id="cb17-8"><span class="bu" style="color: null;">print</span>(a.argmax(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 최댓값의 인덱스 계산</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-차원-줄이기-혹은-늘리기" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-차원-줄이기-혹은-늘리기"><b>5) 텐서의 차원 줄이기 혹은 늘리기</b></h4>
<ul>
<li><b>unsqueeze() 함수</b>는 크기가 1인 차원을 추가한다.
<ul>
<li>배치(batch) 차원을 추가하기 위한 목적으로 흔히 사용된다.</li>
</ul></li>
<li><b>squeeze() 함수</b>는 크기가 1인 차원을 제거한다.</li>
</ul>
<div class="cell" data-execution_count="18">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb18-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb18-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb18-4">])</span>
<span id="cb18-5"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;"># 첫 번째 축에 차원 추가</span></span>
<span id="cb18-8">a <span class="op" style="color: #5E5E5E;">=</span> a.unsqueeze(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb18-9"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb18-10"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;"># 네 번째 축에 차원 추가</span></span>
<span id="cb18-13">a <span class="op" style="color: #5E5E5E;">=</span> a.unsqueeze(<span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb18-14"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb18-15"><span class="bu" style="color: null;">print</span>(a.shape)</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="19">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;"># 크기가 1인 차원 제거</span></span>
<span id="cb19-2">a <span class="op" style="color: #5E5E5E;">=</span> a.squeeze()</span>
<span id="cb19-3"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb19-4"><span class="bu" style="color: null;">print</span>(a.shape)</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="자동-미분과-기울기gradient" class="level3">
<h3 class="anchored" data-anchor-id="자동-미분과-기울기gradient"><b>5. 자동 미분과 기울기(Gradient)</b></h3>
<ul>
<li>PyTorch에서는 연산에 대하여 자동 미분을 수행할 수 있다.</li>
<li>각 텐서 변수에 대해 gradient추적이 가능하여 텐서 연산에 각 텐서 변수의 기울기(민감도)를 추적할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="20">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;">import</span> torch</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;"># requires_grad를 설정할 때만 기울기 추적</span></span>
<span id="cb20-4">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb20-5">y <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">1.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb20-6">z <span class="op" style="color: #5E5E5E;">=</span> x <span class="op" style="color: #5E5E5E;">+</span> y <span class="co" style="color: #5E5E5E;">#z를 연산하는데 x와 y의 민감도를 추적할 수 있다.</span></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;"># x or y의 민감도 즉 gradient가 크다는 것은 변수의 값이 조금만 바뀌어도 z값에 큰 영향을 미친다는것을 의미 </span></span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="bu" style="color: null;">print</span>(z) <span class="co" style="color: #5E5E5E;"># [4.0, 6.0]</span></span>
<span id="cb20-10"><span class="bu" style="color: null;">print</span>(z.grad_fn) <span class="co" style="color: #5E5E5E;"># 더하기(add), </span></span>
<span id="cb20-11"><span class="co" style="color: #5E5E5E;"># AddBackward: 기울기를 구하는 과정에서 Add를 사용한다. 뭔뜻인지? ㅋ</span></span>
<span id="cb20-12"><span class="co" style="color: #5E5E5E;"># Add를 연산하는 과정에서 기울기를 구하는거 아님?</span></span>
<span id="cb20-13"></span>
<span id="cb20-14">out <span class="op" style="color: #5E5E5E;">=</span> z.mean()</span>
<span id="cb20-15"><span class="bu" style="color: null;">print</span>(out) <span class="co" style="color: #5E5E5E;"># 5.0</span></span>
<span id="cb20-16"><span class="bu" style="color: null;">print</span>(out.grad_fn) <span class="co" style="color: #5E5E5E;"># 평균(mean)</span></span>
<span id="cb20-17"></span>
<span id="cb20-18">out.backward() <span class="co" style="color: #5E5E5E;"># scalar에 대하여 모든 연산의 기울기를 추적 가능</span></span>
<span id="cb20-19"><span class="bu" style="color: null;">print</span>(x.grad) <span class="co" style="color: #5E5E5E;"># tensor([0.5000, 0.5000]), 0.5: x의 값이 1만큼 바뀔 때 output값이 0.5만큼 바뀐다는것을 의미</span></span>
<span id="cb20-20"><span class="bu" style="color: null;">print</span>(y.grad) <span class="co" style="color: #5E5E5E;"># tensor([0.5000, 0.5000]),</span></span>
<span id="cb20-21"><span class="bu" style="color: null;">print</span>(z.grad) <span class="co" style="color: #5E5E5E;"># leaf variable에 대해서만 gradient 추적이 가능하다. 따라서 None.</span></span></code></pre></div>
</details>
</div>
<ul>
<li>일반적으로 모델을 학습할 때는 <b>기울기(gradient)를 추적</b>한다.
<ul>
<li>왜냐면, 가중치를 기울기에 따라 업데이트 해야하기 때문.</li>
</ul></li>
<li>하지만, 학습된 모델을 사용할 때는 파라미터를 업데이트하지 않으므로, 기울기를 추적하지 않는 것이 일반적이다.</li>
</ul>
<div class="cell" data-execution_count="21">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">temp <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)<span class="co" style="color: #5E5E5E;"># tape,라 부름. 왜?</span></span>
<span id="cb21-2"><span class="bu" style="color: null;">print</span>(temp.requires_grad)</span>
<span id="cb21-3"><span class="bu" style="color: null;">print</span>((temp <span class="op" style="color: #5E5E5E;">**</span> <span class="dv" style="color: #AD0000;">2</span>).requires_grad)</span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="co" style="color: #5E5E5E;"># 기울기 추적을 하지 않기 때문에 계산 속도가 더 빠르다.</span></span>
<span id="cb21-6"><span class="cf" style="color: #003B4F;">with</span> torch.no_grad():</span>
<span id="cb21-7">    temp <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb21-8">    <span class="bu" style="color: null;">print</span>(temp.requires_grad)</span>
<span id="cb21-9">    <span class="bu" style="color: null;">print</span>((temp <span class="op" style="color: #5E5E5E;">**</span> <span class="dv" style="color: #AD0000;">2</span>).requires_grad)</span></code></pre></div>
</details>
</div>


</section>
</section>

 ]]></description>
  <category>ML</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_pytorch_introduction/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Tensor Introduction</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_tf_introduction/index.html</link>
  <description><![CDATA[ 



<section id="tensor-flow" class="level2">
<h2 class="anchored" data-anchor-id="tensor-flow">Tensor Flow</h2>
<ul>
<li>pytorch 이전 까지 deep learning을 위해 가장 많이 사용되었던 Framework</li>
<li>2020년 이후로 pytorch를 더 많이 사용하지만 여전히 많은 사람들이 Tensor Flow 사용</li>
<li>데이터 자료형으로 텐서(tensor) 객체를 사용</li>
<li>Tensorflow에서는 텐서(tensor)를 NumPy 배열처럼 사용할 수 있다.</li>
<li>GPU 사용 지원</li>
</ul>
<section id="gpu-사용-여부-체크하기" class="level3">
<h3 class="anchored" data-anchor-id="gpu-사용-여부-체크하기">GPU 사용 여부 체크하기</h3>
<ul>
<li>GPU를 사용하면 TensorFlow나 pytorch에서 딥러닝 모델을 효과적 구현 가능</li>
<li>각 텐서(tensor)와 연산이 어떠한 장치에 할당되었는지 출력할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> tensorflow <span class="im" style="color: #00769E;">as</span> tf</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;"># placement 함수: 각 텐서와 연산이 어떠한 장치에 할당되었는지 출력하기</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;">#tf.debugging.set_log_device_placement(True)</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;"># 텐서 생성</span></span>
<span id="cb1-6">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb1-7">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb1-8">    [<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb1-9">])</span>
<span id="cb1-10">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb1-11">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>],</span>
<span id="cb1-12">    [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb1-13">])</span>
<span id="cb1-14"></span>
<span id="cb1-15">c <span class="op" style="color: #5E5E5E;">=</span> tf.matmul(a, b)</span>
<span id="cb1-16"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"matrix multiplication: "</span>, c)</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;">#tf.debugging.set_log_device_placement(False)</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>matrix multiplication:  tf.Tensor(
[[12 14]
 [24 28]], shape=(2, 2), dtype=int32)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;">from</span> tensorflow.python.client <span class="im" style="color: #00769E;">import</span> device_lib</span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;"># 구체적으로 사용 중인 장치(device) 정보 출력</span></span>
<span id="cb3-3">device_lib.list_local_devices()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>[name: "/device:CPU:0"
 device_type: "CPU"
 memory_limit: 268435456
 locality {
 }
 incarnation: 6340912646566651041
 xla_global_id: -1]</code></pre>
</div>
</div>
</section>
<section id="텐서-소개-및-생성-방법" class="level3">
<h3 class="anchored" data-anchor-id="텐서-소개-및-생성-방법">텐서 소개 및 생성 방법</h3>
<ul>
<li>TensorFlow에서의 텐서(tensor)는 기능적으로 넘파이(NumPy)와 매우 유사하다.</li>
<li>기본적으로 <b>다차원 배열</b>을 처리하기에 적합한 자료구조로 이해할 수 있다.</li>
<li>TensorFlow의 텐서는 “자동 미분” 기능을 제공한다.</li>
<li>TensorFlow는 기능적으로 Pytorch와 거의 같음, 하지만 문법이 불편함</li>
<li>TensorFlow 2.0부터는 pytorch와 문법적으로 유사</li>
</ul>
</section>
<section id="tensor" class="level3">
<h3 class="anchored" data-anchor-id="tensor">Tensor</h3>
<ul>
<li>특징
<ul>
<li>기본적으로 <b>다차원 배열</b>을 처리하기에 적합한 자료구조로 이해할 수 있다</li>
<li>TensorFlow에서의 텐서(tensor)는 기능적으로 넘파이(NumPy)의 ndarray 객체와 유사</li>
<li>기본 python 데이터 유형을 자동 변환 (e.g., list)</li>
<li>TensorFlow의 텐서는 “자동 미분” 기능을 제공한다.</li>
</ul></li>
<li>속성
<ul>
<li>크기 (shape)</li>
<li>자료형 (data type)</li>
<li>저장된 장치, 가속기 메모리에 상주 가능 (e.g., GPU )</li>
</ul></li>
<li>Numpy 배열과 tf.Tensor의 차이점
<ul>
<li>텐서는 가속기 메모리(GPU, TPU)에서 사용 가능</li>
<li>텐서는 불변성(immutable)</li>
</ul></li>
</ul>
</section>
<section id="tensor-초기화" class="level3">
<h3 class="anchored" data-anchor-id="tensor-초기화">Tensor 초기화</h3>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># 기본적인 모양(shape), 자료형(data type) 출력</span></span>
<span id="cb5-2"></span>
<span id="cb5-3">data <span class="op" style="color: #5E5E5E;">=</span> [</span>
<span id="cb5-4">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb5-5">    [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb5-6">]</span>
<span id="cb5-7">x <span class="op" style="color: #5E5E5E;">=</span> tf.constant(data) <span class="co" style="color: #5E5E5E;"># list -&gt; tensor object로 변환</span></span>
<span id="cb5-8"><span class="bu" style="color: null;">print</span>(x)</span>
<span id="cb5-9"><span class="bu" style="color: null;">print</span>(tf.rank(x)) <span class="co" style="color: #5E5E5E;"># 축(axis)의 개수 출력 = 차원의 개수 출력</span></span>
<span id="cb5-10"></span>
<span id="cb5-11">data <span class="op" style="color: #5E5E5E;">=</span> tf.constant(<span class="st" style="color: #20794D;">"String"</span>) <span class="co" style="color: #5E5E5E;"># 문자열 (string)도 int형 tensor로 변환 가능</span></span>
<span id="cb5-12"><span class="bu" style="color: null;">print</span>(data)</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;"># NumPy 배열에서 텐서를 초기화할 수 있다.</span></span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;">## 파이썬의 리스트 넘파이는 compatible하다. 상호보완적으로 교체가 가능</span></span>
<span id="cb5-17"></span>
<span id="cb5-18">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([<span class="dv" style="color: #AD0000;">5</span>])</span>
<span id="cb5-19">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([<span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb5-20"></span>
<span id="cb5-21">c <span class="op" style="color: #5E5E5E;">=</span> (a <span class="op" style="color: #5E5E5E;">+</span> b).numpy()</span>
<span id="cb5-22"><span class="bu" style="color: null;">print</span>(c)</span>
<span id="cb5-23"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">type</span>(c))</span>
<span id="cb5-24"></span>
<span id="cb5-25">result <span class="op" style="color: #5E5E5E;">=</span> c <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb5-26">tensor <span class="op" style="color: #5E5E5E;">=</span> tf.convert_to_tensor(result) <span class="co" style="color: #5E5E5E;"># numpy -&gt; tensor</span></span>
<span id="cb5-27"><span class="bu" style="color: null;">print</span>(tensor)</span>
<span id="cb5-28"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">type</span>(tensor))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(
[[1 2]
 [3 4]], shape=(2, 2), dtype=int32)
tf.Tensor(2, shape=(), dtype=int32)
tf.Tensor(b'String', shape=(), dtype=string)
[12]
&lt;class 'numpy.ndarray'&gt;
tf.Tensor([120], shape=(1,), dtype=int32)
&lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;</code></pre>
</div>
</div>
</section>
<section id="텐서tensor-객체-생성-기본-python-데이터-유형" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-객체-생성-기본-python-데이터-유형">텐서(tensor) 객체 생성 (기본 python 데이터 유형)</h3>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="bu" style="color: null;">print</span>(tf.math.add(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>))</span>
<span id="cb7-4"><span class="bu" style="color: null;">print</span>(tf.math.add([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>], [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]))</span>
<span id="cb7-5"><span class="bu" style="color: null;">print</span>(tf.math.square(<span class="dv" style="color: #AD0000;">5</span>))</span>
<span id="cb7-6"><span class="bu" style="color: null;">print</span>(tf.math.reduce_sum([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>]))</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;"># Operator overloading is also supported</span></span>
<span id="cb7-9"><span class="bu" style="color: null;">print</span>(tf.math.square(<span class="dv" style="color: #AD0000;">2</span>) <span class="op" style="color: #5E5E5E;">+</span> tf.math.square(<span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb7-10"></span>
<span id="cb7-11">data <span class="op" style="color: #5E5E5E;">=</span> [</span>
<span id="cb7-12">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb7-13">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb7-14">]</span>
<span id="cb7-15">x <span class="op" style="color: #5E5E5E;">=</span> tf.constant(data)</span>
<span id="cb7-16"><span class="bu" style="color: null;">print</span>(x)</span>
<span id="cb7-17"><span class="bu" style="color: null;">print</span>(x.shape)</span>
<span id="cb7-18"><span class="bu" style="color: null;">print</span>(x.dtype)</span>
<span id="cb7-19"><span class="bu" style="color: null;">print</span>(tf.rank(x)) <span class="co" style="color: #5E5E5E;"># tf.rank() : 축(axis)의 개수 출력 (차원의 개수)</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(3, shape=(), dtype=int32)
tf.Tensor([4 6], shape=(2,), dtype=int32)
tf.Tensor(25, shape=(), dtype=int32)
tf.Tensor(6, shape=(), dtype=int32)
tf.Tensor(13, shape=(), dtype=int32)
tf.Tensor(
[[1 2]
 [3 4]], shape=(2, 2), dtype=int32)
(2, 2)
&lt;dtype: 'int32'&gt;
tf.Tensor(2, shape=(), dtype=int32)</code></pre>
</div>
</div>
</section>
<section id="텐서tensor-객체-생성-numpy" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-객체-생성-numpy">텐서(tensor) 객체 생성 (numpy)</h3>
<ul>
<li>TensorFlow 연산은 자동으로 NumPy 배열을 텐서(tensor)로 변환</li>
<li>NumPy 연산은 자동으로 텐서(tensor)를 NumPy 배열로 변환</li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb9-2">ndarray <span class="op" style="color: #5E5E5E;">=</span> np.ones([<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>])</span>
<span id="cb9-3">ndarray</span>
<span id="cb9-4"></span>
<span id="cb9-5">tensor <span class="op" style="color: #5E5E5E;">=</span> tf.math.multiply(ndarray, <span class="dv" style="color: #AD0000;">42</span>)</span>
<span id="cb9-6">tensor</span>
<span id="cb9-7">np.add(tensor, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb9-8">tensor.numpy() <span class="co" style="color: #5E5E5E;"># numpy.ndarray</span></span>
<span id="cb9-9"><span class="bu" style="color: null;">type</span>(tensor.numpy())</span>
<span id="cb9-10">ctensor <span class="op" style="color: #5E5E5E;">=</span> tf.constant(ndarray)</span>
<span id="cb9-11">ctensor</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>&lt;tf.Tensor: shape=(3, 3), dtype=float64, numpy=
array([[1., 1., 1.],
       [1., 1., 1.],
       [1., 1., 1.]])&gt;</code></pre>
</div>
</div>
</section>
<section id="다른-텐서로부터-텐서-초기화" class="level3">
<h3 class="anchored" data-anchor-id="다른-텐서로부터-텐서-초기화">다른 텐서로부터 텐서 초기화</h3>
<ul>
<li>텐서(tensor) 객체 생성 (tf.Tensor)</li>
<li>tf.ones_like(x) : 값이 1이고 x와 shape &amp; data type이 동일한 텐서 생성</li>
</ul>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb11-2">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">7</span>],</span>
<span id="cb11-3">    [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb11-4">])</span>
<span id="cb11-5"></span>
<span id="cb11-6">x_ones <span class="op" style="color: #5E5E5E;">=</span> tf.ones_like(x)</span>
<span id="cb11-7">x_ones</span>
<span id="cb11-8">     </span>
<span id="cb11-9"></span>
<span id="cb11-10">x <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb11-11">    [<span class="fl" style="color: #AD0000;">5.1</span>, <span class="fl" style="color: #AD0000;">7.0</span>],</span>
<span id="cb11-12">    [<span class="fl" style="color: #AD0000;">3.4</span>, <span class="fl" style="color: #AD0000;">2.1</span>]</span>
<span id="cb11-13">])</span>
<span id="cb11-14"></span>
<span id="cb11-15">x_ones <span class="op" style="color: #5E5E5E;">=</span> tf.ones_like(x)</span>
<span id="cb11-16">x_ones</span>
<span id="cb11-17"></span>
<span id="cb11-18"><span class="co" style="color: #5E5E5E;"># tf.random.uniform(shape, dtype) : 랜덤 값으로 원하는 shape과 dtype을 갖는 텐서 생성</span></span>
<span id="cb11-19">x_rand <span class="op" style="color: #5E5E5E;">=</span> tf.random.uniform(shape<span class="op" style="color: #5E5E5E;">=</span>x.shape, dtype<span class="op" style="color: #5E5E5E;">=</span>tf.float32)</span>
<span id="cb11-20">x_rand</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>&lt;tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[0.5591178 , 0.3012141 ],
       [0.05377734, 0.12353182]], dtype=float32)&gt;</code></pre>
</div>
</div>
</section>
<section id="텐서tensor-사용" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-사용">텐서(tensor) 사용</h3>
<p>특정 차원 접근</p>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">tensor <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb13-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb13-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb13-4">    [<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">10</span>,<span class="dv" style="color: #AD0000;">11</span>,<span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb13-5">])</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="bu" style="color: null;">print</span>(tensor[<span class="dv" style="color: #AD0000;">0</span>])       <span class="co" style="color: #5E5E5E;"># first row</span></span>
<span id="cb13-8"><span class="bu" style="color: null;">print</span>(tensor[:, <span class="dv" style="color: #AD0000;">0</span>])    <span class="co" style="color: #5E5E5E;"># first column</span></span>
<span id="cb13-9"><span class="bu" style="color: null;">print</span>(tensor[..., <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]) <span class="co" style="color: #5E5E5E;"># last column</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor([1 2 3 4], shape=(4,), dtype=int32)
tf.Tensor([1 5 9], shape=(3,), dtype=int32)
tf.Tensor([ 4  8 12], shape=(3,), dtype=int32)</code></pre>
</div>
</div>
<p>텐서 Concatenate</p>
<p>axis : 어느 축을 기준으로 객체를 이어붙일지 결정</p>
<p>axis=0 : 0번째 축 (=row) axis=1 : 1번째 축 (=column)</p>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">tensor <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb15-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb15-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb15-4">    [<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">10</span>,<span class="dv" style="color: #AD0000;">11</span>,<span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb15-5">])</span>
<span id="cb15-6"></span>
<span id="cb15-7">tensor_concat <span class="op" style="color: #5E5E5E;">=</span> tf.concat([tensor, tensor, tensor], axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>) <span class="co" style="color: #5E5E5E;"># row</span></span>
<span id="cb15-8">tensor_concat</span>
<span id="cb15-9"></span>
<span id="cb15-10">tensor_concat <span class="op" style="color: #5E5E5E;">=</span> tf.concat([tensor, tensor, tensor], axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>) <span class="co" style="color: #5E5E5E;"># column</span></span>
<span id="cb15-11">tensor_concat</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>&lt;tf.Tensor: shape=(3, 12), dtype=int32, numpy=
array([[ 1,  2,  3,  4,  1,  2,  3,  4,  1,  2,  3,  4],
       [ 5,  6,  7,  8,  5,  6,  7,  8,  5,  6,  7,  8],
       [ 9, 10, 11, 12,  9, 10, 11, 12,  9, 10, 11, 12]])&gt;</code></pre>
</div>
</div>
<section id="형변환-type-casting" class="level4">
<h4 class="anchored" data-anchor-id="형변환-type-casting">형변환 (Type Casting)</h4>
<div class="cell" data-execution_count="9">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([<span class="dv" style="color: #AD0000;">2</span>])   <span class="co" style="color: #5E5E5E;"># dtype: int32</span></span>
<span id="cb17-2">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([<span class="fl" style="color: #AD0000;">5.0</span>]) <span class="co" style="color: #5E5E5E;"># dtype: float32</span></span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'a dtype: '</span>, a.dtype, <span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">b dtype: '</span>, b.dtype)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>a dtype:  &lt;dtype: 'int32'&gt; 
b dtype:  &lt;dtype: 'float32'&gt;</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">a <span class="op" style="color: #5E5E5E;">+</span> b <span class="co" style="color: #5E5E5E;"># dtype 불일치 -&gt; InvalidArgumentError 발생</span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">tf.cast(a, tf.float32) <span class="op" style="color: #5E5E5E;">+</span> b <span class="co" style="color: #5E5E5E;"># a의 dtype을 b의 dtype으로 변환 후 계산</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>&lt;tf.Tensor: shape=(1,), dtype=float32, numpy=array([7.], dtype=float32)&gt;</code></pre>
</div>
</div>
</section>
<section id="텐서-shape-변경" class="level4">
<h4 class="anchored" data-anchor-id="텐서-shape-변경">텐서 Shape 변경</h4>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.Variable([<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>])</span>
<span id="cb22-2">y <span class="op" style="color: #5E5E5E;">=</span> tf.reshape(x, (<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">2</span>))           <span class="co" style="color: #5E5E5E;"># row=4, col=2</span></span>
<span id="cb22-3">y</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>&lt;tf.Tensor: shape=(4, 2), dtype=int32, numpy=
array([[1, 2],
       [3, 4],
       [5, 6],
       [7, 8]])&gt;</code></pre>
</div>
</div>
</section>
<section id="x와-y는-서로-다른-객체" class="level4">
<h4 class="anchored" data-anchor-id="x와-y는-서로-다른-객체">x와 y는 서로 다른 객체</h4>
<div class="cell" data-execution_count="13">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">x.assign_add([<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb24-2"><span class="bu" style="color: null;">print</span>(x) <span class="co" style="color: #5E5E5E;"># 1씩 더해짐</span></span>
<span id="cb24-3"><span class="bu" style="color: null;">print</span>(y) <span class="co" style="color: #5E5E5E;"># 값 변화 X</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;tf.Variable 'Variable:0' shape=(8,) dtype=int32, numpy=array([2, 3, 4, 5, 6, 7, 8, 9])&gt;
tf.Tensor(
[[1 2]
 [3 4]
 [5 6]
 [7 8]], shape=(4, 2), dtype=int32)</code></pre>
</div>
</div>
</section>
<section id="텐서-차원-교환" class="level4">
<h4 class="anchored" data-anchor-id="텐서-차원-교환">텐서 차원 교환</h4>
<p><code>tf.transpose(a, perm=[], ...)</code> a의 차원 순서를 바꾼다. perm=[2, 1, 0]일 경우, a의 2번째 축을 첫번째로, 1번째 축을 두번째로, 0번째 축을 세번째로 교환하겠다는 의미</p>
<div class="cell" data-execution_count="14">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.random.uniform((<span class="dv" style="color: #AD0000;">64</span>, <span class="dv" style="color: #AD0000;">32</span>, <span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb26-2"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb26-3"></span>
<span id="cb26-4">b <span class="op" style="color: #5E5E5E;">=</span> tf.transpose(a, perm<span class="op" style="color: #5E5E5E;">=</span>[<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>]) <span class="co" style="color: #5E5E5E;"># 차원 자체를 교환</span></span>
<span id="cb26-5"><span class="bu" style="color: null;">print</span>(b.shape)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>(64, 32, 3)
(3, 32, 64)</code></pre>
</div>
</div>
</section>
<section id="사칙연산" class="level4">
<h4 class="anchored" data-anchor-id="사칙연산">사칙연산</h4>
<p>element끼리 연산한다</p>
<div class="cell" data-execution_count="15">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb28-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb28-3">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb28-4">])</span>
<span id="cb28-5">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb28-6">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb28-7">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb28-8">])</span>
<span id="cb28-9"></span>
<span id="cb28-10"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b)</span>
<span id="cb28-11"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">-</span> b)</span>
<span id="cb28-12"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">*</span> b)</span>
<span id="cb28-13"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">/</span> b)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(
[[2 4]
 [6 8]], shape=(2, 2), dtype=int32)
tf.Tensor(
[[0 0]
 [0 0]], shape=(2, 2), dtype=int32)
tf.Tensor(
[[ 1  4]
 [ 9 16]], shape=(2, 2), dtype=int32)
tf.Tensor(
[[1. 1.]
 [1. 1.]], shape=(2, 2), dtype=float64)</code></pre>
</div>
</div>
</section>
<section id="행렬-곱-matrix-multiplication" class="level4">
<h4 class="anchored" data-anchor-id="행렬-곱-matrix-multiplication">행렬 곱 (matrix multiplication)</h4>
<div class="cell" data-execution_count="16">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb30-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb30-3">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb30-4">])</span>
<span id="cb30-5">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb30-6">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb30-7">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb30-8">])</span>
<span id="cb30-9">tf.matmul(a, b)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>&lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=
array([[ 7, 10],
       [15, 22]])&gt;</code></pre>
</div>
</div>
</section>
<section id="평균-함수" class="level4">
<h4 class="anchored" data-anchor-id="평균-함수">평균 함수</h4>
<p>차원을 축소하며 평균을 계산</p>
<ul>
<li><code>tf.reduce_mean(a, axis=0)</code> : 0차원(행)을 축소하여 평균 계산 -&gt; 각 열에 대한 평균</li>
<li><code>tf.reduce_mean(a, axis=1)</code> : 1차원(열)을 축소하여 평균 계산 -&gt; 각 행에 대한 평균</li>
</ul>
<div class="cell" data-execution_count="17">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb32-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb32-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb32-4">])</span>
<span id="cb32-5"></span>
<span id="cb32-6"><span class="bu" style="color: null;">print</span>(tf.reduce_mean(a))         <span class="co" style="color: #5E5E5E;"># a 전체 평균</span></span>
<span id="cb32-7"><span class="bu" style="color: null;">print</span>(tf.reduce_mean(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 평균</span></span>
<span id="cb32-8"><span class="bu" style="color: null;">print</span>(tf.reduce_mean(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 평균</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(4, shape=(), dtype=int32)
tf.Tensor([3 4 5 6], shape=(4,), dtype=int32)
tf.Tensor([2 6], shape=(2,), dtype=int32)</code></pre>
</div>
</div>
</section>
<section id="합계-함수" class="level4">
<h4 class="anchored" data-anchor-id="합계-함수">합계 함수</h4>
<p>차원을 축소하며 합계를 계산 (평균과 동일하게 동작)</p>
<div class="cell" data-execution_count="18">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb34-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb34-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb34-4">])</span>
<span id="cb34-5"></span>
<span id="cb34-6"><span class="bu" style="color: null;">print</span>(tf.reduce_sum(a))         <span class="co" style="color: #5E5E5E;"># a 전체 합계</span></span>
<span id="cb34-7"><span class="bu" style="color: null;">print</span>(tf.reduce_sum(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 합계</span></span>
<span id="cb34-8"><span class="bu" style="color: null;">print</span>(tf.reduce_sum(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 합계</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(36, shape=(), dtype=int32)
tf.Tensor([ 6  8 10 12], shape=(4,), dtype=int32)
tf.Tensor([10 26], shape=(2,), dtype=int32)</code></pre>
</div>
</div>
</section>
<section id="최대-함수" class="level4">
<h4 class="anchored" data-anchor-id="최대-함수">최대 함수</h4>
<ul>
<li>max() : 원소의 최댓값 반환</li>
<li>argmax() : 최댓값의 index를 반환</li>
</ul>
<div class="cell" data-execution_count="19">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb36-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb36-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb36-4">])</span>
<span id="cb36-5"></span>
<span id="cb36-6"><span class="bu" style="color: null;">print</span>(tf.reduce_max(a))         <span class="co" style="color: #5E5E5E;"># a 전체 원소의 최댓값</span></span>
<span id="cb36-7"><span class="bu" style="color: null;">print</span>(tf.reduce_max(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 최댓값</span></span>
<span id="cb36-8"><span class="bu" style="color: null;">print</span>(tf.reduce_max(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 최댓값</span></span>
<span id="cb36-9"><span class="bu" style="color: null;">print</span>(tf.argmax(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 최댓값의 index</span></span>
<span id="cb36-10"><span class="bu" style="color: null;">print</span>(tf.argmax(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 최댓값의 index</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(8, shape=(), dtype=int32)
tf.Tensor([5 6 7 8], shape=(4,), dtype=int32)
tf.Tensor([4 8], shape=(2,), dtype=int32)
tf.Tensor([1 1 1 1], shape=(4,), dtype=int64)
tf.Tensor([3 3], shape=(2,), dtype=int64)</code></pre>
</div>
</div>
<ul>
<li>차원 축소
<ul>
<li>squeeze() : 크기가 1인 차원을 제거</li>
</ul></li>
<li>차원 확장
<ul>
<li>expand_dims() : 크기가 1인 차원을 추가</li>
<li>흔히 배치(batch) 차원을 추가하기 위한 목적으로 사용됨</li>
<li>pytorch에서는 차원 축소 시, unsqueeze() 사용</li>
</ul></li>
</ul>
<div class="cell" data-execution_count="20">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb38-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb38-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb38-4">])</span>
<span id="cb38-5"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'original a shape: '</span>, a.shape)</span>
<span id="cb38-6"></span>
<span id="cb38-7">a <span class="op" style="color: #5E5E5E;">=</span> tf.expand_dims(a, <span class="dv" style="color: #AD0000;">0</span>) <span class="co" style="color: #5E5E5E;"># 첫번째 축에 차원 추가</span></span>
<span id="cb38-8"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'add 0th dims: '</span>, a.shape)</span>
<span id="cb38-9"></span>
<span id="cb38-10">a <span class="op" style="color: #5E5E5E;">=</span> tf.expand_dims(a, <span class="dv" style="color: #AD0000;">3</span>) <span class="co" style="color: #5E5E5E;"># 세번째 축에 차원 추가</span></span>
<span id="cb38-11"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'add 3rd dims: '</span>, a.shape)</span>
<span id="cb38-12"></span>
<span id="cb38-13"></span>
<span id="cb38-14"><span class="bu" style="color: null;">print</span>(tf.squeeze(a).shape)         <span class="co" style="color: #5E5E5E;"># 크기가 1인 차원을 모두 제거 </span></span>
<span id="cb38-15"><span class="bu" style="color: null;">print</span>(tf.squeeze(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span>).shape) <span class="co" style="color: #5E5E5E;"># 세번째 차원을 제거</span></span>
<span id="cb38-16"></span>
<span id="cb38-17"></span>
<span id="cb38-18"><span class="co" style="color: #5E5E5E;">#tf.squeeze(a, axis=1) # 제거하려는 차원의 크기가 1이 아닐 경우 오류 발생</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>original a shape:  (2, 4)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>add 0th dims:  (1, 2, 4)
add 3rd dims:  (1, 2, 4, 1)
(2, 4)
(1, 2, 4)</code></pre>
</div>
</div>
</section>
</section>
<section id="자동-미분과-기울기" class="level3">
<h3 class="anchored" data-anchor-id="자동-미분과-기울기">자동 미분과 기울기</h3>
<ul>
<li>기울기 테이프 (Gradient Tape)</li>
<li>중간 연산들을 테이프에 기록하고 역전파(back propagation)를 수행했을 때 기울기가 계산됨</li>
<li>TensorFlow에서는 변수가 아닌 상수에 대해 기본적으로 기울기를 측정하지 않음 (not watched). 또한 변수여도 학습 가능하지 않으면(not trainable) 자동 미분을 사용하지 않음</li>
</ul>
<div class="cell" data-execution_count="21">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.Variable([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>])</span>
<span id="cb41-2">y <span class="op" style="color: #5E5E5E;">=</span> tf.Variable([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>])</span>
<span id="cb41-3"></span>
<span id="cb41-4"><span class="co" style="color: #5E5E5E;"># with 구문 안에서 진행되는 모든 연산들을 기록</span></span>
<span id="cb41-5"><span class="cf" style="color: #003B4F;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;">as</span> tape:</span>
<span id="cb41-6">  z <span class="op" style="color: #5E5E5E;">=</span> x <span class="op" style="color: #5E5E5E;">+</span> y</span>
<span id="cb41-7">  loss <span class="op" style="color: #5E5E5E;">=</span> tf.math.reduce_mean(z)</span>
<span id="cb41-8"></span>
<span id="cb41-9">dx <span class="op" style="color: #5E5E5E;">=</span> tape.gradient(loss, x) <span class="co" style="color: #5E5E5E;"># loss가 scalar이므로 계산 가능</span></span>
<span id="cb41-10"><span class="bu" style="color: null;">print</span>(dx)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor([0.5 0.5], shape=(2,), dtype=float32)</code></pre>
</div>
</div>
<p>TensorFlow에서는 변수가 아닌 상수에 대해 기본적으로 기울기를 측정하지 않음 (not watched). 또한 변수여도 학습 가능하지 않으면(not trainable) 자동 미분을 사용하지 않음</p>
<div class="cell" data-execution_count="22">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">100</span>) <span class="co" style="color: #5E5E5E;"># -10 ~ 10까지 100r개의 데이터 생성</span></span>
<span id="cb43-2"></span>
<span id="cb43-3"><span class="cf" style="color: #003B4F;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;">as</span> tape:</span>
<span id="cb43-4">  tape.watch(x) <span class="co" style="color: #5E5E5E;"># x에 대해 기울기를 측정할거니까 기록해줘</span></span>
<span id="cb43-5">  y <span class="op" style="color: #5E5E5E;">=</span> tf.nn.sigmoid(x)</span>
<span id="cb43-6"></span>
<span id="cb43-7">dx <span class="op" style="color: #5E5E5E;">=</span> tape.gradient(y, x)</span>
<span id="cb43-8"><span class="bu" style="color: null;">print</span>(dx)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>tf.Tensor(
[4.53958077e-05 5.55575620e-05 6.79936937e-05 8.32130942e-05
 1.01838442e-04 1.24631609e-04 1.52524715e-04 1.86658091e-04
 2.28426653e-04 2.79536554e-04 3.42074339e-04 4.18591319e-04
 5.12206458e-04 6.26731702e-04 7.66824507e-04 9.38173215e-04
 1.14772200e-03 1.40394326e-03 1.71716676e-03 2.09997591e-03
 2.56768332e-03 3.13889855e-03 3.83620191e-03 4.68693782e-03
 5.72413978e-03 6.98759437e-03 8.52504404e-03 1.03935138e-02
 1.26607241e-02 1.54065171e-02 1.87241696e-02 2.27213903e-02
 2.75206964e-02 3.32587242e-02 4.00838615e-02 4.81513998e-02
 5.76152215e-02 6.86149280e-02 8.12573764e-02 9.55919842e-02
 1.11580066e-01 1.29060077e-01 1.47712989e-01 1.67034879e-01
 1.86326443e-01 2.04710159e-01 2.21183725e-01 2.34711795e-01
 2.44347497e-01 2.49363393e-01 2.49363393e-01 2.44347497e-01
 2.34711795e-01 2.21183725e-01 2.04710159e-01 1.86326443e-01
 1.67034879e-01 1.47712989e-01 1.29060077e-01 1.11580066e-01
 9.55919842e-02 8.12573764e-02 6.86149280e-02 5.76152215e-02
 4.81513998e-02 4.00838615e-02 3.32587242e-02 2.75206964e-02
 2.27213903e-02 1.87241696e-02 1.54065171e-02 1.26607241e-02
 1.03935138e-02 8.52504404e-03 6.98759437e-03 5.72413978e-03
 4.68693782e-03 3.83620191e-03 3.13889855e-03 2.56768332e-03
 2.09997591e-03 1.71716676e-03 1.40394326e-03 1.14772200e-03
 9.38173215e-04 7.66824507e-04 6.26731702e-04 5.12206458e-04
 4.18591319e-04 3.42074339e-04 2.79536554e-04 2.28426653e-04
 1.86658091e-04 1.52524715e-04 1.24631609e-04 1.01838442e-04
 8.32130942e-05 6.79936937e-05 5.55575620e-05 4.53958077e-05], shape=(100,), dtype=float64)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb45-2"></span>
<span id="cb45-3">plt.plot(x, y, <span class="st" style="color: #20794D;">'r'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"y"</span>)</span>
<span id="cb45-4">plt.plot(x, dx, <span class="st" style="color: #20794D;">'b--'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"dy/dx"</span>)</span>
<span id="cb45-5">plt.legend()</span>
<span id="cb45-6">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_tf_introduction/index_files/figure-html/cell-24-output-1.png" width="571" height="411"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>ML</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_tf_introduction/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Composite Function</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/composite_function.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="composite-function" class="level2">
<h2 class="anchored" data-anchor-id="composite-function">Composite Function</h2>
<div id="def-composite" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 1 </strong></span>Given two functions f and g, the composite function <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g"> (also called the <strong>composition</strong> of <img src="https://latex.codecogs.com/png.latex?f"> and <img src="https://latex.codecogs.com/png.latex?g">) is defined by</p>
<p><span id="eq-composite"><img src="https://latex.codecogs.com/png.latex?%0A(f%5Ccirc%20g)(x)=f(g(x))%0A%5Ctag%7B1%7D"></span></p>
</div>
<p>The domain of <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g"> is the set of all <img src="https://latex.codecogs.com/png.latex?x"> in the domain of <img src="https://latex.codecogs.com/png.latex?g"> such that <img src="https://latex.codecogs.com/png.latex?g(x)"> is in the domain of <img src="https://latex.codecogs.com/png.latex?f">. In other words, <img src="https://latex.codecogs.com/png.latex?(f%5Ccirc%20g)(x)"> is defined whenever both <img src="https://latex.codecogs.com/png.latex?g(x)"> and <img src="https://latex.codecogs.com/png.latex?f(g(x))"> are defined.</p>
<section id="example" class="level3">
<h3 class="anchored" data-anchor-id="example">Example</h3>
<p>If <img src="https://latex.codecogs.com/png.latex?f(x)=x%5E2"> and <img src="https://latex.codecogs.com/png.latex?g(x)=e%5Ex">, find <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g"> and <img src="https://latex.codecogs.com/png.latex?g%5Ccirc%20f">.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A(f%5Ccirc%20g)(x)&amp;=f(g(x))=f(e%5Ex)=(e%5Ex)%5E2=e%5E%7B2x%7D%5C%5C%0A(g%5Ccirc%20f)(x)&amp;=g(f(x))=g(x%5E2)=e%5E%7Bx%5E2%7D=e%5E%7Bx%5E2%7D%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<p>위의 예제처럼, <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g%20%5Cne%20f%5Ccirc%20g">.</p>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<section id="composite-function-1" class="level2">
<h2 class="anchored" data-anchor-id="composite-function-1">Composite Function</h2>
<div id="def-composite" class="theorem definition">
<p><span class="theorem-title"><strong>Definition 2 </strong></span>Given two functions f and g, the composite function <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g"> (also called the <strong>composition</strong> of <img src="https://latex.codecogs.com/png.latex?f"> and <img src="https://latex.codecogs.com/png.latex?g">) is defined by</p>
<p><span id="eq-composite"><img src="https://latex.codecogs.com/png.latex?%0A(f%5Ccirc%20g)(x)=f(g(x))%0A%5Ctag%7B2%7D"></span></p>
</div>
<p>The domain of <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g"> is the set of all <img src="https://latex.codecogs.com/png.latex?x"> in the domain of <img src="https://latex.codecogs.com/png.latex?g"> such that <img src="https://latex.codecogs.com/png.latex?g(x)"> is in the domain of <img src="https://latex.codecogs.com/png.latex?f">. In other words, <img src="https://latex.codecogs.com/png.latex?(f%5Ccirc%20g)(x)"> is defined whenever both <img src="https://latex.codecogs.com/png.latex?g(x)"> and <img src="https://latex.codecogs.com/png.latex?f(g(x))"> are defined.</p>
<section id="example-1" class="level3">
<h3 class="anchored" data-anchor-id="example-1">Example</h3>
<p>If <img src="https://latex.codecogs.com/png.latex?f(x)=x%5E2"> and <img src="https://latex.codecogs.com/png.latex?g(x)=e%5Ex">, find <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g"> and <img src="https://latex.codecogs.com/png.latex?g%5Ccirc%20f">.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0A(f%5Ccirc%20g)(x)&amp;=f(g(x))=f(e%5Ex)=(e%5Ex)%5E2=e%5E%7B2x%7D%5C%5C%0A(g%5Ccirc%20f)(x)&amp;=g(f(x))=g(x%5E2)=e%5E%7Bx%5E2%7D=e%5E%7Bx%5E2%7D%5C%5C%0A%5Cend%7Baligned%7D%0A"></p>
<p>Like the example above, <img src="https://latex.codecogs.com/png.latex?f%5Ccirc%20g%20%5Cne%20f%5Ccirc%20g">.</p>
</section>
</section>
</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/composite_function.html</guid>
  <pubDate>Mon, 30 Jan 2023 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
