<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kwangmin Kim</title>
<link>kmink3225.netlify.app/docs/blog/index.html</link>
<atom:link href="kmink3225.netlify.app/docs/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>A great sample blog</description>
<generator>quarto-1.2.313</generator>
<lastBuildDate>Thu, 26 Jan 2023 15:00:00 GMT</lastBuildDate>
<item>
  <title>Data Structure (8) Binary Search Tree</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="트리tree" class="level2">
<h2 class="anchored" data-anchor-id="트리tree">트리(Tree)</h2>
<ul>
<li>트리는 가계도와 같이 <strong>계층적인 구조</strong>를 표현할 때 사용할 수 있는 자료구조다.</li>
<li>나무(tree)의 형태를 뒤집은 것과 같이 생겼다.</li>
<li>다수의 데이터를 관리하기에 적합한 트리 자료 구조의 가장 기본적인 형태</li>
</ul>
</section>
<section id="트리-용어-정리" class="level2">
<h2 class="anchored" data-anchor-id="트리-용어-정리">트리 용어 정리</h2>
<ul>
<li>루트 노드(root node): 부모가 없는 최상위 노드</li>
<li>단말 노드(leaf node): 자식이 없는 노드</li>
<li>트리(tree)에서는 부모와 자식 관계가 성립한다 (직계).</li>
<li>형제 관계 (sibling, 방계): 부모 node로 부터 왼쪽 자식과 오른쪽 자식과의 관계</li>
<li>깊이(depth): 루트 노드에서의 길이(length), 루트 노드로부터 손자까지의 depth=2
<ul>
<li>이때, 길이란 출발 노드에서 목적지 노드까지 거쳐야 하는 간선의 수를 의미한다.</li>
</ul></li>
<li>트리의 높이(height)은 루트 노드에서 가장 깊은 노드까지의 길이를 의미한다.</li>
</ul>
</section>
<section id="이진-트리binary-tree" class="level2">
<h2 class="anchored" data-anchor-id="이진-트리binary-tree">이진 트리(Binary Tree)</h2>
<ul>
<li>이진 트리는 최대 2개의 자식을 가질 수 있는 트리를 말한다.</li>
</ul>
</section>
<section id="이진-탐색-트리binary-search-tree" class="level2">
<h2 class="anchored" data-anchor-id="이진-탐색-트리binary-search-tree">이진 탐색 트리(Binary Search Tree)</h2>
<ul>
<li>다수의 데이터를 관리(조회, 저장, 삭제)하기 위한 가장 기본적인 자료구조 중 하나다.</li>
<li>이진 탐색 트리의 성질: 순서가 있음
<ul>
<li>왼쪽 자식 노드 &lt; 부모 노드 &lt; 오른쪽 자식 노드</li>
<li>루트 노드 기준 모든 왼쪽 노드들은 루트 노드보다 작음</li>
<li>루트 노드 기준 모든 오른쪽 노드들은 루트 노드보다 큼</li>
<li>2진 탐색을 가능하게 하는 구조</li>
</ul></li>
</ul>
<section id="이진-탐색-트리binary-search-tree의-성질" class="level3">
<h3 class="anchored" data-anchor-id="이진-탐색-트리binary-search-tree의-성질">이진 탐색 트리(Binary Search Tree)의 성질</h3>
<ul>
<li>특정한 노드의 <strong>키(key) 값</strong>보다 그 왼쪽 자식 노드의 <strong>키(key) 값</strong>이 더 작다.</li>
<li>특정한 노드의 키(key) 값보다 그 오른쪽 자식 노드의 키(key) 값이 더 크다.</li>
<li>특정한 노드의 왼쪽 서브 트리, 오른쪽 서브 트리 모두 이진 탐색 트리다.</li>
<li>worst case: 찾는게 없을 때 혹은 찾고자 하는 데이터가 가장 마지막에 있을 때
<ul>
<li>탐색시 재귀적으로 중앙값을 기준으로 오른쪽만 찾음</li>
<li>매 실행마다 데이터의 개수가 절반씩 줄어듬</li>
<li>그러면, 몇 번만에 사이즈가 1이 되는가?</li>
<li>수식 유도, input size를 N이라고 가정했을때</li>
<li><img src="https://latex.codecogs.com/png.latex?N%20%5Ctimes%20%7B(%5Cfrac%7B1%7D%7B2%7D)%7D%5E%7Bk%7D=1%20%5Crightarrow%20N=2%5Ek%20%5Crightarrow%20k%20=%20log_2N"></li>
<li>위의 수식을 점근적 표기법으로 표현하면 <img src="https://latex.codecogs.com/png.latex?%5CTheta(logN)"></li>
</ul></li>
<li>best case: 한번에 찾았을 때
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5CTheta(1)"></li>
</ul></li>
<li>그러므로, lower bound = <img src="https://latex.codecogs.com/png.latex?%5CTheta(1)">, upper bound = <img src="https://latex.codecogs.com/png.latex?O(logN)"></li>
</ul>
</section>
<section id="삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="삽입-연산">삽입 연산</h3>
<ul>
<li>루트 노드에서 출발하여 아래쪽으로 내려오면서, 삽입할 위치를 찾는다.
<ol type="1">
<li>삽입할 노드의 키(key)가 작으면 왼쪽으로,</li>
<li>삽입할 노드의 키(key)가 크면 오른쪽으로 삽입</li>
</ol></li>
<li>삽입할 노드 목록 예시: [7,4,5,9,6,2,3,2,8]으로 트리 생성해보기</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/Binary_tree.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Binary Tree</figcaption><p></p>
</figure>
</div>
<p><a href="https://www.youtube.com/watch?v=i5yHkP1jQmo">Sorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나</a></p>
</section>
<section id="조회-연산" class="level3">
<h3 class="anchored" data-anchor-id="조회-연산">조회 연산</h3>
<ul>
<li>루트 노드에서 출발하여 아래쪽으로 내려오면서, 찾고자 하는 원소를 조회한다. 삽입 연산과 같은 로직을 따름</li>
<li>1 삽입할 노드의 키(key)가 작으면 왼쪽으로, 2 삽입할 노드의 키(key)가 크면 오른쪽으로 조회</li>
<li>조회할 노드 목록 예시: 5번 노드</li>
</ul>
</section>
<section id="삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="삭제-연산">삭제 연산</h3>
<ul>
<li>루트 노드에서 출발하여 아래쪽으로 내려오면서, 삭제할 원소에 접근한다.</li>
<li>삭제할 노드 목록 예시: 7번 노드
<ul>
<li>Case #1 왼쪽 자식이 없는 경우 → 오른쪽 자식으로 대체</li>
<li>Case #2 오른쪽 자식이 없는 경우 → 왼쪽 자식으로 대체</li>
<li>Case #3 왼쪽, 오른쪽이 모두 있는 경우 → 오른쪽 서브</li>
</ul></li>
<li>트리에서 가장 작은 노드로 대체</li>
<li>삭제할 노드 목록 예시: 4번 노드</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/binary_tree_deletion.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Binary Tree Deletion</figcaption><p></p>
</figure>
</div>
<p><a href="https://www.youtube.com/watch?v=i5yHkP1jQmo">Sorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나</a></p>
</section>
</section>
<section id="트리의-순회" class="level2">
<h2 class="anchored" data-anchor-id="트리의-순회">트리의 순회</h2>
<ul>
<li>트리에 포함되어 있는 정보를 모두 출력하고자 할 때, 어떤 방식을 사용할 수 있을까?</li>
<li>바로 순회(traversal)를 사용할 수 있다.</li>
<li>트리의 모든 노드를 특정한 순서(조건)에 따라서 방문하는 방법을 순회(traversal)라고 한다.</li>
</ul>
<ol type="1">
<li>전위 순회(pre-order traverse): 루트 방문 → 왼쪽 자식 방문 → 오른쪽 자식 방문</li>
<li>중위 순회(in-order traverse): 왼쪽 자식 방문 → 루트 방문 → 오른쪽 자식 방문</li>
<li>후위 순회(post-order traverse): 왼쪽 자식 방문 → 오른쪽 자식 방문 → 루트 방문</li>
</ol>
<section id="트리의-순회-한-눈에-보기" class="level3">
<h3 class="anchored" data-anchor-id="트리의-순회-한-눈에-보기">트리의 순회 한 눈에 보기</h3>
<ul>
<li>전위 순회(pre-order traverse): A → B → D → E → C → F → G</li>
<li>중위 순회(in-order traverse): D → B → E → A → F → C → G</li>
<li>후위 순회(post-order traverse): D → E → B → F → G → C → A</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/binary_tree_traverse.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Binary Tree Traverse</figcaption><p></p>
</figure>
</div>
<p><a href="https://www.youtube.com/watch?v=i5yHkP1jQmo">Sorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나</a></p>
</section>
<section id="전위-순회pre-order-traverse" class="level3">
<h3 class="anchored" data-anchor-id="전위-순회pre-order-traverse">전위 순회(pre-order traverse)</h3>
<p>• 방문 방법: 현재 노드 → 왼쪽 자식 노드 → 오른쪽 자식 노드</p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">def</span> _preorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb1-2">  <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb1-3">    <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb1-4">    <span class="va" style="color: #111111;">self</span>._preorder(node.left)</span>
<span id="cb1-5">    <span class="va" style="color: #111111;">self</span>._preorder(node.right)</span></code></pre></div>
</details>
</div>
</section>
<section id="중위-순회inorder-traversal" class="level3">
<h3 class="anchored" data-anchor-id="중위-순회inorder-traversal">중위 순회(Inorder Traversal)</h3>
<ul>
<li>방문 방법: 왼쪽 자식 노드 → 현재 노드 → 오른쪽 자식 노드</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;">def</span> _inorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb2-2">  <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb2-3">    <span class="va" style="color: #111111;">self</span>._inorder(node.left)</span>
<span id="cb2-4">    <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb2-5">    <span class="va" style="color: #111111;">self</span>._inorder(node.right)</span></code></pre></div>
</details>
</div>
</section>
<section id="후위-순회postorder-traversal" class="level3">
<h3 class="anchored" data-anchor-id="후위-순회postorder-traversal">후위 순회(Postorder Traversal)</h3>
<ul>
<li>방문 방법: 왼쪽 자식 노드 → 오른쪽 자식 노드 → 현재 노드</li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">def</span> _postorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb3-2">  <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb3-3">    <span class="va" style="color: #111111;">self</span>._postorder(node.left)</span>
<span id="cb3-4">    <span class="va" style="color: #111111;">self</span>._postorder(node.right)</span>
<span id="cb3-5">    <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="레벨-순회level-order-traversal" class="level3">
<h3 class="anchored" data-anchor-id="레벨-순회level-order-traversal">레벨 순회(Level Order Traversal)</h3>
<ul>
<li>낮은 레벨(루트)부터 높은 레벨까지 순차적으로 방문한다.</li>
<li>단순히 루트 노드에서부터 너비 우선 탐색(BST)를 진행하면 된다.</li>
<li>레벨 순회 순회(level-order traverse): A → B → C → D → E → F → G</li>
</ul>
</section>
</section>
<section id="이진-탐색-트리의-구현" class="level2">
<h2 class="anchored" data-anchor-id="이진-탐색-트리의-구현">이진 탐색 트리의 구현</h2>
<ul>
<li>다른 메서드 안에서 사용되는 메서드는 이름 앞에 언더바(_) 기호를 붙인다.</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;">def</span> search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb4-2">  <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(<span class="va" style="color: #111111;">self</span>.root, key) <span class="co" style="color: #5E5E5E;"># search: recursively 조회</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;">def</span> _search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb4-5">  <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span> <span class="kw" style="color: #003B4F;">or</span> node.key <span class="op" style="color: #5E5E5E;">==</span> key:</span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb4-7"></span>
<span id="cb4-8">  <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb4-9">  <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb4-10">    <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.left, key)</span>
<span id="cb4-11"></span>
<span id="cb4-12">  <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb4-13">  <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.right, key)</span></code></pre></div>
</details>
</div>
<section id="편향-이진-트리skewed-binary-tree" class="level3">
<h3 class="anchored" data-anchor-id="편향-이진-트리skewed-binary-tree">편향 이진 트리(Skewed Binary Tree)</h3>
<ul>
<li>편향 이진 트리는 다음의 두 가지 속성을 가진다.</li>
</ul>
<ol type="1">
<li>같은 높이의 이진 트리 중 최소 개수의 노드 개수를 가진다.</li>
<li>왼쪽 혹은 오른쪽으로 한 방향에 대한 서브 트리를 가진다.</li>
</ol>
</section>
<section id="이진-탐색-트리의-시간-복잡도" class="level3">
<h3 class="anchored" data-anchor-id="이진-탐색-트리의-시간-복잡도">이진 탐색 트리의 시간 복잡도</h3>
<ul>
<li>노드의 개수가 N개일 때, 시간 복잡도는 다음과 같다.</li>
<li>트리의 높이(height)을 H라고 할 때, 엄밀한 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(H)"> 다.</li>
<li>이상적인 경우 H = log2 N로 볼 수 있다.</li>
<li>하지만 최악의 경우(편향된 경우) H = N로 볼 수 있다.</li>
</ul>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the time complexity of the binary search trees in Python</caption>
<colgroup>
<col style="width: 11%">
<col style="width: 33%">
<col style="width: 13%">
<col style="width: 13%">
<col style="width: 13%">
<col style="width: 13%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Methods</th>
<th>조회</th>
<th>삽입</th>
<th>삭제</th>
<th>수정</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>균형 잡힌 이진 탐색 트리</td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
</tr>
<tr class="even">
<td>2</td>
<td>편향 이진 탐색 트리</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="균형-잡힌-트리-avl-트리" class="level3">
<h3 class="anchored" data-anchor-id="균형-잡힌-트리-avl-트리">균형 잡힌 트리: AVL 트리</h3>
<ul>
<li>AVL stands for <strong>A</strong>delson-<strong>V</strong>elsky and <strong>L</strong>andis</li>
<li>이진 탐색 트리는 편향 트리가 될 수 있으므로, 최악의 경우 <img src="https://latex.codecogs.com/png.latex?O(N)"> 을 요구한다.</li>
<li>반면에 AVL 트리는 균형이 갖춰진 이진 트리다.</li>
<li>간단한 구현 과정으로 완전 이진 트리에 가까운 형태를 유지하도록 한다.</li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">from</span> collections <span class="im" style="color: #00769E;">import</span> deque</span>
<span id="cb5-2"></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb5-5">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, key):</span>
<span id="cb5-6">        <span class="va" style="color: #111111;">self</span>.key <span class="op" style="color: #5E5E5E;">=</span> key</span>
<span id="cb5-7">        <span class="va" style="color: #111111;">self</span>.left <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-8">        <span class="va" style="color: #111111;">self</span>.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;">class</span> BinarySearchTree:</span>
<span id="cb5-12">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-13">        <span class="va" style="color: #111111;">self</span>.root <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-14"></span>
<span id="cb5-15">    <span class="kw" style="color: #003B4F;">def</span> search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-16">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(<span class="va" style="color: #111111;">self</span>.root, key)</span>
<span id="cb5-17"></span>
<span id="cb5-18">    <span class="kw" style="color: #003B4F;">def</span> _search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-19">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span> <span class="kw" style="color: #003B4F;">or</span> node.key <span class="op" style="color: #5E5E5E;">==</span> key:</span>
<span id="cb5-20">            <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb5-21"></span>
<span id="cb5-22">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb5-23">        <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb5-24">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.left, key)</span>
<span id="cb5-25">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb5-26">        <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb5-27">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.right, key)</span>
<span id="cb5-28"></span>
<span id="cb5-29">    <span class="kw" style="color: #003B4F;">def</span> insert(<span class="va" style="color: #111111;">self</span>, key):</span>
<span id="cb5-30">        <span class="va" style="color: #111111;">self</span>.root <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._insert(<span class="va" style="color: #111111;">self</span>.root, key)</span>
<span id="cb5-31"></span>
<span id="cb5-32">    <span class="kw" style="color: #003B4F;">def</span> _insert(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-33">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-34">            <span class="cf" style="color: #003B4F;">return</span> Node(key)</span>
<span id="cb5-35"></span>
<span id="cb5-36">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb5-37">        <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb5-38">            node.left <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._insert(node.left, key)</span>
<span id="cb5-39">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb5-40">        <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb5-41">            node.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._insert(node.right, key)</span>
<span id="cb5-42"></span>
<span id="cb5-43">        <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb5-44"></span>
<span id="cb5-45">    <span class="kw" style="color: #003B4F;">def</span> delete(<span class="va" style="color: #111111;">self</span>, key):</span>
<span id="cb5-46">        <span class="va" style="color: #111111;">self</span>.root <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(<span class="va" style="color: #111111;">self</span>.root, key)</span>
<span id="cb5-47"></span>
<span id="cb5-48">    <span class="kw" style="color: #003B4F;">def</span> _delete(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-49">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-50">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-51"></span>
<span id="cb5-52">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb5-53">        <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb5-54">            node.left <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(node.left, key)</span>
<span id="cb5-55">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb5-56">        <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb5-57">            node.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(node.right, key)</span>
<span id="cb5-58">        <span class="co" style="color: #5E5E5E;"># 삭제할 노드를 찾은 경우</span></span>
<span id="cb5-59">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb5-60">            <span class="co" style="color: #5E5E5E;"># 왼쪽 자식이 없는 경우</span></span>
<span id="cb5-61">            <span class="cf" style="color: #003B4F;">if</span> node.left <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-62">                <span class="cf" style="color: #003B4F;">return</span> node.right</span>
<span id="cb5-63">            <span class="co" style="color: #5E5E5E;"># 오른쪽 자식이 없는 경우</span></span>
<span id="cb5-64">            <span class="cf" style="color: #003B4F;">elif</span> node.right <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-65">                <span class="cf" style="color: #003B4F;">return</span> node.left</span>
<span id="cb5-66">            <span class="co" style="color: #5E5E5E;"># 왼쪽과 오른쪽 자식 모두 있는 경우</span></span>
<span id="cb5-67">            node.key <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._get_min(node.right)</span>
<span id="cb5-68">            node.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(node.right, node.key)</span>
<span id="cb5-69"></span>
<span id="cb5-70">        <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb5-71"></span>
<span id="cb5-72">    <span class="kw" style="color: #003B4F;">def</span> _get_min(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-73">        key <span class="op" style="color: #5E5E5E;">=</span> node.key</span>
<span id="cb5-74">        <span class="cf" style="color: #003B4F;">while</span> node.left:</span>
<span id="cb5-75">            key <span class="op" style="color: #5E5E5E;">=</span> node.left.key</span>
<span id="cb5-76">            node <span class="op" style="color: #5E5E5E;">=</span> node.left</span>
<span id="cb5-77">        <span class="cf" style="color: #003B4F;">return</span> key</span>
<span id="cb5-78"></span>
<span id="cb5-79">    <span class="kw" style="color: #003B4F;">def</span> preorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-80">        <span class="va" style="color: #111111;">self</span>._preorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-81"></span>
<span id="cb5-82">    <span class="kw" style="color: #003B4F;">def</span> _preorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-83">        <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-84">            <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-85">            <span class="va" style="color: #111111;">self</span>._preorder(node.left)</span>
<span id="cb5-86">            <span class="va" style="color: #111111;">self</span>._preorder(node.right)</span>
<span id="cb5-87"></span>
<span id="cb5-88">    <span class="kw" style="color: #003B4F;">def</span> inorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-89">        <span class="va" style="color: #111111;">self</span>._inorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-90"></span>
<span id="cb5-91">    <span class="kw" style="color: #003B4F;">def</span> _inorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-92">        <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-93">            <span class="va" style="color: #111111;">self</span>._inorder(node.left)</span>
<span id="cb5-94">            <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-95">            <span class="va" style="color: #111111;">self</span>._inorder(node.right)</span>
<span id="cb5-96"></span>
<span id="cb5-97">    <span class="kw" style="color: #003B4F;">def</span> postorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-98">        <span class="va" style="color: #111111;">self</span>._postorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-99"></span>
<span id="cb5-100">    <span class="kw" style="color: #003B4F;">def</span> _postorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-101">        <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-102">            <span class="va" style="color: #111111;">self</span>._postorder(node.left)</span>
<span id="cb5-103">            <span class="va" style="color: #111111;">self</span>._postorder(node.right)</span>
<span id="cb5-104">            <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-105"></span>
<span id="cb5-106">    <span class="kw" style="color: #003B4F;">def</span> levelorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-107">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._levelorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-108"></span>
<span id="cb5-109">    <span class="kw" style="color: #003B4F;">def</span> _levelorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-110">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-111">            <span class="cf" style="color: #003B4F;">return</span></span>
<span id="cb5-112"></span>
<span id="cb5-113">        result <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb5-114"></span>
<span id="cb5-115">        queue <span class="op" style="color: #5E5E5E;">=</span> deque()</span>
<span id="cb5-116">        queue.append((<span class="dv" style="color: #AD0000;">0</span>, node))  <span class="co" style="color: #5E5E5E;"># (level, node)</span></span>
<span id="cb5-117"></span>
<span id="cb5-118">        <span class="cf" style="color: #003B4F;">while</span> queue:</span>
<span id="cb5-119">            level, node <span class="op" style="color: #5E5E5E;">=</span> queue.popleft()</span>
<span id="cb5-120">            <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-121">                result.append((level, node.key))</span>
<span id="cb5-122">                queue.append((level <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>, node.left))</span>
<span id="cb5-123">                queue.append((level <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>, node.right))</span>
<span id="cb5-124"></span>
<span id="cb5-125">        <span class="cf" style="color: #003B4F;">for</span> level, key <span class="kw" style="color: #003B4F;">in</span> result:</span>
<span id="cb5-126">            <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"level: </span><span class="sc" style="color: #5E5E5E;">{</span>level<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">, key: </span><span class="sc" style="color: #5E5E5E;">{</span>key<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb5-127"></span>
<span id="cb5-128">    <span class="kw" style="color: #003B4F;">def</span> to_list(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-129">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._to_list(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-130"></span>
<span id="cb5-131">    <span class="kw" style="color: #003B4F;">def</span> _to_list(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-132">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-133">            <span class="cf" style="color: #003B4F;">return</span> []</span>
<span id="cb5-134">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._to_list(node.left) <span class="op" style="color: #5E5E5E;">+</span> [node.key] <span class="op" style="color: #5E5E5E;">+</span> <span class="va" style="color: #111111;">self</span>._to_list(</span>
<span id="cb5-135">            node.right)</span>
<span id="cb5-136"></span>
<span id="cb5-137"></span>
<span id="cb5-138">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb5-139">bst <span class="op" style="color: #5E5E5E;">=</span> BinarySearchTree()</span>
<span id="cb5-140"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb5-141">    bst.insert(x)</span>
<span id="cb5-142"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-143">bst.preorder()</span>
<span id="cb5-144"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-145">bst.inorder()</span>
<span id="cb5-146"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-147">bst.postorder()</span>
<span id="cb5-148"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-149">bst.levelorder()</span>
<span id="cb5-150"></span>
<span id="cb5-151">bst.delete(<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb5-152"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-153">bst.preorder()</span>
<span id="cb5-154"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-155">bst.inorder()</span>
<span id="cb5-156"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-157">bst.postorder()</span>
<span id="cb5-158"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-159">bst.levelorder()</span>
<span id="cb5-160"></span>
<span id="cb5-161">bst.delete(<span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-162"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-163">bst.preorder()</span>
<span id="cb5-164"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-165">bst.inorder()</span>
<span id="cb5-166"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-167">bst.postorder()</span>
<span id="cb5-168"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-169">bst.levelorder()</span>
<span id="cb5-170"></span>
<span id="cb5-171">bst.delete(<span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb5-172"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-173">bst.preorder()</span>
<span id="cb5-174"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-175">bst.inorder()</span>
<span id="cb5-176"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-177">bst.postorder()</span>
<span id="cb5-178"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-179">bst.levelorder()</span>
<span id="cb5-180"></span>
<span id="cb5-181"><span class="bu" style="color: null;">print</span>(bst.to_list())</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>전위 순회: 7 4 3 2 5 6 9 8 
중위 순회: 2 3 4 5 6 7 8 9 
후위 순회: 2 3 6 5 4 8 9 7 
[레벨 순회]
level: 0, key: 7
level: 1, key: 4
level: 1, key: 9
level: 2, key: 3
level: 2, key: 5
level: 2, key: 8
level: 3, key: 2
level: 3, key: 6

전위 순회: 8 4 3 2 5 6 9 
중위 순회: 2 3 4 5 6 8 9 
후위 순회: 2 3 6 5 4 9 8 
[레벨 순회]
level: 0, key: 8
level: 1, key: 4
level: 1, key: 9
level: 2, key: 3
level: 2, key: 5
level: 3, key: 2
level: 3, key: 6

전위 순회: 8 5 3 2 6 9 
중위 순회: 2 3 5 6 8 9 
후위 순회: 2 3 6 5 9 8 
[레벨 순회]
level: 0, key: 8
level: 1, key: 5
level: 1, key: 9
level: 2, key: 3
level: 2, key: 6
level: 3, key: 2

전위 순회: 8 5 2 6 9 
중위 순회: 2 5 6 8 9 
후위 순회: 2 6 5 9 8 
[레벨 순회]
level: 0, key: 8
level: 1, key: 5
level: 1, key: 9
level: 2, key: 2
level: 2, key: 6
[2, 5, 6, 8, 9]</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
  <media:content url="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/Binary_tree.png" medium="image" type="image/png" height="100" width="144"/>
</item>
<item>
  <title>ANCOVA</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html</link>
  <description><![CDATA[ 



<p>(Draft, 바쁘니까 일단 대충이라도 적어놓음 ㅠ)</p>
<section id="description" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="description"><span class="header-section-number">1</span> Description</h2>
<p>ANCOVA (Analysis of Covariance, ANCOVA)</p>
<ul>
<li>ANOVA에 공변량 (covariate)을 추가하여 분석 수행</li>
<li>공변량을 조정하여 독립변수의 순수한 영향을 검정</li>
<li>공변량: 연속형 변수로 한정</li>
</ul>
</section>
<section id="example" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="example"><span class="header-section-number">2</span> Example</h2>
<section id="load-libraries-and-data" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="load-libraries-and-data"><span class="header-section-number">2.1</span> Load Libraries and Data</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(faraway)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(markdown)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(effects)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(HH)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(psych)</span></code></pre></div>
</details>
</div>
</section>
<section id="data-description" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="data-description"><span class="header-section-number">2.2</span> Data Description</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">str</span>(sexab)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   76 obs. of  3 variables:
 $ cpa : num  2.048 0.839 -0.241 -1.115 2.015 ...
 $ ptsd: num  9.71 6.17 15.16 11.31 9.95 ...
 $ csa : Factor w/ 2 levels "Abused","NotAbused": 1 1 1 1 1 1 1 1 1 1 ...</code></pre>
</div>
</div>
<p>R console에 <code>?sexab</code>를 입력하면 다음과 같은 설명이 나온다.</p>
<p><strong>Post traumatic stress disorder in abused adult females</strong></p>
<p><em>The data for this example come from a study of the effects of childhood sexual abuse on adult females. 45 women being treated at a clinic, who reported childhood sexual abuse, were measured for post traumatic stress disorder and childhood physical abuse both on standardized scales. 31 women also being treated at the same clinic, who did not report childhood sexual abuse were also measured. The full study was more complex than reported here and so readers interested in the subject matter should refer to the original article.</em></p>
<p>즉, 요약하면 아동기에 성폭력을 겸험한 성인들의 정신 건강을 측정한 데이터로서, 아동기의 성폭력 경험과 학대 경험이 성인기의 정신건강에 유의한 영향을 미치는지에 대한 실험을 한 것이다.</p>
<p>이 data는 3개의 변수와 76개의 samples을 포함한다.</p>
<ul>
<li>cpa : Childhood physical abuse on standard scale, covariate</li>
<li>ptsd : post-traumatic stress disorder on standard scale, response variable</li>
<li>csa : Childhood sexual abuse - abused or not abused, independent variable</li>
</ul>
<p>친절하게 response variable, independent variable 및 covariate을 규명해놓았다.</p>
</section>
</section>
<section id="eda" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="eda"><span class="header-section-number">3</span> EDA</h2>
<section id="descriptive-statistics" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="descriptive-statistics"><span class="header-section-number">3.1</span> Descriptive Statistics</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">temp<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">describeBy</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>csa,<span class="at" style="color: #657422;">data=</span>sexab)</span>
<span id="cb4-2">temp<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">rbind</span>(<span class="st" style="color: #20794D;">'abused'</span><span class="ot" style="color: #003B4F;">=</span>temp<span class="sc" style="color: #5E5E5E;">$</span>Abused,<span class="st" style="color: #20794D;">'notAbused'</span><span class="ot" style="color: #003B4F;">=</span>temp<span class="sc" style="color: #5E5E5E;">$</span>NotAbused)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">as.data.frame</span>()</span>
<span id="cb4-4">temp<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 8%">
<col style="width: 4%">
<col style="width: 2%">
<col style="width: 8%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: right;">vars</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">median</th>
<th style="text-align: right;">trimmed</th>
<th style="text-align: right;">mad</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">range</th>
<th style="text-align: right;">skew</th>
<th style="text-align: right;">kurtosis</th>
<th style="text-align: right;">se</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">abused</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">45</td>
<td style="text-align: right;">11.941093</td>
<td style="text-align: right;">3.440151</td>
<td style="text-align: right;">11.31277</td>
<td style="text-align: right;">11.883422</td>
<td style="text-align: right;">3.857355</td>
<td style="text-align: right;">5.98491</td>
<td style="text-align: right;">18.99251</td>
<td style="text-align: right;">13.00760</td>
<td style="text-align: right;">0.1556159</td>
<td style="text-align: right;">-0.9124483</td>
<td style="text-align: right;">0.5128275</td>
</tr>
<tr class="even">
<td style="text-align: left;">notAbused</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">31</td>
<td style="text-align: right;">4.695874</td>
<td style="text-align: right;">3.519743</td>
<td style="text-align: right;">5.79447</td>
<td style="text-align: right;">4.903441</td>
<td style="text-align: right;">1.978841</td>
<td style="text-align: right;">-3.34921</td>
<td style="text-align: right;">10.91447</td>
<td style="text-align: right;">14.26368</td>
<td style="text-align: right;">-0.6589170</td>
<td style="text-align: right;">-0.2008051</td>
<td style="text-align: right;">0.6321645</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>위의 요약된 기술 통계량들 중 표준 편차는 유사하지만 평균 ptsd가 약 7.245219의 차이를 보여준다. 아래의 histogram역시 성폭력을 경험한 그룹과 경험하지 않은 그룹간의 PTSD 수치가 다른것을 볼 수 있다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>ptsd,<span class="at" style="color: #657422;">color=</span>csa,<span class="at" style="color: #657422;">fill=</span>csa))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y=</span>..density..),<span class="at" style="color: #657422;">position=</span><span class="st" style="color: #20794D;">"identity"</span>,<span class="at" style="color: #657422;">fill=</span><span class="st" style="color: #20794D;">'white'</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">geom_density</span>(<span class="at" style="color: #657422;">alpha=</span><span class="fl" style="color: #AD0000;">0.5</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Histogram, PTSD Grouped by Childhood Sexual Abuse Experience"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"PTSD"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"Desnsity"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="one-way-anova" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="one-way-anova"><span class="header-section-number">3.2</span> One-Way ANOVA</h3>
<p>성폭력 경험 유무에 따른 PTSD 평균 차이가 통계적으로 유의한지 확인하기 위해 ANOVA를 수행한다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">sexab_aov<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">aov</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>csa, <span class="at" style="color: #657422;">data=</span>sexab)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">summary</span>(sexab_aov)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value   Pr(&gt;F)    
csa          1  963.5   963.5    79.9 2.17e-13 ***
Residuals   74  892.4    12.1                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>집단간 변수 csa p value가 &lt;0.05 인 것을 확인할 수 있다. csa는 5% 유의수준에서 유의하다.</p>
<p>하지만 PTSD의 변동량은 아동 학대에 의해 설명될 수도 있기 때문에 ptsd의 평균은 csa뿐만 아니라 cpa에 또한 고려되어야한다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>cpa,<span class="at" style="color: #657422;">y=</span>ptsd))<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_point</span>()<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">"lm"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Scatter Plot, PTSD vs CPA"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"CPA"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"PTSD"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">correlation<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">cor.test</span>(sexab<span class="sc" style="color: #5E5E5E;">$</span>cpa,sexab<span class="sc" style="color: #5E5E5E;">$</span>ptsd, <span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">'pearson'</span>)</span></code></pre></div>
</details>
</div>
<p>그림과 같이 CPA가 증가하면서 PTSD또한 선형적으로 증가하는 패턴을 관찰할 수 있다. 두 변수간의 상관계수 = 0.49이고 p value= 6.2715909^{-6}으로 보아 두 변수 사이에 선형적인 상관관계가 있는 것으로 보인다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>cpa,<span class="at" style="color: #657422;">y=</span>ptsd))<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_point</span>()<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">"lm"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">facet_wrap</span>(.<span class="sc" style="color: #5E5E5E;">~</span>csa)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Scatter Plot, PTSD vs CPA Grouped By CSA"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"CPA"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"PTSD"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>아동기 성폭력 경험 유/무에도 PTSD와 CPA와 선형적인 관계가 있는 것으로 보이기 때문에 CSA의 PTSD로의 효과를 검정하기 위해선 CPA를 조정할 필요가 있는것으로 보인다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># ptsd로의 순수한 성폭력 경험의 영향도를 얻기 위해서는 아동기 신체적 학대(공변량)에 대해서 고려를 해줘야함</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">sexab_aov<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">aov</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>cpa<span class="sc" style="color: #5E5E5E;">+</span>csa, <span class="at" style="color: #657422;">data=</span>sexab) </span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;">summary</span>(sexab_aov)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value   Pr(&gt;F)    
cpa          1  449.8   449.8   41.98 9.46e-09 ***
csa          1  624.0   624.0   58.25 6.91e-11 ***
Residuals   73  782.1    10.7                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>아동기의 신체적 학대가 일정하다는 가정하에서 PTSD와 성폭력의 순수한 관계는 5% 유의수준에서 유의하고 공변량, CPA를 조정하기전과 그 유의성이 차이가 있음을 관찰할 수 있다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># CPA가 제거 된 후에 CSA의 순수한 효과를 알아보기</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;">ancova</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>cpa<span class="sc" style="color: #5E5E5E;">+</span>csa, <span class="at" style="color: #657422;">data=</span>sexab) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Analysis of Variance Table

Response: ptsd
          Df Sum Sq Mean Sq F value    Pr(&gt;F)    
cpa        1 449.80  449.80  41.984 9.462e-09 ***
csa        1 624.03  624.03  58.247 6.907e-11 ***
Residuals 73 782.08   10.71                      
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>두 csa집단에서 두 회귀선의 기울기 같고 절편이 다르게 나타나는 것을 관찰 할 수있다. 기울기가 같은 이유는 cpa가 ptsd에 영향을 미치는 정도가 두집단에서 일정하도록 공변량으로서 통제 했기 때문이다.</p>
</section>
</section>
<section id="blog-guide-map-link" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">4</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Repeated Meausres ANOVA</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html</link>
  <description><![CDATA[ 



<p>(Draft, 바쁘니까 일단 대충이라도 적어놓음 ㅠ)</p>
<section id="description" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="description"><span class="header-section-number">1</span> Description</h2>
<p>Repeated Meausres ANOVA (반복 측정 분산 분석)</p>
<ul>
<li>동일한 대상에 대해 여러 번 반복측정하여 반복측정(3번 이상) 집단 간에 차이가 존재하는지 검정
<ul>
<li>대응 표본 검정은 동일한 대상에 2번 반복 측정함 2개의 대응표본에 대한 검정</li>
</ul></li>
<li>이 때, 반복 측정 기간은 집단 내 요인이라 부르고 이를 반복측정 일원분산분석-집단내요인이라고 부름</li>
<li>반복측정 기간외에 대상을 구분하는 집단 변수가 포함되면 반복측정 이원분산분석- 집단내요인 &amp; 집단간 요인</li>
</ul>
</section>
<section id="example" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="example"><span class="header-section-number">2</span> Example</h2>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">str</span>(CO2)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Classes 'nfnGroupedData', 'nfGroupedData', 'groupedData' and 'data.frame':  84 obs. of  5 variables:
 $ Plant    : Ord.factor w/ 12 levels "Qn1"&lt;"Qn2"&lt;"Qn3"&lt;..: 1 1 1 1 1 1 1 2 2 2 ...
 $ Type     : Factor w/ 2 levels "Quebec","Mississippi": 1 1 1 1 1 1 1 1 1 1 ...
 $ Treatment: Factor w/ 2 levels "nonchilled","chilled": 1 1 1 1 1 1 1 1 1 1 ...
 $ conc     : num  95 175 250 350 500 675 1000 95 175 250 ...
 $ uptake   : num  16 30.4 34.8 37.2 35.3 39.2 39.7 13.6 27.3 37.1 ...
 - attr(*, "formula")=Class 'formula'  language uptake ~ conc | Plant
  .. ..- attr(*, ".Environment")=&lt;environment: R_EmptyEnv&gt; 
 - attr(*, "outer")=Class 'formula'  language ~Treatment * Type
  .. ..- attr(*, ".Environment")=&lt;environment: R_EmptyEnv&gt; 
 - attr(*, "labels")=List of 2
  ..$ x: chr "Ambient carbon dioxide concentration"
  ..$ y: chr "CO2 uptake rate"
 - attr(*, "units")=List of 2
  ..$ x: chr "(uL/L)"
  ..$ y: chr "(umol/m^2 s)"</code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">names</span>(CO2)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Plant"     "Type"      "Treatment" "conc"      "uptake"   </code></pre>
</div>
</div>
<p>R console에 <code>?CO2</code>를 입력하면 다음과 같은 설명이 나온다.</p>
<p><em>The CO2 data frame has 84 rows and 5 columns of data from an experiment on the cold tolerance of the grass species Echinochloa crus-galli.The <img src="https://latex.codecogs.com/png.latex?CO_2"> uptake of six plants from Quebec and six plants from Mississippi was measured at several levels of ambient <img src="https://latex.codecogs.com/png.latex?CO_2"> concentration. Half the plants of each type were chilled overnight before the experiment was conducted.</em></p>
<p>즉, 식물이 <strong>저온의 환경에서 견디는 정도를 실험한 데이터</strong>로 퀘벡 지역의 6개의 나무와 미시시피 지역의 6개 나무의 이산화 탄소 흡수율을 7개의 서로 다른 이산화 탄소 농도 하에서 반복적으로 측정했다.</p>
<section id="goals" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="goals"><span class="header-section-number">2.1</span> Goals</h3>
<p>분석의 편의를 위해 저온 처리된 나무에 한정하여 분석</p>
<ol type="1">
<li>두 지역간의 CO2흡수율의 차이를 검정</li>
<li>7개의 서로 다른 이산화탄소 농도에 따라서 이산화 탄소의 흡수율 차이를 검정</li>
<li>나무의 출신 지역과 이산화 탄소 흡수율 간의 관계가 이산화탄소 농도에 따라 달라지는 지도 검정</li>
</ol>
</section>
<section id="data-description" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="data-description"><span class="header-section-number">2.2</span> Data Description</h3>
<ul>
<li>Plant: plant id</li>
<li>Type: 나무의 출신 지역, 2개의 범주, 집단간 요인</li>
<li>Treatment: 퀘벡 지역 나무와 미시시피 지역 나무dp 각 각 절반씩 실험 전에 저온 처리 했음, 저온 처리 여부가 treatment 변수에 저장됨</li>
<li>conc: co2농도, 7개의 범주, 집단 내 요인</li>
<li>uptake: 종속 변수, 이산화 탄소 흡수율</li>
</ul>
</section>
<section id="load-libraries-and-data" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="load-libraries-and-data"><span class="header-section-number">2.3</span> Load Libraries and Data</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">library</span>(faraway)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">library</span>(markdown)</span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">library</span>(effects)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;">library</span>(HH)</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;">library</span>(psych)</span></code></pre></div>
</details>
</div>
</section>
<section id="eda" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="eda"><span class="header-section-number">2.4</span> EDA</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">data<span class="ot" style="color: #003B4F;">=</span>CO2<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">filter</span>(Treatment<span class="sc" style="color: #5E5E5E;">==</span><span class="st" style="color: #20794D;">'chilled'</span>)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">conc=</span><span class="fu" style="color: #4758AB;">factor</span>(conc),</span>
<span id="cb6-4"><span class="at" style="color: #657422;">type=</span><span class="fu" style="color: #4758AB;">factor</span>(conc))</span></code></pre></div>
</details>
</div>
</section>
<section id="descriptive-statistics" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="descriptive-statistics"><span class="header-section-number">2.5</span> Descriptive Statistics</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">data<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">group_by</span>(Type)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">count=</span><span class="fu" style="color: #4758AB;">n</span>(),</span>
<span id="cb7-4"><span class="at" style="color: #657422;">mean_uptake=</span><span class="fu" style="color: #4758AB;">mean</span>(uptake),</span>
<span id="cb7-5"><span class="at" style="color: #657422;">sd_uptake=</span><span class="fu" style="color: #4758AB;">sd</span>(uptake)</span>
<span id="cb7-6">)<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">Type</th>
<th style="text-align: right;">count</th>
<th style="text-align: right;">mean_uptake</th>
<th style="text-align: right;">sd_uptake</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">31.75238</td>
<td style="text-align: right;">9.644823</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">15.81429</td>
<td style="text-align: right;">4.058976</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>두 지역의 분산과 평균 흡수율이 차이가 남</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">data<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">group_by</span>(conc)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">count=</span><span class="fu" style="color: #4758AB;">n</span>(),</span>
<span id="cb8-4"><span class="at" style="color: #657422;">mean_uptake=</span><span class="fu" style="color: #4758AB;">mean</span>(uptake),</span>
<span id="cb8-5"><span class="at" style="color: #657422;">sd_uptake=</span><span class="fu" style="color: #4758AB;">sd</span>(uptake)</span>
<span id="cb8-6">)<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">conc</th>
<th style="text-align: right;">count</th>
<th style="text-align: right;">mean_uptake</th>
<th style="text-align: right;">sd_uptake</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">95</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">11.23333</td>
<td style="text-align: right;">2.860536</td>
</tr>
<tr class="even">
<td style="text-align: left;">175</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">19.45000</td>
<td style="text-align: right;">5.886510</td>
</tr>
<tr class="odd">
<td style="text-align: left;">250</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">25.28333</td>
<td style="text-align: right;">10.569090</td>
</tr>
<tr class="even">
<td style="text-align: left;">350</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">26.20000</td>
<td style="text-align: right;">10.831251</td>
</tr>
<tr class="odd">
<td style="text-align: left;">500</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">26.65000</td>
<td style="text-align: right;">11.445479</td>
</tr>
<tr class="even">
<td style="text-align: left;">675</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">27.88333</td>
<td style="text-align: right;">10.958361</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1000</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">29.78333</td>
<td style="text-align: right;">12.410547</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>농도에 따라서 평균 흡수율과 분산이 약간 차이가 나는 것 같음. 다만, 고농도가 될수록 변화량이 줄어드는 것으로 보임</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">data<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">group_by</span>(Type,conc)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">count=</span><span class="fu" style="color: #4758AB;">n</span>(),</span>
<span id="cb9-4"><span class="at" style="color: #657422;">mean_uptake=</span><span class="fu" style="color: #4758AB;">mean</span>(uptake),</span>
<span id="cb9-5"><span class="at" style="color: #657422;">sd_uptake=</span><span class="fu" style="color: #4758AB;">sd</span>(uptake)</span>
<span id="cb9-6">)<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">Type</th>
<th style="text-align: left;">conc</th>
<th style="text-align: right;">count</th>
<th style="text-align: right;">mean_uptake</th>
<th style="text-align: right;">sd_uptake</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">95</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">12.86667</td>
<td style="text-align: right;">3.121431</td>
</tr>
<tr class="even">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">175</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">24.13333</td>
<td style="text-align: right;">3.150132</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">250</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">34.46667</td>
<td style="text-align: right;">3.927255</td>
</tr>
<tr class="even">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">350</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">35.80000</td>
<td style="text-align: right;">2.615339</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">500</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">36.66667</td>
<td style="text-align: right;">3.611556</td>
</tr>
<tr class="even">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">675</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">37.50000</td>
<td style="text-align: right;">2.100000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">1000</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">40.83333</td>
<td style="text-align: right;">1.913984</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">95</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">9.60000</td>
<td style="text-align: right;">1.646208</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">175</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">14.76667</td>
<td style="text-align: right;">3.302020</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">250</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">16.10000</td>
<td style="text-align: right;">3.292416</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">350</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">16.60000</td>
<td style="text-align: right;">3.157531</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">500</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">16.63333</td>
<td style="text-align: right;">3.667879</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">675</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">18.26667</td>
<td style="text-align: right;">4.285246</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">1000</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">18.73333</td>
<td style="text-align: right;">3.883727</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>농도가 증가함에 따라 지역간 평균 흡수율의 차이가 커지는 것을 관찰할 수 있음</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">boxplot</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>Type<span class="sc" style="color: #5E5E5E;">*</span>conc,<span class="at" style="color: #657422;">data=</span>data,<span class="at" style="color: #657422;">col=</span><span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"darkblue"</span>,<span class="st" style="color: #20794D;">"darkred"</span>),</span>
<span id="cb10-2">        <span class="at" style="color: #657422;">las=</span><span class="dv" style="color: #AD0000;">2</span>,<span class="at" style="color: #657422;">cex.axis=</span><span class="fl" style="color: #AD0000;">0.7</span>,<span class="at" style="color: #657422;">xlab=</span><span class="st" style="color: #20794D;">""</span>,<span class="at" style="color: #657422;">ylab=</span><span class="st" style="color: #20794D;">"Carbon Dioxide Uptake Rate"</span>,</span>
<span id="cb10-3">        <span class="at" style="color: #657422;">main=</span><span class="st" style="color: #20794D;">"Effects of Plant Ype and CO2 on Carbon Dioxide Uptake"</span>)</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;">legend</span>(<span class="st" style="color: #20794D;">"topleft"</span>,<span class="at" style="color: #657422;">inset=</span><span class="fl" style="color: #AD0000;">0.025</span>, <span class="at" style="color: #657422;">legend=</span><span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Quebec"</span>,<span class="st" style="color: #20794D;">"Mississippi"</span>),</span>
<span id="cb10-5">       <span class="at" style="color: #657422;">fill=</span><span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"darkblue"</span>,<span class="st" style="color: #20794D;">"darkred"</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_rmANOVA/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="one-wway-anova" class="level3" data-number="2.6">
<h3 data-number="2.6" class="anchored" data-anchor-id="one-wway-anova"><span class="header-section-number">2.6</span> One-Wway ANOVA</h3>
<p>반복 측정 일원분산분석: y~W+Error(subject) where W= a within grouping variable, subject= a sample identifier</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">aov</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>Type<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">Error</span>(Plant),<span class="at" style="color: #657422;">data=</span>data)<span class="sc" style="color: #5E5E5E;">%&gt;%</span><span class="fu" style="color: #4758AB;">summary</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
Error: Plant
          Df Sum Sq Mean Sq F value  Pr(&gt;F)   
Type       1 2667.2  2667.2   60.41 0.00148 **
Residuals  4  176.6    44.1                   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Error: Within
          Df Sum Sq Mean Sq F value Pr(&gt;F)
Residuals 36   2013   55.93               </code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">aov</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>conc<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">Error</span>(Plant),<span class="at" style="color: #657422;">data=</span>data)<span class="sc" style="color: #5E5E5E;">%&gt;%</span><span class="fu" style="color: #4758AB;">summary</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
Error: Plant
          Df Sum Sq Mean Sq F value Pr(&gt;F)
Residuals  5   2844   568.8               

Error: Within
          Df Sum Sq Mean Sq F value   Pr(&gt;F)    
conc       6   1472  245.40   13.61 2.09e-07 ***
Residuals 30    541   18.03                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>지역간 농도간 평균 흡수율이 차이가 5% 유의수준에서 유의하다.</p>
</section>
<section id="two-wway-anova" class="level3" data-number="2.7">
<h3 data-number="2.7" class="anchored" data-anchor-id="two-wway-anova"><span class="header-section-number">2.7</span> Two-Wway ANOVA</h3>
<p>반복측정 이원분산 분석: y~B*W+Error(subject/W) where W= within grouping variable, B =Between Group Variable, and subject= a sample identifier</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">aov</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>Type<span class="sc" style="color: #5E5E5E;">*</span>conc<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">Error</span>(Plant<span class="sc" style="color: #5E5E5E;">/</span>conc),<span class="at" style="color: #657422;">data=</span>data)<span class="sc" style="color: #5E5E5E;">%&gt;%</span><span class="fu" style="color: #4758AB;">summary</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
Error: Plant
          Df Sum Sq Mean Sq F value  Pr(&gt;F)   
Type       1 2667.2  2667.2   60.41 0.00148 **
Residuals  4  176.6    44.1                   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Error: Plant:conc
          Df Sum Sq Mean Sq F value   Pr(&gt;F)    
conc       6 1472.4  245.40   52.52 1.26e-12 ***
Type:conc  6  428.8   71.47   15.30 3.75e-07 ***
Residuals 24  112.1    4.67                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>지역간 농도간 집단간에서 흡수율 차이가 유의한것으로 나타나고 둘의 상호작용 또한 5% 유의수준에서 유의하다.</p>
</section>
</section>
<section id="blog-guide-map-link" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">3</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MANOVA</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html</link>
  <description><![CDATA[ 



<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(heplots)</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;">#skulls 고대 이집트 왕조 부터 로마시대까지 이집트 지역에서 발군된 두개골의 크기를 측정한 데이터</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># 이집트 역사를 5개의 시대로 구분하고 각 시대별로 30개씩의 두개골을 4개의 지표로 측정</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;"># epoch: 이집트의 시대를 5개로 구분, 독립변수</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;"># mb : 두개골의 폭, 종속 변수</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;"># bh : 두개골의 높이, 종속 변수</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;"># bl : 두개골의 길이, 종속 변수</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;"># nh : 코의 높이, 종속 변수</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;">sample_n</span>(Skulls,<span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>      epoch  mb  bh  bl nh
36  c3300BC 135 136  98 52
127  cAD150 136 138  97 58
96   c200BC 131 135  90 50
43  c3300BC 131 136  99 56
115  c200BC 133 128  92 51
35  c3300BC 126 124  95 45
17  c4000BC 135 137 103 50
142  cAD150 131 129  97 44
32  c3300BC 133 134  97 48
28  c4000BC 127 129 106 48</code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">attach</span>(Skulls)<span class="co" style="color: #5E5E5E;"># Skulls를 작업 경로에 포함시키기</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">search</span>() <span class="co" style="color: #5E5E5E;"># 작업 경로 확인인</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> [1] ".GlobalEnv"        "Skulls"            "package:dplyr"    
 [4] "package:heplots"   "package:broom"     "package:car"      
 [7] "package:carData"   "tools:quarto"      "tools:quarto"     
[10] "package:stats"     "package:graphics"  "package:grDevices"
[13] "package:utils"     "package:datasets"  "package:methods"  
[16] "Autoloads"         "package:base"     </code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># 종속 변수를 결합시켜 하나의 행렬로 만들기</span></span>
<span id="cb5-2">y<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">cbind</span>(mb,bh,bl,nh)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;"># 시대별 두개골  길이의 평균 보기</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">aggregate</span>(y,<span class="at" style="color: #657422;">by=</span><span class="fu" style="color: #4758AB;">list</span>(epoch),mean) <span class="co" style="color: #5E5E5E;"># 언뜻 보기에 차이가 있는 것 처럼 보임</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>  Group.1       mb       bh       bl       nh
1 c4000BC 131.3667 133.6000 99.16667 50.53333
2 c3300BC 132.3667 132.7000 99.06667 50.23333
3 c1850BC 134.4667 133.8000 96.03333 50.56667
4  c200BC 135.5000 132.3000 94.53333 51.96667
5  cAD150 136.1667 130.3333 93.50000 51.36667</code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># 모집단으로 일반화하기 위해 통계적 검정 시행</span></span>
<span id="cb7-2">skulls_manova<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">manova</span>(y<span class="sc" style="color: #5E5E5E;">~</span>epoch)</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;">summary</span>(skulls_manova)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>           Df  Pillai approx F num Df den Df    Pr(&gt;F)    
epoch       4 0.35331    3.512     16    580 4.675e-06 ***
Residuals 145                                             
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># 시대별 두개골 측정값이 차이가 있는 것으로 보임</span></span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;"># 구체적으로 어느 두개 골 측정값에서 차이가 나는지 확인</span></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;">summary.aov</span>(skulls_manova)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> Response mb :
             Df  Sum Sq Mean Sq F value    Pr(&gt;F)    
epoch         4  502.83 125.707  5.9546 0.0001826 ***
Residuals   145 3061.07  21.111                      
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

 Response bh :
             Df Sum Sq Mean Sq F value  Pr(&gt;F)  
epoch         4  229.9  57.477  2.4474 0.04897 *
Residuals   145 3405.3  23.485                  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

 Response bl :
             Df Sum Sq Mean Sq F value    Pr(&gt;F)    
epoch         4  803.3 200.823  8.3057 4.636e-06 ***
Residuals   145 3506.0  24.179                      
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

 Response nh :
             Df Sum Sq Mean Sq F value Pr(&gt;F)
epoch         4   61.2  15.300   1.507 0.2032
Residuals   145 1472.1  10.153               </code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># nh는 차이가 없는 것으로 보임</span></span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="do" style="color: #5E5E5E;
font-style: italic;">## 시간에 따라 두개골 측정이 다르다는 것은 이민족 유입의 혼혈 가능성이 있음</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="fu" style="color: #4758AB;">detach</span>(Skulls)<span class="co" style="color: #5E5E5E;"># 작업경로에서 삭제제</span></span></code></pre></div>
</details>
</div>
<section id="blog-guide-map-link" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">1</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Validation</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Validation/guide_map/index.html</link>
  <description><![CDATA[ 



<section id="sgs" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="sgs"><span class="header-section-number">1</span> SGS</h2>
<ul>
<li>0000-00-00, EN62304</li>
</ul>
</section>
<section id="fda" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="fda"><span class="header-section-number">2</span> FDA</h2>
<ul>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html">General Guidance of SW Validation</a></li>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html">General Guidance of SW Validation, Diagram Summary</a></li>
</ul>
</section>
<section id="dhf" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="dhf"><span class="header-section-number">3</span> DHF</h2>
</section>
<section id="public-health" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="public-health"><span class="header-section-number">4</span> Public Health</h2>
</section>
<section id="wet-lab" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="wet-lab"><span class="header-section-number">5</span> Wet Lab</h2>
<ul>
<li>0000-00-00, PCR (Polymerase Chain Reaction) Experiment</li>
</ul>


</section>

 ]]></description>
  <category>Validation</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Validation/guide_map/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (7) Deque</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_deque/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="덱deque" class="level2">
<h2 class="anchored" data-anchor-id="덱deque">덱(Deque)</h2>
<ul>
<li>덱은 스택(stack)과 큐(queue)의 기능을 모두 가지고 있다.</li>
<li>그래서, 스택과 큐대신 덱을 사용해도 괜찮음</li>
<li>다만, 포인터 변수가 더 많이 필요하기 때문에, 메모리는 상대적으로 더 많이 필요하다.</li>
<li>Python에서는 큐(queue)의 기능이 필요할 때 간단히 덱(deque)을 사용한다.</li>
<li>데이터의 삭제와 삽입 모두에서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 의 시간 복잡도가 소요된다.</li>
<li>덱에 여러 개의 데이터를 삽입하고 삭제하는 예시를 확인해 보자.</li>
</ul>
<p>[12개의 전체 연산]</p>
<ul>
<li>좌측으로부터 삽입 연산이 가능</li>
<li>우측으로부터 삽입 연산이 가능</li>
<li>삭제 연산시 우측/좌측 선택적 삭제가 가능</li>
</ul>
</section>
<section id="덱deque의-시간-복잡도" class="level2">
<h2 class="anchored" data-anchor-id="덱deque의-시간-복잡도">덱(Deque)의 시간 복잡도</h2>
<p>• 데이터의 삭제와 삽입 모두에서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 의 시간 복잡도가 소요된다.</p>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the deque functions in Python</caption>
<colgroup>
<col style="width: 7%">
<col style="width: 16%">
<col style="width: 15%">
<col style="width: 59%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Methods</th>
<th>Time Complexity</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>append left</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 왼쪽에 새 데이터를 삽입</td>
</tr>
<tr class="even">
<td>2</td>
<td>pop left</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 왼쪽에서 데이터를 추출</td>
</tr>
<tr class="odd">
<td>3</td>
<td>append right</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 오른쪽에 새 데이터를 삽입</td>
</tr>
<tr class="even">
<td>4</td>
<td>pop right</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 오른쪽에서 데이터를 추출</td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="파이썬의-덱deque-라이브러리" class="level2">
<h2 class="anchored" data-anchor-id="파이썬의-덱deque-라이브러리">파이썬의 덱(Deque) 라이브러리</h2>
<ul>
<li>Python에서는 덱(deque) 라이브러리를 사용할 수 있다.</li>
<li>아래의 모든 메서드는 최악의 경우 시간 복잡도 O 1 을 보장한다.</li>
<li>우측 삽입: append()</li>
<li>좌측 삽입: appendleft()</li>
<li>우측 추출: pop()</li>
<li>좌측 추출: popleft()</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">from</span> collections <span class="im" style="color: #00769E;">import</span> deque</span>
<span id="cb1-2"></span>
<span id="cb1-3"></span>
<span id="cb1-4">d <span class="op" style="color: #5E5E5E;">=</span> deque()</span>
<span id="cb1-5">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>] </span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-7">    d.append(x) <span class="co" style="color: #5E5E5E;"># 오른쪽 삽입</span></span>
<span id="cb1-8">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-10">    d.appendleft(x) <span class="co" style="color: #5E5E5E;"># 좌측 삽입</span></span>
<span id="cb1-11"><span class="bu" style="color: null;">print</span>(d)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="cf" style="color: #003B4F;">while</span> d:</span>
<span id="cb1-14">    <span class="bu" style="color: null;">print</span>(d.popleft()) <span class="co" style="color: #5E5E5E;"># 좌측 삭제</span></span>
<span id="cb1-15"></span>
<span id="cb1-16">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb1-17"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-18">    d.appendleft(x)</span>
<span id="cb1-19"><span class="bu" style="color: null;">print</span>(d)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb1-22">    <span class="bu" style="color: null;">print</span>(d.pop())</span>
<span id="cb1-23">    <span class="cf" style="color: #003B4F;">if</span> <span class="kw" style="color: #003B4F;">not</span> d:</span>
<span id="cb1-24">        <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb1-25">    <span class="bu" style="color: null;">print</span>(d.popleft())</span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;">if</span> <span class="kw" style="color: #003B4F;">not</span> d:</span>
<span id="cb1-27">        <span class="cf" style="color: #003B4F;">break</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>deque([1, 2, 3, 4, 5, 6, 7, 8])
1
2
3
4
5
6
7
8
deque([8, 7, 6, 5, 4, 3, 2, 1])
1
8
2
7
3
6
4
5</code></pre>
</div>
</div>
<section id="python에서-deque을-사용하는-경우" class="level3">
<h3 class="anchored" data-anchor-id="python에서-deque을-사용하는-경우">Python에서 Deque을 사용하는 경우</h3>
<ul>
<li>기본적인 Python의 리스트 자료형은 큐(queue)의 기능을 제공하지 않는다.</li>
<li>가능하다면 Python에서 제공하는 덱(deque) 라이브러리를 사용한다.</li>
<li>큐(queue)의 기능이 필요할 때는 덱 라이브러리를 사용하는 것을 추천한다.</li>
<li>삽입과 삭제에 대하여 모두 시간 복잡도 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이 요구된다.</li>
</ul>
</section>
</section>
<section id="연결-리스트로-덱-구현하기" class="level2">
<h2 class="anchored" data-anchor-id="연결-리스트로-덱-구현하기">연결 리스트로 덱 구현하기</h2>
<ul>
<li>덱(deque)을 연결 리스트로 구현하면, 삽입과 삭제에 있어서 O 1 을 보장할 수 있다.</li>
<li>연결 리스트로 구현할 때는 앞(front)과 뒤(rear) 두 개의 포인터를 가진다.</li>
<li>앞(front): 가장 좌측에 있는 데이터를 가리키는 포인터</li>
<li>뒤(rear): 가장 우측에 있는 데이터를 가리키는 포인터</li>
<li>삽입과 삭제의 구현 방법은 스택 및 큐와 유사하다.</li>
<li>앞(front)과 뒤(rear)에 대하여 대칭적으로 로직이 구현될 수 있다.</li>
</ul>
<section id="좌측-삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="좌측-삽입-연산">좌측 삽입 연산</h3>
<ul>
<li>좌측 삽입할 때는 앞(front) 위치에 데이터를 넣는다.</li>
<li>새로운 데이터가 삽입되었을 때 front data와 연결이 먼저 된 후 front data의 이전 노드가 새로운 데이터가 되도록 설정</li>
</ul>
</section>
<section id="좌측-삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="좌측-삭제-연산">좌측 삭제 연산</h3>
<ul>
<li>삭제할 때는 앞(front) 위치에서 데이터를 꺼낸다. 즉, 그냥 front를 그 다음 데이터로 설정하면 됨</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb3-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-3">        <span class="va" style="color: #111111;">self</span>.data <span class="op" style="color: #5E5E5E;">=</span> data</span>
<span id="cb3-4">        <span class="va" style="color: #111111;">self</span>.prev <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-5">        <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;">class</span> Deque:</span>
<span id="cb3-9">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-10">        <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-11">        <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-12">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-13"></span>
<span id="cb3-14">    <span class="kw" style="color: #003B4F;">def</span> appendleft(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-15">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb3-16">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-17">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-18">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-20">            node.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front</span>
<span id="cb3-21">            <span class="va" style="color: #111111;">self</span>.front.prev <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-22">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-23">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-24"></span>
<span id="cb3-25">    <span class="kw" style="color: #003B4F;">def</span> append(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-26">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb3-27">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-28">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-29">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-30">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-31">            node.prev <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.rear</span>
<span id="cb3-32">            <span class="va" style="color: #111111;">self</span>.rear.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-33">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-34">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-35"></span>
<span id="cb3-36">    <span class="kw" style="color: #003B4F;">def</span> popleft(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-37">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-38">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-39">        <span class="co" style="color: #5E5E5E;"># 앞에서 노드 꺼내기</span></span>
<span id="cb3-40">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front.data</span>
<span id="cb3-41">        <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-42">        <span class="co" style="color: #5E5E5E;"># 삭제로 인해 노드가 하나도 없는 경우</span></span>
<span id="cb3-43">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-44">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-45">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-46">            <span class="va" style="color: #111111;">self</span>.front.prev <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-47">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">-=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-48">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb3-49"></span>
<span id="cb3-50">    <span class="kw" style="color: #003B4F;">def</span> pop(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-51">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-52">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-53">        <span class="co" style="color: #5E5E5E;"># 뒤에서 노드 꺼내기</span></span>
<span id="cb3-54">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.rear.data</span>
<span id="cb3-55">        <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.rear.prev</span>
<span id="cb3-56">        <span class="co" style="color: #5E5E5E;"># 삭제로 인해 노드가 하나도 없는 경우</span></span>
<span id="cb3-57">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-58">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-59">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-60">            <span class="va" style="color: #111111;">self</span>.rear.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-61">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">-=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-62">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb3-63"></span>
<span id="cb3-64">    <span class="kw" style="color: #003B4F;">def</span> front(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-65">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-66">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-67">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.front.data</span>
<span id="cb3-68"></span>
<span id="cb3-69">    <span class="kw" style="color: #003B4F;">def</span> rear(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-70">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-71">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-72">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.rear.data</span>
<span id="cb3-73"></span>
<span id="cb3-74">    <span class="co" style="color: #5E5E5E;"># 앞에서부터 원소 출력</span></span>
<span id="cb3-75">    <span class="kw" style="color: #003B4F;">def</span> show(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-76">        cur <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front</span>
<span id="cb3-77">        <span class="cf" style="color: #003B4F;">while</span> cur:</span>
<span id="cb3-78">            <span class="bu" style="color: null;">print</span>(cur.data, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb3-79">            cur <span class="op" style="color: #5E5E5E;">=</span> cur.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-80"></span>
<span id="cb3-81"></span>
<span id="cb3-82">d <span class="op" style="color: #5E5E5E;">=</span> Deque()</span>
<span id="cb3-83">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb3-84"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-85">    d.append(x)</span>
<span id="cb3-86">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb3-87"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-88">    d.appendleft(x)</span>
<span id="cb3-89">d.show()</span>
<span id="cb3-90"></span>
<span id="cb3-91"><span class="bu" style="color: null;">print</span>()</span>
<span id="cb3-92"><span class="cf" style="color: #003B4F;">while</span> d.size <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-93">    <span class="bu" style="color: null;">print</span>(d.popleft())</span>
<span id="cb3-94"></span>
<span id="cb3-95">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb3-96"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-97">    d.appendleft(x)</span>
<span id="cb3-98">d.show()</span>
<span id="cb3-99"></span>
<span id="cb3-100"><span class="bu" style="color: null;">print</span>()</span>
<span id="cb3-101"><span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb3-102">    <span class="bu" style="color: null;">print</span>(d.pop())</span>
<span id="cb3-103">    <span class="cf" style="color: #003B4F;">if</span> d.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-104">        <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb3-105">    <span class="bu" style="color: null;">print</span>(d.popleft())</span>
<span id="cb3-106">    <span class="cf" style="color: #003B4F;">if</span> d.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-107">        <span class="cf" style="color: #003B4F;">break</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>1 2 3 4 5 6 7 8 
1
2
3
4
5
6
7
8
8 7 6 5 4 3 2 1 
1
8
2
7
3
6
4
5</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_deque/index.html</guid>
  <pubDate>Wed, 25 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Engineering</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/index.html</link>
  <description><![CDATA[ 



<section id="it-terminology" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="it-terminology"><span class="header-section-number">1</span> IT Terminology</h2>
<ul>
<li>0000-00-00, PoC (Proof of Concept)</li>
</ul>
</section>
<section id="data-structure" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="data-structure"><span class="header-section-number">2</span> Data Structure</h2>
<ul>
<li>2023-01-17, <a href="../2023-01-17_data_structure_overview/">Overview</a></li>
<li>2023-01-18, <a href="../2023-01-18_array/">Array</a></li>
<li>2023-01-18, <a href="../2023-01-18_linked_list/">Linked List</a></li>
<li>2023-01-18, <a href="../2023-01-18_python_list/">Python List</a></li>
<li>2023-01-19, <a href="../2023-01-19_stack/">Stack</a></li>
<li>2023-01-19, <a href="../2023-01-19_queue/">Queue</a></li>
<li>2023-01-26, <a href="../2023-01-19_deque/">Deque</a></li>
<li>2023-01-26, <a href="../2023-01-20_binary_search_tree/">Binary Search Tree</a></li>
<li>2023-01-20, <a href="../2023-01-20_priority_queue/">Priority Queue</a></li>
<li>2023-01-20, <a href="../2023-01-20_graph/">Graph</a></li>
</ul>
</section>
<section id="conda" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="conda"><span class="header-section-number">3</span> Conda</h2>
</section>
<section id="docker" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="docker"><span class="header-section-number">4</span> Docker</h2>
<ul>
<li>2023-01-30, Docker Install</li>
<li>2023-01-31, Docker Compose</li>
<li>2023-02-01, Docker Container</li>
</ul>
</section>
<section id="dynamic-documentation" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="dynamic-documentation"><span class="header-section-number">5</span> Dynamic Documentation</h2>
<ul>
<li>2023-01-19, <a href="https://quarto.org/docs/get-started/">Quarto</a></li>
<li>2023-01-19, <a href="https://github.com/yihui/xaringan">xaringan[R]</a></li>
<li>2023-01-19, <a href="https://bookdown.org/yihui/bookdown/get-started.html">Bookdown[R]</a></li>
<li>2023-01-19, <a href="https://decile-team-distil.readthedocs.io/en/latest/index.html">DISTL</a></li>
<li>2023-01-26, <a href="https://www.sphinx-doc.org/en/master/">Sphinx[Python]</a></li>
</ul>
</section>
<section id="aws-cloud" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="aws-cloud"><span class="header-section-number">6</span> AWS Cloud</h2>
</section>
<section id="azure-cloud" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="azure-cloud"><span class="header-section-number">7</span> Azure Cloud</h2>
</section>
<section id="data-modeling" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="data-modeling"><span class="header-section-number">8</span> Data Modeling</h2>
</section>
<section id="apache-airflow" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="apache-airflow"><span class="header-section-number">9</span> Apache Airflow</h2>
</section>
<section id="apache-spark" class="level2" data-number="10">
<h2 data-number="10" class="anchored" data-anchor-id="apache-spark"><span class="header-section-number">10</span> Apache Spark</h2>
</section>
<section id="front-end" class="level2" data-number="11">
<h2 data-number="11" class="anchored" data-anchor-id="front-end"><span class="header-section-number">11</span> Front End</h2>
</section>
<section id="back-end" class="level2" data-number="12">
<h2 data-number="12" class="anchored" data-anchor-id="back-end"><span class="header-section-number">12</span> Back End</h2>


</section>

 ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/index.html</guid>
  <pubDate>Wed, 25 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (10) Graph</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_graph/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="그래프graph" class="level2">
<h2 class="anchored" data-anchor-id="그래프graph">그래프(Graph)</h2>
<p>• 그래프(graph)란 사물을 정점(vertex)과 간선(edge)으로 나타내기 위한 도구다.</p>
<p>• 그래프는 두 가지 방식으로 구현할 수 있다.</p>
<ol type="1">
<li><p>인접 행렬(adjacency matrix): 2차원 배열을 사용하는 방식</p></li>
<li><p>인접 리스트(adjacency list): 연결 리스트를 이용하는 방식</p></li>
</ol>
</section>
<section id="인접-행렬adjacency-matrix" class="level2">
<h2 class="anchored" data-anchor-id="인접-행렬adjacency-matrix">인접 행렬(Adjacency Matrix)</h2>
<p>• 인접 행렬(adjacency matrix)에서는 그래프를 2차원 배열로 표현한다.</p>
<section id="인접-행렬---무방향-무가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-행렬---무방향-무가중치-그래프">인접 행렬 - 무방향 무가중치 그래프</h3>
<p>• 모든 간선이 방향성을 가지지 않는 그래프를 무방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 없는 그래프를 무가중치 그래프라고 한다.</p>
<p>• 무방향 무가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 행렬로 출력할 수 있다.</p>
</section>
<section id="인접-행렬---방향-가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-행렬---방향-가중치-그래프">인접 행렬 - 방향 가중치 그래프</h3>
<p>• 모든 간선이 방향을 가지는 그래프를 방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 있는 그래프를 가중치 그래프라고 한다.</p>
<p>• 방향 가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 행렬로 출력할 수 있다.</p>
</section>
</section>
<section id="인접-리스트adjacency-list" class="level2">
<h2 class="anchored" data-anchor-id="인접-리스트adjacency-list">인접 리스트(Adjacency List)</h2>
<p>• 인접 리스트(adjacency list)에서는 그래프를 리스트로 표현한다.</p>
<section id="인접-리스트---무방향-무가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-리스트---무방향-무가중치-그래프">인접 리스트 - 무방향 무가중치 그래프</h3>
<p>• 모든 간선이 방향성을 가지지 않는 그래프를 무방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 없는 그래프를 무가중치 그래프라고 한다.</p>
<p>• 무방향 무가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 리스트로 출력할 수 있다.</p>
</section>
<section id="인접-리스트---방향-가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-리스트---방향-가중치-그래프">인접 리스트 - 방향 가중치 그래프</h3>
<p>• 모든 간선이 방향을 가지는 그래프를 방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 있는 그래프를 가중치 그래프라고 한다.</p>
<p>• 방향 가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 리스트로 출력할 수 있다.</p>
</section>
</section>
<section id="그래프의-시간-복잡도" class="level2">
<h2 class="anchored" data-anchor-id="그래프의-시간-복잡도">그래프의 시간 복잡도</h2>
<ol type="1">
<li>인접 행렬: 모든 정점들의 연결 여부를 저장해 O V</li>
</ol>
<p>2 의 공간을 요구한다.</p>
<p>• 공간 효율성이 떨어지지만, 두 노드의 연결 여부를 O 1 에 확인할 수 있다.</p>
<ol start="2" type="1">
<li>인접 리스트: 연결된 간선의 정보만을 저장하여 O V + E 의 공간을 요구한다.</li>
</ol>
<p>• 공간 효율성이 우수하지만, 두 노드의 연결 여부를 확인하기 위해 O V 의 시간이 필요하다.</p>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the stack functions in Python</caption>
<colgroup>
<col style="width: 11%">
<col style="width: 26%">
<col style="width: 22%">
<col style="width: 39%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Category</th>
<th>필요한 메모리</th>
<th>연결 여부 확인</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>인접 행렬</td>
<td><img src="https://latex.codecogs.com/png.latex?O(V%5E2)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
</tr>
<tr class="even">
<td>2</td>
<td>인접 리스트</td>
<td><img src="https://latex.codecogs.com/png.latex?O(V+E)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(V)"></td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="인접-행렬-vs.-인접-리스트" class="level2">
<h2 class="anchored" data-anchor-id="인접-행렬-vs.-인접-리스트">인접 행렬 vs.&nbsp;인접 리스트</h2>
<p>• 최단 경로 알고리즘을 구현할 때, 어떤 자료구조가 유용할까?</p>
<p>• 각각 근처의 노드와 연결되어 있는 경우가 많으므로, 간선 개수가 적어 인접 리스트가 유리하다.</p>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_graph/index.html</guid>
  <pubDate>Thu, 19 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (6) Queue</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_queue/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="queue" class="level2">
<h2 class="anchored" data-anchor-id="queue">Queue</h2>
<ul>
<li>큐(queue)는 먼저 삽입된 데이터가 먼저 추출되는 자료구조(data structure)다. (First-In First-Out)</li>
<li>딥러닝 모델에 들어가는 데이터 순서대로 들어가는데 먼저 들어간 데이터는 먼저 나오게 할때 사용되는 자료 구조이다.</li>
</ul>
</section>
<section id="연결-리스트로-큐-구현" class="level2">
<h2 class="anchored" data-anchor-id="연결-리스트로-큐-구현">연결 리스트로 큐 구현</h2>
<ul>
<li>큐를 연결 리스트로 구현하면, 삽입과 삭제에 있어서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 을 보장할 수 있다.</li>
<li>연결 리스트로 구현할 때는 머리(head)와 꼬리(tail) 두 개의 포인터를 가진다.</li>
<li>머리(head): 남아있는 원소 중 가장 먼저 들어 온 데이터를 가리키는 포인터</li>
<li>꼬리(tail): 남아있는 원소 중 가장 마지막에 들어 온 데이터를 가리키는 포인터</li>
</ul>
<section id="삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="삽입-연산">삽입 연산</h3>
<ul>
<li>삽입할 때는 꼬리(tail) 위치에 데이터를 넣는다.</li>
<li>값으로 8을 갖는 새로운 데이터가 삽입되었을 때 예시)</li>
</ul>
</section>
<section id="삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="삭제-연산">삭제 연산</h3>
<ul>
<li>삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.</li>
<li>하나의 데이터를 삭제할 때의 예시)</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-3">        <span class="va" style="color: #111111;">self</span>.data <span class="op" style="color: #5E5E5E;">=</span> data</span>
<span id="cb1-4">        <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;">class</span> Queue:</span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-9">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-10">        <span class="va" style="color: #111111;">self</span>.tail <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">    <span class="kw" style="color: #003B4F;">def</span> enqueue(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-13">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb1-14">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb1-15">            <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb1-16">            <span class="va" style="color: #111111;">self</span>.tail <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb1-17">        <span class="co" style="color: #5E5E5E;"># 꼬리(tail) 위치에 새로운 노드 삽입</span></span>
<span id="cb1-18">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb1-19">            <span class="va" style="color: #111111;">self</span>.tail.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb1-20">            <span class="va" style="color: #111111;">self</span>.tail <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.tail.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-21"></span>
<span id="cb1-22">    <span class="kw" style="color: #003B4F;">def</span> dequeue(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-23">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb1-24">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-25"></span>
<span id="cb1-26">        <span class="co" style="color: #5E5E5E;"># 머리(head) 위치에서 노드 꺼내기</span></span>
<span id="cb1-27">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.data</span>
<span id="cb1-28">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-29"></span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb1-31"></span>
<span id="cb1-32">    <span class="kw" style="color: #003B4F;">def</span> show(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-33">        cur <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb1-34">        <span class="cf" style="color: #003B4F;">while</span> cur:</span>
<span id="cb1-35">            <span class="bu" style="color: null;">print</span>(cur.data, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-36">            cur <span class="op" style="color: #5E5E5E;">=</span> cur.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-37"></span>
<span id="cb1-38"></span>
<span id="cb1-39">queue <span class="op" style="color: #5E5E5E;">=</span> Queue()</span>
<span id="cb1-40">data_list <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb1-41"></span>
<span id="cb1-42"><span class="cf" style="color: #003B4F;">for</span> data <span class="kw" style="color: #003B4F;">in</span> data_list:</span>
<span id="cb1-43">    queue.enqueue(data)</span>
<span id="cb1-44"></span>
<span id="cb1-45"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-46">queue.show()</span>
<span id="cb1-47"></span>
<span id="cb1-48"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[원소 삭제]"</span>)</span>
<span id="cb1-49"><span class="bu" style="color: null;">print</span>(queue.dequeue())</span>
<span id="cb1-50"><span class="bu" style="color: null;">print</span>(queue.dequeue())</span>
<span id="cb1-51"><span class="bu" style="color: null;">print</span>(queue.dequeue())</span>
<span id="cb1-52"></span>
<span id="cb1-53"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"[원소 삽입]"</span>)</span>
<span id="cb1-54">queue.enqueue(<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-55">queue.enqueue(<span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb1-56">queue.enqueue(<span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb1-57"></span>
<span id="cb1-58"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-59">queue.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
전체 노드 출력: 3 5 9 8 5 6 1 7 
[원소 삭제]
3
5
9
[원소 삽입]
전체 노드 출력: 8 5 6 1 7 2 5 3 </code></pre>
</div>
</div>
</section>
<section id="큐-동작-속도-연결-리스트-vs.-리스트-자료형" class="level3">
<h3 class="anchored" data-anchor-id="큐-동작-속도-연결-리스트-vs.-리스트-자료형">큐 동작 속도: 연결 리스트 vs.&nbsp;리스트 자료형</h3>
<ul>
<li>다수의 데이터를 삽입 및 삭제할 때에 대하여, 수행 시간을 측정할 수 있다.</li>
<li>단순히 Python의 리스트 자료형을 이용할 때보다 수행 시간 관점에서 효율적이다.</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;">import</span> time</span>
<span id="cb3-2"></span>
<span id="cb3-3">data_list <span class="op" style="color: #5E5E5E;">=</span> [i <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">100000</span>)]</span>
<span id="cb3-4"></span>
<span id="cb3-5">start_time <span class="op" style="color: #5E5E5E;">=</span> time.time()</span>
<span id="cb3-6"></span>
<span id="cb3-7">queue <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;">for</span> data <span class="kw" style="color: #003B4F;">in</span> data_list:</span>
<span id="cb3-9">    queue.append(data)</span>
<span id="cb3-10"><span class="cf" style="color: #003B4F;">while</span> queue:</span>
<span id="cb3-11">    queue.pop(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Elapsed time: </span><span class="sc" style="color: #5E5E5E;">{</span>time<span class="sc" style="color: #5E5E5E;">.</span>time() <span class="op" style="color: #5E5E5E;">-</span> start_time<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> seconds."</span>)</span>
<span id="cb3-14"><span class="bu" style="color: null;">print</span>(queue)</span>
<span id="cb3-15"></span>
<span id="cb3-16">start_time <span class="op" style="color: #5E5E5E;">=</span> time.time()</span>
<span id="cb3-17"></span>
<span id="cb3-18">queue <span class="op" style="color: #5E5E5E;">=</span> Queue()</span>
<span id="cb3-19"><span class="cf" style="color: #003B4F;">for</span> data <span class="kw" style="color: #003B4F;">in</span> data_list:</span>
<span id="cb3-20">    queue.enqueue(data)</span>
<span id="cb3-21"><span class="cf" style="color: #003B4F;">while</span> queue.head <span class="op" style="color: #5E5E5E;">!=</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-22">    queue.dequeue()</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Elapsed time: </span><span class="sc" style="color: #5E5E5E;">{</span>time<span class="sc" style="color: #5E5E5E;">.</span>time() <span class="op" style="color: #5E5E5E;">-</span> start_time<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> seconds."</span>)</span>
<span id="cb3-25">queue.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Elapsed time: 0.8138220310211182 seconds.
[]
Elapsed time: 0.14721250534057617 seconds.</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_queue/index.html</guid>
  <pubDate>Wed, 18 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (5) Stack</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_stack/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="stack" class="level2">
<h2 class="anchored" data-anchor-id="stack">Stack</h2>
<ul>
<li>다양한 알고리즘과 프로그램에서 사용됨</li>
<li>스택: 먼저 들어온 데이터가 나중에 나가는 자료구조</li>
<li>흔히 박스가 쌓인 형태를 스택(stack)이라고 한다. 예) ‘Deep Learning 알고리즘의 구조가 stacked 되어 있는 구조다’ 라고 표현
<ul>
<li>우리가 박스를 쌓은 뒤에 꺼낼 때는, 가장 마지막에 올렸던 박스부터 꺼내야 한다.</li>
</ul></li>
<li>새로운 원소를 삽입할 때는 마지막 위치에 삽입한다. (가장 최근에 삽입된 원소가 가장 끝에 위치)</li>
<li>새로운 원소를 삭제할 때는 마지막 원소가 삭제된다. (가장 최근에 삽입된 원소가 제거됨)</li>
<li>head = 최상위 원소 = 가장 최근에 삽입이된 원소</li>
</ul>
</section>
<section id="스택-자료구조의-중요성" class="level2">
<h2 class="anchored" data-anchor-id="스택-자료구조의-중요성">스택 자료구조의 중요성</h2>
<ul>
<li>스택은 굉장히 기본적인 자료구조이다.</li>
<li>기계 학습 분야뿐 아니라 다양한 프로그램을 개발할 때 빠지지 않고 사용된다.</li>
</ul>
</section>
<section id="스택-자료구조의-시간-복잡도" class="level2">
<h2 class="anchored" data-anchor-id="스택-자료구조의-시간-복잡도">스택 자료구조의 시간 복잡도</h2>
<ul>
<li>스택은 여러 가지 연산을 제공한다.</li>
</ul>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the stack functions in Python</caption>
<colgroup>
<col style="width: 7%">
<col style="width: 16%">
<col style="width: 15%">
<col style="width: 59%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Methods</th>
<th>Time Complexity</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>삽입(Push)</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택에 원소를 삽입하는 연산</td>
</tr>
<tr class="even">
<td>2</td>
<td>추출(Pop)</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택에서 원소를 추출하는 연산</td>
</tr>
<tr class="odd">
<td>3</td>
<td>최상위 원소 (Top)</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택의 최상위 원소(마지막에 들어온 원소) 를 확인(조회)하는 연산</td>
</tr>
<tr class="even">
<td>4</td>
<td>Empty</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택이 비어 있는지 확인하는 연산</td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="python에서-스택을-구현하는-방법-1-리스트-자료형" class="level2">
<h2 class="anchored" data-anchor-id="python에서-스택을-구현하는-방법-1-리스트-자료형">Python에서 스택을 구현하는 방법 1: 리스트 자료형</h2>
<ul>
<li>파이썬의 기본적인 리스트 자료형은 다음의 두 가지 메서드를 제공한다.</li>
<li>append() 메서드: 마지막 위치에 원소를 삽입하며, 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이다.</li>
<li>pop() 메서드: 마지막 위치에서 원소를 추출하며, 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이다.</li>
<li>따라서 일반적으로 스택을 구현할 때, 파이썬의 리스트(list) 자료형을 사용한다.</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">class</span> Stack:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-3">        <span class="va" style="color: #111111;">self</span>.stack <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb1-4"></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;">def</span> push(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-6">        <span class="co" style="color: #5E5E5E;"># 마지막 위치에 원소 삽입</span></span>
<span id="cb1-7">        <span class="va" style="color: #111111;">self</span>.stack.append(data)</span>
<span id="cb1-8"></span>
<span id="cb1-9">    <span class="kw" style="color: #003B4F;">def</span> pop(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-10">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb1-11">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-12">        <span class="co" style="color: #5E5E5E;"># 마지막 원소 추출</span></span>
<span id="cb1-13">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.stack.pop()</span>
<span id="cb1-14"></span>
<span id="cb1-15">    <span class="kw" style="color: #003B4F;">def</span> top(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-16">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb1-17">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-18">        <span class="co" style="color: #5E5E5E;"># 마지막 원소 반환</span></span>
<span id="cb1-19">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.stack[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb1-20"></span>
<span id="cb1-21">    <span class="kw" style="color: #003B4F;">def</span> is_empty(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-22">        <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.stack) <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"></span>
<span id="cb1-25">stack <span class="op" style="color: #5E5E5E;">=</span> Stack()</span>
<span id="cb1-26">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb1-27"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-28">    stack.push(x)</span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="cf" style="color: #003B4F;">while</span> <span class="kw" style="color: #003B4F;">not</span> stack.is_empty():</span>
<span id="cb1-31">    <span class="bu" style="color: null;">print</span>(stack.pop())</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>2
4
6
5
2
7
9</code></pre>
</div>
</div>
</section>
<section id="연결-리스트로-스택-구현하기" class="level2">
<h2 class="anchored" data-anchor-id="연결-리스트로-스택-구현하기">연결 리스트로 스택 구현하기</h2>
<ul>
<li>스택을 연결 리스트로 구현하면, 삽입과 삭제에 있어서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 을 보장한다.</li>
<li>연결 리스트로 구현할 때는 머리(head)를 가리키는 하나의 포인터만 가진다.</li>
<li>머리(head): 남아있는 원소 중 가장 마지막에 들어 온 데이터를 가리키는 포인터</li>
</ul>
<section id="삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="삽입-연산">삽입 연산</h3>
<ul>
<li>삽입할 때는 기존의 머리 뒤에 데이터가 들어가고 포인터가 가장 최근에 삽입된 데이터를 가리키도록 머리(head) 위치를 바꿔준다.</li>
<li>삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.
<ul>
<li>즉, 포인터를 삭제할 데이터에 앞에 있는 데이터로 머리 위치를 바꾸는 것만으로 삭제는 이루어진다.</li>
</ul></li>
</ul>
</section>
<section id="삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="삭제-연산">삭제 연산</h3>
<ul>
<li>삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb3-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-3">        <span class="va" style="color: #111111;">self</span>.data <span class="op" style="color: #5E5E5E;">=</span> data</span>
<span id="cb3-4">        <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;">class</span> Stack:</span>
<span id="cb3-8">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-9">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-10"></span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;"># 원소 삽입</span></span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;">def</span> push(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-13">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb3-14">        node.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb3-15">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-16"></span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;"># 원소 추출하기</span></span>
<span id="cb3-18">    <span class="kw" style="color: #003B4F;">def</span> pop(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb3-20">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-21"></span>
<span id="cb3-22">        <span class="co" style="color: #5E5E5E;"># 머리(head) 위치에서 노드 꺼내기</span></span>
<span id="cb3-23">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.data</span>
<span id="cb3-24">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-25"></span>
<span id="cb3-26">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb3-27"></span>
<span id="cb3-28">    <span class="co" style="color: #5E5E5E;"># 최상위 원소(top)</span></span>
<span id="cb3-29">    <span class="kw" style="color: #003B4F;">def</span> top(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-30">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb3-31">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-32">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.head.data</span>
<span id="cb3-33"></span>
<span id="cb3-34">    <span class="co" style="color: #5E5E5E;"># 먼저 추출할 원소부터 출력</span></span>
<span id="cb3-35">    <span class="kw" style="color: #003B4F;">def</span> show(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-36">        cur <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb3-37">        <span class="cf" style="color: #003B4F;">while</span> cur:</span>
<span id="cb3-38">            <span class="bu" style="color: null;">print</span>(cur.data, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb3-39">            cur <span class="op" style="color: #5E5E5E;">=</span> cur.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-40"></span>
<span id="cb3-41">    <span class="co" style="color: #5E5E5E;"># 스택이 비어있는지 확인</span></span>
<span id="cb3-42">    <span class="kw" style="color: #003B4F;">def</span> is_empty(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-43">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.head <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-44"></span>
<span id="cb3-45"></span>
<span id="cb3-46">stack <span class="op" style="color: #5E5E5E;">=</span> Stack()</span>
<span id="cb3-47">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb3-48"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-49">    stack.push(x)</span>
<span id="cb3-50">stack.show()</span>
<span id="cb3-51"><span class="bu" style="color: null;">print</span>()</span>
<span id="cb3-52"></span>
<span id="cb3-53"><span class="cf" style="color: #003B4F;">while</span> <span class="kw" style="color: #003B4F;">not</span> stack.is_empty():</span>
<span id="cb3-54">    <span class="bu" style="color: null;">print</span>(stack.pop())</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>2 4 6 5 2 7 9 
2
4
6
5
2
7
9</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_stack/index.html</guid>
  <pubDate>Wed, 18 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (2) Array</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-18_array/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="배열의-개요" class="level2">
<h2 class="anchored" data-anchor-id="배열의-개요">배열의 개요</h2>
<ul>
<li>가장 기본적인 자료구조다.</li>
<li>여러 개의 변수를 담는 공간으로 이해할 수 있다.</li>
<li>data가 연속적으로 들어가는 형태여서 배열은 인덱스(index)가 존재하며, 인덱스는 0부터 시작한다.</li>
<li>특정한 인덱스에 직접적으로 접근 가능하여 수행 시간은 빠른 속도인 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이다.</li>
</ul>
</section>
<section id="배열의-특징" class="level2">
<h2 class="anchored" data-anchor-id="배열의-특징">배열의 특징</h2>
<ul>
<li>컴퓨터의 메인 메모리에서 배열의 공간은 연속적으로 할당된다.</li>
<li>장점: Cache memory(속도면에서, <img src="https://latex.codecogs.com/png.latex?RAM%3CCache%3CCPU">, 공간면에서, <img src="https://latex.codecogs.com/png.latex?CPU%3CRAM%3CCache">, CPU옆에 위치) 히트(RAM에 있는 data를 Cache에 일부 옮기는 현상) 가능성이 높으며, 조회가 빠르다. 배열 같은 경우는 공간적으로 또는 연속적으로 붙어 있기때문에 cache memory 묶어서 옮길 수 있다.
<ul>
<li>Cache Hit: 원하는 data가 Cache Memory존재하는 것을 의미.</li>
<li>특정 index에 접근하는 속도가 매우 빠르다, <img src="https://latex.codecogs.com/png.latex?O(1)">.</li>
</ul></li>
<li>단점: 배열의 크기를 미리 지정해야 하는 것이 일반적이므로, 데이터의 추가 및 삭제에 한계가 있다.</li>
</ul>
</section>
<section id="연결리스트-linked-list" class="level2">
<h2 class="anchored" data-anchor-id="연결리스트-linked-list">연결리스트 (LINKED LIST)</h2>
<ul>
<li>컴퓨터의 메인 메모리(RAM)상에서 주소가 연속적이지 않다.</li>
<li>배열과 다르게 크기가 정해져 있지 않고, 리스트의 크기는 동적으로 변경 가능하다.</li>
<li>장점: 포인터(pointer)를 통해 다음 데이터의 위치를 가리킨다는 점에서 삽입과 삭제가 간편하다.</li>
<li>단점: 원소를 검색할 때는 포인터가 앞에서부터 원소를 찾아야 하므로, 데이터 검색 속도가 느리다.</li>
</ul>
</section>
<section id="파이썬의-리스트-list-자료형" class="level2">
<h2 class="anchored" data-anchor-id="파이썬의-리스트-list-자료형">파이썬의 리스트 (list) 자료형</h2>
<p>파이썬의 리스트(List) 자료형</p>
<ul>
<li>파이썬에서는 리스트 자료형을 제공한다. (컴퓨터 공학에서의 연결 리스트와는 다른 의미)</li>
<li>일반적인 프로그래밍 언어에서의 배열로 이해할 수 있다. 그러므로, 파이썬의 리스트는 배열이라고 생각해야한다.
<ul>
<li>파이썬의 리스트는 배열처럼 임의의 인덱스를 이용해 직접적인 접근이 가능하다.</li>
</ul></li>
<li>파이썬의 리스트 자료형은 동적 배열이다.
<ul>
<li>append를 이용해 데이터를 삽입할 때 배열의 용량이 가득 차면, 자동으로 크기를 증가시킨다.</li>
</ul></li>
<li>내부적으로 포인터(pointer)를 사용하여, 연결 리스트의 장점도 가지고 있다.</li>
<li>배열(array) 혹은 스택(stack)의 기능이 필요할 때 리스트 자료형을 그대로 사용할 수 있다.</li>
<li>큐(queue)의 기능을 제공하지 못한다. (비효율적)</li>
</ul>
</section>
<section id="리스트-컴프리헨션-list-comprehension" class="level2">
<h2 class="anchored" data-anchor-id="리스트-컴프리헨션-list-comprehension">리스트 컴프리헨션 (List Comprehension)</h2>
<ul>
<li>파이썬에서는 <strong>임의의 크기를 가지는 배열</strong>을 만들 수 있다.</li>
<li>일반적으로 리스트를 초기화할 때 리스트 컴프리헨션(list comprehension)이 자주 사용된다. (<strong>매우 편리</strong>)</li>
<li>크기가 N인 1차원 배열을 만드는 방법은 다음과 같다.</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># [0, 0, 0, 0, 0]</span></span>
<span id="cb1-2">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb1-3">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">*</span> n</span>
<span id="cb1-4"><span class="bu" style="color: null;">print</span>(arr)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;"># [0, 1, 2, 3, 4]</span></span>
<span id="cb1-7">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb1-8">arr <span class="op" style="color: #5E5E5E;">=</span> [i <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n)]</span>
<span id="cb1-9"><span class="bu" style="color: null;">print</span>(arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[0, 0, 0, 0, 0]
[0, 1, 2, 3, 4]</code></pre>
</div>
</div>
<ul>
<li>크기가 <img src="https://latex.codecogs.com/png.latex?N%20%5Ctimes%20M"> 인 2차원 리스트(배열) 만들기 1
<ul>
<li>2차원 배열이 필요할 때는 다음과 같이 초기화한다.</li>
</ul></li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb3-2">m <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb3-3">arr <span class="op" style="color: #5E5E5E;">=</span> [[<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">*</span> m <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n)]</span>
<span id="cb3-4"><span class="bu" style="color: null;">print</span>(arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]</code></pre>
</div>
</div>
<ul>
<li>크기가 <img src="https://latex.codecogs.com/png.latex?N%20%5Ctimes%20M"> 인 2차원 리스트(배열) 만들기 2</li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb5-2">m <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb5-3">arr <span class="op" style="color: #5E5E5E;">=</span> [[i <span class="op" style="color: #5E5E5E;">*</span> m <span class="op" style="color: #5E5E5E;">+</span> j <span class="cf" style="color: #003B4F;">for</span> j <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(m)] <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n)]</span>
<span id="cb5-4"><span class="bu" style="color: null;">print</span>(arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14]]</code></pre>
</div>
</div>
</section>
<section id="배열을-초기화할-때-유의할-점" class="level2">
<h2 class="anchored" data-anchor-id="배열을-초기화할-때-유의할-점">배열을 초기화할 때 유의할 점</h2>
<ul>
<li>리스트는 기본적으로 메모리 주소를 반환한다.</li>
<li>따라서 단순히 <code>[[0]∗m]∗n</code> 형태로 배열을 초기화하면 안 된다.</li>
<li>이렇게 초기화를 하게 되면, n개의 <code>[0]∗m</code> 리스트는 모두 같은 객체로 인식된다.</li>
<li>다시 말해, 같은 메모리를(동일한 리스트를) 가리키는 n개의 원소를 담는 리스트가 된다.</li>
<li>2차원 배열을 초기화할 때는 리스트 컴프리헨션을 이용하는 것이 일반적이다.</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb7-2">m <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb7-3">arr1 <span class="op" style="color: #5E5E5E;">=</span> [[<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">*</span> m] <span class="op" style="color: #5E5E5E;">*</span> n <span class="co" style="color: #5E5E5E;"># 잘못된 방식</span></span>
<span id="cb7-4">arr2 <span class="op" style="color: #5E5E5E;">=</span> [[<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">*</span> m <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n)] <span class="co" style="color: #5E5E5E;"># 옳은 방식</span></span>
<span id="cb7-5"></span>
<span id="cb7-6">arr1[<span class="dv" style="color: #AD0000;">1</span>][<span class="dv" style="color: #AD0000;">3</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">7</span></span>
<span id="cb7-7">arr2[<span class="dv" style="color: #AD0000;">1</span>][<span class="dv" style="color: #AD0000;">3</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">7</span></span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="bu" style="color: null;">print</span>(arr1)</span>
<span id="cb7-10"><span class="bu" style="color: null;">print</span>(arr2)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[[0, 0, 0, 7, 0], [0, 0, 0, 7, 0], [0, 0, 0, 7, 0]]
[[0, 0, 0, 0, 0], [0, 0, 0, 7, 0], [0, 0, 0, 0, 0]]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="cell-output cell-output-display">
<p>위의 결과를 보면, 잘못된 방식으로 초기화된 배열 <code>arr1</code>은 [[0, 0, 0, 7, 0], [0, 0, 0, 7, 0], [0, 0, 0, 7, 0]]와 같이 7의 삽입이 모든 행에 걸쳐서 적용됐다. 반면에, 올바른 방식으로 초기화된 <code>arr2</code>는 [[0, 0, 0, 0, 0], [0, 0, 0, 7, 0], [0, 0, 0, 0, 0]]는 의도된 대로 하나의 element가 [1][3] index에 삽입이 된 것을 볼 수 있다.</p>
</div>
</div>
</section>
<section id="배열-직접-초기화" class="level2">
<h2 class="anchored" data-anchor-id="배열-직접-초기화">배열 직접 초기화</h2>
<ul>
<li>자신이 원하는 임의의 값을 넣어 곧바로 사용할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb9-2"><span class="bu" style="color: null;">print</span>(arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 8]</code></pre>
</div>
</div>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-18_array/index.html</guid>
  <pubDate>Tue, 17 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (3) Linked List</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-18_linked_list/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<ul>
<li>연결 리스트는 각 노드가 한 줄로 연결되어 있는 자료 구조다.</li>
<li>각 노드는 (데이터, 포인터) 형태를 가진다.</li>
<li>포인터: 다음 노드의 메모리 주소를 가리키는 목적으로 사용된다.</li>
<li>연결성: 각 노드의 포인터는 다음 혹은 이전 노드를 가리킨다.<br>
</li>
<li>연결 리스트를 이용하면 다양한 자료구조를 구현할 수 있다.
<ul>
<li>예시) 스택, 큐 등을 구현 가능</li>
</ul></li>
<li>Python은 연결 리스트를 활용하는 자료구조를 제공한다.</li>
<li>연결 리스트를 실제 구현해야 하는 경우는 적지만, 그 원리 이해는 자료 구조와 클래스를 작성하는데 도움이 된다.</li>
</ul>
</section>
<section id="연결-리스트linked-list-vs.-배열array" class="level2">
<h2 class="anchored" data-anchor-id="연결-리스트linked-list-vs.-배열array">연결 리스트(Linked List) vs.&nbsp;배열(Array)</h2>
<ul>
<li>연결 리스트와 배열(array)을 비교하여 장단점을 이해할 필요가 있다.</li>
<li>특정 위치의 데이터를 삭제할 때, 일반적인 <strong>배열</strong>에서는 <img src="https://latex.codecogs.com/png.latex?O(N)"> 만큼의 시간이 소요된다.</li>
<li>하지만, <strong>연결 리스트</strong>를 이용하면 단순히 연결만 끊어주면 된다.</li>
<li>따라서 삭제할 위치를 정확히 알고 있는 경우 <img src="https://latex.codecogs.com/png.latex?O(1)"> 의 시간이 소요된다.</li>
<li>하지만 삭제할 위치를 정확히 알아내기 위해 앞의 코드를 자세히 보게 되는 소요 시간이 증가할 수 있다.</li>
</ul>
<section id="배열의-삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="배열의-삽입-연산">배열의 삽입 연산</h3>
<ul>
<li>배열에 새로운 원소를 삽입할 때, 최악의 경우 시간 복잡도를 계산하여라.</li>
<li>예시) 배열에서 인덱스 3에 원소 “59”를 삽입할 경우, 인덱스 4 이후의 공간에 있는 데이터를 한칸씩 밀어내는 <img src="https://latex.codecogs.com/png.latex?O(n)"> 만큼 소요</li>
</ul>
</section>
<section id="배열의-삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="배열의-삭제-연산">배열의 삭제 연산</h3>
<ul>
<li>배열에 존재하는 원소를 삭제할 때, 최악의 경우 시간 복잡도를 계산하여라.</li>
<li>예시) 배열에서 인덱스 3에 해당하는 원소를 삭제한 후 데이터를 한칸 씩 당겨 이동 시키는 <img src="https://latex.codecogs.com/png.latex?O(n)"> 만큼 소요</li>
<li>따라서, 최악의 경우 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(N)"> 이다.</li>
</ul>
</section>
<section id="연결-리스트linked-list의-삽입insert-연산" class="level3">
<h3 class="anchored" data-anchor-id="연결-리스트linked-list의-삽입insert-연산">연결 리스트(Linked List)의 삽입(Insert) 연산</h3>
<ul>
<li>삽입할 위치를 알고 있다면, 물리적인 위치를 한 칸씩 옮기지 않아도 삽입할 수 있다.</li>
<li>인덱스 2의 위치에 원소를 삽입할 경우 인덱스 1의 Node에서 인덱스 2에 위치할 데이터를 가리키고 인덱스 2의 node가 인덱스 3의 node를 가리키도록 만들면 된다.</li>
</ul>
</section>
<section id="연결-리스트linked-list의-삭제delete-연산" class="level3">
<h3 class="anchored" data-anchor-id="연결-리스트linked-list의-삭제delete-연산">연결 리스트(Linked List)의 삭제(Delete) 연산</h3>
<ul>
<li>삭제할 위치를 알고 을 경우 연결 리스트 사용</li>
<li>인덱스 2의 위치에 원소를 삭제할 경우 인덱스 1의 Node가 인덱스 3의 node를 가리키게 만들면 됨</li>
</ul>
</section>
<section id="연결-리스트linked-list의-붙이기append-연산" class="level3">
<h3 class="anchored" data-anchor-id="연결-리스트linked-list의-붙이기append-연산">연결 리스트(Linked List)의 붙이기(Append) 연산</h3>
<ul>
<li>뒤에 붙일 때는 남는 공간에 마지막 노드의 다음 위치에 원소를 할당 시키면 된다.</li>
<li>마지막 위치에 새로운 원소를 추가</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-3">        <span class="va" style="color: #111111;">self</span>.data <span class="op" style="color: #5E5E5E;">=</span> data <span class="co" style="color: #5E5E5E;"># 데이터 할당</span></span>
<span id="cb1-4">        <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span> <span class="co" style="color: #5E5E5E;"># 다음 노드</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;">class</span> LinkedList:</span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-9">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span> <span class="co" style="color: #5E5E5E;"># 첫 번째  node</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">    <span class="co" style="color: #5E5E5E;"># 가장 뒤에 노드 삽입</span></span>
<span id="cb1-12">    <span class="kw" style="color: #003B4F;">def</span> append(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-13">        </span>
<span id="cb1-14">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>: <span class="co" style="color: #5E5E5E;"># 헤드(head)가 비어있는 경우</span></span>
<span id="cb1-15">            <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb1-16">            <span class="cf" style="color: #003B4F;">return</span></span>
<span id="cb1-17">        </span>
<span id="cb1-18">        currrent <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head <span class="co" style="color: #5E5E5E;"># 그렇지 않다면 마지막 노드에 새로운 노드 추가</span></span>
<span id="cb1-19"></span>
<span id="cb1-20">        <span class="cf" style="color: #003B4F;">while</span> currrent.<span class="bu" style="color: null;">next</span> <span class="kw" style="color: #003B4F;">is</span> <span class="kw" style="color: #003B4F;">not</span> <span class="va" style="color: #111111;">None</span>: <span class="co" style="color: #5E5E5E;"># 다음 노드가 없을 때까지  </span></span>
<span id="cb1-21">            currrent <span class="op" style="color: #5E5E5E;">=</span> currrent.<span class="bu" style="color: null;">next</span> <span class="co" style="color: #5E5E5E;"># 다음 원소로 넘어감</span></span>
<span id="cb1-22">        currrent.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> Node(data) <span class="co" style="color: #5E5E5E;"># 다음 노드가 없으면 새로운 데이터를 추가 </span></span>
<span id="cb1-23"></span>
<span id="cb1-24">    <span class="co" style="color: #5E5E5E;"># 모든 노드를 하나씩 출력</span></span>
<span id="cb1-25">    <span class="kw" style="color: #003B4F;">def</span> show(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-26">        currrent <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb1-27">        <span class="cf" style="color: #003B4F;">while</span> currrent <span class="kw" style="color: #003B4F;">is</span> <span class="kw" style="color: #003B4F;">not</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb1-28">            <span class="bu" style="color: null;">print</span>(currrent.data, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-29">            currrent <span class="op" style="color: #5E5E5E;">=</span> currrent.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-30"></span>
<span id="cb1-31">    <span class="co" style="color: #5E5E5E;"># 특정 인덱스(index)의 노드 찾기</span></span>
<span id="cb1-32">    <span class="kw" style="color: #003B4F;">def</span> search(<span class="va" style="color: #111111;">self</span>, index):</span>
<span id="cb1-33">        node <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb1-34">        <span class="cf" style="color: #003B4F;">for</span> _ <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(index):</span>
<span id="cb1-35">            node <span class="op" style="color: #5E5E5E;">=</span> node.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-36">        <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb1-37"></span>
<span id="cb1-38">    <span class="co" style="color: #5E5E5E;"># 특정 인덱스(index)에 노드 삽입</span></span>
<span id="cb1-39">    <span class="kw" style="color: #003B4F;">def</span> insert(<span class="va" style="color: #111111;">self</span>, index, data):</span>
<span id="cb1-40">        new <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb1-41">        <span class="co" style="color: #5E5E5E;"># 첫 위치에 추가하는 경우</span></span>
<span id="cb1-42">        <span class="cf" style="color: #003B4F;">if</span> index <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb1-43">            new.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb1-44">            <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> new</span>
<span id="cb1-45">            <span class="cf" style="color: #003B4F;">return</span></span>
<span id="cb1-46">        <span class="co" style="color: #5E5E5E;"># 삽입할 위치의 앞 노드</span></span>
<span id="cb1-47">        node <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.search(index <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-48">        <span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> node.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-49">        node.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> new</span>
<span id="cb1-50">        new.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">next</span></span>
<span id="cb1-51"></span>
<span id="cb1-52">    <span class="co" style="color: #5E5E5E;"># 특정 인덱스(index)의 노드 삭제</span></span>
<span id="cb1-53">    <span class="kw" style="color: #003B4F;">def</span> remove(<span class="va" style="color: #111111;">self</span>, index):</span>
<span id="cb1-54">        <span class="co" style="color: #5E5E5E;"># 첫 위치를 삭제하는 경우</span></span>
<span id="cb1-55">        <span class="cf" style="color: #003B4F;">if</span> index <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb1-56">            <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-57">            <span class="cf" style="color: #003B4F;">return</span></span>
<span id="cb1-58">        <span class="co" style="color: #5E5E5E;"># 삭제할 위치의 앞 노드</span></span>
<span id="cb1-59">        front <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.search(index <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-60">        front.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> front.<span class="bu" style="color: null;">next</span>.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-61"></span>
<span id="cb1-62"></span>
<span id="cb1-63">linked_list <span class="op" style="color: #5E5E5E;">=</span> LinkedList()</span>
<span id="cb1-64">data_list <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb1-65"></span>
<span id="cb1-66"><span class="cf" style="color: #003B4F;">for</span> data <span class="kw" style="color: #003B4F;">in</span> data_list:</span>
<span id="cb1-67">    linked_list.append(data)</span>
<span id="cb1-68"></span>
<span id="cb1-69"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-70">linked_list.show()</span>
<span id="cb1-71"></span>
<span id="cb1-72">linked_list.insert(<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb1-73"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-74">linked_list.show()</span>
<span id="cb1-75"></span>
<span id="cb1-76">linked_list.remove(<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb1-77"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-78">linked_list.show()</span>
<span id="cb1-79"></span>
<span id="cb1-80">linked_list.insert(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-81"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-82">linked_list.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>전체 노드 출력: 3 5 9 8 5 6 1 7 
전체 노드 출력: 3 5 9 8 4 5 6 1 7 
전체 노드 출력: 3 5 9 8 4 5 6 7 
전체 노드 출력: 3 5 9 8 4 5 6 2 7 </code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-18_linked_list/index.html</guid>
  <pubDate>Tue, 17 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (1) Overview</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="data-structure" class="level2">
<h2 class="anchored" data-anchor-id="data-structure">Data Structure</h2>
<p>딥러닝은 다양한 알고리즘의 조합으로 수행되기 때문에 다양한 알고리즘을 정확하게 작성하기 위해서는 다수의 다양한 자료(data)를 담기 위해 사용되는 자료 구조를 이해할 필요가 있다. 즉, 자료구조는 정확한 알고리즘을 구현하기 위해 다수의 자료(data)를 담기 위한 구조이다.</p>
<ul>
<li>딥러닝 유저들간에도 자료구조를 이해하는 것에 대한 의견이 분분하지만</li>
<li>올바른 자료구조를 사용하는 것은 프로그램을 조직적으로 만들 수 있는 능력을 키울 수 있다.</li>
<li>데이터의 수가 많아질수록 효율적인 자료구조가 필요하다.</li>
<li>예시) 학생 수가 1,000,000명 이상인 학생 관리 프로그램
<ul>
<li>매일 자료 조회가 1억번 이상 발생한다면 더 빠르게 동작하는 자료 구조를 사용해야 프로그램의 효율성을 올릴 수 있다.</li>
</ul></li>
</ul>
<section id="자료구조의-개요" class="level3">
<h3 class="anchored" data-anchor-id="자료구조의-개요">자료구조의 개요</h3>
<ul>
<li>자료구조의 필요성에 대해서 이해할 필요가 있다.</li>
<li>성능 비교: 자료구조/알고리즘의 성능 측정 방법에 대해 이해할 필요가 있다.
<ul>
<li>A: 적당한 속도의 삽입 &amp; 적당한 속도의 추출 (삽입: <img src="https://latex.codecogs.com/png.latex?O%20(log%20N)"> / 추출: <img src="https://latex.codecogs.com/png.latex?O(log%20N)">)</li>
<li>B: 느린 삽입 &amp; 빠른 추출 (삽입: <img src="https://latex.codecogs.com/png.latex?O%20(N)"> / 추출: <img src="https://latex.codecogs.com/png.latex?O%20(1)">)</li>
<li>A vs B? 상황에 따라 A를 만들지 B를 만들지 선택해야 한다. 삽입 연산이 많으면 A를, 추출 연산이 많으면 B를 택해야 한다. (속도 비교: <img src="https://latex.codecogs.com/png.latex?O%20(N)%20%3C%20O%20(log%20N)%3C%20O%20(1)">)</li>
<li>하지만, 실무적으로 많은 개발자들이 A를 택한다. 왜냐면 log 복잡도는 상수 복잡도와 속도가 비슷하기 때문</li>
</ul></li>
</ul>
</section>
</section>
<section id="자료-구조의-필요성" class="level2">
<h2 class="anchored" data-anchor-id="자료-구조의-필요성">자료 구조의 필요성</h2>
<ul>
<li>이처럼 상황에 맞게 알고리즘의 연산 속도를 결정해야 하므로 데이터를 효과적으로 저장하고, 처리하는 방법에 대해 바르게 이해할 필요가 있다.</li>
<li>자료구조를 제대로 이해해야 불필요하게 메모리와 계산을 낭비하지 않는다.</li>
<li>C언어를 기준으로 정수(int) 형식의 데이터가 100만 개가량이 존재한다고 가정하자.</li>
<li>해당 프로그램을 이용하면, 내부적으로 하루에 데이터 조회가 1억 번 이상 발생한다.</li>
<li>이때 원하는 데이터를 가장 빠르게 찾도록 해주는 자료구조는 무엇일까?
<ul>
<li>트리(tree)와 같은 자료구조를 활용할 수 있다.</li>
</ul></li>
</ul>
</section>
<section id="자료-구조의-종류" class="level2">
<h2 class="anchored" data-anchor-id="자료-구조의-종류">자료 구조의 종류</h2>
<ol type="1">
<li><p>선형 자료 구조(linear data structure) 선형 자료구조는 하나의 데이터 뒤에 다른 데이터가 하나 존재하는 자료구조이며 데이터가 일렬로 연속적으로(순차적으로) 연결되어 있다.</p>
<ul>
<li>배열(array)</li>
<li>연결 리스트(linked list)</li>
<li>스택(stack)</li>
<li>큐(queue)</li>
</ul></li>
<li><p>비선형 자료 구조(non-linear data structure)<br>
비선형 자료구조는 하나의 데이터 뒤에 다른 데이터가 여러 개 올 수 있는 자료구조이며 데이터가 일직선상으로 연결되어 있지 않아도 된다.</p>
<ul>
<li>트리(tree)</li>
<li>그래프(graph)</li>
</ul></li>
</ol>
</section>
<section id="자료구조와-알고리즘" class="level2">
<h2 class="anchored" data-anchor-id="자료구조와-알고리즘">자료구조와 알고리즘</h2>
<ol type="1">
<li>효율적인 자료구조 설계를 위해 알고리즘 지식이 필요하다.</li>
<li>효율적인 알고리즘을 작성하기 위해서 문제 상황에 맞는 적절한 자료구조가 사용되어야 한다.</li>
<li>프로그램을 작성할 때 자료구조와 알고리즘 모두 고려해야 한다.</li>
</ol>
</section>
<section id="프로그램의-성능-측정-방법" class="level2">
<h2 class="anchored" data-anchor-id="프로그램의-성능-측정-방법">프로그램의 성능 측정 방법</h2>
<ul>
<li>시간 복잡도(time complexity): 알고리즘에 사용되는 연산 횟수를 측정 (시간 측정)</li>
<li>공간 복잡도(space complexity): 알고리즘에 사용되는 메모리의 양을 측정 (공간 측정)</li>
<li>공간을 많이 사용하는 대신 <strong>시간을 단축</strong>하는 방법이 흔히 사용된다.</li>
<li>프로그램의 성능 측정 방법: Big-O 표기법
<ul>
<li>복잡도를 표현할 때는 Big-O 표기법을 사용한다.
<ol type="1">
<li>특정한 알고리즘이 얼마나 효율적인지 수치적으로 표현할 수 있다.</li>
<li>가장 빠르게 증가하는 항만을 고려하는 표기법이다.</li>
</ol></li>
<li>아래의 알고리즘은 <img src="https://latex.codecogs.com/png.latex?O(n)"> 의 시간 복잡도를 가진다. 왜냐면, n에 따라 <code>summary += i</code>의 연산 횟수가 정해지기 때문이다.</li>
</ul></li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb1-2">summary <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(n):</span>
<span id="cb1-4">    summary <span class="op" style="color: #5E5E5E;">+=</span> i</span>
<span id="cb1-5"><span class="bu" style="color: null;">print</span>(summary)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>45</code></pre>
</div>
</div>
<ul>
<li>다음 알고리즘은 <img src="https://latex.codecogs.com/png.latex?O%20(n%5E2)"> 의 시간 복잡도를 가진다. 2 중 for loop은 i와 j가 n에 따라 각 각 n 번씩 연산되기때문에 <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%20n"> 회 만큼 연산된다.</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">n <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb3-2"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">1</span>, n <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>):</span>
<span id="cb3-3">    <span class="cf" style="color: #003B4F;">for</span> j <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">1</span>, n <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>):</span>
<span id="cb3-4">        <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"</span><span class="sc" style="color: #5E5E5E;">{</span>i<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> X </span><span class="sc" style="color: #5E5E5E;">{</span>j<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> = </span><span class="sc" style="color: #5E5E5E;">{</span>i <span class="op" style="color: #5E5E5E;">*</span> j<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>1 X 1 = 1
1 X 2 = 2
1 X 3 = 3
2 X 1 = 2
2 X 2 = 4
2 X 3 = 6
3 X 1 = 3
3 X 2 = 6
3 X 3 = 9</code></pre>
</div>
</div>
<ul>
<li><p>일반적으로 연산 횟수가 10억 (<img src="https://latex.codecogs.com/png.latex?1.0%20%5Ctimes%2010%5E9">)을 넘어가면 1초 이상의 시간이 소요된다.</p>
<p>[예시] n이 1,000일 때를 고려해 보자.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?O(n)">: 약 1,000번의 연산</li>
<li><img src="https://latex.codecogs.com/png.latex?O(nlogn%20)">: 약 10,000번의 연산 (약 <img src="https://latex.codecogs.com/png.latex?log10=10">)</li>
<li><img src="https://latex.codecogs.com/png.latex?O(n%5E2)">: 약 1,000,000번의 연산</li>
<li><img src="https://latex.codecogs.com/png.latex?O(n%5E3)">: 약 1,000,000,000번의 연산</li>
</ul></li>
<li><p>그러므로, 알고리즘 짤 때 코딩 레벨로 연산 횟수를 계산해서 연산 시간을 어림잡아 추정할 수 있다.</p></li>
<li><p>시간 복잡도 속도 비교</p>
<p><img src="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-17_data_structure_overview/Comparison_computational_complexity.svg" class="img-fluid" alt="Time Complexity from Wiki"> <a href="https://commons.wikimedia.org/w/index.php?curid=50321072">By Cmglee - Own work, CC BY-SA 4.0</a></p></li>
<li><p>Big-O 표기법으로 시간 복잡도를 표기할 때는 가장 영향력이 큰 항만을 표시한다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?O(3n%5E2%20+%20n)%20=%20O(n%5E2)"></li>
<li>현실 세계에서는 동작 시간이 1초 이내인 알고리즘을 설계할 필요가 있다.</li>
<li>실무적으로 프로그램 동작 시간이 <strong>1초 이상이면 매우 느린 것으로 간주</strong>.</li>
</ul></li>
<li><p>공간 복잡도를 나타낼 때는 MB 단위로 표기한다.</p>
<p>int a[1000]: 4KB int a[1000000]: 4MB int a[2000][2000]: 16MB</p></li>
<li><p>자료구조를 적절히 활용하기</p>
<ul>
<li>자료구조의 종류로는 스택, 큐, 트리 등이 있다.</li>
<li>프로그램을 작성할 때는 자료구조를 적절히 활용하여 시간 복잡도를 최소화하여야 한다.</li>
</ul></li>
</ul>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html</guid>
  <pubDate>Mon, 16 Jan 2023 15:00:00 GMT</pubDate>
  <media:content url="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-17_data_structure_overview/Comparison_computational_complexity.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Data Structure (4) Python List</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-18_python_list/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the list functions in Python</caption>
<colgroup>
<col style="width: 6%">
<col style="width: 13%">
<col style="width: 13%">
<col style="width: 17%">
<col style="width: 49%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Methods</th>
<th>Time Complexity</th>
<th>Examples</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>Indexing</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td><code>arr[i]</code></td>
<td>특정 i th 인덱스의 값 반환</td>
</tr>
<tr class="even">
<td>2</td>
<td>Storing</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td><code>arr[i] = 1</code></td>
<td>특정 i th 인덱스에 값 (=1) 할당</td>
</tr>
<tr class="odd">
<td>3</td>
<td>Append</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td><code>arr.append(5)</code></td>
<td>리스트의 가장 뒤에 데이터 추가</td>
</tr>
<tr class="even">
<td>4</td>
<td>Pop</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td><code>arr.pop()</code></td>
<td>리스트의 가장 뒤에서 원소 꺼내기</td>
</tr>
<tr class="odd">
<td>5</td>
<td>Length</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td><code>len(arr)</code></td>
<td>리스트의 길이 얻기</td>
</tr>
<tr class="even">
<td>6</td>
<td>Clear</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td><code>arr.clear()</code></td>
<td>리스트 내 모든 원소 제거하기</td>
</tr>
<tr class="odd">
<td>7</td>
<td>Slicing</td>
<td><img src="https://latex.codecogs.com/png.latex?O(b-a)"></td>
<td><code>arr[a:b]</code></td>
<td>리스트에서 인덱스 a부터 b-1까지의 원소만 꺼내 새 리스트 만들기</td>
</tr>
<tr class="even">
<td>8</td>
<td>Extend</td>
<td><img src="https://latex.codecogs.com/png.latex?O(len(other))"></td>
<td><code>arr.extend(list2)</code></td>
<td>기존 리스트, list1에 다른 리스트, list2를 이어 붙이기</td>
</tr>
<tr class="odd">
<td>9</td>
<td>Insertion</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>arr.insert(index, x)</code></td>
<td>특정 인덱스에 데이터 x를 삽입하기, 즉 i th index를 뒤로 밀고 추가</td>
</tr>
<tr class="even">
<td>10</td>
<td>Delete</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>del arr[index]</code></td>
<td>특정 인덱스의 데이터 삭제하기</td>
</tr>
<tr class="odd">
<td>11</td>
<td>Construction</td>
<td><img src="https://latex.codecogs.com/png.latex?O(len(other))"></td>
<td><code>arr = list(other)</code></td>
<td>다른 자료구조의 원소들을 이용해 리스트로 만들기</td>
</tr>
<tr class="even">
<td>12</td>
<td>In</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>x in arr</code></td>
<td>데이터 x가 리스트에 존재하는지 확인</td>
</tr>
<tr class="odd">
<td>13</td>
<td>Not in</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>x not in arr</code></td>
<td>데이터 x가 리스트에 존재하지 않는지 확인</td>
</tr>
<tr class="even">
<td>14</td>
<td>Pop</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>arr.pop(index)</code></td>
<td>특정 인덱스의 데이터를 꺼내기 / 단, 가장 뒤 원소를 꺼내는 경우 O(1)</td>
</tr>
<tr class="odd">
<td>15</td>
<td>Remove</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>arr.remove(x)</code></td>
<td>리스트 내에 존재하는 데이터 x를 삭제</td>
</tr>
<tr class="even">
<td>16</td>
<td>Copy</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>arr.copy()</code></td>
<td>리스트를 복제</td>
</tr>
<tr class="odd">
<td>17</td>
<td>Min</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>min(arr)</code></td>
<td>리스트 내에 존재하는 가장 작은 원소</td>
</tr>
<tr class="even">
<td>18</td>
<td>Max</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>max(arr)</code></td>
<td>리스트 내에 존재하는 가장 큰 원소</td>
</tr>
<tr class="odd">
<td>19</td>
<td>Iteration</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><code>for x in arr</code></td>
<td>리스트 내에 존재하는 모든 원소 순회</td>
</tr>
<tr class="even">
<td>20</td>
<td>Multiply</td>
<td><img src="https://latex.codecogs.com/png.latex?O(k*N)"></td>
<td><code>arr * k</code></td>
<td>리스트를 k번 반복하여 길게 만들기</td>
</tr>
<tr class="odd">
<td>21</td>
<td>Sort</td>
<td><img src="https://latex.codecogs.com/png.latex?O(NlogN)"></td>
<td><code>arr.sort()</code></td>
<td>리스트 내 존재하는 원소를 정렬</td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
<ul>
<li>1~6: 파이썬의 list는 동적 배열의 특징이 있다. 시간 복잡도는 모두 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이다.
<ul>
<li>3~4: 사실상 stack의 기능과 동일</li>
</ul></li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>]</span>
<span id="cb1-2"><span class="bu" style="color: null;">print</span>(arr[<span class="dv" style="color: #AD0000;">4</span>]) <span class="co" style="color: #5E5E5E;"># 인덱싱(indexing)</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;"># 저장(storing)</span></span>
<span id="cb1-5">arr[<span class="dv" style="color: #AD0000;">7</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;"># 뒤에 붙이기(append)</span></span>
<span id="cb1-8">arr.append(<span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb1-9"><span class="bu" style="color: null;">print</span>(arr)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;"># 뒤에서 꺼내기(pop)</span></span>
<span id="cb1-12">arr.pop()</span>
<span id="cb1-13"><span class="bu" style="color: null;">print</span>(arr)</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;"># 길이(length)</span></span>
<span id="cb1-16"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">len</span>(arr))</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;"># 배열 비우기(clear)</span></span>
<span id="cb1-19">arr.clear()</span>
<span id="cb1-20"><span class="bu" style="color: null;">print</span>(arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4
[0, 1, 2, 3, 4, 5, 6, 10, 8, 9, 10]
[0, 1, 2, 3, 4, 5, 6, 10, 8, 9]
10
[]</code></pre>
</div>
</div>
<ul>
<li>7~11</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>]</span>
<span id="cb3-2">new_arr <span class="op" style="color: #5E5E5E;">=</span> arr[<span class="dv" style="color: #AD0000;">2</span>:<span class="dv" style="color: #AD0000;">7</span>] <span class="co" style="color: #5E5E5E;"># 슬라이싱(slicing)</span></span>
<span id="cb3-3"><span class="bu" style="color: null;">print</span>(new_arr)</span>
<span id="cb3-4"></span>
<span id="cb3-5">arr1 <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb3-6">arr2 <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>]</span>
<span id="cb3-7">arr1.extend(arr2) <span class="co" style="color: #5E5E5E;"># 확장(extend)</span></span>
<span id="cb3-8"><span class="bu" style="color: null;">print</span>(arr1)</span>
<span id="cb3-9"></span>
<span id="cb3-10">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb3-11">arr.insert(<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">7</span>) <span class="co" style="color: #5E5E5E;"># 삽입(insertion)</span></span>
<span id="cb3-12"><span class="bu" style="color: null;">print</span>(arr)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="kw" style="color: #003B4F;">del</span> arr[<span class="dv" style="color: #AD0000;">3</span>] <span class="co" style="color: #5E5E5E;"># 삭제(delete)</span></span>
<span id="cb3-15"><span class="bu" style="color: null;">print</span>(arr)</span>
<span id="cb3-16"></span>
<span id="cb3-17">data <span class="op" style="color: #5E5E5E;">=</span> {<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">9</span>}</span>
<span id="cb3-18">arr <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">list</span>(data) <span class="co" style="color: #5E5E5E;"># 다른 자료구조로 리스트 만들기</span></span>
<span id="cb3-19"><span class="bu" style="color: null;">print</span>(arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[2, 3, 4, 5, 6]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[0, 1, 2, 7, 3, 4]
[0, 1, 2, 3, 4]
[8, 9, 7]</code></pre>
</div>
</div>
<ul>
<li>12~16</li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="bu" style="color: null;">print</span>(<span class="dv" style="color: #AD0000;">3</span> <span class="kw" style="color: #003B4F;">in</span> arr) <span class="co" style="color: #5E5E5E;"># 존재 여부(in)</span></span>
<span id="cb5-4"><span class="bu" style="color: null;">print</span>(<span class="dv" style="color: #AD0000;">7</span> <span class="kw" style="color: #003B4F;">not</span> <span class="kw" style="color: #003B4F;">in</span> arr) <span class="co" style="color: #5E5E5E;"># 비존재 여부(not in)</span></span>
<span id="cb5-5"></span>
<span id="cb5-6">arr.pop(<span class="dv" style="color: #AD0000;">1</span>) <span class="co" style="color: #5E5E5E;"># 인덱스 1에 해당하는 원소 꺼내기(pop)</span></span>
<span id="cb5-7"><span class="bu" style="color: null;">print</span>(arr)</span>
<span id="cb5-8"></span>
<span id="cb5-9">arr.remove(<span class="dv" style="color: #AD0000;">3</span>) <span class="co" style="color: #5E5E5E;"># 리스트의 특정 원소 삭제(remove)</span></span>
<span id="cb5-10"><span class="bu" style="color: null;">print</span>(arr)</span>
<span id="cb5-11"></span>
<span id="cb5-12">new_arr <span class="op" style="color: #5E5E5E;">=</span> arr.copy() <span class="co" style="color: #5E5E5E;"># 복제(copy)</span></span>
<span id="cb5-13"><span class="bu" style="color: null;">print</span>(new_arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>True
True
[0, 2, 3, 4]
[0, 2, 4]
[0, 2, 4]</code></pre>
</div>
</div>
<ul>
<li>17~21</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">min</span>(arr)) <span class="co" style="color: #5E5E5E;"># 최소(min)</span></span>
<span id="cb7-4"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">max</span>(arr)) <span class="co" style="color: #5E5E5E;"># 최대(max)</span></span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr: <span class="co" style="color: #5E5E5E;"># 원소 순회(iteration)</span></span>
<span id="cb7-7">    <span class="bu" style="color: null;">print</span>(x, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb7-8"><span class="bu" style="color: null;">print</span>()</span>
<span id="cb7-9"></span>
<span id="cb7-10"><span class="bu" style="color: null;">print</span>(arr <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="co" style="color: #5E5E5E;"># 리스트 반복하여 곱하기(multiply)</span></span>
<span id="cb7-11"></span>
<span id="cb7-12">arr.sort() <span class="co" style="color: #5E5E5E;"># 정렬(sorting)</span></span>
<span id="cb7-13"><span class="bu" style="color: null;">print</span>(arr)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>1
5
3 5 4 1 2 
[3, 5, 4, 1, 2, 3, 5, 4, 1, 2]
[1, 2, 3, 4, 5]</code></pre>
</div>
</div>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-18_python_list/index.html</guid>
  <pubDate>Mon, 16 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Normality Check</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-16_normality/index.html</link>
  <description><![CDATA[ 



<section id="shapiro-wilk-test" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="shapiro-wilk-test"><span class="header-section-number">1</span> Shapiro-Wilk Test</h2>
<p><a href="https://en.wikipedia.org/wiki/Shapiro%E2%80%93Wilk_test">Wiki</a></p>
<p><a href="https://bios.unc.edu/~mhudgens/bios/662/2008fall/Backup/wilkshapiro1965.pdf">논문</a></p>
<p>원래는 표본의 크기가 50이하인 작은 데이터 셋의 정규성 검정을 위해 고안됨. R 에서는 3~5천개 사이의 표본까지 다룰 수 있도록 조정됨</p>
<ul>
<li><p>정규 분포 전용 검정: 모든 검정 대비 최고의 검정력을 보임 (Power), 이상치가 있으면 p value가 너무 작아짐</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?H_0">: 데이터가 정규분포를 따른다</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?H_a">: 데이터가 정규분포를 따르지 않는다.</p></li>
<li><p>검정 통계량 <img src="https://latex.codecogs.com/png.latex?%0A%20%20%20%5Cmathbf%20W=%5Cfrac%7B(%5Csum_%7Bi=1%7D%5E%7Bn%7Da_ix_%7B(i)%7D)%5E2%7D%7B%5Csum_%7Bi=1%7D%5E%7Bn%7D(x_i-%5Coverline%7Bx%7D)%5E2%7D%0A%20%20%20"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?a_i"> : 미리 정해진 숫자들, <img src="https://latex.codecogs.com/png.latex?x">의 개수에 의해 정해짐</li>
<li><img src="https://latex.codecogs.com/png.latex?x_%7B(i)%7D"> 들은 순위 표본, 즉 i 번째로 큰 표본</li>
<li>분자는 순서 통계량으로 계산한 정규분포의 분산, 분모는 데이터의 표본 분산 (표본 Sum of Squares)</li>
<li>이미 이론적으로 세팅된 값과 표본 분산의 비율을 보는 것</li>
<li>귀무 가설이 참이면 이론적으로 1 이 나와야 함</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20W%20%5Cin%20(0,1)">, 상관계수의 제곱을 측정한 계량 값이라고 생각해도 된다.<br>
</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20W"> 값이 1에서 멀어질 수록 정규분포와는 다르게 분포되어 있음을 의미</li>
<li>단점: 너무 민감함, 조그만 달라도 p value가 너무 작게 나와 귀무가설이 기각됨</li>
<li>해결책 : 시각화 기법과 같이 사용해서 보여준다
<ul>
<li>qqplot과 density 같이 사용</li>
</ul></li>
</ul></li>
</ul>
<div class="cell">

</div>
</section>
<section id="blog-guide-map-link" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">2</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-16_normality/index.html</guid>
  <pubDate>Sun, 15 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>ANOVA</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index.html</link>
  <description><![CDATA[ 



<p>(<strong>draft</strong>)</p>
<section id="statistical-methods-similar-to-anova" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="statistical-methods-similar-to-anova"><span class="header-section-number">1</span> Statistical Methods Similar to ANOVA</h2>
<ul>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html">repeated measures ANOVA</a></li>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html">ANCOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANNOVA/index.qmd">MANOVA</a></li>
<li>2023-01-28, <a href="../../../../../docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html">MANCOVA</a></li>
</ul>
<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
<p>Korean</p>
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
<p>English</p>
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="description" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="description"><span class="header-section-number">1.1</span> Description</h3>
<p>ANOVA는 <strong>3개 이상의 모집단</strong> 사이의 <strong>평균</strong>의 동일성을 검정하는 통계 분석 방법이다.</p>
<ul>
<li>일원 분산 분석 (One-way ANOVA)
<ul>
<li>그룹을 구분하는 변수가 1개</li>
<li>Between-Groups one-way ANOVA(집단간 일원분산분석): 관측치를 grouping하는 범주형 변수가 <strong>1개</strong>이며 각 관측치는 범주형 변수에 의해 구분되는 그룹들 가운데 반드시 하나에만 할당되어야한다. 즉, 어떠한 경우에도 하나의 관측치 또는 샘플이 여러 groups에 동시에 들어가면 안된다. 이 때 이렇게 그룹을 나누는 범주형 변수를 집단간 요인이라고 한다.</li>
<li>Within-groups one-way ANOVA (집단 내 일원분산분석) or repeated measures ANOVA: 시간과 같은 하나의 범주형 변수로 샘플들을 측정한다. 시간의 경과에 따라 측정된 샘플들을 범주형 변수의 여러 기간에 걸쳐 모두 할당시킨다. 즉, 하나의 샘플이 여러 그룹에 다른 측정치로 관찰될 수 있다. 예를들어, sample A가 4주, 8주, 12주, 16주 그룹에 모두 측정 된다. 이때 기간변수는 집단 내 요인이라고 부른다.</li>
</ul></li>
<li>이원 분산 분석 (Two-way ANOVA)
<ul>
<li>집단을 구분하는 변수가 2개이며 각 집단 간 요인과 집단 내 요인을 나타낸다.</li>
<li>이원 분석 부터는 main effect와 interaction effect가 존재한다.</li>
<li>범주형 변수 A와 범주형 변수 B의 Main effect 계산</li>
<li>범주형 변수 A와 범주형 변수 B의 상호 작용 효과 or 교호 작용 효과 (Interaction effect) 계산</li>
<li>group을 구분하는 독립변수가 2개 일때 모집단 간 평균의 동일성 검정<br>
</li>
<li>2개의 주효과(main effect) 검정: 각 독립 변수에 의해 만들어지는 집단 간 평균의 차이에 대한 검정
<ul>
<li>먼저, 두 독립변수가 종속변수에 개별적으로 영향을 미치는지 검정<br>
</li>
</ul></li>
<li>1개의 상호작용효과(interaction effect) 검정: 두 독립 변수의 조합에 의해 만들어지는 집단 간 평균의 차이에 대한 검정
<ul>
<li>두 독립변수의 조합이 종속변수와 유의한 영향관계를 갖는지 검정<br>
</li>
<li>만약에 유의하다면 2개의 독립변수가 합쳐져서 나온 파생효과이기 때문에 1개만 골라서 분석해서 해석 할 수 없음</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="how-to-conduct-anova" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="how-to-conduct-anova"><span class="header-section-number">1.2</span> How to conduct ANOVA?</h3>
<ul>
<li>분산 분석은 F검정(F test)을 통해 수행한다.</li>
<li>F 검정은 <strong>집단 간 분산</strong> (between-groups variability)과 <strong>집단 내 분산</strong> (within-groups variability)의 <strong>ratio</strong>로 계산된 F값 (F value or F statistic)을 토대로 가설검정을 수행한다. 이때 F value or F statistic을 통계 검정을 위한 검정통계량 (test statistic) 라고 부른다.</li>
<li>F 검정 결과가 통계적으로 유의하면 집단 간 평균의 차이가 존재한다. (즉, 독립 변수가 종속변수에 영향을 미침)</li>
<li>F 분포 2개의 자유도에 의해 분포의 모양이 결정되며 대체로 오른쪽으로 긴 꼬리를 갖는다
<ul>
<li>첫 번째 자유도: 집단 간(between-group)의 자유도</li>
<li>두 번째 자유도: 집단 내(within-group)의 자유도</li>
</ul></li>
</ul>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(ggpubr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(gplots)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(rmarkdown)</span>
<span id="cb1-5">knitr<span class="sc" style="color: #5E5E5E;">::</span>opts_chunk<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">set</span>(<span class="at" style="color: #657422;">echo =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">message =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">warning =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">options</span>(<span class="at" style="color: #657422;">digits =</span> <span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">20230109</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>종속 변수의 변동성은 다음과 같이 설명되기 때문에 아래의 식을 만족한다.</p>
<p><img src="https://latex.codecogs.com/png.latex?SS_%7Btotal%7D=SS_A+SS_B+SS_%7BAB%7D+SS_%7Berror%7D"></p>
<p><img src="https://latex.codecogs.com/png.latex?SS_%7Btotal%7D">은 쉽게 구할 수 있고 <img src="https://latex.codecogs.com/png.latex?SS_A">, <img src="https://latex.codecogs.com/png.latex?SS_B">, <img src="https://latex.codecogs.com/png.latex?SS_%7Berror%7D">를 계산하여 빼준다.</p>
<p><a href="http://atomic.phys.uni-sofia.bg/local/nist-e-handbook/e-handbook/prc/section4/prc437.htm">Two Way Anova SS 계산 공식 링크</a></p>
<p><img src="https://latex.codecogs.com/png.latex?SS_%7BAB%7D"> 즉,</p>
<p><img src="https://latex.codecogs.com/png.latex?%20SS_%7BAB%7D=SS_%7Btotal%7D-SS_A-SS_B-SS_%7Berror%7D%20"></p>
</section>
<section id="meaning" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="meaning"><span class="header-section-number">1.3</span> Meaning</h3>
<p>ANOVA는 집단 간 분산과 집단 내 분산의 비교하는 방식으로, 좀 더 구체적으로는 집단 간 분산과 집단 내 분산의 비를 계산하여, 집단 간 분산이 클수록 그리고 집단 분산이 작을 수록 집단 평균이 다를 가능성이 증가한다는 알고리즘에 기초한다.</p>
</section>
<section id="application-to-example" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="application-to-example"><span class="header-section-number">2</span> Application to Example</h2>
<section id="data-description" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="data-description"><span class="header-section-number">2.1</span> Data Description</h3>
<section id="raw-data" class="level4" data-number="2.1.1">
<h4 data-number="2.1.1" class="anchored" data-anchor-id="raw-data"><span class="header-section-number">2.1.1</span> Raw Data</h4>
<p>(…민감 정보 제거 및 데이터 변환 후 컨설팅 내용 일부 발췌…)</p>
<div class="cell">

</div>
<p>example data는 Day, Run, response의 변수들을 포함하고 있습니다. 공유해주신 정보에 따르면 아마도 Run은 오전과 오후를 나누는 변수인 것으로 생각 됩니다. 이 data만 보면 아마도 같은 샘플에 대해서 시약 제품이 시간에 따라 얼마나 안정적인 performance를 보여주는지 검사하는 실험으로 추측됩니다. 좀 더 분석하기 용이한 형태로 data structure를 바꾸겠습니다.</p>
</section>
<section id="processed-data" class="level4" data-number="2.1.2">
<h4 data-number="2.1.2" class="anchored" data-anchor-id="processed-data"><span class="header-section-number">2.1.2</span> Processed Data</h4>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["id"],"name":[1],"type":["int"],"align":["right"]},{"label":["Day"],"name":[2],"type":["fct"],"align":["left"]},{"label":["noon"],"name":[3],"type":["fct"],"align":["left"]},{"label":["Run"],"name":[4],"type":["int"],"align":["right"]},{"label":["response"],"name":[5],"type":["dbl"],"align":["right"]}],"data":[{"1":"1","2":"1","3":"AM","4":"1","5":"60.1871"},{"1":"2","2":"1","3":"AM","4":"2","5":"22.9290"},{"1":"3","2":"1","3":"AM","4":"3","5":"24.8452"},{"1":"4","2":"1","3":"PM","4":"1","5":"61.8903"},{"1":"5","2":"1","3":"PM","4":"2","5":"50.1806"},{"1":"6","2":"1","3":"PM","4":"3","5":"64.0194"},{"1":"7","2":"2","3":"AM","4":"1","5":"21.4387"},{"1":"8","2":"2","3":"AM","4":"2","5":"39.9613"},{"1":"9","2":"2","3":"AM","4":"3","5":"58.6968"},{"1":"10","2":"2","3":"PM","4":"1","5":"38.4710"},{"1":"11","2":"2","3":"PM","4":"2","5":"55.9290"},{"1":"12","2":"2","3":"PM","4":"3","5":"32.7226"},{"1":"13","2":"3","3":"AM","4":"1","5":"50.6065"},{"1":"14","2":"3","3":"AM","4":"2","5":"40.6000"},{"1":"15","2":"3","3":"AM","4":"3","5":"8.2387"},{"1":"16","2":"3","3":"PM","4":"1","5":"30.8065"},{"1":"17","2":"3","3":"PM","4":"2","5":"36.7677"},{"1":"18","2":"3","3":"PM","4":"3","5":"92.5484"},{"1":"19","2":"4","3":"AM","4":"1","5":"17.8194"},{"1":"20","2":"4","3":"AM","4":"2","5":"46.1355"},{"1":"21","2":"4","3":"AM","4":"3","5":"46.1355"},{"1":"22","2":"4","3":"PM","4":"1","5":"29.3161"},{"1":"23","2":"4","3":"PM","4":"2","5":"21.8645"},{"1":"24","2":"4","3":"PM","4":"3","5":"36.9806"},{"1":"25","2":"5","3":"AM","4":"1","5":"49.3290"},{"1":"26","2":"5","3":"AM","4":"2","5":"43.7935"},{"1":"27","2":"5","3":"AM","4":"3","5":"40.1742"},{"1":"28","2":"5","3":"PM","4":"1","5":"32.0839"},{"1":"29","2":"5","3":"PM","4":"2","5":"44.6452"},{"1":"30","2":"5","3":"PM","4":"3","5":"54.0129"},{"1":"31","2":"6","3":"AM","4":"1","5":"21.2258"},{"1":"32","2":"6","3":"AM","4":"2","5":"68.4903"},{"1":"33","2":"6","3":"AM","4":"3","5":"47.6258"},{"1":"34","2":"6","3":"PM","4":"1","5":"48.4774"},{"1":"35","2":"6","3":"PM","4":"2","5":"31.4452"},{"1":"36","2":"6","3":"PM","4":"3","5":"25.9097"},{"1":"37","2":"7","3":"AM","4":"1","5":"34.4258"},{"1":"38","2":"7","3":"AM","4":"2","5":"32.2968"},{"1":"39","2":"7","3":"AM","4":"3","5":"54.6516"},{"1":"40","2":"7","3":"PM","4":"1","5":"67.6387"},{"1":"41","2":"7","3":"PM","4":"2","5":"47.8387"},{"1":"42","2":"7","3":"PM","4":"3","5":"8.6645"},{"1":"43","2":"8","3":"AM","4":"1","5":"89.3548"},{"1":"44","2":"8","3":"AM","4":"2","5":"36.5548"},{"1":"45","2":"8","3":"AM","4":"3","5":"27.4000"},{"1":"46","2":"8","3":"PM","4":"1","5":"36.5548"},{"1":"47","2":"8","3":"PM","4":"2","5":"45.9226"},{"1":"48","2":"8","3":"PM","4":"3","5":"22.0774"},{"1":"49","2":"9","3":"AM","4":"1","5":"61.4645"},{"1":"50","2":"9","3":"AM","4":"2","5":"71.8968"},{"1":"51","2":"9","3":"AM","4":"3","5":"76.5806"},{"1":"52","2":"9","3":"PM","4":"1","5":"74.2387"},{"1":"53","2":"9","3":"PM","4":"2","5":"37.4065"},{"1":"54","2":"9","3":"PM","4":"3","5":"13.7742"},{"1":"55","2":"10","3":"AM","4":"1","5":"30.5935"},{"1":"56","2":"10","3":"AM","4":"2","5":"24.4194"},{"1":"57","2":"10","3":"AM","4":"3","5":"24.8452"},{"1":"58","2":"10","3":"PM","4":"1","5":"45.2839"},{"1":"59","2":"10","3":"PM","4":"2","5":"33.7871"},{"1":"60","2":"10","3":"PM","4":"3","5":"48.9032"},{"1":"61","2":"11","3":"AM","4":"1","5":"59.7613"},{"1":"62","2":"11","3":"AM","4":"2","5":"100.0000"},{"1":"63","2":"11","3":"AM","4":"3","5":"44.0065"},{"1":"64","2":"11","3":"PM","4":"1","5":"32.7226"},{"1":"65","2":"11","3":"PM","4":"2","5":"20.3742"},{"1":"66","2":"11","3":"PM","4":"3","5":"38.2581"},{"1":"67","2":"12","3":"AM","4":"1","5":"24.4194"},{"1":"68","2":"12","3":"AM","4":"2","5":"21.0129"},{"1":"69","2":"12","3":"AM","4":"3","5":"32.5097"},{"1":"70","2":"12","3":"PM","4":"1","5":"41.2387"},{"1":"71","2":"12","3":"PM","4":"2","5":"26.9742"},{"1":"72","2":"12","3":"PM","4":"3","5":"15.4774"},{"1":"73","2":"13","3":"AM","4":"1","5":"52.0968"},{"1":"74","2":"13","3":"AM","4":"2","5":"23.3548"},{"1":"75","2":"13","3":"AM","4":"3","5":"46.3484"},{"1":"76","2":"13","3":"PM","4":"1","5":"49.3290"},{"1":"77","2":"13","3":"PM","4":"2","5":"53.1613"},{"1":"78","2":"13","3":"PM","4":"3","5":"38.8968"},{"1":"79","2":"14","3":"AM","4":"1","5":"23.9935"},{"1":"80","2":"14","3":"AM","4":"2","5":"18.4581"},{"1":"81","2":"14","3":"AM","4":"3","5":"35.0645"},{"1":"82","2":"14","3":"PM","4":"1","5":"55.5032"},{"1":"83","2":"14","3":"PM","4":"2","5":"37.8323"},{"1":"84","2":"14","3":"PM","4":"3","5":"2.0645"},{"1":"85","2":"15","3":"AM","4":"1","5":"16.7548"},{"1":"86","2":"15","3":"AM","4":"2","5":"15.0516"},{"1":"87","2":"15","3":"AM","4":"3","5":"23.5677"},{"1":"88","2":"15","3":"PM","4":"1","5":"45.0710"},{"1":"89","2":"15","3":"PM","4":"2","5":"70.6194"},{"1":"90","2":"15","3":"PM","4":"3","5":"1.0000"},{"1":"91","2":"16","3":"AM","4":"1","5":"16.3290"},{"1":"92","2":"16","3":"AM","4":"2","5":"42.7290"},{"1":"93","2":"16","3":"AM","4":"3","5":"51.6710"},{"1":"94","2":"16","3":"PM","4":"1","5":"27.4000"},{"1":"95","2":"16","3":"PM","4":"2","5":"24.2065"},{"1":"96","2":"16","3":"PM","4":"3","5":"26.7613"},{"1":"97","2":"17","3":"AM","4":"1","5":"28.8903"},{"1":"98","2":"17","3":"AM","4":"2","5":"40.3871"},{"1":"99","2":"17","3":"AM","4":"3","5":"55.5032"},{"1":"100","2":"17","3":"PM","4":"1","5":"12.4968"},{"1":"101","2":"17","3":"PM","4":"2","5":"15.4774"},{"1":"102","2":"17","3":"PM","4":"3","5":"27.6129"},{"1":"103","2":"18","3":"AM","4":"1","5":"44.8581"},{"1":"104","2":"18","3":"AM","4":"2","5":"37.6194"},{"1":"105","2":"18","3":"AM","4":"3","5":"32.9355"},{"1":"106","2":"18","3":"PM","4":"1","5":"56.7806"},{"1":"107","2":"18","3":"PM","4":"2","5":"23.7806"},{"1":"108","2":"18","3":"PM","4":"3","5":"15.6903"},{"1":"109","2":"19","3":"AM","4":"1","5":"36.1290"},{"1":"110","2":"19","3":"AM","4":"2","5":"32.9355"},{"1":"111","2":"19","3":"AM","4":"3","5":"68.7032"},{"1":"112","2":"19","3":"PM","4":"1","5":"21.6516"},{"1":"113","2":"19","3":"PM","4":"2","5":"19.3097"},{"1":"114","2":"19","3":"PM","4":"3","5":"19.0968"},{"1":"115","2":"20","3":"AM","4":"1","5":"45.0710"},{"1":"116","2":"20","3":"AM","4":"2","5":"39.5355"},{"1":"117","2":"20","3":"AM","4":"3","5":"NA"},{"1":"118","2":"20","3":"PM","4":"1","5":"61.8903"},{"1":"119","2":"20","3":"PM","4":"2","5":"37.4065"},{"1":"120","2":"20","3":"PM","4":"3","5":"37.8323"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>재가공된 data는 120개의 샘플과 5개의 변수를 갖고있습니다. 변수 목록은 다음과 같습니다.</p>
<ul>
<li>id: 열번호, 총 20일간 하루 2회 구동(AM, PM) 구동, 오전 오후 각 각 3번씩 구동 총 120 <img src="https://latex.codecogs.com/png.latex?(=20%20%5Ctimes%203%20%5Ctimes%202)"> 샘플<br>
</li>
<li>Day: Day1~20<br>
</li>
<li>noon: AM= before noon, PM= after noon</li>
<li>Run: 1회 구동당 3번 반복씩1, 2, 3<br>
</li>
<li>response: response variable, 낮을 수록 좋음</li>
</ul>
<p>ANOVA의 Assumption</p>
<ul>
<li>response variable should follow normal distribution.<br>
</li>
<li>homoscedasticity, equality of variance: 각 집단의 분포는 모두 동일한 분산을 가짐<br>
ANOVA의 가정들을 반드시 충족하지 않아도 되지만 충족하면 Power 가 올라감</li>
</ul>
</section>
</section>
<section id="eda-explorator-data-analysis" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="eda-explorator-data-analysis"><span class="header-section-number">2.2</span> EDA (Explorator Data Analysis)</h3>
<p>이 data는 아래 처럼 1의 결측치를 갖고 있습니다.</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: right;">id</th>
<th style="text-align: left;">Day</th>
<th style="text-align: left;">noon</th>
<th style="text-align: right;">Run</th>
<th style="text-align: right;">response</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">117</td>
<td style="text-align: left;">20</td>
<td style="text-align: left;">AM</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">NA</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Ct에 대한 Global Statistics는 다음과 같습니다.</p>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: right;">count</th>
<th style="text-align: right;">global_response_mean</th>
<th style="text-align: right;">global_response_sd</th>
<th style="text-align: left;">global_response_CV</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">119</td>
<td style="text-align: right;">38.727</td>
<td style="text-align: right;">18.47</td>
<td style="text-align: left;">47.694 %</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>Day groups의 Statistics은 다음과 같습니다.</p>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["Day"],"name":[1],"type":["fct"],"align":["left"]},{"label":["count"],"name":[2],"type":["int"],"align":["right"]},{"label":["Day_group_response_mean"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["Day_group_response_sd"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["Day_group_response_CV"],"name":[5],"type":["chr"],"align":["left"]}],"data":[{"1":"1","2":"6","3":"47.342","4":"18.7880","5":"39.686 %"},{"1":"2","2":"6","3":"41.203","4":"14.1028","5":"34.227 %"},{"1":"3","2":"6","3":"43.261","4":"27.9790","5":"64.674 %"},{"1":"4","2":"6","3":"33.042","4":"12.0743","5":"36.542 %"},{"1":"5","2":"6","3":"44.006","4":"7.5597","5":"17.179 %"},{"1":"6","2":"6","3":"40.529","4":"17.6875","5":"43.641 %"},{"1":"7","2":"6","3":"40.919","4":"20.5293","5":"50.17 %"},{"1":"8","2":"6","3":"42.977","4":"24.1723","5":"56.244 %"},{"1":"9","2":"6","3":"55.894","4":"25.1692","5":"45.031 %"},{"1":"10","2":"6","3":"34.639","4":"10.3367","5":"29.841 %"},{"1":"11","2":"6","3":"49.187","4":"28.0760","5":"57.08 %"},{"1":"12","2":"6","3":"26.939","4":"9.0372","5":"33.547 %"},{"1":"13","2":"6","3":"43.865","4":"11.2744","5":"25.703 %"},{"1":"14","2":"6","3":"28.819","4":"18.3234","5":"63.58 %"},{"1":"15","2":"6","3":"28.677","4":"25.0912","5":"87.495 %"},{"1":"16","2":"6","3":"31.516","4":"13.0811","5":"41.506 %"},{"1":"17","2":"6","3":"30.061","4":"16.0155","5":"53.276 %"},{"1":"18","2":"6","3":"35.277","4":"14.7036","5":"41.68 %"},{"1":"19","2":"6","3":"32.971","4":"18.9421","5":"57.451 %"},{"1":"20","2":"5","3":"44.347","4":"10.2720","5":"23.163 %"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>AM/PM groups의 Statistics은 다음과 같습니다.</p>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["noon"],"name":[1],"type":["fct"],"align":["left"]},{"label":["count"],"name":[2],"type":["int"],"align":["right"]},{"label":["noon_group_response_mean"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["noon_group_response_sd"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["noon_group_response_CV"],"name":[5],"type":["chr"],"align":["left"]}],"data":[{"1":"AM","2":"59","3":"40.380","4":"18.701","5":"46.313 %"},{"1":"PM","2":"60","3":"37.101","4":"18.250","5":"49.191 %"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Days와 AM/PM 조합 groups의 Statistics은 다음과 같습니다.</p>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["Day"],"name":[1],"type":["fct"],"align":["left"]},{"label":["noon"],"name":[2],"type":["fct"],"align":["left"]},{"label":["count"],"name":[3],"type":["int"],"align":["right"]},{"label":["combi_group_response_mean"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["combi_group_response_sd"],"name":[5],"type":["dbl"],"align":["right"]},{"label":["combi_group_response_CV"],"name":[6],"type":["chr"],"align":["left"]}],"data":[{"1":"1","2":"AM","3":"3","4":"35.987","5":"20.9797","6":"58.298 %"},{"1":"1","2":"PM","3":"3","4":"58.697","5":"7.4516","6":"12.695 %"},{"1":"2","2":"AM","3":"3","4":"40.032","5":"18.6291","6":"46.535 %"},{"1":"2","2":"PM","3":"3","4":"42.374","5":"12.0856","6":"28.521 %"},{"1":"3","2":"AM","3":"3","4":"33.148","5":"22.1450","6":"66.806 %"},{"1":"3","2":"PM","3":"3","4":"53.374","5":"34.0565","6":"63.807 %"},{"1":"4","2":"AM","3":"3","4":"36.697","5":"16.3483","6":"44.55 %"},{"1":"4","2":"PM","3":"3","4":"29.387","5":"7.5583","6":"25.72 %"},{"1":"5","2":"AM","3":"3","4":"44.432","5":"4.6107","6":"10.377 %"},{"1":"5","2":"PM","3":"3","4":"43.581","5":"11.0032","6":"25.248 %"},{"1":"6","2":"AM","3":"3","4":"45.781","5":"23.6862","6":"51.739 %"},{"1":"6","2":"PM","3":"3","4":"35.277","5":"11.7618","6":"33.341 %"},{"1":"7","2":"AM","3":"3","4":"40.458","5":"12.3380","6":"30.496 %"},{"1":"7","2":"PM","3":"3","4":"41.381","5":"30.0128","6":"72.529 %"},{"1":"8","2":"AM","3":"3","4":"51.103","5":"33.4416","6":"65.439 %"},{"1":"8","2":"PM","3":"3","4":"34.852","5":"12.0135","6":"34.47 %"},{"1":"9","2":"AM","3":"3","4":"69.981","5":"7.7381","6":"11.057 %"},{"1":"9","2":"PM","3":"3","4":"41.806","5":"30.4715","6":"72.887 %"},{"1":"10","2":"AM","3":"3","4":"26.619","5":"3.4483","6":"12.954 %"},{"1":"10","2":"PM","3":"3","4":"42.658","5":"7.8927","6":"18.502 %"},{"1":"11","2":"AM","3":"3","4":"67.923","5":"28.8752","6":"42.512 %"},{"1":"11","2":"PM","3":"3","4":"30.452","5":"9.1557","6":"30.066 %"},{"1":"12","2":"AM","3":"3","4":"25.981","5":"5.9053","6":"22.729 %"},{"1":"12","2":"PM","3":"3","4":"27.897","5":"12.9054","6":"46.261 %"},{"1":"13","2":"AM","3":"3","4":"40.600","5":"15.2088","6":"37.46 %"},{"1":"13","2":"PM","3":"3","4":"47.129","5":"7.3824","6":"15.664 %"},{"1":"14","2":"AM","3":"3","4":"25.839","5":"8.4556","6":"32.725 %"},{"1":"14","2":"PM","3":"3","4":"31.800","5":"27.2253","6":"85.614 %"},{"1":"15","2":"AM","3":"3","4":"18.458","5":"4.5063","6":"24.414 %"},{"1":"15","2":"PM","3":"3","4":"38.897","5":"35.2180","6":"90.542 %"},{"1":"16","2":"AM","3":"3","4":"36.910","5":"18.3756","6":"49.785 %"},{"1":"16","2":"PM","3":"3","4":"26.123","5":"1.6899","6":"6.469 %"},{"1":"17","2":"AM","3":"3","4":"41.594","5":"13.3474","6":"32.09 %"},{"1":"17","2":"PM","3":"3","4":"18.529","5":"8.0068","6":"43.212 %"},{"1":"18","2":"AM","3":"3","4":"38.471","5":"6.0067","6":"15.614 %"},{"1":"18","2":"PM","3":"3","4":"32.084","5":"21.7672","6":"67.845 %"},{"1":"19","2":"AM","3":"3","4":"45.923","5":"19.7931","6":"43.101 %"},{"1":"19","2":"PM","3":"3","4":"20.019","5":"1.4176","6":"7.081 %"},{"1":"20","2":"AM","3":"2","4":"42.303","5":"3.9142","6":"9.253 %"},{"1":"20","2":"PM","3":"3","4":"45.710","5":"14.0145","6":"30.66 %"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>이제 ANOVA를 수행하기 위한 basic statistics는 모두 구했습니다. ANOVA를 수행하기 위해 집단 간 분산과 집단 내 분산을 계산하도록 하겠습니다.</p>
</section>
<section id="집단-간-분산" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="집단-간-분산"><span class="header-section-number">2.3</span> 집단 간 분산</h3>
<p>앞에서 설명 드린바로 유추해보면 예시 data의 집단 간 분산의 범주형 변수는 Day로 설정하는 것이 합리적인 것으로 보입니다.</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?g=g"> Day의 sample size = 20, 자유도 = 20-1 = 19 입니다.</li>
<li><img src="https://latex.codecogs.com/png.latex?n_g=g"> group의 sample size, <img src="https://latex.codecogs.com/png.latex?%5Coverline%7BX%7D_g=g"> 의 sample mean은 다음과 같습니다.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Coverline%7BX%7D"> = global sample mean = 38.72681</li>
<li>집단 간 분산: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%EC%A7%91%EB%8B%A8%20%EA%B0%84%20%EC%A0%9C%EA%B3%B1%ED%95%A9%7D%7B%EC%9E%90%EC%9C%A0%EB%8F%84%7D=%5Cfrac%7B%5Csum_g%5B(%5Coverline%7BX%7D_g-%5Coverline%7BX%7D)%5E2n_g%5D%7D%7Bg-1%7D"></li>
</ul>
<section id="ss_day-집단간-분산-day" class="level4" data-number="2.3.1">
<h4 data-number="2.3.1" class="anchored" data-anchor-id="ss_day-집단간-분산-day"><span class="header-section-number">2.3.1</span> SS_Day (집단간 분산 Day)</h4>
<p>Day sq = <img src="https://latex.codecogs.com/png.latex?%5B(%5Coverline%7BX%7D_g-%5Coverline%7BX%7D)%5E2n_g%5D"> 집단(Day)간 분산 계산, 집단(Day)간 분산 = <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Csum_g%5B(%5Coverline%7BX%7D_g-%5Coverline%7BX%7D)%5E2n_g%5D%7D%7Bg-1%7D"></p>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["Day"],"name":[1],"type":["fct"],"align":["left"]},{"label":["count"],"name":[2],"type":["int"],"align":["right"]},{"label":["Day_group_response_mean"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["Day_group_response_sd"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["Day_group_response_CV"],"name":[5],"type":["chr"],"align":["left"]},{"label":["day_sq"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["sum_day_ssq"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["df"],"name":[8],"type":["dbl"],"align":["right"]},{"label":["day_mean_ssq"],"name":[9],"type":["dbl"],"align":["right"]},{"label":["day_sd"],"name":[10],"type":["dbl"],"align":["right"]}],"data":[{"1":"1","2":"6","3":"47.342","4":"18.7880","5":"39.686 %","6":"445.322","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"2","2":"6","3":"41.203","4":"14.1028","5":"34.227 %","6":"36.796","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"3","2":"6","3":"43.261","4":"27.9790","5":"64.674 %","6":"123.369","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"4","2":"6","3":"33.042","4":"12.0743","5":"36.542 %","6":"193.907","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"5","2":"6","3":"44.006","4":"7.5597","5":"17.179 %","6":"167.248","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"6","2":"6","3":"40.529","4":"17.6875","5":"43.641 %","6":"19.488","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"7","2":"6","3":"40.919","4":"20.5293","5":"50.17 %","6":"28.844","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"8","2":"6","3":"42.977","4":"24.1723","5":"56.244 %","6":"108.406","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"9","2":"6","3":"55.894","4":"25.1692","5":"45.031 %","6":"1768.182","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"10","2":"6","3":"34.639","4":"10.3367","5":"29.841 %","6":"100.275","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"11","2":"6","3":"49.187","4":"28.0760","5":"57.08 %","6":"656.506","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"12","2":"6","3":"26.939","4":"9.0372","5":"33.547 %","6":"833.756","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"13","2":"6","3":"43.865","4":"11.2744","5":"25.703 %","6":"158.376","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"14","2":"6","3":"28.819","4":"18.3234","5":"63.58 %","6":"588.946","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"15","2":"6","3":"28.677","4":"25.0912","5":"87.495 %","6":"605.941","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"16","2":"6","3":"31.516","4":"13.0811","5":"41.506 %","6":"311.963","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"17","2":"6","3":"30.061","4":"16.0155","5":"53.276 %","6":"450.547","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"18","2":"6","3":"35.277","4":"14.7036","5":"41.68 %","6":"71.390","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"19","2":"6","3":"32.971","4":"18.9421","5":"57.451 %","6":"198.778","7":"7026","8":"19","9":"369.79","10":"19.23"},{"1":"20","2":"5","3":"44.347","4":"10.2720","5":"23.163 %","6":"157.938","7":"7026","8":"19","9":"369.79","10":"19.23"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Analysis-In program의 ANOVA결과값과 일치하는 것을 볼 수 있습니다. $SS_{day} $= 7025.97838 with <img src="https://latex.codecogs.com/png.latex?df=19">.</p>
</section>
<section id="ss_noon-집단간-분산-noon" class="level4" data-number="2.3.2">
<h4 data-number="2.3.2" class="anchored" data-anchor-id="ss_noon-집단간-분산-noon"><span class="header-section-number">2.3.2</span> SS_noon (집단간 분산 noon)</h4>
<p>noon sq = <img src="https://latex.codecogs.com/png.latex?%5B(%5Coverline%7BX%7D_g-%5Coverline%7BX%7D)%5E2n_g%5D"> 집단(noon)간 분산 계산, 집단(noon)간 분산 = <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B%5Csum_g%5B(%5Coverline%7BX%7D_g-%5Coverline%7BX%7D)%5E2n_g%5D%7D%7Bg-1%7D"></p>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["noon"],"name":[1],"type":["fct"],"align":["left"]},{"label":["count"],"name":[2],"type":["int"],"align":["right"]},{"label":["noon_group_response_mean"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["noon_group_response_sd"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["noon_group_response_CV"],"name":[5],"type":["chr"],"align":["left"]},{"label":["noon_sq"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["sum_noon_ssq"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["df"],"name":[8],"type":["dbl"],"align":["right"]},{"label":["noon_mean_ssq"],"name":[9],"type":["dbl"],"align":["right"]},{"label":["noon_sd"],"name":[10],"type":["dbl"],"align":["right"]}],"data":[{"1":"AM","2":"59","3":"40.380","4":"18.701","5":"46.313 %","6":"161.23","7":"319.76","8":"1","9":"319.76","10":"17.882"},{"1":"PM","2":"60","3":"37.101","4":"18.250","5":"49.191 %","6":"158.54","7":"319.76","8":"1","9":"319.76","10":"17.882"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Analysis-In program의 결과에서 찾아 볼 수 없죠? 이 결과는 숨어 있습니다. 상호 작용에 대한 분산값을 구하고 나면 정체를 알 수 있습니다.</p>
<p><img src="https://latex.codecogs.com/png.latex?SS_%7Bnoon%7D"> = 319.76458 with <img src="https://latex.codecogs.com/png.latex?df=1">.</p>
</section>
<section id="ss_error-집단내-분산" class="level4" data-number="2.3.3">
<h4 data-number="2.3.3" class="anchored" data-anchor-id="ss_error-집단내-분산"><span class="header-section-number">2.3.3</span> SS_error (집단내 분산)</h4>
<ul>
<li>집단 내 분산 (within-groups variability)</li>
</ul>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["Day"],"name":[1],"type":["fct"],"align":["left"]},{"label":["noon"],"name":[2],"type":["fct"],"align":["left"]},{"label":["Run"],"name":[3],"type":["int"],"align":["right"]},{"label":["response"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["count"],"name":[5],"type":["int"],"align":["right"]},{"label":["combi_group_response_mean"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["residual_sq"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["df"],"name":[8],"type":["dbl"],"align":["right"]},{"label":["residual_ssq"],"name":[9],"type":["dbl"],"align":["right"]},{"label":["mean_residual_ssq"],"name":[10],"type":["dbl"],"align":["right"]}],"data":[{"1":"1","2":"AM","3":"1","4":"60.1871","5":"3","6":"35.987","7":"5.8564e+02","8":"79","9":"24704","10":"312.71"},{"1":"1","2":"AM","3":"2","4":"22.9290","5":"3","6":"35.987","7":"1.7051e+02","8":"79","9":"24704","10":"312.71"},{"1":"1","2":"AM","3":"3","4":"24.8452","5":"3","6":"35.987","7":"1.2414e+02","8":"79","9":"24704","10":"312.71"},{"1":"1","2":"PM","3":"1","4":"61.8903","5":"3","6":"58.697","7":"1.0199e+01","8":"79","9":"24704","10":"312.71"},{"1":"1","2":"PM","3":"2","4":"50.1806","5":"3","6":"58.697","7":"7.2524e+01","8":"79","9":"24704","10":"312.71"},{"1":"1","2":"PM","3":"3","4":"64.0194","5":"3","6":"58.697","7":"2.8330e+01","8":"79","9":"24704","10":"312.71"},{"1":"2","2":"AM","3":"1","4":"21.4387","5":"3","6":"40.032","7":"3.4572e+02","8":"79","9":"24704","10":"312.71"},{"1":"2","2":"AM","3":"2","4":"39.9613","5":"3","6":"40.032","7":"5.0364e-03","8":"79","9":"24704","10":"312.71"},{"1":"2","2":"AM","3":"3","4":"58.6968","5":"3","6":"40.032","7":"3.4836e+02","8":"79","9":"24704","10":"312.71"},{"1":"2","2":"PM","3":"1","4":"38.4710","5":"3","6":"42.374","7":"1.5235e+01","8":"79","9":"24704","10":"312.71"},{"1":"2","2":"PM","3":"2","4":"55.9290","5":"3","6":"42.374","7":"1.8373e+02","8":"79","9":"24704","10":"312.71"},{"1":"2","2":"PM","3":"3","4":"32.7226","5":"3","6":"42.374","7":"9.3154e+01","8":"79","9":"24704","10":"312.71"},{"1":"3","2":"AM","3":"1","4":"50.6065","5":"3","6":"33.148","7":"3.0478e+02","8":"79","9":"24704","10":"312.71"},{"1":"3","2":"AM","3":"2","4":"40.6000","5":"3","6":"33.148","7":"5.5527e+01","8":"79","9":"24704","10":"312.71"},{"1":"3","2":"AM","3":"3","4":"8.2387","5":"3","6":"33.148","7":"6.2049e+02","8":"79","9":"24704","10":"312.71"},{"1":"3","2":"PM","3":"1","4":"30.8065","5":"3","6":"53.374","7":"5.0930e+02","8":"79","9":"24704","10":"312.71"},{"1":"3","2":"PM","3":"2","4":"36.7677","5":"3","6":"53.374","7":"2.7577e+02","8":"79","9":"24704","10":"312.71"},{"1":"3","2":"PM","3":"3","4":"92.5484","5":"3","6":"53.374","7":"1.5346e+03","8":"79","9":"24704","10":"312.71"},{"1":"4","2":"AM","3":"1","4":"17.8194","5":"3","6":"36.697","7":"3.5636e+02","8":"79","9":"24704","10":"312.71"},{"1":"4","2":"AM","3":"2","4":"46.1355","5":"3","6":"36.697","7":"8.9089e+01","8":"79","9":"24704","10":"312.71"},{"1":"4","2":"AM","3":"3","4":"46.1355","5":"3","6":"36.697","7":"8.9089e+01","8":"79","9":"24704","10":"312.71"},{"1":"4","2":"PM","3":"1","4":"29.3161","5":"3","6":"29.387","7":"5.0364e-03","8":"79","9":"24704","10":"312.71"},{"1":"4","2":"PM","3":"2","4":"21.8645","5":"3","6":"29.387","7":"5.6589e+01","8":"79","9":"24704","10":"312.71"},{"1":"4","2":"PM","3":"3","4":"36.9806","5":"3","6":"29.387","7":"5.7662e+01","8":"79","9":"24704","10":"312.71"},{"1":"5","2":"AM","3":"1","4":"49.3290","5":"3","6":"44.432","7":"2.3978e+01","8":"79","9":"24704","10":"312.71"},{"1":"5","2":"AM","3":"2","4":"43.7935","5":"3","6":"44.432","7":"4.0795e-01","8":"79","9":"24704","10":"312.71"},{"1":"5","2":"AM","3":"3","4":"40.1742","5":"3","6":"44.432","7":"1.8131e+01","8":"79","9":"24704","10":"312.71"},{"1":"5","2":"PM","3":"1","4":"32.0839","5":"3","6":"43.581","7":"1.3218e+02","8":"79","9":"24704","10":"312.71"},{"1":"5","2":"PM","3":"2","4":"44.6452","5":"3","6":"43.581","7":"1.1332e+00","8":"79","9":"24704","10":"312.71"},{"1":"5","2":"PM","3":"3","4":"54.0129","5":"3","6":"43.581","7":"1.0883e+02","8":"79","9":"24704","10":"312.71"},{"1":"6","2":"AM","3":"1","4":"21.2258","5":"3","6":"45.781","7":"6.0294e+02","8":"79","9":"24704","10":"312.71"},{"1":"6","2":"AM","3":"2","4":"68.4903","5":"3","6":"45.781","7":"5.1573e+02","8":"79","9":"24704","10":"312.71"},{"1":"6","2":"AM","3":"3","4":"47.6258","5":"3","6":"45.781","7":"3.4046e+00","8":"79","9":"24704","10":"312.71"},{"1":"6","2":"PM","3":"1","4":"48.4774","5":"3","6":"35.277","7":"1.7424e+02","8":"79","9":"24704","10":"312.71"},{"1":"6","2":"PM","3":"2","4":"31.4452","5":"3","6":"35.277","7":"1.4686e+01","8":"79","9":"24704","10":"312.71"},{"1":"6","2":"PM","3":"3","4":"25.9097","5":"3","6":"35.277","7":"8.7755e+01","8":"79","9":"24704","10":"312.71"},{"1":"7","2":"AM","3":"1","4":"34.4258","5":"3","6":"40.458","7":"3.6388e+01","8":"79","9":"24704","10":"312.71"},{"1":"7","2":"AM","3":"2","4":"32.2968","5":"3","6":"40.458","7":"6.6607e+01","8":"79","9":"24704","10":"312.71"},{"1":"7","2":"AM","3":"3","4":"54.6516","5":"3","6":"40.458","7":"2.0146e+02","8":"79","9":"24704","10":"312.71"},{"1":"7","2":"PM","3":"1","4":"67.6387","5":"3","6":"41.381","7":"6.8949e+02","8":"79","9":"24704","10":"312.71"},{"1":"7","2":"PM","3":"2","4":"47.8387","5":"3","6":"41.381","7":"4.1707e+01","8":"79","9":"24704","10":"312.71"},{"1":"7","2":"PM","3":"3","4":"8.6645","5":"3","6":"41.381","7":"1.0703e+03","8":"79","9":"24704","10":"312.71"},{"1":"8","2":"AM","3":"1","4":"89.3548","5":"3","6":"51.103","7":"1.4632e+03","8":"79","9":"24704","10":"312.71"},{"1":"8","2":"AM","3":"2","4":"36.5548","5":"3","6":"51.103","7":"2.1166e+02","8":"79","9":"24704","10":"312.71"},{"1":"8","2":"AM","3":"3","4":"27.4000","5":"3","6":"51.103","7":"5.6184e+02","8":"79","9":"24704","10":"312.71"},{"1":"8","2":"PM","3":"1","4":"36.5548","5":"3","6":"34.852","7":"2.9010e+00","8":"79","9":"24704","10":"312.71"},{"1":"8","2":"PM","3":"2","4":"45.9226","5":"3","6":"34.852","7":"1.2257e+02","8":"79","9":"24704","10":"312.71"},{"1":"8","2":"PM","3":"3","4":"22.0774","5":"3","6":"34.852","7":"1.6318e+02","8":"79","9":"24704","10":"312.71"},{"1":"9","2":"AM","3":"1","4":"61.4645","5":"3","6":"69.981","7":"7.2524e+01","8":"79","9":"24704","10":"312.71"},{"1":"9","2":"AM","3":"2","4":"71.8968","5":"3","6":"69.981","7":"3.6716e+00","8":"79","9":"24704","10":"312.71"},{"1":"9","2":"AM","3":"3","4":"76.5806","5":"3","6":"69.981","7":"4.3560e+01","8":"79","9":"24704","10":"312.71"},{"1":"9","2":"PM","3":"1","4":"74.2387","5":"3","6":"41.806","7":"1.0519e+03","8":"79","9":"24704","10":"312.71"},{"1":"9","2":"PM","3":"2","4":"37.4065","5":"3","6":"41.806","7":"1.9360e+01","8":"79","9":"24704","10":"312.71"},{"1":"9","2":"PM","3":"3","4":"13.7742","5":"3","6":"41.806","7":"7.8581e+02","8":"79","9":"24704","10":"312.71"},{"1":"10","2":"AM","3":"1","4":"30.5935","5":"3","6":"26.619","7":"1.5794e+01","8":"79","9":"24704","10":"312.71"},{"1":"10","2":"AM","3":"2","4":"24.4194","5":"3","6":"26.619","7":"4.8400e+00","8":"79","9":"24704","10":"312.71"},{"1":"10","2":"AM","3":"3","4":"24.8452","5":"3","6":"26.619","7":"3.1478e+00","8":"79","9":"24704","10":"312.71"},{"1":"10","2":"PM","3":"1","4":"45.2839","5":"3","6":"42.658","7":"6.8949e+00","8":"79","9":"24704","10":"312.71"},{"1":"10","2":"PM","3":"2","4":"33.7871","5":"3","6":"42.658","7":"7.8694e+01","8":"79","9":"24704","10":"312.71"},{"1":"10","2":"PM","3":"3","4":"48.9032","5":"3","6":"42.658","7":"3.9002e+01","8":"79","9":"24704","10":"312.71"},{"1":"11","2":"AM","3":"1","4":"59.7613","5":"3","6":"67.923","7":"6.6607e+01","8":"79","9":"24704","10":"312.71"},{"1":"11","2":"AM","3":"2","4":"100.0000","5":"3","6":"67.923","7":"1.0290e+03","8":"79","9":"24704","10":"312.71"},{"1":"11","2":"AM","3":"3","4":"44.0065","5":"3","6":"67.923","7":"5.7198e+02","8":"79","9":"24704","10":"312.71"},{"1":"11","2":"PM","3":"1","4":"32.7226","5":"3","6":"30.452","7":"5.1573e+00","8":"79","9":"24704","10":"312.71"},{"1":"11","2":"PM","3":"2","4":"20.3742","5":"3","6":"30.452","7":"1.0155e+02","8":"79","9":"24704","10":"312.71"},{"1":"11","2":"PM","3":"3","4":"38.2581","5":"3","6":"30.452","7":"6.0941e+01","8":"79","9":"24704","10":"312.71"},{"1":"12","2":"AM","3":"1","4":"24.4194","5":"3","6":"25.981","7":"2.4376e+00","8":"79","9":"24704","10":"312.71"},{"1":"12","2":"AM","3":"2","4":"21.0129","5":"3","6":"25.981","7":"2.4678e+01","8":"79","9":"24704","10":"312.71"},{"1":"12","2":"AM","3":"3","4":"32.5097","5":"3","6":"25.981","7":"4.2628e+01","8":"79","9":"24704","10":"312.71"},{"1":"12","2":"PM","3":"1","4":"41.2387","5":"3","6":"27.897","7":"1.7801e+02","8":"79","9":"24704","10":"312.71"},{"1":"12","2":"PM","3":"2","4":"26.9742","5":"3","6":"27.897","7":"8.5116e-01","8":"79","9":"24704","10":"312.71"},{"1":"12","2":"PM","3":"3","4":"15.4774","5":"3","6":"27.897","7":"1.5424e+02","8":"79","9":"24704","10":"312.71"},{"1":"13","2":"AM","3":"1","4":"52.0968","5":"3","6":"40.600","7":"1.3218e+02","8":"79","9":"24704","10":"312.71"},{"1":"13","2":"AM","3":"2","4":"23.3548","5":"3","6":"40.600","7":"2.9740e+02","8":"79","9":"24704","10":"312.71"},{"1":"13","2":"AM","3":"3","4":"46.3484","5":"3","6":"40.600","7":"3.3044e+01","8":"79","9":"24704","10":"312.71"},{"1":"13","2":"PM","3":"1","4":"49.3290","5":"3","6":"47.129","7":"4.8400e+00","8":"79","9":"24704","10":"312.71"},{"1":"13","2":"PM","3":"2","4":"53.1613","5":"3","6":"47.129","7":"3.6388e+01","8":"79","9":"24704","10":"312.71"},{"1":"13","2":"PM","3":"3","4":"38.8968","5":"3","6":"47.129","7":"6.7770e+01","8":"79","9":"24704","10":"312.71"},{"1":"14","2":"AM","3":"1","4":"23.9935","5":"3","6":"25.839","7":"3.4046e+00","8":"79","9":"24704","10":"312.71"},{"1":"14","2":"AM","3":"2","4":"18.4581","5":"3","6":"25.839","7":"5.4474e+01","8":"79","9":"24704","10":"312.71"},{"1":"14","2":"AM","3":"3","4":"35.0645","5":"3","6":"25.839","7":"8.5116e+01","8":"79","9":"24704","10":"312.71"},{"1":"14","2":"PM","3":"1","4":"55.5032","5":"3","6":"31.800","7":"5.6184e+02","8":"79","9":"24704","10":"312.71"},{"1":"14","2":"PM","3":"2","4":"37.8323","5":"3","6":"31.800","7":"3.6388e+01","8":"79","9":"24704","10":"312.71"},{"1":"14","2":"PM","3":"3","4":"2.0645","5":"3","6":"31.800","7":"8.8420e+02","8":"79","9":"24704","10":"312.71"},{"1":"15","2":"AM","3":"1","4":"16.7548","5":"3","6":"18.458","7":"2.9010e+00","8":"79","9":"24704","10":"312.71"},{"1":"15","2":"AM","3":"2","4":"15.0516","5":"3","6":"18.458","7":"1.1604e+01","8":"79","9":"24704","10":"312.71"},{"1":"15","2":"AM","3":"3","4":"23.5677","5":"3","6":"18.458","7":"2.6109e+01","8":"79","9":"24704","10":"312.71"},{"1":"15","2":"PM","3":"1","4":"45.0710","5":"3","6":"38.897","7":"3.8121e+01","8":"79","9":"24704","10":"312.71"},{"1":"15","2":"PM","3":"2","4":"70.6194","5":"3","6":"38.897","7":"1.0063e+03","8":"79","9":"24704","10":"312.71"},{"1":"15","2":"PM","3":"3","4":"1.0000","5":"3","6":"38.897","7":"1.4362e+03","8":"79","9":"24704","10":"312.71"},{"1":"16","2":"AM","3":"1","4":"16.3290","5":"3","6":"36.910","7":"4.2356e+02","8":"79","9":"24704","10":"312.71"},{"1":"16","2":"AM","3":"2","4":"42.7290","5":"3","6":"36.910","7":"3.3865e+01","8":"79","9":"24704","10":"312.71"},{"1":"16","2":"AM","3":"3","4":"51.6710","5":"3","6":"36.910","7":"2.1790e+02","8":"79","9":"24704","10":"312.71"},{"1":"16","2":"PM","3":"1","4":"27.4000","5":"3","6":"26.123","7":"1.6318e+00","8":"79","9":"24704","10":"312.71"},{"1":"16","2":"PM","3":"2","4":"24.2065","5":"3","6":"26.123","7":"3.6716e+00","8":"79","9":"24704","10":"312.71"},{"1":"16","2":"PM","3":"3","4":"26.7613","5":"3","6":"26.123","7":"4.0795e-01","8":"79","9":"24704","10":"312.71"},{"1":"17","2":"AM","3":"1","4":"28.8903","5":"3","6":"41.594","7":"1.6137e+02","8":"79","9":"24704","10":"312.71"},{"1":"17","2":"AM","3":"2","4":"40.3871","5":"3","6":"41.594","7":"1.4555e+00","8":"79","9":"24704","10":"312.71"},{"1":"17","2":"AM","3":"3","4":"55.5032","5":"3","6":"41.594","7":"1.9348e+02","8":"79","9":"24704","10":"312.71"},{"1":"17","2":"PM","3":"1","4":"12.4968","5":"3","6":"18.529","7":"3.6388e+01","8":"79","9":"24704","10":"312.71"},{"1":"17","2":"PM","3":"2","4":"15.4774","5":"3","6":"18.529","7":"9.3123e+00","8":"79","9":"24704","10":"312.71"},{"1":"17","2":"PM","3":"3","4":"27.6129","5":"3","6":"18.529","7":"8.2517e+01","8":"79","9":"24704","10":"312.71"},{"1":"18","2":"AM","3":"1","4":"44.8581","5":"3","6":"38.471","7":"4.0795e+01","8":"79","9":"24704","10":"312.71"},{"1":"18","2":"AM","3":"2","4":"37.6194","5":"3","6":"38.471","7":"7.2524e-01","8":"79","9":"24704","10":"312.71"},{"1":"18","2":"AM","3":"3","4":"32.9355","5":"3","6":"38.471","7":"3.0642e+01","8":"79","9":"24704","10":"312.71"},{"1":"18","2":"PM","3":"1","4":"56.7806","5":"3","6":"32.084","7":"6.0993e+02","8":"79","9":"24704","10":"312.71"},{"1":"18","2":"PM","3":"2","4":"23.7806","5":"3","6":"32.084","7":"6.8944e+01","8":"79","9":"24704","10":"312.71"},{"1":"18","2":"PM","3":"3","4":"15.6903","5":"3","6":"32.084","7":"2.6875e+02","8":"79","9":"24704","10":"312.71"},{"1":"19","2":"AM","3":"1","4":"36.1290","5":"3","6":"45.923","7":"9.5914e+01","8":"79","9":"24704","10":"312.71"},{"1":"19","2":"AM","3":"2","4":"32.9355","5":"3","6":"45.923","7":"1.6866e+02","8":"79","9":"24704","10":"312.71"},{"1":"19","2":"AM","3":"3","4":"68.7032","5":"3","6":"45.923","7":"5.1896e+02","8":"79","9":"24704","10":"312.71"},{"1":"19","2":"PM","3":"1","4":"21.6516","5":"3","6":"20.019","7":"2.6643e+00","8":"79","9":"24704","10":"312.71"},{"1":"19","2":"PM","3":"2","4":"19.3097","5":"3","6":"20.019","7":"5.0364e-01","8":"79","9":"24704","10":"312.71"},{"1":"19","2":"PM","3":"3","4":"19.0968","5":"3","6":"20.019","7":"8.5116e-01","8":"79","9":"24704","10":"312.71"},{"1":"20","2":"AM","3":"1","4":"45.0710","5":"2","6":"42.303","7":"7.6604e+00","8":"79","9":"24704","10":"312.71"},{"1":"20","2":"AM","3":"2","4":"39.5355","5":"2","6":"42.303","7":"7.6604e+00","8":"79","9":"24704","10":"312.71"},{"1":"20","2":"PM","3":"1","4":"61.8903","5":"3","6":"45.710","7":"2.6181e+02","8":"79","9":"24704","10":"312.71"},{"1":"20","2":"PM","3":"2","4":"37.4065","5":"3","6":"45.710","7":"6.8944e+01","8":"79","9":"24704","10":"312.71"},{"1":"20","2":"PM","3":"3","4":"37.8323","5":"3","6":"45.710","7":"6.2054e+01","8":"79","9":"24704","10":"312.71"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?SS_%7Berror%7D"> = 2.47041^{4}</p>
<p>Analysis-In program의 결과와 일치하는 것을 확인할 수 있습니다.</p>
</section>
<section id="ss_total" class="level4" data-number="2.3.4">
<h4 data-number="2.3.4" class="anchored" data-anchor-id="ss_total"><span class="header-section-number">2.3.4</span> SS_total</h4>
<div class="cell">
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["id"],"name":[1],"type":["int"],"align":["right"]},{"label":["Day"],"name":[2],"type":["fct"],"align":["left"]},{"label":["noon"],"name":[3],"type":["fct"],"align":["left"]},{"label":["Run"],"name":[4],"type":["int"],"align":["right"]},{"label":["response"],"name":[5],"type":["dbl"],"align":["right"]},{"label":["total_ssq"],"name":[6],"type":["dbl"],"align":["right"]}],"data":[{"1":"1","2":"1","3":"AM","4":"1","5":"60.1871","6":"40256"},{"1":"2","2":"1","3":"AM","4":"2","5":"22.9290","6":"40256"},{"1":"3","2":"1","3":"AM","4":"3","5":"24.8452","6":"40256"},{"1":"4","2":"1","3":"PM","4":"1","5":"61.8903","6":"40256"},{"1":"5","2":"1","3":"PM","4":"2","5":"50.1806","6":"40256"},{"1":"6","2":"1","3":"PM","4":"3","5":"64.0194","6":"40256"},{"1":"7","2":"2","3":"AM","4":"1","5":"21.4387","6":"40256"},{"1":"8","2":"2","3":"AM","4":"2","5":"39.9613","6":"40256"},{"1":"9","2":"2","3":"AM","4":"3","5":"58.6968","6":"40256"},{"1":"10","2":"2","3":"PM","4":"1","5":"38.4710","6":"40256"},{"1":"11","2":"2","3":"PM","4":"2","5":"55.9290","6":"40256"},{"1":"12","2":"2","3":"PM","4":"3","5":"32.7226","6":"40256"},{"1":"13","2":"3","3":"AM","4":"1","5":"50.6065","6":"40256"},{"1":"14","2":"3","3":"AM","4":"2","5":"40.6000","6":"40256"},{"1":"15","2":"3","3":"AM","4":"3","5":"8.2387","6":"40256"},{"1":"16","2":"3","3":"PM","4":"1","5":"30.8065","6":"40256"},{"1":"17","2":"3","3":"PM","4":"2","5":"36.7677","6":"40256"},{"1":"18","2":"3","3":"PM","4":"3","5":"92.5484","6":"40256"},{"1":"19","2":"4","3":"AM","4":"1","5":"17.8194","6":"40256"},{"1":"20","2":"4","3":"AM","4":"2","5":"46.1355","6":"40256"},{"1":"21","2":"4","3":"AM","4":"3","5":"46.1355","6":"40256"},{"1":"22","2":"4","3":"PM","4":"1","5":"29.3161","6":"40256"},{"1":"23","2":"4","3":"PM","4":"2","5":"21.8645","6":"40256"},{"1":"24","2":"4","3":"PM","4":"3","5":"36.9806","6":"40256"},{"1":"25","2":"5","3":"AM","4":"1","5":"49.3290","6":"40256"},{"1":"26","2":"5","3":"AM","4":"2","5":"43.7935","6":"40256"},{"1":"27","2":"5","3":"AM","4":"3","5":"40.1742","6":"40256"},{"1":"28","2":"5","3":"PM","4":"1","5":"32.0839","6":"40256"},{"1":"29","2":"5","3":"PM","4":"2","5":"44.6452","6":"40256"},{"1":"30","2":"5","3":"PM","4":"3","5":"54.0129","6":"40256"},{"1":"31","2":"6","3":"AM","4":"1","5":"21.2258","6":"40256"},{"1":"32","2":"6","3":"AM","4":"2","5":"68.4903","6":"40256"},{"1":"33","2":"6","3":"AM","4":"3","5":"47.6258","6":"40256"},{"1":"34","2":"6","3":"PM","4":"1","5":"48.4774","6":"40256"},{"1":"35","2":"6","3":"PM","4":"2","5":"31.4452","6":"40256"},{"1":"36","2":"6","3":"PM","4":"3","5":"25.9097","6":"40256"},{"1":"37","2":"7","3":"AM","4":"1","5":"34.4258","6":"40256"},{"1":"38","2":"7","3":"AM","4":"2","5":"32.2968","6":"40256"},{"1":"39","2":"7","3":"AM","4":"3","5":"54.6516","6":"40256"},{"1":"40","2":"7","3":"PM","4":"1","5":"67.6387","6":"40256"},{"1":"41","2":"7","3":"PM","4":"2","5":"47.8387","6":"40256"},{"1":"42","2":"7","3":"PM","4":"3","5":"8.6645","6":"40256"},{"1":"43","2":"8","3":"AM","4":"1","5":"89.3548","6":"40256"},{"1":"44","2":"8","3":"AM","4":"2","5":"36.5548","6":"40256"},{"1":"45","2":"8","3":"AM","4":"3","5":"27.4000","6":"40256"},{"1":"46","2":"8","3":"PM","4":"1","5":"36.5548","6":"40256"},{"1":"47","2":"8","3":"PM","4":"2","5":"45.9226","6":"40256"},{"1":"48","2":"8","3":"PM","4":"3","5":"22.0774","6":"40256"},{"1":"49","2":"9","3":"AM","4":"1","5":"61.4645","6":"40256"},{"1":"50","2":"9","3":"AM","4":"2","5":"71.8968","6":"40256"},{"1":"51","2":"9","3":"AM","4":"3","5":"76.5806","6":"40256"},{"1":"52","2":"9","3":"PM","4":"1","5":"74.2387","6":"40256"},{"1":"53","2":"9","3":"PM","4":"2","5":"37.4065","6":"40256"},{"1":"54","2":"9","3":"PM","4":"3","5":"13.7742","6":"40256"},{"1":"55","2":"10","3":"AM","4":"1","5":"30.5935","6":"40256"},{"1":"56","2":"10","3":"AM","4":"2","5":"24.4194","6":"40256"},{"1":"57","2":"10","3":"AM","4":"3","5":"24.8452","6":"40256"},{"1":"58","2":"10","3":"PM","4":"1","5":"45.2839","6":"40256"},{"1":"59","2":"10","3":"PM","4":"2","5":"33.7871","6":"40256"},{"1":"60","2":"10","3":"PM","4":"3","5":"48.9032","6":"40256"},{"1":"61","2":"11","3":"AM","4":"1","5":"59.7613","6":"40256"},{"1":"62","2":"11","3":"AM","4":"2","5":"100.0000","6":"40256"},{"1":"63","2":"11","3":"AM","4":"3","5":"44.0065","6":"40256"},{"1":"64","2":"11","3":"PM","4":"1","5":"32.7226","6":"40256"},{"1":"65","2":"11","3":"PM","4":"2","5":"20.3742","6":"40256"},{"1":"66","2":"11","3":"PM","4":"3","5":"38.2581","6":"40256"},{"1":"67","2":"12","3":"AM","4":"1","5":"24.4194","6":"40256"},{"1":"68","2":"12","3":"AM","4":"2","5":"21.0129","6":"40256"},{"1":"69","2":"12","3":"AM","4":"3","5":"32.5097","6":"40256"},{"1":"70","2":"12","3":"PM","4":"1","5":"41.2387","6":"40256"},{"1":"71","2":"12","3":"PM","4":"2","5":"26.9742","6":"40256"},{"1":"72","2":"12","3":"PM","4":"3","5":"15.4774","6":"40256"},{"1":"73","2":"13","3":"AM","4":"1","5":"52.0968","6":"40256"},{"1":"74","2":"13","3":"AM","4":"2","5":"23.3548","6":"40256"},{"1":"75","2":"13","3":"AM","4":"3","5":"46.3484","6":"40256"},{"1":"76","2":"13","3":"PM","4":"1","5":"49.3290","6":"40256"},{"1":"77","2":"13","3":"PM","4":"2","5":"53.1613","6":"40256"},{"1":"78","2":"13","3":"PM","4":"3","5":"38.8968","6":"40256"},{"1":"79","2":"14","3":"AM","4":"1","5":"23.9935","6":"40256"},{"1":"80","2":"14","3":"AM","4":"2","5":"18.4581","6":"40256"},{"1":"81","2":"14","3":"AM","4":"3","5":"35.0645","6":"40256"},{"1":"82","2":"14","3":"PM","4":"1","5":"55.5032","6":"40256"},{"1":"83","2":"14","3":"PM","4":"2","5":"37.8323","6":"40256"},{"1":"84","2":"14","3":"PM","4":"3","5":"2.0645","6":"40256"},{"1":"85","2":"15","3":"AM","4":"1","5":"16.7548","6":"40256"},{"1":"86","2":"15","3":"AM","4":"2","5":"15.0516","6":"40256"},{"1":"87","2":"15","3":"AM","4":"3","5":"23.5677","6":"40256"},{"1":"88","2":"15","3":"PM","4":"1","5":"45.0710","6":"40256"},{"1":"89","2":"15","3":"PM","4":"2","5":"70.6194","6":"40256"},{"1":"90","2":"15","3":"PM","4":"3","5":"1.0000","6":"40256"},{"1":"91","2":"16","3":"AM","4":"1","5":"16.3290","6":"40256"},{"1":"92","2":"16","3":"AM","4":"2","5":"42.7290","6":"40256"},{"1":"93","2":"16","3":"AM","4":"3","5":"51.6710","6":"40256"},{"1":"94","2":"16","3":"PM","4":"1","5":"27.4000","6":"40256"},{"1":"95","2":"16","3":"PM","4":"2","5":"24.2065","6":"40256"},{"1":"96","2":"16","3":"PM","4":"3","5":"26.7613","6":"40256"},{"1":"97","2":"17","3":"AM","4":"1","5":"28.8903","6":"40256"},{"1":"98","2":"17","3":"AM","4":"2","5":"40.3871","6":"40256"},{"1":"99","2":"17","3":"AM","4":"3","5":"55.5032","6":"40256"},{"1":"100","2":"17","3":"PM","4":"1","5":"12.4968","6":"40256"},{"1":"101","2":"17","3":"PM","4":"2","5":"15.4774","6":"40256"},{"1":"102","2":"17","3":"PM","4":"3","5":"27.6129","6":"40256"},{"1":"103","2":"18","3":"AM","4":"1","5":"44.8581","6":"40256"},{"1":"104","2":"18","3":"AM","4":"2","5":"37.6194","6":"40256"},{"1":"105","2":"18","3":"AM","4":"3","5":"32.9355","6":"40256"},{"1":"106","2":"18","3":"PM","4":"1","5":"56.7806","6":"40256"},{"1":"107","2":"18","3":"PM","4":"2","5":"23.7806","6":"40256"},{"1":"108","2":"18","3":"PM","4":"3","5":"15.6903","6":"40256"},{"1":"109","2":"19","3":"AM","4":"1","5":"36.1290","6":"40256"},{"1":"110","2":"19","3":"AM","4":"2","5":"32.9355","6":"40256"},{"1":"111","2":"19","3":"AM","4":"3","5":"68.7032","6":"40256"},{"1":"112","2":"19","3":"PM","4":"1","5":"21.6516","6":"40256"},{"1":"113","2":"19","3":"PM","4":"2","5":"19.3097","6":"40256"},{"1":"114","2":"19","3":"PM","4":"3","5":"19.0968","6":"40256"},{"1":"115","2":"20","3":"AM","4":"1","5":"45.0710","6":"40256"},{"1":"116","2":"20","3":"AM","4":"2","5":"39.5355","6":"40256"},{"1":"118","2":"20","3":"PM","4":"1","5":"61.8903","6":"40256"},{"1":"119","2":"20","3":"PM","4":"2","5":"37.4065","6":"40256"},{"1":"120","2":"20","3":"PM","4":"3","5":"37.8323","6":"40256"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?SS_%7Btotal%7D"> = 4.02557^{4}</p>
<p>Analysis-In program의 ANOVA 결과 table에 있는 SS들의 합과 일치하는 것을 확인할 수 있습니다.</p>
</section>
<section id="상호-작용-분산" class="level4" data-number="2.3.5">
<h4 data-number="2.3.5" class="anchored" data-anchor-id="상호-작용-분산"><span class="header-section-number">2.3.5</span> 상호 작용 분산</h4>
<div class="cell">

</div>
<p><img src="https://latex.codecogs.com/png.latex?SS_%7Binteraction%7D=SS_%7BDayNoon%7D=%20SS_%7Btotal%7D-SS_%7BDay%7D-SS_%7Bnoon%7D-SS_%7Berror%7D"><br>
= 4.02557<sup>{4}-2.47041</sup>{4}-319.76458-7025.97838 = 8205.93974</p>
<p>Analysis-In program의 ANOVA 결과 table과 일치하는 것을 확인할 수 있습니다.</p>
<p>위의 결과들을 종합하면 아래와 같이 요약됩니다.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value Pr(&gt;F)
Day         19   7026     370    1.18   0.29
noon         1    339     339    1.08   0.30
Day:noon    19   8187     431    1.38   0.16
Residuals   79  24704     313               
1 observation deleted due to missingness</code></pre>
</div>
</div>
<ul>
<li>Repeatability SD = <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7BV_%7Berror%7D%7D=%5Csqrt%7BMS_%7Berror%7D%7D"> = 17.6836</li>
<li>Repeatability CV = <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Brepeatability%20%5Cspace%20SD%7D%7Bglobal%20%5Cspace%20mean%20%5Cspace%20response%7D"> = 0.45662</li>
</ul>
<p>위의 결과를 간단히 해석해 보면</p>
<ul>
<li>집단간 범주 변수인 Day는 p-value =0.29&gt;0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.
<ul>
<li>즉, 5% 유의 수준에서, 일별로 평균 response값이 같다는 가설을 기각하는데 실패했습니다.</li>
<li>다시 말하면, 5% 유의 수준에서, 일별로 평균 response값이 다르지 않습니다.</li>
</ul></li>
<li>집단간 범주 변수인 noon은 p-value =0.30&gt;0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.
<ul>
<li>즉, 5% 유의 수준에서, 오전/오후별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.</li>
<li>다시 말하면, 5% 유의 수준에서, 오전/오후별 평균 response값이 다르지 않습니다.</li>
</ul></li>
<li>Day와 noon두 변수의 상호작용 변수는 p-value =0.16&gt;0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.
<ul>
<li>즉, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.</li>
<li>다시 말하면, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 다르지 않습니다.</li>
</ul></li>
</ul>
<p>최종 결론, 제품의 response값이 Day별 오전/오후별 안정적인 performance를 보인다고 조심스럽게 결론을 내릴 수 있습니다.</p>
<p>이제 까지는 질문에 대한 답이 되는 ANOVA의 원리 및 통계량의 재현 및 해석법에 대하여 알아봤습니다. 하지만 직관적으로 어떤 의미가 있을 까요? 원래는 시각화를 통해 데이터의 패턴을 짐작하고 통계 검정 결과를 예상하는데 우리는 반대로 가고 있네요 ㅎㅎ 시각화를 통해 ANOVA 결과가 얼마나 직관적인지 알아보겠습니다.</p>
</section>
</section>
<section id="visualization" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="visualization"><span class="header-section-number">2.4</span> Visualization</h3>
<section id="one-way-day" class="level4" data-number="2.4.1">
<h4 data-number="2.4.1" class="anchored" data-anchor-id="one-way-day"><span class="header-section-number">2.4.1</span> One-way: Day</h4>
<div class="cell">
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-15-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>자세히 보면 일별로 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다. 하지만 좀 더 세부적으로 관찰하면 1일~8일 평균 response의 경향이 constant한 패턴을 보입니다. 9일~13일 평균 response가 진동 하향하는 패턴을 보입니다. 14일~20일 평균 response가 상향하는 패턴을 보입니다.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>Tables of means
Grand mean
       
38.727 

 Day 
        1    2     3     4     5     6     7     8     9    10    11    12
    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94
rep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00
       13    14    15    16    17    18    19    20
    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35
rep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Tables of effects

 Day 
        1     2     3      4    5     6     7     8     9     10    11     12
    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79
rep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00
       13     14     15     16     17     18     19   20
    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62
rep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00</code></pre>
</div>
</div>
<p>위에 첫 번째표에서 Global Sample response Mean = 38.727 과 <strong>각 집단의 평균</strong> response를 확인할 수 있습니다. 위에 두 번째표에서 Global Sample response Mean = 37.322 과 <strong>각 집단의 평균 response의 차이</strong>를 확인할 수 있습니다.</p>
<ul>
<li>Day 9에서 차이가 가장 큰 것으로 보아 9일째 실험에서 performance가 가장 낮은 것이 관측됐습니다.</li>
<li>반대로, 12일에 performance 가장 좋은 것으로 관측됐습니다.</li>
</ul>
<p>9일과 12일에 response값에 영향을 미쳤던 요인이 있었는지 복기 하는것도 도움이 되겠군요.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value Pr(&gt;F)
Day         19   7026     370     1.1   0.36
Residuals   99  33230     336               
1 observation deleted due to missingness</code></pre>
</div>
</div>
<p>One-way ANOVA의 결과값입니다. Day별 평균 response의 차이는 거의 없는 것으로 보입니다. 따라서 Day 별 평균 response의 경향이 일관되지 않고 One-way ANOVA에서 역시 통계적으로 유의하지 않아 Day 변수는 평균 response에 영향을 미치지 않는 것 같습니다.</p>
</section>
<section id="one-way-ampm" class="level4" data-number="2.4.2">
<h4 data-number="2.4.2" class="anchored" data-anchor-id="one-way-ampm"><span class="header-section-number">2.4.2</span> One-way: AM/PM</h4>
<div class="cell">
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-18-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>오후에 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>Tables of means
Grand mean
       
38.727 

 noon 
       AM   PM
    40.38 37.1
rep 59.00 60.0</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Tables of effects

 noon 
        AM     PM
     1.653 -1.626
rep 59.000 60.000</code></pre>
</div>
</div>
<p>위 첫 번째 표에서 AM/PM 간의 평균 response차이는 0.15 (농도가 약 0.5배) 차이가 나는 것을 확인할 수 있습니다. 생물학적으로 의미가 있는 수치일까요? 위 두 번째 표에서 Global Sample Mean 37.322와 오전/오후 별 약 0.07씩(농도가 약 0.25배) 차이가 납니다.</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>             Df Sum Sq Mean Sq F value Pr(&gt;F)
noon          1    320     320    0.94   0.34
Residuals   117  39936     341               
1 observation deleted due to missingness</code></pre>
</div>
</div>
<p>오전 오후별 One way ANOVA를 실행한 결과가 오전/오부 평균 response값의 차이가 다르지 않다는 것을 시사하고 있습니다. 아무래도 위의 차이는 우연에 의해 발생한 현상인 것 같습니다.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>일별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 Day 변수는 유의하다고 볼 수 없습니다.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>오전/오후별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 오전/오후 변수는 유의하다고 볼 수 없습니다.</p>
<p>여기 까지 각 변수별 평균 response로의 영향도를 통계적으로 시각적으로 관찰했습니다. 하지만 Day별 오전/오후별 영향도가 있는지 확인하겠습니다. (이미 위에서 통계적으로 없다고 검정됐습니다.)</p>
</section>
</section>
<section id="two-way-anova" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="two-way-anova"><span class="header-section-number">2.5</span> Two way Anova</h3>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>       AM     PM
1  35.987 58.697
2  40.032 42.374
3  33.148 53.374
4  36.697 29.387
5  44.432 43.581
6  45.781 35.277
7  40.458 41.381
8  51.103 34.852
9  69.981 41.806
10 26.619 42.658
11 67.923 30.452
12 25.981 27.897
13 40.600 47.129
14 25.839 31.800
15 18.458 38.897
16 36.910 26.123
17 41.594 18.529
18 38.471 32.084
19 45.923 20.019
20 42.303 45.710</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>        AM      PM
1  20.9797  7.4516
2  18.6291 12.0856
3  22.1450 34.0565
4  16.3483  7.5583
5   4.6107 11.0032
6  23.6862 11.7618
7  12.3380 30.0128
8  33.4416 12.0135
9   7.7381 30.4715
10  3.4483  7.8927
11 28.8752  9.1557
12  5.9053 12.9054
13 15.2088  7.3824
14  8.4556 27.2253
15  4.5063 35.2180
16 18.3756  1.6899
17 13.3474  8.0068
18  6.0067 21.7672
19 19.7931  1.4176
20  3.9142 14.0145</code></pre>
</div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>Tables of means
Grand mean
       
38.727 

 Day 
        1    2     3     4     5     6     7     8     9    10    11    12
    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94
rep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00
       13    14    15    16    17    18    19    20
    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35
rep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00

 noon 
       AM    PM
    40.43 37.05
rep 59.00 60.00

 Day:noon 
     noon
Day   AM    PM   
  1   35.99 58.70
  rep  3.00  3.00
  2   40.03 42.37
  rep  3.00  3.00
  3   33.15 53.37
  rep  3.00  3.00
  4   36.70 29.39
  rep  3.00  3.00
  5   44.43 43.58
  rep  3.00  3.00
  6   45.78 35.28
  rep  3.00  3.00
  7   40.46 41.38
  rep  3.00  3.00
  8   51.10 34.85
  rep  3.00  3.00
  9   69.98 41.81
  rep  3.00  3.00
  10  26.62 42.66
  rep  3.00  3.00
  11  67.92 30.45
  rep  3.00  3.00
  12  25.98 27.90
  rep  3.00  3.00
  13  40.60 47.13
  rep  3.00  3.00
  14  25.84 31.80
  rep  3.00  3.00
  15  18.46 38.90
  rep  3.00  3.00
  16  36.91 26.12
  rep  3.00  3.00
  17  41.59 18.53
  rep  3.00  3.00
  18  38.47 32.08
  rep  3.00  3.00
  19  45.92 20.02
  rep  3.00  3.00
  20  42.30 45.71
  rep  2.00  3.00</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Tables of effects

 Day 
        1     2     3      4    5     6     7     8     9     10    11     12
    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79
rep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00
       13     14     15     16     17     18     19   20
    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62
rep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00

 noon 
        AM     PM
     1.701 -1.672
rep 59.000 60.000

 Day:noon 
     noon
Day   AM      PM     
  1   -13.044  13.044
  rep   3.000   3.000
  2    -2.860   2.860
  rep   3.000   3.000
  3   -11.802  11.802
  rep   3.000   3.000
  4     1.966  -1.966
  rep   3.000   3.000
  5    -1.263   1.263
  rep   3.000   3.000
  6     3.562  -3.562
  rep   3.000   3.000
  7    -2.151   2.151
  rep   3.000   3.000
  8     6.437  -6.437
  rep   3.000   3.000
  9    12.398 -12.398
  rep   3.000   3.000
  10   -9.709   9.709
  rep   3.000   3.000
  11   17.046 -17.046
  rep   3.000   3.000
  12   -2.647   2.647
  rep   3.000   3.000
  13   -4.954   4.954
  rep   3.000   3.000
  14   -4.670   4.670
  rep   3.000   3.000
  15  -11.909  11.909
  rep   3.000   3.000
  16    3.704  -3.704
  rep   3.000   3.000
  17    9.843  -9.843
  rep   3.000   3.000
  18    1.504  -1.504
  rep   3.000   3.000
  19   11.262 -11.262
  rep   3.000   3.000
  20   -4.071   2.714
  rep   2.000   3.000</code></pre>
</div>
</div>
<p>one way ANOVA와 같이 해석</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-25-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-25-2.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-25-3.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-25-4.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value Pr(&gt;F)
Day         19   7026     370    1.18   0.29
noon         1    339     339    1.08   0.30
Day:noon    19   8187     431    1.38   0.16
Residuals   79  24704     313               
1 observation deleted due to missingness</code></pre>
</div>
</div>
<p>위 그림을 보듯이 두 변수의 영향도가 없음, ANOVA 역시 유의하지 않음</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-26-1.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
 Missing rows: 117 </code></pre>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index_files/figure-html/unnamed-chunk-26-2.png" class="img-fluid" width="672"></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>  Tukey multiple comparisons of means
    95% family-wise confidence level

Fit: aov(formula = response ~ Day + noon + Day:noon, data = data)

$Day
            diff     lwr     upr   p adj
2-1    -6.138710 -43.575 31.2979 1.00000
3-1    -4.080645 -41.517 33.3560 1.00000
4-1   -14.300000 -51.737 23.1366 0.99700
5-1    -3.335484 -40.772 34.1011 1.00000
6-1    -6.812903 -44.250 30.6237 1.00000
7-1    -6.422581 -43.859 31.0140 1.00000
8-1    -4.364516 -41.801 33.0721 1.00000
9-1     8.551613 -28.885 45.9882 1.00000
10-1  -12.703226 -50.140 24.7334 0.99934
11-1    1.845161 -35.591 39.2818 1.00000
12-1  -20.403226 -57.840 17.0334 0.89330
13-1   -3.477419 -40.914 33.9592 1.00000
14-1  -18.522581 -55.959 18.9140 0.95243
15-1  -18.664516 -56.101 18.7721 0.94905
16-1  -15.825806 -53.262 21.6108 0.99024
17-1  -17.280645 -54.717 20.1560 0.97539
18-1  -12.064516 -49.501 25.3721 0.99968
19-1  -14.370968 -51.808 23.0657 0.99682
20-1   -2.994839 -42.259 36.2690 1.00000
3-2     2.058065 -35.379 39.4947 1.00000
4-2    -8.161290 -45.598 29.2753 1.00000
5-2     2.803226 -34.633 40.2399 1.00000
6-2    -0.674194 -38.111 36.7624 1.00000
7-2    -0.283871 -37.721 37.1528 1.00000
8-2     1.774194 -35.662 39.2108 1.00000
9-2    14.690323 -22.746 52.1270 0.99585
10-2   -6.564516 -44.001 30.8721 1.00000
11-2    7.983871 -29.453 45.4205 1.00000
12-2  -14.264516 -51.701 23.1721 0.99709
13-2    2.661290 -34.775 40.0979 1.00000
14-2  -12.383871 -49.821 25.0528 0.99953
15-2  -12.525806 -49.962 24.9108 0.99946
16-2   -9.687097 -47.124 27.7495 0.99999
17-2  -11.141935 -48.579 26.2947 0.99990
18-2   -5.925806 -43.362 31.5108 1.00000
19-2   -8.232258 -45.669 29.2044 1.00000
20-2    3.143871 -36.120 42.4077 1.00000
4-3   -10.219355 -47.656 27.2173 0.99997
5-3     0.745161 -36.691 38.1818 1.00000
6-3    -2.732258 -40.169 34.7044 1.00000
7-3    -2.341935 -39.779 35.0947 1.00000
8-3    -0.283871 -37.721 37.1528 1.00000
9-3    12.632258 -24.804 50.0689 0.99939
10-3   -8.622581 -46.059 28.8140 1.00000
11-3    5.925806 -31.511 43.3624 1.00000
12-3  -16.322581 -53.759 21.1140 0.98634
13-3    0.603226 -36.833 38.0399 1.00000
14-3  -14.441935 -51.879 22.9947 0.99662
15-3  -14.583871 -52.021 22.8528 0.99620
16-3  -11.745161 -49.182 25.6915 0.99978
17-3  -13.200000 -50.637 24.2366 0.99891
18-3   -7.983871 -45.421 29.4528 1.00000
19-3  -10.290323 -47.727 27.1463 0.99997
20-3    1.085806 -38.178 40.3497 1.00000
5-4    10.964516 -26.472 48.4011 0.99992
6-4     7.487097 -29.950 44.9237 1.00000
7-4     7.877419 -29.559 45.3140 1.00000
8-4     9.935484 -27.501 47.3721 0.99998
9-4    22.851613 -14.585 60.2882 0.76824
10-4    1.596774 -35.840 39.0334 1.00000
11-4   16.145161 -21.291 53.5818 0.98785
12-4   -6.103226 -43.540 31.3334 1.00000
13-4   10.822581 -26.614 48.2592 0.99993
14-4   -4.222581 -41.659 33.2140 1.00000
15-4   -4.364516 -41.801 33.0721 1.00000
16-4   -1.525806 -38.962 35.9108 1.00000
17-4   -2.980645 -40.417 34.4560 1.00000
18-4    2.235484 -35.201 39.6721 1.00000
19-4   -0.070968 -37.508 37.3657 1.00000
20-4   11.305161 -27.959 50.5690 0.99994
6-5    -3.477419 -40.914 33.9592 1.00000
7-5    -3.087097 -40.524 34.3495 1.00000
8-5    -1.029032 -38.466 36.4076 1.00000
9-5    11.887097 -25.550 49.3237 0.99974
10-5   -9.367742 -46.804 28.0689 0.99999
11-5    5.180645 -32.256 42.6173 1.00000
12-5  -17.067742 -54.504 20.3689 0.97827
13-5   -0.141935 -37.579 37.2947 1.00000
14-5  -15.187097 -52.624 22.2495 0.99387
15-5  -15.329032 -52.766 22.1076 0.99318
16-5  -12.490323 -49.927 24.9463 0.99948
17-5  -13.945161 -51.382 23.4915 0.99780
18-5   -8.729032 -46.166 28.7076 1.00000
19-5  -11.035484 -48.472 26.4011 0.99991
20-5    0.340645 -38.923 39.6045 1.00000
7-6     0.390323 -37.046 37.8270 1.00000
8-6     2.448387 -34.988 39.8850 1.00000
9-6    15.364516 -22.072 52.8011 0.99300
10-6   -5.890323 -43.327 31.5463 1.00000
11-6    8.658065 -28.779 46.0947 1.00000
12-6  -13.590323 -51.027 23.8463 0.99841
13-6    3.335484 -34.101 40.7721 1.00000
14-6  -11.709677 -49.146 25.7270 0.99979
15-6  -11.851613 -49.288 25.5850 0.99975
16-6   -9.012903 -46.450 28.4237 1.00000
17-6  -10.467742 -47.904 26.9689 0.99996
18-6   -5.251613 -42.688 32.1850 1.00000
19-6   -7.558065 -44.995 29.8786 1.00000
20-6    3.818065 -35.446 43.0819 1.00000
8-7     2.058065 -35.379 39.4947 1.00000
9-7    14.974194 -22.462 52.4108 0.99480
10-7   -6.280645 -43.717 31.1560 1.00000
11-7    8.267742 -29.169 45.7044 1.00000
12-7  -13.980645 -51.417 23.4560 0.99773
13-7    2.945161 -34.491 40.3818 1.00000
14-7  -12.100000 -49.537 25.3366 0.99966
15-7  -12.241935 -49.679 25.1947 0.99960
16-7   -9.403226 -46.840 28.0334 0.99999
17-7  -10.858065 -48.295 26.5786 0.99993
18-7   -5.641935 -43.079 31.7947 1.00000
19-7   -7.948387 -45.385 29.4882 1.00000
20-7    3.427742 -35.836 42.6916 1.00000
9-8    12.916129 -24.521 50.3528 0.99918
10-8   -8.338710 -45.775 29.0979 1.00000
11-8    6.209677 -31.227 43.6463 1.00000
12-8  -16.038710 -53.475 21.3979 0.98869
13-8    0.887097 -36.550 38.3237 1.00000
14-8  -14.158065 -51.595 23.2786 0.99735
15-8  -14.300000 -51.737 23.1366 0.99700
16-8  -11.461290 -48.898 25.9753 0.99984
17-8  -12.916129 -50.353 24.5205 0.99918
18-8   -7.700000 -45.137 29.7366 1.00000
19-8  -10.006452 -47.443 27.4302 0.99998
20-8    1.369677 -37.894 40.6335 1.00000
10-9  -21.254839 -58.691 16.1818 0.85576
11-9   -6.706452 -44.143 30.7302 1.00000
12-9  -28.954839 -66.391  8.4818 0.35269
13-9  -12.029032 -49.466 25.4076 0.99969
14-9  -27.074194 -64.511 10.3624 0.47719
15-9  -27.216129 -64.653 10.2205 0.46731
16-9  -24.377419 -61.814 13.0592 0.66832
17-9  -25.832258 -63.269 11.6044 0.56535
18-9  -20.616129 -58.053 16.8205 0.88455
19-9  -22.922581 -60.359 14.5140 0.76389
20-9  -11.546452 -50.810 27.7174 0.99991
11-10  14.548387 -22.888 51.9850 0.99631
12-10  -7.700000 -45.137 29.7366 1.00000
13-10   9.225806 -28.211 46.6624 0.99999
14-10  -5.819355 -43.256 31.6173 1.00000
15-10  -5.961290 -43.398 31.4753 1.00000
16-10  -3.122581 -40.559 34.3140 1.00000
17-10  -4.577419 -42.014 32.8592 1.00000
18-10   0.638710 -36.798 38.0753 1.00000
19-10  -1.667742 -39.104 35.7689 1.00000
20-10   9.708387 -29.555 48.9723 0.99999
12-11 -22.248387 -59.685 15.1882 0.80373
13-11  -5.322581 -42.759 32.1140 1.00000
14-11 -20.367742 -57.804 17.0689 0.89472
15-11 -20.509677 -57.946 16.9270 0.88898
16-11 -17.670968 -55.108 19.7657 0.96936
17-11 -19.125806 -56.562 18.3108 0.93692
18-11 -13.909677 -51.346 23.5270 0.99787
19-11 -16.216129 -53.653 21.2205 0.98726
20-11  -4.840000 -44.104 34.4239 1.00000
13-12  16.925806 -20.511 54.3624 0.98004
14-12   1.880645 -35.556 39.3173 1.00000
15-12   1.738710 -35.698 39.1753 1.00000
16-12   4.577419 -32.859 42.0140 1.00000
17-12   3.122581 -34.314 40.5592 1.00000
18-12   8.338710 -29.098 45.7753 1.00000
19-12   6.032258 -31.404 43.4689 1.00000
20-12  17.408387 -21.855 56.6723 0.98369
14-13 -15.045161 -52.482 22.3915 0.99450
15-13 -15.187097 -52.624 22.2495 0.99387
16-13 -12.348387 -49.785 25.0882 0.99955
17-13 -13.803226 -51.240 23.6334 0.99807
18-13  -8.587097 -46.024 28.8495 1.00000
19-13 -10.893548 -48.330 26.5431 0.99992
20-13   0.482581 -38.781 39.7464 1.00000
15-14  -0.141935 -37.579 37.2947 1.00000
16-14   2.696774 -34.740 40.1334 1.00000
17-14   1.241935 -36.195 38.6786 1.00000
18-14   6.458065 -30.979 43.8947 1.00000
19-14   4.151613 -33.285 41.5882 1.00000
20-14  15.527742 -23.736 54.7916 0.99545
16-15   2.838710 -34.598 40.2753 1.00000
17-15   1.383871 -36.053 38.8205 1.00000
18-15   6.600000 -30.837 44.0366 1.00000
19-15   4.293548 -33.143 41.7302 1.00000
20-15  15.669677 -23.594 54.9335 0.99493
17-16  -1.454839 -38.891 35.9818 1.00000
18-16   3.761290 -33.675 41.1979 1.00000
19-16   1.454839 -35.982 38.8915 1.00000
20-16  12.830968 -26.433 52.0948 0.99961
18-17   5.216129 -32.221 42.6528 1.00000
19-17   2.909677 -34.527 40.3463 1.00000
20-17  14.285806 -24.978 53.5497 0.99837
19-18  -2.306452 -39.743 35.1302 1.00000
20-18   9.069677 -30.194 48.3335 1.00000
20-19  11.376129 -27.888 50.6400 0.99993

$noon
         diff     lwr    upr   p adj
PM-AM -3.3731 -9.8265 3.0804 0.30135

$`Day:noon`
                  diff      lwr     upr   p adj
2:AM-1:AM     4.045161  -54.344 62.4344 1.00000
3:AM-1:AM    -2.838710  -61.228 55.5505 1.00000
4:AM-1:AM     0.709677  -57.680 59.0989 1.00000
5:AM-1:AM     8.445161  -49.944 66.8344 1.00000
6:AM-1:AM     9.793548  -48.596 68.1827 1.00000
7:AM-1:AM     4.470968  -53.918 62.8602 1.00000
8:AM-1:AM    15.116129  -43.273 73.5053 1.00000
9:AM-1:AM    33.993548  -24.396 92.3827 0.92887
10:AM-1:AM   -9.367742  -67.757 49.0215 1.00000
11:AM-1:AM   31.935484  -26.454 90.3247 0.96592
12:AM-1:AM  -10.006452  -68.396 48.3827 1.00000
13:AM-1:AM    4.612903  -53.776 63.0021 1.00000
14:AM-1:AM  -10.148387  -68.538 48.2408 1.00000
15:AM-1:AM  -17.529032  -75.918 40.8602 1.00000
16:AM-1:AM    0.922581  -57.467 59.3118 1.00000
17:AM-1:AM    5.606452  -52.783 63.9956 1.00000
18:AM-1:AM    2.483871  -55.905 60.8731 1.00000
19:AM-1:AM    9.935484  -48.454 68.3247 1.00000
20:AM-1:AM    6.316129  -58.965 71.5972 1.00000
1:PM-1:AM    22.709677  -35.680 81.0989 0.99990
2:PM-1:AM     6.387097  -52.002 64.7763 1.00000
3:PM-1:AM    17.387097  -41.002 75.7763 1.00000
4:PM-1:AM    -6.600000  -64.989 51.7892 1.00000
5:PM-1:AM     7.593548  -50.796 65.9827 1.00000
6:PM-1:AM    -0.709677  -59.099 57.6795 1.00000
7:PM-1:AM     5.393548  -52.996 63.7827 1.00000
8:PM-1:AM    -1.135484  -59.525 57.2537 1.00000
9:PM-1:AM     5.819355  -52.570 64.2086 1.00000
10:PM-1:AM    6.670968  -51.718 65.0602 1.00000
11:PM-1:AM   -5.535484  -63.925 52.8537 1.00000
12:PM-1:AM   -8.090323  -66.480 50.2989 1.00000
13:PM-1:AM   11.141935  -47.247 69.5311 1.00000
14:PM-1:AM   -4.187097  -62.576 54.2021 1.00000
15:PM-1:AM    2.909677  -55.480 61.2989 1.00000
16:PM-1:AM   -9.864516  -68.254 48.5247 1.00000
17:PM-1:AM  -17.458065  -75.847 40.9311 1.00000
18:PM-1:AM   -3.903226  -62.292 54.4860 1.00000
19:PM-1:AM  -15.967742  -74.357 42.4215 1.00000
20:PM-1:AM    9.722581  -48.667 68.1118 1.00000
3:AM-2:AM    -6.883871  -65.273 51.5053 1.00000
4:AM-2:AM    -3.335484  -61.725 55.0537 1.00000
5:AM-2:AM     4.400000  -53.989 62.7892 1.00000
6:AM-2:AM     5.748387  -52.641 64.1376 1.00000
7:AM-2:AM     0.425806  -57.963 58.8150 1.00000
8:AM-2:AM    11.070968  -47.318 69.4602 1.00000
9:AM-2:AM    29.948387  -28.441 88.3376 0.98570
10:AM-2:AM  -13.412903  -71.802 44.9763 1.00000
11:AM-2:AM   27.890323  -30.499 86.2795 0.99521
12:AM-2:AM  -14.051613  -72.441 44.3376 1.00000
13:AM-2:AM    0.567742  -57.821 58.9569 1.00000
14:AM-2:AM  -14.193548  -72.583 44.1956 1.00000
15:AM-2:AM  -21.574194  -79.963 36.8150 0.99997
16:AM-2:AM   -3.122581  -61.512 55.2666 1.00000
17:AM-2:AM    1.561290  -56.828 59.9505 1.00000
18:AM-2:AM   -1.561290  -59.950 56.8279 1.00000
19:AM-2:AM    5.890323  -52.499 64.2795 1.00000
20:AM-2:AM    2.270968  -63.010 67.5521 1.00000
1:PM-2:AM    18.664516  -39.725 77.0537 1.00000
2:PM-2:AM     2.341935  -56.047 60.7311 1.00000
3:PM-2:AM    13.341935  -45.047 71.7311 1.00000
4:PM-2:AM   -10.645161  -69.034 47.7440 1.00000
5:PM-2:AM     3.548387  -54.841 61.9376 1.00000
6:PM-2:AM    -4.754839  -63.144 53.6344 1.00000
7:PM-2:AM     1.348387  -57.041 59.7376 1.00000
8:PM-2:AM    -5.180645  -63.570 53.2086 1.00000
9:PM-2:AM     1.774194  -56.615 60.1634 1.00000
10:PM-2:AM    2.625806  -55.763 61.0150 1.00000
11:PM-2:AM   -9.580645  -67.970 48.8086 1.00000
12:PM-2:AM  -12.135484  -70.525 46.2537 1.00000
13:PM-2:AM    7.096774  -51.292 65.4860 1.00000
14:PM-2:AM   -8.232258  -66.621 50.1569 1.00000
15:PM-2:AM   -1.135484  -59.525 57.2537 1.00000
16:PM-2:AM  -13.909677  -72.299 44.4795 1.00000
17:PM-2:AM  -21.503226  -79.892 36.8860 0.99997
18:PM-2:AM   -7.948387  -66.338 50.4408 1.00000
19:PM-2:AM  -20.012903  -78.402 38.3763 0.99999
20:PM-2:AM    5.677419  -52.712 64.0666 1.00000
4:AM-3:AM     3.548387  -54.841 61.9376 1.00000
5:AM-3:AM    11.283871  -47.105 69.6731 1.00000
6:AM-3:AM    12.632258  -45.757 71.0215 1.00000
7:AM-3:AM     7.309677  -51.080 65.6989 1.00000
8:AM-3:AM    17.954839  -40.434 76.3440 1.00000
9:AM-3:AM    36.832258  -21.557 95.2215 0.84321
10:AM-3:AM   -6.529032  -64.918 51.8602 1.00000
11:AM-3:AM   34.774194  -23.615 93.1634 0.90946
12:AM-3:AM   -7.167742  -65.557 51.2215 1.00000
13:AM-3:AM    7.451613  -50.938 65.8408 1.00000
14:AM-3:AM   -7.309677  -65.699 51.0795 1.00000
15:AM-3:AM  -14.690323  -73.080 43.6989 1.00000
16:AM-3:AM    3.761290  -54.628 62.1505 1.00000
17:AM-3:AM    8.445161  -49.944 66.8344 1.00000
18:AM-3:AM    5.322581  -53.067 63.7118 1.00000
19:AM-3:AM   12.774194  -45.615 71.1634 1.00000
20:AM-3:AM    9.154839  -56.126 74.4359 1.00000
1:PM-3:AM    25.548387  -32.841 83.9376 0.99897
2:PM-3:AM     9.225806  -49.163 67.6150 1.00000
3:PM-3:AM    20.225806  -38.163 78.6150 0.99999
4:PM-3:AM    -3.761290  -62.150 54.6279 1.00000
5:PM-3:AM    10.432258  -47.957 68.8215 1.00000
6:PM-3:AM     2.129032  -56.260 60.5182 1.00000
7:PM-3:AM     8.232258  -50.157 66.6215 1.00000
8:PM-3:AM     1.703226  -56.686 60.0924 1.00000
9:PM-3:AM     8.658065  -49.731 67.0473 1.00000
10:PM-3:AM    9.509677  -48.880 67.8989 1.00000
11:PM-3:AM   -2.696774  -61.086 55.6924 1.00000
12:PM-3:AM   -5.251613  -63.641 53.1376 1.00000
13:PM-3:AM   13.980645  -44.409 72.3698 1.00000
14:PM-3:AM   -1.348387  -59.738 57.0408 1.00000
15:PM-3:AM    5.748387  -52.641 64.1376 1.00000
16:PM-3:AM   -7.025806  -65.415 51.3634 1.00000
17:PM-3:AM  -14.619355  -73.009 43.7698 1.00000
18:PM-3:AM   -1.064516  -59.454 57.3247 1.00000
19:PM-3:AM  -13.129032  -71.518 45.2602 1.00000
20:PM-3:AM   12.561290  -45.828 70.9505 1.00000
5:AM-4:AM     7.735484  -50.654 66.1247 1.00000
6:AM-4:AM     9.083871  -49.305 67.4731 1.00000
7:AM-4:AM     3.761290  -54.628 62.1505 1.00000
8:AM-4:AM    14.406452  -43.983 72.7956 1.00000
9:AM-4:AM    33.283871  -25.105 91.6731 0.94386
10:AM-4:AM  -10.077419  -68.467 48.3118 1.00000
11:AM-4:AM   31.225806  -27.163 89.6150 0.97452
12:AM-4:AM  -10.716129  -69.105 47.6731 1.00000
13:AM-4:AM    3.903226  -54.486 62.2924 1.00000
14:AM-4:AM  -10.858065  -69.247 47.5311 1.00000
15:AM-4:AM  -18.238710  -76.628 40.1505 1.00000
16:AM-4:AM    0.212903  -58.176 58.6021 1.00000
17:AM-4:AM    4.896774  -53.492 63.2860 1.00000
18:AM-4:AM    1.774194  -56.615 60.1634 1.00000
19:AM-4:AM    9.225806  -49.163 67.6150 1.00000
20:AM-4:AM    5.606452  -59.675 70.8876 1.00000
1:PM-4:AM    22.000000  -36.389 80.3892 0.99995
2:PM-4:AM     5.677419  -52.712 64.0666 1.00000
3:PM-4:AM    16.677419  -41.712 75.0666 1.00000
4:PM-4:AM    -7.309677  -65.699 51.0795 1.00000
5:PM-4:AM     6.883871  -51.505 65.2731 1.00000
6:PM-4:AM    -1.419355  -59.809 56.9698 1.00000
7:PM-4:AM     4.683871  -53.705 63.0731 1.00000
8:PM-4:AM    -1.845161  -60.234 56.5440 1.00000
9:PM-4:AM     5.109677  -53.280 63.4989 1.00000
10:PM-4:AM    5.961290  -52.428 64.3505 1.00000
11:PM-4:AM   -6.245161  -64.634 52.1440 1.00000
12:PM-4:AM   -8.800000  -67.189 49.5892 1.00000
13:PM-4:AM   10.432258  -47.957 68.8215 1.00000
14:PM-4:AM   -4.896774  -63.286 53.4924 1.00000
15:PM-4:AM    2.200000  -56.189 60.5892 1.00000
16:PM-4:AM  -10.574194  -68.963 47.8150 1.00000
17:PM-4:AM  -18.167742  -76.557 40.2215 1.00000
18:PM-4:AM   -4.612903  -63.002 53.7763 1.00000
19:PM-4:AM  -16.677419  -75.067 41.7118 1.00000
20:PM-4:AM    9.012903  -49.376 67.4021 1.00000
6:AM-5:AM     1.348387  -57.041 59.7376 1.00000
7:AM-5:AM    -3.974194  -62.363 54.4150 1.00000
8:AM-5:AM     6.670968  -51.718 65.0602 1.00000
9:AM-5:AM    25.548387  -32.841 83.9376 0.99897
10:AM-5:AM  -17.812903  -76.202 40.5763 1.00000
11:AM-5:AM   23.490323  -34.899 81.8795 0.99980
12:AM-5:AM  -18.451613  -76.841 39.9376 1.00000
13:AM-5:AM   -3.832258  -62.221 54.5569 1.00000
14:AM-5:AM  -18.593548  -76.983 39.7956 1.00000
15:AM-5:AM  -25.974194  -84.363 32.4150 0.99860
16:AM-5:AM   -7.522581  -65.912 50.8666 1.00000
17:AM-5:AM   -2.838710  -61.228 55.5505 1.00000
18:AM-5:AM   -5.961290  -64.350 52.4279 1.00000
19:AM-5:AM    1.490323  -56.899 59.8795 1.00000
20:AM-5:AM   -2.129032  -67.410 63.1521 1.00000
1:PM-5:AM    14.264516  -44.125 72.6537 1.00000
2:PM-5:AM    -2.058065  -60.447 56.3311 1.00000
3:PM-5:AM     8.941935  -49.447 67.3311 1.00000
4:PM-5:AM   -15.045161  -73.434 43.3440 1.00000
5:PM-5:AM    -0.851613  -59.241 57.5376 1.00000
6:PM-5:AM    -9.154839  -67.544 49.2344 1.00000
7:PM-5:AM    -3.051613  -61.441 55.3376 1.00000
8:PM-5:AM    -9.580645  -67.970 48.8086 1.00000
9:PM-5:AM    -2.625806  -61.015 55.7634 1.00000
10:PM-5:AM   -1.774194  -60.163 56.6150 1.00000
11:PM-5:AM  -13.980645  -72.370 44.4086 1.00000
12:PM-5:AM  -16.535484  -74.925 41.8537 1.00000
13:PM-5:AM    2.696774  -55.692 61.0860 1.00000
14:PM-5:AM  -12.632258  -71.021 45.7569 1.00000
15:PM-5:AM   -5.535484  -63.925 52.8537 1.00000
16:PM-5:AM  -18.309677  -76.699 40.0795 1.00000
17:PM-5:AM  -25.903226  -84.292 32.4860 0.99867
18:PM-5:AM  -12.348387  -70.738 46.0408 1.00000
19:PM-5:AM  -24.412903  -82.802 33.9763 0.99957
20:PM-5:AM    1.277419  -57.112 59.6666 1.00000
7:AM-6:AM    -5.322581  -63.712 53.0666 1.00000
8:AM-6:AM     5.322581  -53.067 63.7118 1.00000
9:AM-6:AM    24.200000  -34.189 82.5892 0.99964
10:AM-6:AM  -19.161290  -77.550 39.2279 1.00000
11:AM-6:AM   22.141935  -36.247 80.5311 0.99994
12:AM-6:AM  -19.800000  -78.189 38.5892 1.00000
13:AM-6:AM   -5.180645  -63.570 53.2086 1.00000
14:AM-6:AM  -19.941935  -78.331 38.4473 1.00000
15:AM-6:AM  -27.322581  -85.712 31.0666 0.99660
16:AM-6:AM   -8.870968  -67.260 49.5182 1.00000
17:AM-6:AM   -4.187097  -62.576 54.2021 1.00000
18:AM-6:AM   -7.309677  -65.699 51.0795 1.00000
19:AM-6:AM    0.141935  -58.247 58.5311 1.00000
20:AM-6:AM   -3.477419  -68.759 61.8037 1.00000
1:PM-6:AM    12.916129  -45.473 71.3053 1.00000
2:PM-6:AM    -3.406452  -61.796 54.9827 1.00000
3:PM-6:AM     7.593548  -50.796 65.9827 1.00000
4:PM-6:AM   -16.393548  -74.783 41.9956 1.00000
5:PM-6:AM    -2.200000  -60.589 56.1892 1.00000
6:PM-6:AM   -10.503226  -68.892 47.8860 1.00000
7:PM-6:AM    -4.400000  -62.789 53.9892 1.00000
8:PM-6:AM   -10.929032  -69.318 47.4602 1.00000
9:PM-6:AM    -3.974194  -62.363 54.4150 1.00000
10:PM-6:AM   -3.122581  -61.512 55.2666 1.00000
11:PM-6:AM  -15.329032  -73.718 43.0602 1.00000
12:PM-6:AM  -17.883871  -76.273 40.5053 1.00000
13:PM-6:AM    1.348387  -57.041 59.7376 1.00000
14:PM-6:AM  -13.980645  -72.370 44.4086 1.00000
15:PM-6:AM   -6.883871  -65.273 51.5053 1.00000
16:PM-6:AM  -19.658065  -78.047 38.7311 1.00000
17:PM-6:AM  -27.251613  -85.641 31.1376 0.99674
18:PM-6:AM  -13.696774  -72.086 44.6924 1.00000
19:PM-6:AM  -25.761290  -84.150 32.6279 0.99880
20:PM-6:AM   -0.070968  -58.460 58.3182 1.00000
8:AM-7:AM    10.645161  -47.744 69.0344 1.00000
9:AM-7:AM    29.522581  -28.867 87.9118 0.98840
10:AM-7:AM  -13.838710  -72.228 44.5505 1.00000
11:AM-7:AM   27.464516  -30.925 85.8537 0.99629
12:AM-7:AM  -14.477419  -72.867 43.9118 1.00000
13:AM-7:AM    0.141935  -58.247 58.5311 1.00000
14:AM-7:AM  -14.619355  -73.009 43.7698 1.00000
15:AM-7:AM  -22.000000  -80.389 36.3892 0.99995
16:AM-7:AM   -3.548387  -61.938 54.8408 1.00000
17:AM-7:AM    1.135484  -57.254 59.5247 1.00000
18:AM-7:AM   -1.987097  -60.376 56.4021 1.00000
19:AM-7:AM    5.464516  -52.925 63.8537 1.00000
20:AM-7:AM    1.845161  -63.436 67.1263 1.00000
1:PM-7:AM    18.238710  -40.150 76.6279 1.00000
2:PM-7:AM     1.916129  -56.473 60.3053 1.00000
3:PM-7:AM    12.916129  -45.473 71.3053 1.00000
4:PM-7:AM   -11.070968  -69.460 47.3182 1.00000
5:PM-7:AM     3.122581  -55.267 61.5118 1.00000
6:PM-7:AM    -5.180645  -63.570 53.2086 1.00000
7:PM-7:AM     0.922581  -57.467 59.3118 1.00000
8:PM-7:AM    -5.606452  -63.996 52.7827 1.00000
9:PM-7:AM     1.348387  -57.041 59.7376 1.00000
10:PM-7:AM    2.200000  -56.189 60.5892 1.00000
11:PM-7:AM  -10.006452  -68.396 48.3827 1.00000
12:PM-7:AM  -12.561290  -70.950 45.8279 1.00000
13:PM-7:AM    6.670968  -51.718 65.0602 1.00000
14:PM-7:AM   -8.658065  -67.047 49.7311 1.00000
15:PM-7:AM   -1.561290  -59.950 56.8279 1.00000
16:PM-7:AM  -14.335484  -72.725 44.0537 1.00000
17:PM-7:AM  -21.929032  -80.318 36.4602 0.99996
18:PM-7:AM   -8.374194  -66.763 50.0150 1.00000
19:PM-7:AM  -20.438710  -78.828 37.9505 0.99999
20:PM-7:AM    5.251613  -53.138 63.6408 1.00000
9:AM-8:AM    18.877419  -39.512 77.2666 1.00000
10:AM-8:AM  -24.483871  -82.873 33.9053 0.99954
11:AM-8:AM   16.819355  -41.570 75.2086 1.00000
12:AM-8:AM  -25.122581  -83.512 33.2666 0.99925
13:AM-8:AM  -10.503226  -68.892 47.8860 1.00000
14:AM-8:AM  -25.264516  -83.654 33.1247 0.99916
15:AM-8:AM  -32.645161  -91.034 25.7440 0.95531
16:AM-8:AM  -14.193548  -72.583 44.1956 1.00000
17:AM-8:AM   -9.509677  -67.899 48.8795 1.00000
18:AM-8:AM  -12.632258  -71.021 45.7569 1.00000
19:AM-8:AM   -5.180645  -63.570 53.2086 1.00000
20:AM-8:AM   -8.800000  -74.081 56.4811 1.00000
1:PM-8:AM     7.593548  -50.796 65.9827 1.00000
2:PM-8:AM    -8.729032  -67.118 49.6602 1.00000
3:PM-8:AM     2.270968  -56.118 60.6602 1.00000
4:PM-8:AM   -21.716129  -80.105 36.6731 0.99996
5:PM-8:AM    -7.522581  -65.912 50.8666 1.00000
6:PM-8:AM   -15.825806  -74.215 42.5634 1.00000
7:PM-8:AM    -9.722581  -68.112 48.6666 1.00000
8:PM-8:AM   -16.251613  -74.641 42.1376 1.00000
9:PM-8:AM    -9.296774  -67.686 49.0924 1.00000
10:PM-8:AM   -8.445161  -66.834 49.9440 1.00000
11:PM-8:AM  -20.651613  -79.041 37.7376 0.99999
12:PM-8:AM  -23.206452  -81.596 35.1827 0.99985
13:PM-8:AM   -3.974194  -62.363 54.4150 1.00000
14:PM-8:AM  -19.303226  -77.692 39.0860 1.00000
15:PM-8:AM  -12.206452  -70.596 46.1827 1.00000
16:PM-8:AM  -24.980645  -83.370 33.4086 0.99933
17:PM-8:AM  -32.574194  -90.963 25.8150 0.95647
18:PM-8:AM  -19.019355  -77.409 39.3698 1.00000
19:PM-8:AM  -31.083871  -89.473 27.3053 0.97602
20:PM-8:AM   -5.393548  -63.783 52.9956 1.00000
10:AM-9:AM  -43.361290 -101.750 15.0279 0.52759
11:AM-9:AM   -2.058065  -60.447 56.3311 1.00000
12:AM-9:AM  -44.000000 -102.389 14.3892 0.49403
13:AM-9:AM  -29.380645  -87.770 29.0086 0.98920
14:AM-9:AM  -44.141935 -102.531 14.2473 0.48663
15:AM-9:AM  -51.522581 -109.912  6.8666 0.17781
16:AM-9:AM  -33.070968  -91.460 25.3182 0.94789
17:AM-9:AM  -28.387097  -86.776 30.0021 0.99364
18:AM-9:AM  -31.509677  -89.899 26.8795 0.97131
19:AM-9:AM  -24.058065  -82.447 34.3311 0.99968
20:AM-9:AM  -27.677419  -92.959 37.6037 0.99943
1:PM-9:AM   -11.283871  -69.673 47.1053 1.00000
2:PM-9:AM   -27.606452  -85.996 30.7827 0.99595
3:PM-9:AM   -16.606452  -74.996 41.7827 1.00000
4:PM-9:AM   -40.593548  -98.983 17.7956 0.67322
5:PM-9:AM   -26.400000  -84.789 31.9892 0.99812
6:PM-9:AM   -34.703226  -93.092 23.6860 0.91136
7:PM-9:AM   -28.600000  -86.989 29.7892 0.99284
8:PM-9:AM   -35.129032  -93.518 23.2602 0.89961
9:PM-9:AM   -28.174194  -86.563 30.2150 0.99436
10:PM-9:AM  -27.322581  -85.712 31.0666 0.99660
11:PM-9:AM  -39.529032  -97.918 18.8602 0.72631
12:PM-9:AM  -42.083871 -100.473 16.3053 0.59536
13:PM-9:AM  -22.851613  -81.241 35.5376 0.99989
14:PM-9:AM  -38.180645  -96.570 20.2086 0.78850
15:PM-9:AM  -31.083871  -89.473 27.3053 0.97602
16:PM-9:AM  -43.858065 -102.247 14.5311 0.50145
17:PM-9:AM  -51.451613 -109.841  6.9376 0.17988
18:PM-9:AM  -37.896774  -96.286 20.4924 0.80070
19:PM-9:AM  -49.961290 -108.350  8.4279 0.22767
20:PM-9:AM  -24.270968  -82.660 34.1182 0.99962
11:AM-10:AM  41.303226  -17.086 99.6924 0.63649
12:AM-10:AM  -0.638710  -59.028 57.7505 1.00000
13:AM-10:AM  13.980645  -44.409 72.3698 1.00000
14:AM-10:AM  -0.780645  -59.170 57.6086 1.00000
15:AM-10:AM  -8.161290  -66.550 50.2279 1.00000
16:AM-10:AM  10.290323  -48.099 68.6795 1.00000
17:AM-10:AM  14.974194  -43.415 73.3634 1.00000
18:AM-10:AM  11.851613  -46.538 70.2408 1.00000
19:AM-10:AM  19.303226  -39.086 77.6924 1.00000
20:AM-10:AM  15.683871  -49.597 80.9650 1.00000
1:PM-10:AM   32.077419  -26.312 90.4666 0.96397
2:PM-10:AM   15.754839  -42.634 74.1440 1.00000
3:PM-10:AM   26.754839  -31.634 85.1440 0.99763
4:PM-10:AM    2.767742  -55.621 61.1569 1.00000
5:PM-10:AM   16.961290  -41.428 75.3505 1.00000
6:PM-10:AM    8.658065  -49.731 67.0473 1.00000
7:PM-10:AM   14.761290  -43.628 73.1505 1.00000
8:PM-10:AM    8.232258  -50.157 66.6215 1.00000
9:PM-10:AM   15.187097  -43.202 73.5763 1.00000
10:PM-10:AM  16.038710  -42.350 74.4279 1.00000
11:PM-10:AM   3.832258  -54.557 62.2215 1.00000
12:PM-10:AM   1.277419  -57.112 59.6666 1.00000
13:PM-10:AM  20.509677  -37.880 78.8989 0.99999
14:PM-10:AM   5.180645  -53.209 63.5698 1.00000
15:PM-10:AM  12.277419  -46.112 70.6666 1.00000
16:PM-10:AM  -0.496774  -58.886 57.8924 1.00000
17:PM-10:AM  -8.090323  -66.480 50.2989 1.00000
18:PM-10:AM   5.464516  -52.925 63.8537 1.00000
19:PM-10:AM  -6.600000  -64.989 51.7892 1.00000
20:PM-10:AM  19.090323  -39.299 77.4795 1.00000
12:AM-11:AM -41.941935 -100.331 16.4473 0.60287
13:AM-11:AM -27.322581  -85.712 31.0666 0.99660
14:AM-11:AM -42.083871 -100.473 16.3053 0.59536
15:AM-11:AM -49.464516 -107.854  8.9247 0.24541
16:AM-11:AM -31.012903  -89.402 27.3763 0.97675
17:AM-11:AM -26.329032  -84.718 32.0602 0.99821
18:AM-11:AM -29.451613  -87.841 28.9376 0.98880
19:AM-11:AM -22.000000  -80.389 36.3892 0.99995
20:AM-11:AM -25.619355  -90.900 39.6618 0.99988
1:PM-11:AM   -9.225806  -67.615 49.1634 1.00000
2:PM-11:AM  -25.548387  -83.938 32.8408 0.99897
3:PM-11:AM  -14.548387  -72.938 43.8408 1.00000
4:PM-11:AM  -38.535484  -96.925 19.8537 0.77279
5:PM-11:AM  -24.341935  -82.731 34.0473 0.99959
6:PM-11:AM  -32.645161  -91.034 25.7440 0.95531
7:PM-11:AM  -26.541935  -84.931 31.8473 0.99794
8:PM-11:AM  -33.070968  -91.460 25.3182 0.94789
9:PM-11:AM  -26.116129  -84.505 32.2731 0.99846
10:PM-11:AM -25.264516  -83.654 33.1247 0.99916
11:PM-11:AM -37.470968  -95.860 20.9182 0.81833
12:PM-11:AM -40.025806  -98.415 18.3634 0.70190
13:PM-11:AM -20.793548  -79.183 37.5956 0.99999
14:PM-11:AM -36.122581  -94.512 22.2666 0.86852
15:PM-11:AM -29.025806  -87.415 29.3634 0.99101
16:PM-11:AM -41.800000 -100.189 16.5892 0.61038
17:PM-11:AM -49.393548 -107.783  8.9956 0.24802
18:PM-11:AM -35.838710  -94.228 22.5505 0.87792
19:PM-11:AM -47.903226 -106.292 10.4860 0.30702
20:PM-11:AM -22.212903  -80.602 36.1763 0.99994
13:AM-12:AM  14.619355  -43.770 73.0086 1.00000
14:AM-12:AM  -0.141935  -58.531 58.2473 1.00000
15:AM-12:AM  -7.522581  -65.912 50.8666 1.00000
16:AM-12:AM  10.929032  -47.460 69.3182 1.00000
17:AM-12:AM  15.612903  -42.776 74.0021 1.00000
18:AM-12:AM  12.490323  -45.899 70.8795 1.00000
19:AM-12:AM  19.941935  -38.447 78.3311 1.00000
20:AM-12:AM  16.322581  -48.959 81.6037 1.00000
1:PM-12:AM   32.716129  -25.673 91.1053 0.95413
2:PM-12:AM   16.393548  -41.996 74.7827 1.00000
3:PM-12:AM   27.393548  -30.996 85.7827 0.99645
4:PM-12:AM    3.406452  -54.983 61.7956 1.00000
5:PM-12:AM   17.600000  -40.789 75.9892 1.00000
6:PM-12:AM    9.296774  -49.092 67.6860 1.00000
7:PM-12:AM   15.400000  -42.989 73.7892 1.00000
8:PM-12:AM    8.870968  -49.518 67.2602 1.00000
9:PM-12:AM   15.825806  -42.563 74.2150 1.00000
10:PM-12:AM  16.677419  -41.712 75.0666 1.00000
11:PM-12:AM   4.470968  -53.918 62.8602 1.00000
12:PM-12:AM   1.916129  -56.473 60.3053 1.00000
13:PM-12:AM  21.148387  -37.241 79.5376 0.99998
14:PM-12:AM   5.819355  -52.570 64.2086 1.00000
15:PM-12:AM  12.916129  -45.473 71.3053 1.00000
16:PM-12:AM   0.141935  -58.247 58.5311 1.00000
17:PM-12:AM  -7.451613  -65.841 50.9376 1.00000
18:PM-12:AM   6.103226  -52.286 64.4924 1.00000
19:PM-12:AM  -5.961290  -64.350 52.4279 1.00000
20:PM-12:AM  19.729032  -38.660 78.1182 1.00000
14:AM-13:AM -14.761290  -73.150 43.6279 1.00000
15:AM-13:AM -22.141935  -80.531 36.2473 0.99994
16:AM-13:AM  -3.690323  -62.080 54.6989 1.00000
17:AM-13:AM   0.993548  -57.396 59.3827 1.00000
18:AM-13:AM  -2.129032  -60.518 56.2602 1.00000
19:AM-13:AM   5.322581  -53.067 63.7118 1.00000
20:AM-13:AM   1.703226  -63.578 66.9843 1.00000
1:PM-13:AM   18.096774  -40.292 76.4860 1.00000
2:PM-13:AM    1.774194  -56.615 60.1634 1.00000
3:PM-13:AM   12.774194  -45.615 71.1634 1.00000
4:PM-13:AM  -11.212903  -69.602 47.1763 1.00000
5:PM-13:AM    2.980645  -55.409 61.3698 1.00000
6:PM-13:AM   -5.322581  -63.712 53.0666 1.00000
7:PM-13:AM    0.780645  -57.609 59.1698 1.00000
8:PM-13:AM   -5.748387  -64.138 52.6408 1.00000
9:PM-13:AM    1.206452  -57.183 59.5956 1.00000
10:PM-13:AM   2.058065  -56.331 60.4473 1.00000
11:PM-13:AM -10.148387  -68.538 48.2408 1.00000
12:PM-13:AM -12.703226  -71.092 45.6860 1.00000
13:PM-13:AM   6.529032  -51.860 64.9182 1.00000
14:PM-13:AM  -8.800000  -67.189 49.5892 1.00000
15:PM-13:AM  -1.703226  -60.092 56.6860 1.00000
16:PM-13:AM -14.477419  -72.867 43.9118 1.00000
17:PM-13:AM -22.070968  -80.460 36.3182 0.99995
18:PM-13:AM  -8.516129  -66.905 49.8731 1.00000
19:PM-13:AM -20.580645  -78.970 37.8086 0.99999
20:PM-13:AM   5.109677  -53.280 63.4989 1.00000
15:AM-14:AM  -7.380645  -65.770 51.0086 1.00000
16:AM-14:AM  11.070968  -47.318 69.4602 1.00000
17:AM-14:AM  15.754839  -42.634 74.1440 1.00000
18:AM-14:AM  12.632258  -45.757 71.0215 1.00000
19:AM-14:AM  20.083871  -38.305 78.4731 0.99999
20:AM-14:AM  16.464516  -48.817 81.7456 1.00000
1:PM-14:AM   32.858065  -25.531 91.2473 0.95170
2:PM-14:AM   16.535484  -41.854 74.9247 1.00000
3:PM-14:AM   27.535484  -30.854 85.9247 0.99612
4:PM-14:AM    3.548387  -54.841 61.9376 1.00000
5:PM-14:AM   17.741935  -40.647 76.1311 1.00000
6:PM-14:AM    9.438710  -48.950 67.8279 1.00000
7:PM-14:AM   15.541935  -42.847 73.9311 1.00000
8:PM-14:AM    9.012903  -49.376 67.4021 1.00000
9:PM-14:AM   15.967742  -42.421 74.3569 1.00000
10:PM-14:AM  16.819355  -41.570 75.2086 1.00000
11:PM-14:AM   4.612903  -53.776 63.0021 1.00000
12:PM-14:AM   2.058065  -56.331 60.4473 1.00000
13:PM-14:AM  21.290323  -37.099 79.6795 0.99998
14:PM-14:AM   5.961290  -52.428 64.3505 1.00000
15:PM-14:AM  13.058065  -45.331 71.4473 1.00000
16:PM-14:AM   0.283871  -58.105 58.6731 1.00000
17:PM-14:AM  -7.309677  -65.699 51.0795 1.00000
18:PM-14:AM   6.245161  -52.144 64.6344 1.00000
19:PM-14:AM  -5.819355  -64.209 52.5698 1.00000
20:PM-14:AM  19.870968  -38.518 78.2602 1.00000
16:AM-15:AM  18.451613  -39.938 76.8408 1.00000
17:AM-15:AM  23.135484  -35.254 81.5247 0.99986
18:AM-15:AM  20.012903  -38.376 78.4021 0.99999
19:AM-15:AM  27.464516  -30.925 85.8537 0.99629
20:AM-15:AM  23.845161  -41.436 89.1263 0.99998
1:PM-15:AM   40.238710  -18.150 98.6279 0.69123
2:PM-15:AM   23.916129  -34.473 82.3053 0.99972
3:PM-15:AM   34.916129  -23.473 93.3053 0.90560
4:PM-15:AM   10.929032  -47.460 69.3182 1.00000
5:PM-15:AM   25.122581  -33.267 83.5118 0.99925
6:PM-15:AM   16.819355  -41.570 75.2086 1.00000
7:PM-15:AM   22.922581  -35.467 81.3118 0.99988
8:PM-15:AM   16.393548  -41.996 74.7827 1.00000
9:PM-15:AM   23.348387  -35.041 81.7376 0.99983
10:PM-15:AM  24.200000  -34.189 82.5892 0.99964
11:PM-15:AM  11.993548  -46.396 70.3827 1.00000
12:PM-15:AM   9.438710  -48.950 67.8279 1.00000
13:PM-15:AM  28.670968  -29.718 87.0602 0.99256
14:PM-15:AM  13.341935  -45.047 71.7311 1.00000
15:PM-15:AM  20.438710  -37.950 78.8279 0.99999
16:PM-15:AM   7.664516  -50.725 66.0537 1.00000
17:PM-15:AM   0.070968  -58.318 58.4602 1.00000
18:PM-15:AM  13.625806  -44.763 72.0150 1.00000
19:PM-15:AM   1.561290  -56.828 59.9505 1.00000
20:PM-15:AM  27.251613  -31.138 85.6408 0.99674
17:AM-16:AM   4.683871  -53.705 63.0731 1.00000
18:AM-16:AM   1.561290  -56.828 59.9505 1.00000
19:AM-16:AM   9.012903  -49.376 67.4021 1.00000
20:AM-16:AM   5.393548  -59.888 70.6747 1.00000
1:PM-16:AM   21.787097  -36.602 80.1763 0.99996
2:PM-16:AM    5.464516  -52.925 63.8537 1.00000
3:PM-16:AM   16.464516  -41.925 74.8537 1.00000
4:PM-16:AM   -7.522581  -65.912 50.8666 1.00000
5:PM-16:AM    6.670968  -51.718 65.0602 1.00000
6:PM-16:AM   -1.632258  -60.021 56.7569 1.00000
7:PM-16:AM    4.470968  -53.918 62.8602 1.00000
8:PM-16:AM   -2.058065  -60.447 56.3311 1.00000
9:PM-16:AM    4.896774  -53.492 63.2860 1.00000
10:PM-16:AM   5.748387  -52.641 64.1376 1.00000
11:PM-16:AM  -6.458065  -64.847 51.9311 1.00000
12:PM-16:AM  -9.012903  -67.402 49.3763 1.00000
13:PM-16:AM  10.219355  -48.170 68.6086 1.00000
14:PM-16:AM  -5.109677  -63.499 53.2795 1.00000
15:PM-16:AM   1.987097  -56.402 60.3763 1.00000
16:PM-16:AM -10.787097  -69.176 47.6021 1.00000
17:PM-16:AM -18.380645  -76.770 40.0086 1.00000
18:PM-16:AM  -4.825806  -63.215 53.5634 1.00000
19:PM-16:AM -16.890323  -75.280 41.4989 1.00000
20:PM-16:AM   8.800000  -49.589 67.1892 1.00000
18:AM-17:AM  -3.122581  -61.512 55.2666 1.00000
19:AM-17:AM   4.329032  -54.060 62.7182 1.00000
20:AM-17:AM   0.709677  -64.571 65.9908 1.00000
1:PM-17:AM   17.103226  -41.286 75.4924 1.00000
2:PM-17:AM    0.780645  -57.609 59.1698 1.00000
3:PM-17:AM   11.780645  -46.609 70.1698 1.00000
4:PM-17:AM  -12.206452  -70.596 46.1827 1.00000
5:PM-17:AM    1.987097  -56.402 60.3763 1.00000
6:PM-17:AM   -6.316129  -64.705 52.0731 1.00000
7:PM-17:AM   -0.212903  -58.602 58.1763 1.00000
8:PM-17:AM   -6.741935  -65.131 51.6473 1.00000
9:PM-17:AM    0.212903  -58.176 58.6021 1.00000
10:PM-17:AM   1.064516  -57.325 59.4537 1.00000
11:PM-17:AM -11.141935  -69.531 47.2473 1.00000
12:PM-17:AM -13.696774  -72.086 44.6924 1.00000
13:PM-17:AM   5.535484  -52.854 63.9247 1.00000
14:PM-17:AM  -9.793548  -68.183 48.5956 1.00000
15:PM-17:AM  -2.696774  -61.086 55.6924 1.00000
16:PM-17:AM -15.470968  -73.860 42.9182 1.00000
17:PM-17:AM -23.064516  -81.454 35.3247 0.99987
18:PM-17:AM  -9.509677  -67.899 48.8795 1.00000
19:PM-17:AM -21.574194  -79.963 36.8150 0.99997
20:PM-17:AM   4.116129  -54.273 62.5053 1.00000
19:AM-18:AM   7.451613  -50.938 65.8408 1.00000
20:AM-18:AM   3.832258  -61.449 69.1134 1.00000
1:PM-18:AM   20.225806  -38.163 78.6150 0.99999
2:PM-18:AM    3.903226  -54.486 62.2924 1.00000
3:PM-18:AM   14.903226  -43.486 73.2924 1.00000
4:PM-18:AM   -9.083871  -67.473 49.3053 1.00000
5:PM-18:AM    5.109677  -53.280 63.4989 1.00000
6:PM-18:AM   -3.193548  -61.583 55.1956 1.00000
7:PM-18:AM    2.909677  -55.480 61.2989 1.00000
8:PM-18:AM   -3.619355  -62.009 54.7698 1.00000
9:PM-18:AM    3.335484  -55.054 61.7247 1.00000
10:PM-18:AM   4.187097  -54.202 62.5763 1.00000
11:PM-18:AM  -8.019355  -66.409 50.3698 1.00000
12:PM-18:AM -10.574194  -68.963 47.8150 1.00000
13:PM-18:AM   8.658065  -49.731 67.0473 1.00000
14:PM-18:AM  -6.670968  -65.060 51.7182 1.00000
15:PM-18:AM   0.425806  -57.963 58.8150 1.00000
16:PM-18:AM -12.348387  -70.738 46.0408 1.00000
17:PM-18:AM -19.941935  -78.331 38.4473 1.00000
18:PM-18:AM  -6.387097  -64.776 52.0021 1.00000
19:PM-18:AM -18.451613  -76.841 39.9376 1.00000
20:PM-18:AM   7.238710  -51.150 65.6279 1.00000
20:AM-19:AM  -3.619355  -68.900 61.6618 1.00000
1:PM-19:AM   12.774194  -45.615 71.1634 1.00000
2:PM-19:AM   -3.548387  -61.938 54.8408 1.00000
3:PM-19:AM    7.451613  -50.938 65.8408 1.00000
4:PM-19:AM  -16.535484  -74.925 41.8537 1.00000
5:PM-19:AM   -2.341935  -60.731 56.0473 1.00000
6:PM-19:AM  -10.645161  -69.034 47.7440 1.00000
7:PM-19:AM   -4.541935  -62.931 53.8473 1.00000
8:PM-19:AM  -11.070968  -69.460 47.3182 1.00000
9:PM-19:AM   -4.116129  -62.505 54.2731 1.00000
10:PM-19:AM  -3.264516  -61.654 55.1247 1.00000
11:PM-19:AM -15.470968  -73.860 42.9182 1.00000
12:PM-19:AM -18.025806  -76.415 40.3634 1.00000
13:PM-19:AM   1.206452  -57.183 59.5956 1.00000
14:PM-19:AM -14.122581  -72.512 44.2666 1.00000
15:PM-19:AM  -7.025806  -65.415 51.3634 1.00000
16:PM-19:AM -19.800000  -78.189 38.5892 1.00000
17:PM-19:AM -27.393548  -85.783 30.9956 0.99645
18:PM-19:AM -13.838710  -72.228 44.5505 1.00000
19:PM-19:AM -25.903226  -84.292 32.4860 0.99867
20:PM-19:AM  -0.212903  -58.602 58.1763 1.00000
1:PM-20:AM   16.393548  -48.888 81.6747 1.00000
2:PM-20:AM    0.070968  -65.210 65.3521 1.00000
3:PM-20:AM   11.070968  -54.210 76.3521 1.00000
4:PM-20:AM  -12.916129  -78.197 52.3650 1.00000
5:PM-20:AM    1.277419  -64.004 66.5585 1.00000
6:PM-20:AM   -7.025806  -72.307 58.2553 1.00000
7:PM-20:AM   -0.922581  -66.204 64.3585 1.00000
8:PM-20:AM   -7.451613  -72.733 57.8295 1.00000
9:PM-20:AM   -0.496774  -65.778 64.7843 1.00000
10:PM-20:AM   0.354839  -64.926 65.6359 1.00000
11:PM-20:AM -11.851613  -77.133 53.4295 1.00000
12:PM-20:AM -14.406452  -79.688 50.8747 1.00000
13:PM-20:AM   4.825806  -60.455 70.1069 1.00000
14:PM-20:AM -10.503226  -75.784 54.7779 1.00000
15:PM-20:AM  -3.406452  -68.688 61.8747 1.00000
16:PM-20:AM -16.180645  -81.462 49.1005 1.00000
17:PM-20:AM -23.774194  -89.055 41.5069 0.99998
18:PM-20:AM -10.219355  -75.500 55.0618 1.00000
19:PM-20:AM -22.283871  -87.565 42.9972 1.00000
20:PM-20:AM   3.406452  -61.875 68.6876 1.00000
2:PM-1:PM   -16.322581  -74.712 42.0666 1.00000
3:PM-1:PM    -5.322581  -63.712 53.0666 1.00000
4:PM-1:PM   -29.309677  -87.699 29.0795 0.98958
5:PM-1:PM   -15.116129  -73.505 43.2731 1.00000
6:PM-1:PM   -23.419355  -81.809 34.9698 0.99982
7:PM-1:PM   -17.316129  -75.705 41.0731 1.00000
8:PM-1:PM   -23.845161  -82.234 34.5440 0.99973
9:PM-1:PM   -16.890323  -75.280 41.4989 1.00000
10:PM-1:PM  -16.038710  -74.428 42.3505 1.00000
11:PM-1:PM  -28.245161  -86.634 30.1440 0.99413
12:PM-1:PM  -30.800000  -89.189 27.5892 0.97882
13:PM-1:PM  -11.567742  -69.957 46.8215 1.00000
14:PM-1:PM  -26.896774  -85.286 31.4924 0.99740
15:PM-1:PM  -19.800000  -78.189 38.5892 1.00000
16:PM-1:PM  -32.574194  -90.963 25.8150 0.95647
17:PM-1:PM  -40.167742  -98.557 18.2215 0.69480
18:PM-1:PM  -26.612903  -85.002 31.7763 0.99784
19:PM-1:PM  -38.677419  -97.067 19.7118 0.76637
20:PM-1:PM  -12.987097  -71.376 45.4021 1.00000
3:PM-2:PM    11.000000  -47.389 69.3892 1.00000
4:PM-2:PM   -12.987097  -71.376 45.4021 1.00000
5:PM-2:PM     1.206452  -57.183 59.5956 1.00000
6:PM-2:PM    -7.096774  -65.486 51.2924 1.00000
7:PM-2:PM    -0.993548  -59.383 57.3956 1.00000
8:PM-2:PM    -7.522581  -65.912 50.8666 1.00000
9:PM-2:PM    -0.567742  -58.957 57.8215 1.00000
10:PM-2:PM    0.283871  -58.105 58.6731 1.00000
11:PM-2:PM  -11.922581  -70.312 46.4666 1.00000
12:PM-2:PM  -14.477419  -72.867 43.9118 1.00000
13:PM-2:PM    4.754839  -53.634 63.1440 1.00000
14:PM-2:PM  -10.574194  -68.963 47.8150 1.00000
15:PM-2:PM   -3.477419  -61.867 54.9118 1.00000
16:PM-2:PM  -16.251613  -74.641 42.1376 1.00000
17:PM-2:PM  -23.845161  -82.234 34.5440 0.99973
18:PM-2:PM  -10.290323  -68.680 48.0989 1.00000
19:PM-2:PM  -22.354839  -80.744 36.0344 0.99993
20:PM-2:PM    3.335484  -55.054 61.7247 1.00000
4:PM-3:PM   -23.987097  -82.376 34.4021 0.99970
5:PM-3:PM    -9.793548  -68.183 48.5956 1.00000
6:PM-3:PM   -18.096774  -76.486 40.2924 1.00000
7:PM-3:PM   -11.993548  -70.383 46.3956 1.00000
8:PM-3:PM   -18.522581  -76.912 39.8666 1.00000
9:PM-3:PM   -11.567742  -69.957 46.8215 1.00000
10:PM-3:PM  -10.716129  -69.105 47.6731 1.00000
11:PM-3:PM  -22.922581  -81.312 35.4666 0.99988
12:PM-3:PM  -25.477419  -83.867 32.9118 0.99902
13:PM-3:PM   -6.245161  -64.634 52.1440 1.00000
14:PM-3:PM  -21.574194  -79.963 36.8150 0.99997
15:PM-3:PM  -14.477419  -72.867 43.9118 1.00000
16:PM-3:PM  -27.251613  -85.641 31.1376 0.99674
17:PM-3:PM  -34.845161  -93.234 23.5440 0.90755
18:PM-3:PM  -21.290323  -79.680 37.0989 0.99998
19:PM-3:PM  -33.354839  -91.744 25.0344 0.94247
20:PM-3:PM   -7.664516  -66.054 50.7247 1.00000
5:PM-4:PM    14.193548  -44.196 72.5827 1.00000
6:PM-4:PM     5.890323  -52.499 64.2795 1.00000
7:PM-4:PM    11.993548  -46.396 70.3827 1.00000
8:PM-4:PM     5.464516  -52.925 63.8537 1.00000
9:PM-4:PM    12.419355  -45.970 70.8086 1.00000
10:PM-4:PM   13.270968  -45.118 71.6602 1.00000
11:PM-4:PM    1.064516  -57.325 59.4537 1.00000
12:PM-4:PM   -1.490323  -59.880 56.8989 1.00000
13:PM-4:PM   17.741935  -40.647 76.1311 1.00000
14:PM-4:PM    2.412903  -55.976 60.8021 1.00000
15:PM-4:PM    9.509677  -48.880 67.8989 1.00000
16:PM-4:PM   -3.264516  -61.654 55.1247 1.00000
17:PM-4:PM  -10.858065  -69.247 47.5311 1.00000
18:PM-4:PM    2.696774  -55.692 61.0860 1.00000
19:PM-4:PM   -9.367742  -67.757 49.0215 1.00000
20:PM-4:PM   16.322581  -42.067 74.7118 1.00000
6:PM-5:PM    -8.303226  -66.692 50.0860 1.00000
7:PM-5:PM    -2.200000  -60.589 56.1892 1.00000
8:PM-5:PM    -8.729032  -67.118 49.6602 1.00000
9:PM-5:PM    -1.774194  -60.163 56.6150 1.00000
10:PM-5:PM   -0.922581  -59.312 57.4666 1.00000
11:PM-5:PM  -13.129032  -71.518 45.2602 1.00000
12:PM-5:PM  -15.683871  -74.073 42.7053 1.00000
13:PM-5:PM    3.548387  -54.841 61.9376 1.00000
14:PM-5:PM  -11.780645  -70.170 46.6086 1.00000
15:PM-5:PM   -4.683871  -63.073 53.7053 1.00000
16:PM-5:PM  -17.458065  -75.847 40.9311 1.00000
17:PM-5:PM  -25.051613  -83.441 33.3376 0.99929
18:PM-5:PM  -11.496774  -69.886 46.8924 1.00000
19:PM-5:PM  -23.561290  -81.950 34.8279 0.99979
20:PM-5:PM    2.129032  -56.260 60.5182 1.00000
7:PM-6:PM     6.103226  -52.286 64.4924 1.00000
8:PM-6:PM    -0.425806  -58.815 57.9634 1.00000
9:PM-6:PM     6.529032  -51.860 64.9182 1.00000
10:PM-6:PM    7.380645  -51.009 65.7698 1.00000
11:PM-6:PM   -4.825806  -63.215 53.5634 1.00000
12:PM-6:PM   -7.380645  -65.770 51.0086 1.00000
13:PM-6:PM   11.851613  -46.538 70.2408 1.00000
14:PM-6:PM   -3.477419  -61.867 54.9118 1.00000
15:PM-6:PM    3.619355  -54.770 62.0086 1.00000
16:PM-6:PM   -9.154839  -67.544 49.2344 1.00000
17:PM-6:PM  -16.748387  -75.138 41.6408 1.00000
18:PM-6:PM   -3.193548  -61.583 55.1956 1.00000
19:PM-6:PM  -15.258065  -73.647 43.1311 1.00000
20:PM-6:PM   10.432258  -47.957 68.8215 1.00000
8:PM-7:PM    -6.529032  -64.918 51.8602 1.00000
9:PM-7:PM     0.425806  -57.963 58.8150 1.00000
10:PM-7:PM    1.277419  -57.112 59.6666 1.00000
11:PM-7:PM  -10.929032  -69.318 47.4602 1.00000
12:PM-7:PM  -13.483871  -71.873 44.9053 1.00000
13:PM-7:PM    5.748387  -52.641 64.1376 1.00000
14:PM-7:PM   -9.580645  -67.970 48.8086 1.00000
15:PM-7:PM   -2.483871  -60.873 55.9053 1.00000
16:PM-7:PM  -15.258065  -73.647 43.1311 1.00000
17:PM-7:PM  -22.851613  -81.241 35.5376 0.99989
18:PM-7:PM   -9.296774  -67.686 49.0924 1.00000
19:PM-7:PM  -21.361290  -79.750 37.0279 0.99998
20:PM-7:PM    4.329032  -54.060 62.7182 1.00000
9:PM-8:PM     6.954839  -51.434 65.3440 1.00000
10:PM-8:PM    7.806452  -50.583 66.1956 1.00000
11:PM-8:PM   -4.400000  -62.789 53.9892 1.00000
12:PM-8:PM   -6.954839  -65.344 51.4344 1.00000
13:PM-8:PM   12.277419  -46.112 70.6666 1.00000
14:PM-8:PM   -3.051613  -61.441 55.3376 1.00000
15:PM-8:PM    4.045161  -54.344 62.4344 1.00000
16:PM-8:PM   -8.729032  -67.118 49.6602 1.00000
17:PM-8:PM  -16.322581  -74.712 42.0666 1.00000
18:PM-8:PM   -2.767742  -61.157 55.6215 1.00000
19:PM-8:PM  -14.832258  -73.221 43.5569 1.00000
20:PM-8:PM   10.858065  -47.531 69.2473 1.00000
10:PM-9:PM    0.851613  -57.538 59.2408 1.00000
11:PM-9:PM  -11.354839  -69.744 47.0344 1.00000
12:PM-9:PM  -13.909677  -72.299 44.4795 1.00000
13:PM-9:PM    5.322581  -53.067 63.7118 1.00000
14:PM-9:PM  -10.006452  -68.396 48.3827 1.00000
15:PM-9:PM   -2.909677  -61.299 55.4795 1.00000
16:PM-9:PM  -15.683871  -74.073 42.7053 1.00000
17:PM-9:PM  -23.277419  -81.667 35.1118 0.99984
18:PM-9:PM   -9.722581  -68.112 48.6666 1.00000
19:PM-9:PM  -21.787097  -80.176 36.6021 0.99996
20:PM-9:PM    3.903226  -54.486 62.2924 1.00000
11:PM-10:PM -12.206452  -70.596 46.1827 1.00000
12:PM-10:PM -14.761290  -73.150 43.6279 1.00000
13:PM-10:PM   4.470968  -53.918 62.8602 1.00000
14:PM-10:PM -10.858065  -69.247 47.5311 1.00000
15:PM-10:PM  -3.761290  -62.150 54.6279 1.00000
16:PM-10:PM -16.535484  -74.925 41.8537 1.00000
17:PM-10:PM -24.129032  -82.518 34.2602 0.99966
18:PM-10:PM -10.574194  -68.963 47.8150 1.00000
19:PM-10:PM -22.638710  -81.028 35.7505 0.99991
20:PM-10:PM   3.051613  -55.338 61.4408 1.00000
12:PM-11:PM  -2.554839  -60.944 55.8344 1.00000
13:PM-11:PM  16.677419  -41.712 75.0666 1.00000
14:PM-11:PM   1.348387  -57.041 59.7376 1.00000
15:PM-11:PM   8.445161  -49.944 66.8344 1.00000
16:PM-11:PM  -4.329032  -62.718 54.0602 1.00000
17:PM-11:PM -11.922581  -70.312 46.4666 1.00000
18:PM-11:PM   1.632258  -56.757 60.0215 1.00000
19:PM-11:PM -10.432258  -68.821 47.9569 1.00000
20:PM-11:PM  15.258065  -43.131 73.6473 1.00000
13:PM-12:PM  19.232258  -39.157 77.6215 1.00000
14:PM-12:PM   3.903226  -54.486 62.2924 1.00000
15:PM-12:PM  11.000000  -47.389 69.3892 1.00000
16:PM-12:PM  -1.774194  -60.163 56.6150 1.00000
17:PM-12:PM  -9.367742  -67.757 49.0215 1.00000
18:PM-12:PM   4.187097  -54.202 62.5763 1.00000
19:PM-12:PM  -7.877419  -66.267 50.5118 1.00000
20:PM-12:PM  17.812903  -40.576 76.2021 1.00000
14:PM-13:PM -15.329032  -73.718 43.0602 1.00000
15:PM-13:PM  -8.232258  -66.621 50.1569 1.00000
16:PM-13:PM -21.006452  -79.396 37.3827 0.99998
17:PM-13:PM -28.600000  -86.989 29.7892 0.99284
18:PM-13:PM -15.045161  -73.434 43.3440 1.00000
19:PM-13:PM -27.109677  -85.499 31.2795 0.99702
20:PM-13:PM  -1.419355  -59.809 56.9698 1.00000
15:PM-14:PM   7.096774  -51.292 65.4860 1.00000
16:PM-14:PM  -5.677419  -64.067 52.7118 1.00000
17:PM-14:PM -13.270968  -71.660 45.1182 1.00000
18:PM-14:PM   0.283871  -58.105 58.6731 1.00000
19:PM-14:PM -11.780645  -70.170 46.6086 1.00000
20:PM-14:PM  13.909677  -44.480 72.2989 1.00000
16:PM-15:PM -12.774194  -71.163 45.6150 1.00000
17:PM-15:PM -20.367742  -78.757 38.0215 0.99999
18:PM-15:PM  -6.812903  -65.202 51.5763 1.00000
19:PM-15:PM -18.877419  -77.267 39.5118 1.00000
20:PM-15:PM   6.812903  -51.576 65.2021 1.00000
17:PM-16:PM  -7.593548  -65.983 50.7956 1.00000
18:PM-16:PM   5.961290  -52.428 64.3505 1.00000
19:PM-16:PM  -6.103226  -64.492 52.2860 1.00000
20:PM-16:PM  19.587097  -38.802 77.9763 1.00000
18:PM-17:PM  13.554839  -44.834 71.9440 1.00000
19:PM-17:PM   1.490323  -56.899 59.8795 1.00000
20:PM-17:PM  27.180645  -31.209 85.5698 0.99689
19:PM-18:PM -12.064516  -70.454 46.3247 1.00000
20:PM-18:PM  13.625806  -44.763 72.0150 1.00000
20:PM-19:PM  25.690323  -32.699 84.0795 0.99886</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>  Tukey multiple comparisons of means
    99% family-wise confidence level

Fit: aov(formula = response ~ Day + noon + Day:noon, data = data)

$Day
            diff     lwr    upr   p adj
2-1    -6.138710 -48.905 36.628 1.00000
3-1    -4.080645 -46.847 38.686 1.00000
4-1   -14.300000 -57.066 28.466 0.99700
5-1    -3.335484 -46.102 39.431 1.00000
6-1    -6.812903 -49.579 35.953 1.00000
7-1    -6.422581 -49.189 36.344 1.00000
8-1    -4.364516 -47.131 38.402 1.00000
9-1     8.551613 -34.215 51.318 1.00000
10-1  -12.703226 -55.470 30.063 0.99934
11-1    1.845161 -40.921 44.611 1.00000
12-1  -20.403226 -63.170 22.363 0.89330
13-1   -3.477419 -46.244 39.289 1.00000
14-1  -18.522581 -61.289 24.244 0.95243
15-1  -18.664516 -61.431 24.102 0.94905
16-1  -15.825806 -58.592 26.941 0.99024
17-1  -17.280645 -60.047 25.486 0.97539
18-1  -12.064516 -54.831 30.702 0.99968
19-1  -14.370968 -57.137 28.395 0.99682
20-1   -2.994839 -47.849 41.859 1.00000
3-2     2.058065 -40.708 44.824 1.00000
4-2    -8.161290 -50.928 34.605 1.00000
5-2     2.803226 -39.963 45.570 1.00000
6-2    -0.674194 -43.441 42.092 1.00000
7-2    -0.283871 -43.050 42.482 1.00000
8-2     1.774194 -40.992 44.541 1.00000
9-2    14.690323 -28.076 57.457 0.99585
10-2   -6.564516 -49.331 36.202 1.00000
11-2    7.983871 -34.782 50.750 1.00000
12-2  -14.264516 -57.031 28.502 0.99709
13-2    2.661290 -40.105 45.428 1.00000
14-2  -12.383871 -55.150 30.382 0.99953
15-2  -12.525806 -55.292 30.241 0.99946
16-2   -9.687097 -52.453 33.079 0.99999
17-2  -11.141935 -53.908 31.624 0.99990
18-2   -5.925806 -48.692 36.841 1.00000
19-2   -8.232258 -50.999 34.534 1.00000
20-2    3.143871 -41.710 47.998 1.00000
4-3   -10.219355 -52.986 32.547 0.99997
5-3     0.745161 -42.021 43.511 1.00000
6-3    -2.732258 -45.499 40.034 1.00000
7-3    -2.341935 -45.108 40.424 1.00000
8-3    -0.283871 -43.050 42.482 1.00000
9-3    12.632258 -30.134 55.399 0.99939
10-3   -8.622581 -51.389 34.144 1.00000
11-3    5.925806 -36.841 48.692 1.00000
12-3  -16.322581 -59.089 26.444 0.98634
13-3    0.603226 -42.163 43.370 1.00000
14-3  -14.441935 -57.208 28.324 0.99662
15-3  -14.583871 -57.350 28.182 0.99620
16-3  -11.745161 -54.511 31.021 0.99978
17-3  -13.200000 -55.966 29.566 0.99891
18-3   -7.983871 -50.750 34.782 1.00000
19-3  -10.290323 -53.057 32.476 0.99997
20-3    1.085806 -43.768 45.939 1.00000
5-4    10.964516 -31.802 53.731 0.99992
6-4     7.487097 -35.279 50.253 1.00000
7-4     7.877419 -34.889 50.644 1.00000
8-4     9.935484 -32.831 52.702 0.99998
9-4    22.851613 -19.915 65.618 0.76824
10-4    1.596774 -41.170 44.363 1.00000
11-4   16.145161 -26.621 58.911 0.98785
12-4   -6.103226 -48.870 36.663 1.00000
13-4   10.822581 -31.944 53.589 0.99993
14-4   -4.222581 -46.989 38.544 1.00000
15-4   -4.364516 -47.131 38.402 1.00000
16-4   -1.525806 -44.292 41.241 1.00000
17-4   -2.980645 -45.747 39.786 1.00000
18-4    2.235484 -40.531 45.002 1.00000
19-4   -0.070968 -42.837 42.695 1.00000
20-4   11.305161 -33.549 56.159 0.99994
6-5    -3.477419 -46.244 39.289 1.00000
7-5    -3.087097 -45.853 39.679 1.00000
8-5    -1.029032 -43.795 41.737 1.00000
9-5    11.887097 -30.879 54.653 0.99974
10-5   -9.367742 -52.134 33.399 0.99999
11-5    5.180645 -37.586 47.947 1.00000
12-5  -17.067742 -59.834 25.699 0.97827
13-5   -0.141935 -42.908 42.624 1.00000
14-5  -15.187097 -57.953 27.579 0.99387
15-5  -15.329032 -58.095 27.437 0.99318
16-5  -12.490323 -55.257 30.276 0.99948
17-5  -13.945161 -56.711 28.821 0.99780
18-5   -8.729032 -51.495 34.037 1.00000
19-5  -11.035484 -53.802 31.731 0.99991
20-5    0.340645 -44.513 45.194 1.00000
7-6     0.390323 -42.376 43.157 1.00000
8-6     2.448387 -40.318 45.215 1.00000
9-6    15.364516 -27.402 58.131 0.99300
10-6   -5.890323 -48.657 36.876 1.00000
11-6    8.658065 -34.108 51.424 1.00000
12-6  -13.590323 -56.357 29.176 0.99841
13-6    3.335484 -39.431 46.102 1.00000
14-6  -11.709677 -54.476 31.057 0.99979
15-6  -11.851613 -54.618 30.915 0.99975
16-6   -9.012903 -51.779 33.753 1.00000
17-6  -10.467742 -53.234 32.299 0.99996
18-6   -5.251613 -48.018 37.515 1.00000
19-6   -7.558065 -50.324 35.208 1.00000
20-6    3.818065 -41.036 48.672 1.00000
8-7     2.058065 -40.708 44.824 1.00000
9-7    14.974194 -27.792 57.741 0.99480
10-7   -6.280645 -49.047 36.486 1.00000
11-7    8.267742 -34.499 51.034 1.00000
12-7  -13.980645 -56.747 28.786 0.99773
13-7    2.945161 -39.821 45.711 1.00000
14-7  -12.100000 -54.866 30.666 0.99966
15-7  -12.241935 -55.008 30.524 0.99960
16-7   -9.403226 -52.170 33.363 0.99999
17-7  -10.858065 -53.624 31.908 0.99993
18-7   -5.641935 -48.408 37.124 1.00000
19-7   -7.948387 -50.715 34.818 1.00000
20-7    3.427742 -41.426 48.281 1.00000
9-8    12.916129 -29.850 55.682 0.99918
10-8   -8.338710 -51.105 34.428 1.00000
11-8    6.209677 -36.557 48.976 1.00000
12-8  -16.038710 -58.805 26.728 0.98869
13-8    0.887097 -41.879 43.653 1.00000
14-8  -14.158065 -56.924 28.608 0.99735
15-8  -14.300000 -57.066 28.466 0.99700
16-8  -11.461290 -54.228 31.305 0.99984
17-8  -12.916129 -55.682 29.850 0.99918
18-8   -7.700000 -50.466 35.066 1.00000
19-8  -10.006452 -52.773 32.760 0.99998
20-8    1.369677 -43.484 46.223 1.00000
10-9  -21.254839 -64.021 21.511 0.85576
11-9   -6.706452 -49.473 36.060 1.00000
12-9  -28.954839 -71.721 13.811 0.35269
13-9  -12.029032 -54.795 30.737 0.99969
14-9  -27.074194 -69.841 15.692 0.47719
15-9  -27.216129 -69.982 15.550 0.46731
16-9  -24.377419 -67.144 18.389 0.66832
17-9  -25.832258 -68.599 16.934 0.56535
18-9  -20.616129 -63.382 22.150 0.88455
19-9  -22.922581 -65.689 19.844 0.76389
20-9  -11.546452 -56.400 33.307 0.99991
11-10  14.548387 -28.218 57.315 0.99631
12-10  -7.700000 -50.466 35.066 1.00000
13-10   9.225806 -33.541 51.992 0.99999
14-10  -5.819355 -48.586 36.947 1.00000
15-10  -5.961290 -48.728 36.805 1.00000
16-10  -3.122581 -45.889 39.644 1.00000
17-10  -4.577419 -47.344 38.189 1.00000
18-10   0.638710 -42.128 43.405 1.00000
19-10  -1.667742 -44.434 41.099 1.00000
20-10   9.708387 -35.145 54.562 0.99999
12-11 -22.248387 -65.015 20.518 0.80373
13-11  -5.322581 -48.089 37.444 1.00000
14-11 -20.367742 -63.134 22.399 0.89472
15-11 -20.509677 -63.276 22.257 0.88898
16-11 -17.670968 -60.437 25.095 0.96936
17-11 -19.125806 -61.892 23.641 0.93692
18-11 -13.909677 -56.676 28.857 0.99787
19-11 -16.216129 -58.982 26.550 0.98726
20-11  -4.840000 -49.694 40.014 1.00000
13-12  16.925806 -25.841 59.692 0.98004
14-12   1.880645 -40.886 44.647 1.00000
15-12   1.738710 -41.028 44.505 1.00000
16-12   4.577419 -38.189 47.344 1.00000
17-12   3.122581 -39.644 45.889 1.00000
18-12   8.338710 -34.428 51.105 1.00000
19-12   6.032258 -36.734 48.799 1.00000
20-12  17.408387 -27.445 62.262 0.98369
14-13 -15.045161 -57.811 27.721 0.99450
15-13 -15.187097 -57.953 27.579 0.99387
16-13 -12.348387 -55.115 30.418 0.99955
17-13 -13.803226 -56.570 28.963 0.99807
18-13  -8.587097 -51.353 34.179 1.00000
19-13 -10.893548 -53.660 31.873 0.99992
20-13   0.482581 -44.371 45.336 1.00000
15-14  -0.141935 -42.908 42.624 1.00000
16-14   2.696774 -40.070 45.463 1.00000
17-14   1.241935 -41.524 44.008 1.00000
18-14   6.458065 -36.308 49.224 1.00000
19-14   4.151613 -38.615 46.918 1.00000
20-14  15.527742 -29.326 60.381 0.99545
16-15   2.838710 -39.928 45.605 1.00000
17-15   1.383871 -41.382 44.150 1.00000
18-15   6.600000 -36.166 49.366 1.00000
19-15   4.293548 -38.473 47.060 1.00000
20-15  15.669677 -29.184 60.523 0.99493
17-16  -1.454839 -44.221 41.311 1.00000
18-16   3.761290 -39.005 46.528 1.00000
19-16   1.454839 -41.311 44.221 1.00000
20-16  12.830968 -32.023 57.685 0.99961
18-17   5.216129 -37.550 47.982 1.00000
19-17   2.909677 -39.857 45.676 1.00000
20-17  14.285806 -30.568 59.139 0.99837
19-18  -2.306452 -45.073 40.460 1.00000
20-18   9.069677 -35.784 53.923 1.00000
20-19  11.376129 -33.478 56.230 0.99993</code></pre>
</div>
</div>
<p>유의한 패턴 없음 Tukey 검정 결과 (보통 유의할때 함) 테이블 도 유의한 수치가 없음</p>
</section>
</section>
</div>
</div></ul></section>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">
<section id="terms" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="terms"><span class="header-section-number">3</span> Terms</h2>
<ul>
<li>pairwise comparison: A hypothesis test (e.g., of means) between two groups among multiple groups.</li>
<li>obmnibus set: A single hypothesis test of the overall variance among multiple group means.</li>
<li>decomposition of variance : Separation of components contributing to an individual value (e.g., from the overall average, from a treatment mean, and from a residual error).</li>
<li>F-test</li>
<li>F statistic: A standardized statistic that measures the extent to which differences among group means exceed what might be expected in a chance model.</li>
<li>sum of squares: deviations from some average value</li>
</ul>
</section>
<section id="anova" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="anova"><span class="header-section-number">4</span> ANOVA</h2>
<p>A basic idea of the ANOVA is to partition variation. It is not concerend with analyzing variances but with analyzing variation in means. To be specific, it is a method of estimating the means of several populations that are often assumed to be normally distributed.</p>
<section id="one-way-anova" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="one-way-anova"><span class="header-section-number">4.1</span> One Way ANOVA</h3>
<ul>
<li>we</li>
<li>Assumptions</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%20Y_%7Bij%7D=%5Cmu_i%20+%20%5Cepsilon_%7Bij%7D,%20%5Cspace%20%5Cspace%20i=1,%20...,%20k,%20%5Cspace%20j=1,%20...,n_i%20"> <img src="https://latex.codecogs.com/png.latex?%20EY_%7Bij%7D=%5Cmu_i,%20%5Cspace%20%5Cspace%20,%20i=1,%20...,%20k,%20%5Cspace%20j=1,%20...,n_i%20"></p>
<p>where the <img src="https://latex.codecogs.com/png.latex?%5Cmu_i"> are unkown parameters and the <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_%7Bij%7D"> are error random variables.</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?%5Ctext%7BE%7D%5Cepsilon_%7Bij%7D=0">, <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BVar%7D%5Cepsilon_%7Bij%7D=0%3C%5Cinfty">, for all <img src="https://latex.codecogs.com/png.latex?i,%20j"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ctext%7BCov%7D(%5Cepsilon_%7Bij%7D,%5Cepsilon_%7Bi'j'%7D)=0">, for all <img src="https://latex.codecogs.com/png.latex?i,%20i',%20j">, and <img src="https://latex.codecogs.com/png.latex?j'"> unless <img src="https://latex.codecogs.com/png.latex?i=i'"> and <img src="https://latex.codecogs.com/png.latex?j=j'">.</li>
<li>The <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_%7Bij%7D"> are independent and normally distributed (normal errors).</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Csigma%5E2_%7Bi%7D=%5Csigma%5E2"> for all <img src="https://latex.codecogs.com/png.latex?i"> (homoscedasticity)</li>
</ol>
</section>
</section>
</div>
<section id="blog-guide-map-link" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">5</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-07-anova/index.html</guid>
  <pubDate>Fri, 06 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MANOVA</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANOVA/index.html</link>
  <description><![CDATA[ 



<section id="description" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="description"><span class="header-section-number">1</span> Description</h2>
<p>다변량 분산분석(Multivariate Analysis of Variance, MANOVA)</p>
<ul>
<li>2개 이상의 종속변수가 있을 경우 집단별 차이를 동시에 검정</li>
<li>연구의 타당성 증가</li>
</ul>
</section>
<section id="example" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="example"><span class="header-section-number">2</span> Example</h2>
<section id="load-libraries-and-data" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="load-libraries-and-data"><span class="header-section-number">2.1</span> Load Libraries and Data</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(faraway)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(markdown)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(heplots)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(HH)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(psych)</span></code></pre></div>
</details>
</div>
</section>
<section id="data-description" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="data-description"><span class="header-section-number">2.2</span> Data Description</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">str</span>(Skulls)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   150 obs. of  5 variables:
 $ epoch: Ord.factor w/ 5 levels "c4000BC"&lt;"c3300BC"&lt;..: 1 1 1 1 1 1 1 1 1 1 ...
 $ mb   : num  131 125 131 119 136 138 139 125 131 134 ...
 $ bh   : num  138 131 132 132 143 137 130 136 134 134 ...
 $ bl   : num  89 92 99 96 100 89 108 93 102 99 ...
 $ nh   : num  49 48 50 44 54 56 48 48 51 51 ...</code></pre>
</div>
</div>
<p>R console에 <code>?Skulls</code>를 입력하면 다음과 같은 설명이 나온다.</p>
<p><strong>Measurements made on Egyptian skulls from five epochs.</strong></p>
<ul>
<li>The epochs correspond to the following periods of Egyptian history:
<ul>
<li>the early predynstic period (circa 4000 BC);</li>
<li>the late predynatic period (circa 3300 BC);</li>
<li>the 12th and 13t dynasties (circa 1850 BC);</li>
<li>the Ptolemiac peiod (circa 200 BC);</li>
<li>the Roman period(circa 150 AD).</li>
</ul></li>
</ul>
<p><strong>The question is hether the measurements change over time. Non-constant measurements of the skulls over time would indicate interbreeding with immigrant populations. Note that using polynomial contrasts for epoch essentially treats the time points as equally spaced</strong></p>
<p>즉, skulls 고대 이집트 왕조 부터 로마시대까지 이집트 지역에서 발군된 두개골의 크기를 측정한 데이터 이집트 역사를 5개의 시대로 구분하고 각 시대별로 30개씩의 두개골을 4개의 지표로 측정</p>
<p>이 data는 3개의 변수와 76개의 samples을 포함한다.</p>
<ul>
<li>cpa : Childhood physical abuse on standard scale, covariate</li>
<li>ptsd : post-traumatic stress disorder on standard scale, response variable</li>
<li>csa : Childhood sexual abuse - abused or not abused, independent variable</li>
</ul>
<p>친절하게 response variable, independent variable 및 covariate을 규명해놓았다.</p>
</section>
</section>
<section id="eda" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="eda"><span class="header-section-number">3</span> EDA</h2>
<section id="descriptive-statistics" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="descriptive-statistics"><span class="header-section-number">3.1</span> Descriptive Statistics</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">temp<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">describeBy</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>csa,<span class="at" style="color: #657422;">data=</span>sexab)</span>
<span id="cb4-2">temp<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">rbind</span>(<span class="st" style="color: #20794D;">'abused'</span><span class="ot" style="color: #003B4F;">=</span>temp<span class="sc" style="color: #5E5E5E;">$</span>Abused,<span class="st" style="color: #20794D;">'notAbused'</span><span class="ot" style="color: #003B4F;">=</span>temp<span class="sc" style="color: #5E5E5E;">$</span>NotAbused)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">as.data.frame</span>()</span>
<span id="cb4-4">temp<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 8%">
<col style="width: 4%">
<col style="width: 2%">
<col style="width: 8%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: right;">vars</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">median</th>
<th style="text-align: right;">trimmed</th>
<th style="text-align: right;">mad</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">range</th>
<th style="text-align: right;">skew</th>
<th style="text-align: right;">kurtosis</th>
<th style="text-align: right;">se</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">abused</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">45</td>
<td style="text-align: right;">11.941093</td>
<td style="text-align: right;">3.440151</td>
<td style="text-align: right;">11.31277</td>
<td style="text-align: right;">11.883422</td>
<td style="text-align: right;">3.857355</td>
<td style="text-align: right;">5.98491</td>
<td style="text-align: right;">18.99251</td>
<td style="text-align: right;">13.00760</td>
<td style="text-align: right;">0.1556159</td>
<td style="text-align: right;">-0.9124483</td>
<td style="text-align: right;">0.5128275</td>
</tr>
<tr class="even">
<td style="text-align: left;">notAbused</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">31</td>
<td style="text-align: right;">4.695874</td>
<td style="text-align: right;">3.519743</td>
<td style="text-align: right;">5.79447</td>
<td style="text-align: right;">4.903441</td>
<td style="text-align: right;">1.978841</td>
<td style="text-align: right;">-3.34921</td>
<td style="text-align: right;">10.91447</td>
<td style="text-align: right;">14.26368</td>
<td style="text-align: right;">-0.6589170</td>
<td style="text-align: right;">-0.2008051</td>
<td style="text-align: right;">0.6321645</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>위의 요약된 기술 통계량들 중 표준 편차는 유사하지만 평균 ptsd가 약 7.245219의 차이를 보여준다. 아래의 histogram역시 성폭력을 경험한 그룹과 경험하지 않은 그룹간의 PTSD 수치가 다른것을 볼 수 있다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>ptsd,<span class="at" style="color: #657422;">color=</span>csa,<span class="at" style="color: #657422;">fill=</span>csa))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y=</span>..density..),<span class="at" style="color: #657422;">position=</span><span class="st" style="color: #20794D;">"identity"</span>,<span class="at" style="color: #657422;">fill=</span><span class="st" style="color: #20794D;">'white'</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">geom_density</span>(<span class="at" style="color: #657422;">alpha=</span><span class="fl" style="color: #AD0000;">0.5</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Histogram, PTSD Grouped by Childhood Sexual Abuse Experience"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"PTSD"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"Desnsity"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANOVA/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="one-way-anova" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="one-way-anova"><span class="header-section-number">3.2</span> One-Way ANOVA</h3>
<p>성폭력 경험 유무에 따른 PTSD 평균 차이가 통계적으로 유의한지 확인하기 위해 ANOVA를 수행한다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">sexab_aov<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">aov</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>csa, <span class="at" style="color: #657422;">data=</span>sexab)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">summary</span>(sexab_aov)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value   Pr(&gt;F)    
csa          1  963.5   963.5    79.9 2.17e-13 ***
Residuals   74  892.4    12.1                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>집단간 변수 csa p value가 &lt;0.05 인 것을 확인할 수 있다. csa는 5% 유의수준에서 유의하다.</p>
<p>하지만 PTSD의 변동량은 아동 학대에 의해 설명될 수도 있기 때문에 ptsd의 평균은 csa뿐만 아니라 cpa에 또한 고려되어야한다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>cpa,<span class="at" style="color: #657422;">y=</span>ptsd))<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_point</span>()<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">"lm"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Scatter Plot, PTSD vs CPA"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"CPA"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"PTSD"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANOVA/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">correlation<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">cor.test</span>(sexab<span class="sc" style="color: #5E5E5E;">$</span>cpa,sexab<span class="sc" style="color: #5E5E5E;">$</span>ptsd, <span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">'pearson'</span>)</span></code></pre></div>
</details>
</div>
<p>그림과 같이 CPA가 증가하면서 PTSD또한 선형적으로 증가하는 패턴을 관찰할 수 있다. 두 변수간의 상관계수 = 0.49이고 p value= 6.2715909^{-6}으로 보아 두 변수 사이에 선형적인 상관관계가 있는 것으로 보인다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>cpa,<span class="at" style="color: #657422;">y=</span>ptsd))<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_point</span>()<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">"lm"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">facet_wrap</span>(.<span class="sc" style="color: #5E5E5E;">~</span>csa)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Scatter Plot, PTSD vs CPA Grouped By CSA"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"CPA"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"PTSD"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANOVA/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>아동기 성폭력 경험 유/무에도 PTSD와 CPA와 선형적인 관계가 있는 것으로 보이기 때문에 CSA의 PTSD로의 효과를 검정하기 위해선 CPA를 조정할 필요가 있는것으로 보인다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># ptsd로의 순수한 성폭력 경험의 영향도를 얻기 위해서는 아동기 신체적 학대(공변량)에 대해서 고려를 해줘야함</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">sexab_aov<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">aov</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>cpa<span class="sc" style="color: #5E5E5E;">+</span>csa, <span class="at" style="color: #657422;">data=</span>sexab) </span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;">summary</span>(sexab_aov)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value   Pr(&gt;F)    
cpa          1  449.8   449.8   41.98 9.46e-09 ***
csa          1  624.0   624.0   58.25 6.91e-11 ***
Residuals   73  782.1    10.7                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>아동기의 신체적 학대가 일정하다는 가정하에서 PTSD와 성폭력의 순수한 관계는 5% 유의수준에서 유의하고 공변량, CPA를 조정하기전과 그 유의성이 차이가 있음을 관찰할 수 있다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># CPA가 제거 된 후에 CSA의 순수한 효과를 알아보기</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;">ancova</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>cpa<span class="sc" style="color: #5E5E5E;">+</span>csa, <span class="at" style="color: #657422;">data=</span>sexab) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Analysis of Variance Table

Response: ptsd
          Df Sum Sq Mean Sq F value    Pr(&gt;F)    
cpa        1 449.80  449.80  41.984 9.462e-09 ***
csa        1 624.03  624.03  58.247 6.907e-11 ***
Residuals 73 782.08   10.71                      
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANOVA/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>두 csa집단에서 두 회귀선의 기울기 같고 절편이 다르게 나타나는 것을 관찰 할 수있다. 기울기가 같은 이유는 cpa가 ptsd에 영향을 미치는 정도가 두집단에서 일정하도록 공변량으로서 통제 했기 때문이다.</p>
</section>
</section>
<section id="blog-guide-map-link" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">4</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-28_MANOVA/index.html</guid>
  <pubDate>Fri, 06 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Statistics</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/DL/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<ul>
<li>1111-11-11, Probability</li>
<li>1111-11-11, Random Variable</li>
<li>1111-11-11, Probability Distribution</li>
<li>1111-11-11, Discrete Random Variable</li>
<li>1111-11-11, Continuous Random Variable</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Dependent Variable and Independent Variable</li>
<li>1111-11-11, Joint Distribution and Marginal Distribution</li>
<li>1111-11-11, Conditional Probability</li>
<li>1111-11-11, Bayes’ Theorem</li>
<li>1111-11-11, Expected Value vs Realizaed Value</li>
<li>1111-11-11, Variance</li>
<li>1111-11-11, Covariance and Correlation</li>
<li>1111-11-11, Estimation</li>
<li>1111-11-11, Maximum Likelihood Estimation (MLE)</li>
<li>1111-11-11, Variance and Bias</li>
<li>1111-11-11, Exponential Family Distributions
<ul>
<li>1111-11-11, Bernoulli Distribution</li>
<li>1111-11-11, Binomial Distribution</li>
<li>1111-11-11, Poisson Distribution</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Exponential Distribution</li>
<li>1111-11-11, Beta Distribution</li>
<li>1111-11-11, Chi-squared Distribution</li>
<li>1111-11-11, Geometric Distribution</li>
<li>1111-11-11, Hypergeometric Distribution</li>
<li>1111-11-11,</li>
</ul></li>
</ul>
</section>
<section id="inferencce" class="level2">
<h2 class="anchored" data-anchor-id="inferencce">Inferencce</h2>
<ul>
<li>1111-11-11, Hypothesis Testing</li>
<li>2022-12-28, <a href="../2022-12-08-P-value/index.qmd">p-values</a></li>
<li>1111-11-11, Permutation Test</li>
<li>1111-11-11, Power</li>
<li>1111-11-11, Multiple Testing</li>
<li>1111-11-11, Sample Size Calculation</li>
<li>1111-11-11, A/B Testing</li>
<li>2023-01-07, <a href="../2023-01-07-anova/index.qmd">ANOVA</a>
<ul>
<li>2023-01-27, <a href="../2023-01-27_ANCOVA/">ANCOVA</a></li>
<li>2023-01-27, <a href="../2023-01-27_rmANOVA/">repeated measures ANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANOVA/">MANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANCOVA/">MANCOVA</a></li>
</ul></li>
</ul>
</section>
<section id="regression" class="level2">
<h2 class="anchored" data-anchor-id="regression">Regression</h2>
<ul>
<li>1111-11-11, Least Square and Simple Linear Regression</li>
<li>1111-11-11, Multiple Linear Regression</li>
</ul>
<section id="generalized-linear-models" class="level3">
<h3 class="anchored" data-anchor-id="generalized-linear-models">Generalized Linear Models</h3>
<ul>
<li>1111-11-11, Logistic Regression</li>
<li>1111-11-11, Multinomial Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
</ul>
</section>
<section id="mixed-models" class="level3">
<h3 class="anchored" data-anchor-id="mixed-models">Mixed Models</h3>
<ul>
<li>1111-11-11, Linear Mixed Models</li>
</ul>
</section>
</section>
<section id="generalized-additive-models" class="level2">
<h2 class="anchored" data-anchor-id="generalized-additive-models">Generalized Additive Models</h2>
</section>
<section id="survival-analysis" class="level2">
<h2 class="anchored" data-anchor-id="survival-analysis">Survival Analysis</h2>
<ul>
<li>1111-11-11, Cox-Hazard Model</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/DL/guide_map/index.html</guid>
  <pubDate>Sun, 01 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Statistics</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<ul>
<li>1111-11-11, Probability</li>
<li>1111-11-11, Random Variable</li>
<li>1111-11-11, Probability Distribution</li>
<li>1111-11-11, Discrete Random Variable</li>
<li>1111-11-11, Continuous Random Variable</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Dependent Variable and Independent Variable</li>
<li>1111-11-11, Joint Distribution and Marginal Distribution</li>
<li>1111-11-11, Conditional Probability</li>
<li>1111-11-11, Bayes’ Theorem</li>
<li>1111-11-11, Expected Value vs Realizaed Value</li>
<li>1111-11-11, Variance</li>
<li>1111-11-11, Covariance and Correlation</li>
<li>1111-11-11, Estimation</li>
<li>1111-11-11, Maximum Likelihood Estimation (MLE)</li>
<li>1111-11-11, Variance and Bias</li>
<li>1111-11-11, Exponential Family Distributions
<ul>
<li>1111-11-11, Bernoulli Distribution</li>
<li>1111-11-11, Binomial Distribution</li>
<li>1111-11-11, Poisson Distribution</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Exponential Distribution</li>
<li>1111-11-11, Beta Distribution</li>
<li>1111-11-11, Chi-squared Distribution</li>
<li>1111-11-11, Geometric Distribution</li>
<li>1111-11-11, Hypergeometric Distribution</li>
<li>1111-11-11,</li>
</ul></li>
</ul>
</section>
<section id="inferencce" class="level2">
<h2 class="anchored" data-anchor-id="inferencce">Inferencce</h2>
<ul>
<li>1111-11-11, Hypothesis Testing</li>
<li>2022-12-28, <a href="../2022-12-08-P-value/index.qmd">p-values</a></li>
<li>1111-11-11, Permutation Test</li>
<li>1111-11-11, Power</li>
<li>1111-11-11, Multiple Testing</li>
<li>1111-11-11, Sample Size Calculation</li>
<li>1111-11-11, A/B Testing</li>
<li>2023-01-07, <a href="../2023-01-07-anova/index.qmd">ANOVA</a>
<ul>
<li>2023-01-27, <a href="../2023-01-27_ANCOVA/">ANCOVA</a></li>
<li>2023-01-27, <a href="../2023-01-27_rmANOVA/">repeated measures ANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANOVA/">MANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANCOVA/">MANCOVA</a></li>
</ul></li>
</ul>
</section>
<section id="regression" class="level2">
<h2 class="anchored" data-anchor-id="regression">Regression</h2>
<ul>
<li>1111-11-11, Least Square and Simple Linear Regression</li>
<li>1111-11-11, Multiple Linear Regression</li>
</ul>
<section id="generalized-linear-models" class="level3">
<h3 class="anchored" data-anchor-id="generalized-linear-models">Generalized Linear Models</h3>
<ul>
<li>1111-11-11, Logistic Regression</li>
<li>1111-11-11, Multinomial Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
</ul>
</section>
<section id="mixed-models" class="level3">
<h3 class="anchored" data-anchor-id="mixed-models">Mixed Models</h3>
<ul>
<li>1111-11-11, Linear Mixed Models</li>
</ul>
</section>
</section>
<section id="generalized-additive-models" class="level2">
<h2 class="anchored" data-anchor-id="generalized-additive-models">Generalized Additive Models</h2>
</section>
<section id="survival-analysis" class="level2">
<h2 class="anchored" data-anchor-id="survival-analysis">Survival Analysis</h2>
<ul>
<li>1111-11-11, Cox-Hazard Model</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/guide_map/index.html</guid>
  <pubDate>Sun, 01 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Statistics</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<ul>
<li>1111-11-11, Probability</li>
<li>1111-11-11, Random Variable</li>
<li>1111-11-11, Probability Distribution</li>
<li>1111-11-11, Discrete Random Variable</li>
<li>1111-11-11, Continuous Random Variable</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Dependent Variable and Independent Variable</li>
<li>1111-11-11, Joint Distribution and Marginal Distribution</li>
<li>1111-11-11, Conditional Probability</li>
<li>1111-11-11, Bayes’ Theorem</li>
<li>1111-11-11, Expected Value vs Realizaed Value</li>
<li>1111-11-11, Variance</li>
<li>1111-11-11, Covariance and Correlation</li>
<li>1111-11-11, Estimation</li>
<li>1111-11-11, Maximum Likelihood Estimation (MLE)</li>
<li>1111-11-11, Variance and Bias</li>
<li>1111-11-11, Exponential Family Distributions
<ul>
<li>1111-11-11, Bernoulli Distribution</li>
<li>1111-11-11, Binomial Distribution</li>
<li>1111-11-11, Poisson Distribution</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Exponential Distribution</li>
<li>1111-11-11, Beta Distribution</li>
<li>1111-11-11, Chi-squared Distribution</li>
<li>1111-11-11, Geometric Distribution</li>
<li>1111-11-11, Hypergeometric Distribution</li>
<li>1111-11-11,</li>
</ul></li>
</ul>
</section>
<section id="inferencce" class="level2">
<h2 class="anchored" data-anchor-id="inferencce">Inferencce</h2>
<ul>
<li>1111-11-11, Hypothesis Testing</li>
<li>2022-12-28, <a href="../2022-12-08-P-value/index.qmd">p-values</a></li>
<li>1111-11-11, Permutation Test</li>
<li>1111-11-11, Power</li>
<li>1111-11-11, Multiple Testing</li>
<li>1111-11-11, Sample Size Calculation</li>
<li>1111-11-11, A/B Testing</li>
<li>2023-01-07, <a href="../2023-01-07-anova/index.qmd">ANOVA</a>
<ul>
<li>2023-01-27, <a href="../2023-01-27_ANCOVA/">ANCOVA</a></li>
<li>2023-01-27, <a href="../2023-01-27_rmANOVA/">repeated measures ANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANOVA/">MANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANCOVA/">MANCOVA</a></li>
</ul></li>
</ul>
</section>
<section id="regression" class="level2">
<h2 class="anchored" data-anchor-id="regression">Regression</h2>
<ul>
<li>1111-11-11, Least Square and Simple Linear Regression</li>
<li>1111-11-11, Multiple Linear Regression</li>
</ul>
<section id="generalized-linear-models" class="level3">
<h3 class="anchored" data-anchor-id="generalized-linear-models">Generalized Linear Models</h3>
<ul>
<li>1111-11-11, Logistic Regression</li>
<li>1111-11-11, Multinomial Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
</ul>
</section>
<section id="mixed-models" class="level3">
<h3 class="anchored" data-anchor-id="mixed-models">Mixed Models</h3>
<ul>
<li>1111-11-11, Linear Mixed Models</li>
</ul>
</section>
</section>
<section id="generalized-additive-models" class="level2">
<h2 class="anchored" data-anchor-id="generalized-additive-models">Generalized Additive Models</h2>
</section>
<section id="survival-analysis" class="level2">
<h2 class="anchored" data-anchor-id="survival-analysis">Survival Analysis</h2>
<ul>
<li>1111-11-11, Cox-Hazard Model</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/guide_map/index.html</guid>
  <pubDate>Sun, 01 Jan 2023 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
