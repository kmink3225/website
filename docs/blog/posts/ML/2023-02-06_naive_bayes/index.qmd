---
title: Naive Bayes Classification
subtitle: Bayes' Rule, Supervised Learning, Classification, Regression
description: |
  template
categories:
  - template
author: Kwangmin Kim
date: 02/06/2023
format: 
  html:
    page-layout: full
    code-fold: true
draft: False
---

<ul class="nav nav-pills" id="language-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" role="tab" aria-controls="Korean" aria-selected="true">Korean</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" role="tab" aria-controls="knitr" aria-selected="false">English</button>
  </li>

<div class="tab-content" id="language-tabcontent">

<div class="tab-pane fade  show active" id="Korean" role="tabpanel" aria-labelledby="Korean-tab">

::: {#Korean .tab-pane .fade .show .active role="tabpanel" aria-labelledby="Korean-tab"}

## Naive Bayes

## Navie Bayes Application

* 얼굴 인식: 분류기로 얼굴, 코, 입, 눈 등과 같은 여러 특징을 식별
* 날씨 예측: 날씨가 좋을지 나쁠지 예측
* 의료 진단: 의료 전문가는 나이브 베이즈를 사용하여 환자가 심장병, 암 및 기타 질병과 같은 특정 질병 및 상태에 대한 고위험군인지 여부를 확인
* 뉴스 분류: google 뉴스는 뉴스 유형을 분류
* 쇼핑: 한 사람이 제품을 구매할지 여부를 예측하기 위해 요일, 할인 및 무료 배송의 특정 조합으로 나이브 베이즈 분류기 사용. 쇼핑한 날이 주중인지 주말인지 공휴일인지 기록하고 지정된 날짜에 대해 할인 및 무료 배송이 있는지 여부를 확인. 

## 장점

* 간단하고 구현하기 쉬움
* 훈련 데이터가 많이 필요하지 않음
* 연속 데이터와 이산 데이터를 모두 처리
* 예측 변수와 데이터 포인트의 수로 확장성이 뛰어남
* 빠르고 실시간 예측에 사용
* 관련 없는 특성에 민감하지 않음
* 텍스트 분류는 나이브 베이즈 분류기의 가장 인기있는 응용 프로그램

## 원리

나이브 베이즈를 이용하면 조건이 주어질 때의 사건 발생 여부를 에측한다. 즉, 주어진 데이터를 이용해 사건 발생 확률 모형을 생성하고 새로운 데이터가 들어왔을 때 예측을 한다. 예측 결과는 사건이 발생할 확률과 사건이 발생하지 않을 확률이 출력되며 확률 높은 쪽을 선택하여 결과를 출력한다. 주어진 데이터는 조건이라고 가정하고 사건 조건부 발생 활률을 추정하는 것이다.

조건이 주어졌을 때 조건부 확률을 계산하는 방식은 베이즈 정리를 이용한다.

:::
</div>

<div class="tab-pane fade" id="English" role="tabpanel" aria-labelledby="English-tab">

::: {#English .tab-pane .fade role="tabpanel" aria-labelledby="English-tab"}

:::


</div>

```{python}
#| echo: false
#| eval: true
radius = 10
from IPython.display import display, Markdown
display(Markdown("""
The radius of the circle is {radius}.
""".format(radius = radius)))
```

