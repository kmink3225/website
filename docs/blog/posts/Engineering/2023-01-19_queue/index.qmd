---
title: Data Structure (5) Stack
subtitle: Python List
description: |
  Data Structure for Data Science
categories:
  - Engineering
author: Kwangmin Kim
date: 01/19/2023
format: 
  html:
    page-layout: full
draft: False
---

<ul class="nav nav-pills" id="language-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" role="tab" aria-controls="Korean" aria-selected="true">Korean</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" role="tab" aria-controls="knitr" aria-selected="false">English</button>
  </li>

<div class="tab-content" id="language-tabcontent">

<div class="tab-pane fade  show active" id="Korean" role="tabpanel" aria-labelledby="Korean-tab">


## Queue

* 큐(queue)는 먼저 삽입된 데이터가 먼저 추출되는 자료구조(data structure)다.

• 예시) 게임 대기 큐는 먼저 대기한 사람이 먼저 게임에 매칭된다.
• 큐에 여러 개의 데이터를 삽입하고 삭제하는 예시를 확인해 보자.

• 전체 연산: 삽입 3 – 삽입 5 – 삭제 – 삽입 7 – 삭제 – 삽입 8 – 삭제 – 삽입 2 – 삽입 9

## 연결 리스트로 큐 구현

• 큐를 연결 리스트로 구현하면, 삽입과 삭제에 있어서 O 1 을 보장할 수 있다.

• 연결 리스트로 구현할 때는 머리(head)와 꼬리(tail) 두 개의 포인터를 가진다.

• 머리(head): 남아있는 원소 중 가장 먼저 들어 온 데이터를 가리키는 포인터

• 꼬리(tail): 남아있는 원소 중 가장 마지막에 들어 온 데이터를 가리키는 포인터

### 삽입 연산

• 삽입할 때는 꼬리(tail) 위치에 데이터를 넣는다.
* 값으로 8을 갖는 새로운 데이터가 삽입되었을 때 예시)

### 삭제 연산

• 삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.

• 하나의 데이터를 삭제할 때의 예시)

### 큐 동작 속도: 연결 리스트 vs. 리스트 자료형

• 다수의 데이터를 삽입 및 삭제할 때에 대하여, 수행 시간을 측정할 수 있다.

• 단순히 Python의 리스트 자료형을 이용할 때보다 수행 시간 관점에서 효율적이다.

</div>

<div class="tab-pane fade" id="English" role="tabpanel" aria-labelledby="English-tab">


</div>