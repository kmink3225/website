<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Kwangmin Kim</title>
<link>kmink3225.netlify.app/docs/blog/index.html</link>
<atom:link href="kmink3225.netlify.app/docs/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>A great sample blog</description>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Thu, 02 Feb 2023 15:00:00 GMT</lastBuildDate>
<item>
  <title>Blog Guide Map, Deep Learning</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/DL/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<ul>
<li>1111-11-11, Probability</li>
<li>1111-11-11, Random Variable</li>
<li>1111-11-11, Probability Distribution</li>
<li>1111-11-11, Discrete Random Variable</li>
<li>1111-11-11, Continuous Random Variable</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Dependent Variable and Independent Variable</li>
<li>1111-11-11, Joint Distribution and Marginal Distribution</li>
<li>1111-11-11, Conditional Probability</li>
<li>1111-11-11, Bayes’ Theorem</li>
<li>1111-11-11, Expected Value vs Realizaed Value</li>
<li>1111-11-11, Variance</li>
<li>1111-11-11, Covariance and Correlation</li>
<li>1111-11-11, Estimation</li>
<li>1111-11-11, Maximum Likelihood Estimation (MLE)</li>
<li>1111-11-11, Variance and Bias</li>
<li>1111-11-11, Exponential Family Distributions
<ul>
<li>1111-11-11, Bernoulli Distribution</li>
<li>1111-11-11, Binomial Distribution</li>
<li>1111-11-11, Poisson Distribution</li>
<li>1111-11-11, Normal Distribution</li>
<li>1111-11-11, Exponential Distribution</li>
<li>1111-11-11, Beta Distribution</li>
<li>1111-11-11, Chi-squared Distribution</li>
<li>1111-11-11, Geometric Distribution</li>
<li>1111-11-11, Hypergeometric Distribution</li>
<li>1111-11-11,</li>
</ul></li>
</ul>
</section>
<section id="inferencce" class="level2">
<h2 class="anchored" data-anchor-id="inferencce">Inferencce</h2>
<ul>
<li>1111-11-11, Hypothesis Testing</li>
<li>2022-12-28, <a href="../2022-12-08-P-value/index.qmd">p-values</a></li>
<li>1111-11-11, Permutation Test</li>
<li>1111-11-11, Power</li>
<li>1111-11-11, Multiple Testing</li>
<li>1111-11-11, Sample Size Calculation</li>
<li>1111-11-11, A/B Testing</li>
<li>2023-01-07, <a href="../2023-01-07-anova/index.qmd">ANOVA</a>
<ul>
<li>2023-01-27, <a href="../2023-01-27_ANCOVA/">ANCOVA</a></li>
<li>2023-01-27, <a href="../2023-01-27_rmANOVA/">repeated measures ANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANOVA/">MANOVA</a></li>
<li>2023-01-28, <a href="../2023-01-28_MANCOVA/">MANCOVA</a></li>
</ul></li>
</ul>
</section>
<section id="regression" class="level2">
<h2 class="anchored" data-anchor-id="regression">Regression</h2>
<ul>
<li>1111-11-11, Least Square and Simple Linear Regression</li>
<li>1111-11-11, Multiple Linear Regression</li>
</ul>
<section id="generalized-linear-models" class="level3">
<h3 class="anchored" data-anchor-id="generalized-linear-models">Generalized Linear Models</h3>
<ul>
<li>1111-11-11, Logistic Regression</li>
<li>1111-11-11, Multinomial Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
<li>1111-11-11, Poisson Regression</li>
</ul>
</section>
<section id="mixed-models" class="level3">
<h3 class="anchored" data-anchor-id="mixed-models">Mixed Models</h3>
<ul>
<li>1111-11-11, Linear Mixed Models</li>
</ul>
</section>
</section>
<section id="generalized-additive-models" class="level2">
<h2 class="anchored" data-anchor-id="generalized-additive-models">Generalized Additive Models</h2>
</section>
<section id="survival-analysis" class="level2">
<h2 class="anchored" data-anchor-id="survival-analysis">Survival Analysis</h2>
<ul>
<li>1111-11-11, Cox-Hazard Model</li>
</ul>


</section>
</section>

 ]]></description>
  <category>DL</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/DL/guide_map/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Language</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Language/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="r" class="level2">
<h2 class="anchored" data-anchor-id="r">R</h2>
<ul>
<li>1111-11-11, tidyverse
<ul>
<li>1111-11-11, dplyr</li>
<li>1111-11-11, ggplot2</li>
<li>1111-11-11, tidyr</li>
<li>1111-11-11, readr</li>
<li>1111-11-11, purrr</li>
<li>1111-11-11, tibble</li>
<li>1111-11-11, stringr</li>
<li>1111-11-11, forcats</li>
</ul></li>
<li>1111-11-11, tidymodels</li>
<li>1111-11-11, R shiny</li>
</ul>
</section>
<section id="python" class="level2">
<h2 class="anchored" data-anchor-id="python">Python</h2>
<ul>
<li>1111-11-11, numpy</li>
<li>1111-11-11, pandas</li>
<li>1111-11-11, matplotlib</li>
<li>1111-11-11, seaborn</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>
</section>
<section id="sql" class="level2">
<h2 class="anchored" data-anchor-id="sql">SQL</h2>
<section id="sqlite" class="level3">
<h3 class="anchored" data-anchor-id="sqlite">SQLite</h3>
</section>
<section id="oracle-sql" class="level3">
<h3 class="anchored" data-anchor-id="oracle-sql">Oracle SQL</h3>
</section>
<section id="ms-sql" class="level3">
<h3 class="anchored" data-anchor-id="ms-sql">MS-SQL</h3>
</section>
<section id="postgre-sql" class="level3">
<h3 class="anchored" data-anchor-id="postgre-sql">Postgre SQL</h3>
</section>
</section>
<section id="linux" class="level2">
<h2 class="anchored" data-anchor-id="linux">Linux</h2>
</section>
<section id="powershell" class="level2">
<h2 class="anchored" data-anchor-id="powershell">Powershell</h2>
</section>
<section id="c" class="level2">
<h2 class="anchored" data-anchor-id="c">C++</h2>
</section>
<section id="javascript" class="level2">
<h2 class="anchored" data-anchor-id="javascript">Javascript</h2>


</section>
</section>

 ]]></description>
  <category>Language</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Language/guide_map/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Pytorch Overview</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_pytorch_overview/index.html</link>
  <description><![CDATA[ 



<section id="pytorch-overview" class="level2">
<h2 class="anchored" data-anchor-id="pytorch-overview">Pytorch Overview</h2>
<ul>
<li>PyTorch는 기계 학습 프레임워크(framework) 중 하나다.
<ul>
<li>PyTorch의 텐서(tensor)는 NumPy 배열과 매우 유사하다.</li>
<li>Tensor flow 보다 사용 비중이 늘어나고 있다.</li>
<li>Tensor: 고차원 데이터 (배열)를 의미, 3차원 배열 이상</li>
</ul></li>
<li>PyTorch를 사용하면, GPU 연동을 통해 효율적으로 딥러닝 모델을 학습할 수 있다.</li>
<li>Google Colab을 이용하면, 손쉽게 PyTorch를 시작할 수 있다.</li>
<li>Google Colab에서는 <b>[런타임]</b> - <b>[런타임 유형 변경]</b>에서 <b>GPU를 선택</b>할 수 있다.</li>
<li>Google Colab에선 pytoch가 내장되어 있기 때문에 따로 설치할 필요 없음</li>
</ul>
<section id="gpu-사용-여부-체크하기" class="level4">
<h4 class="anchored" data-anchor-id="gpu-사용-여부-체크하기"><b>1) GPU 사용 여부 체크하기</b></h4>
<ul>
<li>텐서간의 연산을 수행할 때, 기본적으로 <strong>두 텐서가 같은 장치</strong>에 있어야 한다.</li>
<li>연산을 수행하는 텐서들을 모두 GPU에 올린 뒤에 연산을 수행한다.</li>
<li>GPU는 고차원 행렬곱같은 병렬 처리 연산에 최적화 되어 있다.</li>
</ul>
<p>tensor 자체가 고차원 배열이기 때문에 데이터를 불러오면 tensor 형태로 바꿀 수 있다.</p>
</section>
<section id="텐서tensor-객체-생성-기본-python-데이터-유형" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-객체-생성-기본-python-데이터-유형">텐서(tensor) 객체 생성 (기본 python 데이터 유형)</h3>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># data initialization: 초기화된 데이터는 gpu에 있음</span></span>
<span id="cb1-2">data <span class="op" style="color: #5E5E5E;">=</span> [</span>
<span id="cb1-3">  [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb1-4">  [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb1-5">]</span>
<span id="cb1-6"></span>
<span id="cb1-7">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(data) <span class="co" style="color: #5E5E5E;"># list를 tensor 형태로 바꾸기. </span></span>
<span id="cb1-8"><span class="bu" style="color: null;">print</span>(x.is_cuda)</span>
<span id="cb1-9"></span>
<span id="cb1-10">x <span class="op" style="color: #5E5E5E;">=</span> x.cuda() <span class="co" style="color: #5E5E5E;"># CPU -&gt; GPU로 옮기기</span></span>
<span id="cb1-11"><span class="bu" style="color: null;">print</span>(x.is_cuda)</span>
<span id="cb1-12"></span>
<span id="cb1-13">x <span class="op" style="color: #5E5E5E;">=</span> x.cpu() <span class="co" style="color: #5E5E5E;"># GPU -&gt; CPU로 옮기기</span></span>
<span id="cb1-14"><span class="bu" style="color: null;">print</span>(x.is_cuda)</span></code></pre></div>
</details>
</div>
<ul>
<li><b>서로 다른 장치(device)</b>에 있는 텐서끼리 연산을 수행하면 오류가 발생한다.</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># GPU 장치의 텐서</span></span>
<span id="cb2-2">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb2-3">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb2-4">    [<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb2-5">]).cuda()</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;"># CPU 장치의 텐서</span></span>
<span id="cb2-8">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb2-9">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>],</span>
<span id="cb2-10">    [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb2-11">])</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;"># print(torch.matmul(a, b)) # 오류 발생</span></span>
<span id="cb2-14"><span class="bu" style="color: null;">print</span>(torch.matmul(a.cpu(), b))</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-소개-및-생성-방법" class="level3">
<h3 class="anchored" data-anchor-id="텐서-소개-및-생성-방법"><b>2. 텐서 소개 및 생성 방법</b></h3>
<section id="텐서의-속성" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-속성"><b>1) 텐서의 속성</b></h4>
<ul>
<li>텐서의 <b>기본 속성</b>으로는 다음과 같은 것들이 있다.
<ul>
<li>모양(shape): 텐서 객체의 차원을 확인할 수 있다. (tensor_var.shape)</li>
<li>자료형(data type) : 텐서의 기본 자료형은 float type (tensor_var.dtype)</li>
<li>저장된 장치: CPU인지 GPU인지 확인 (tensor_var.device)</li>
</ul></li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.rand(<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="bu" style="color: null;">print</span>(tensor)</span>
<span id="cb3-4"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Shape: </span><span class="sc" style="color: #5E5E5E;">{</span>tensor<span class="sc" style="color: #5E5E5E;">.</span>shape<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb3-5"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Data type: </span><span class="sc" style="color: #5E5E5E;">{</span>tensor<span class="sc" style="color: #5E5E5E;">.</span>dtype<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb3-6"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Device: </span><span class="sc" style="color: #5E5E5E;">{</span>tensor<span class="sc" style="color: #5E5E5E;">.</span>device<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-초기화" class="level4">
<h4 class="anchored" data-anchor-id="텐서-초기화"><b>2) 텐서 초기화</b></h4>
<ul>
<li>리스트 데이터에서 직접 텐서를 초기화할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">data <span class="op" style="color: #5E5E5E;">=</span> [</span>
<span id="cb4-2">  [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb4-3">  [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb4-4">]</span>
<span id="cb4-5">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor(data)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="bu" style="color: null;">print</span>(x)</span></code></pre></div>
</details>
</div>
<ul>
<li>NumPy 배열에서 텐서를 초기화할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">5</span>])</span>
<span id="cb5-2">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">7</span>])</span>
<span id="cb5-3"></span>
<span id="cb5-4">c <span class="op" style="color: #5E5E5E;">=</span> (a <span class="op" style="color: #5E5E5E;">+</span> b).numpy() <span class="co" style="color: #5E5E5E;"># tensor -&gt; numpy array</span></span>
<span id="cb5-5"><span class="bu" style="color: null;">print</span>(c)</span>
<span id="cb5-6"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">type</span>(c)) <span class="co" style="color: #5E5E5E;"># ndarray: numpy array </span></span>
<span id="cb5-7"></span>
<span id="cb5-8">result <span class="op" style="color: #5E5E5E;">=</span> c <span class="op" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb5-9">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.from_numpy(result) <span class="co" style="color: #5E5E5E;"># numpy array -&gt; tensor </span></span>
<span id="cb5-10"><span class="bu" style="color: null;">print</span>(tensor)</span>
<span id="cb5-11"><span class="bu" style="color: null;">print</span>(<span class="bu" style="color: null;">type</span>(tensor))</span></code></pre></div>
</details>
</div>
</section>
<section id="다른-텐서로부터-data를-가져와-텐서-초기화하기" class="level4">
<h4 class="anchored" data-anchor-id="다른-텐서로부터-data를-가져와-텐서-초기화하기"><b>3) 다른 텐서로부터 data를 가져와 텐서 초기화하기</b></h4>
<ul>
<li>다른 텐서의 정보를 토대로 텐서를 초기화할 수 있다.</li>
<li><b>텐서의 속성</b>은 모양(shape)과 자료형(data type)이 있다</li>
</ul>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb6-2">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">7</span>],</span>
<span id="cb6-3">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb6-4">])</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;"># x와 같은 shape와 data type을 가지지만, 값이 1인 텐서 생성</span></span>
<span id="cb6-7">x_ones <span class="op" style="color: #5E5E5E;">=</span> torch.ones_like(x)</span>
<span id="cb6-8"><span class="bu" style="color: null;">print</span>(x_ones)</span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;"># x와 같은 shape를 가지되, 자료형은 float으로 덮어쓰고, 값은 랜덤으로 채우기</span></span>
<span id="cb6-10">x_rand <span class="op" style="color: #5E5E5E;">=</span> torch.rand_like(x, dtype<span class="op" style="color: #5E5E5E;">=</span>torch.float32) <span class="co" style="color: #5E5E5E;"># uniform distribution [0, 1)</span></span>
<span id="cb6-11"><span class="bu" style="color: null;">print</span>(x_rand)</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="텐서의-형변환-및-차원-조작" class="level3">
<h3 class="anchored" data-anchor-id="텐서의-형변환-및-차원-조작"><b>3. 텐서의 형변환 및 차원 조작</b></h3>
<ul>
<li>텐서는 넘파이(NumPy) 배열처럼 조작할 수 있다.</li>
</ul>
<section id="텐서의-특정-차원-접근하기" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-특정-차원-접근하기"><b>1) 텐서의 특정 차원 접근하기</b></h4>
<ul>
<li>텐서의 원하는 차원에 접근할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb7-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb7-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb7-4">    [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">11</span>, <span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb7-5">])</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="bu" style="color: null;">print</span>(tensor[<span class="dv" style="color: #AD0000;">0</span>]) <span class="co" style="color: #5E5E5E;"># the first row</span></span>
<span id="cb7-8"><span class="bu" style="color: null;">print</span>(tensor[:, <span class="dv" style="color: #AD0000;">0</span>]) <span class="co" style="color: #5E5E5E;"># indexing the first column with all the rows</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;"># whatever the previous columns are, indexing the last column with all the rows</span></span>
<span id="cb7-10"><span class="bu" style="color: null;">print</span>(tensor[..., <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]) </span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-이어붙이기concatenate" class="level4">
<h4 class="anchored" data-anchor-id="텐서-이어붙이기concatenate"><b>2) 텐서 이어붙이기(Concatenate)</b></h4>
<ul>
<li>두 텐서를 이어 붙여 연결하여 새로운 텐서를 만들 수 있다.</li>
</ul>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">tensor <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb8-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb8-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb8-4">    [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">11</span>, <span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb8-5">])</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;"># dim: 텐서를 이어 붙이기 위한 축</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;"># 0번 축(행)을 기준으로 이어 붙이기: 즉, row bind로 연결</span></span>
<span id="cb8-9">result <span class="op" style="color: #5E5E5E;">=</span> torch.cat([tensor, tensor, tensor], dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>) </span>
<span id="cb8-10"><span class="bu" style="color: null;">print</span>(result)</span>
<span id="cb8-11"><span class="bu" style="color: null;">print</span>(result.shape) <span class="co" style="color: #5E5E5E;"># 9x4</span></span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;"># 1번 축(열)을 기준으로 이어 붙이기: 즉, column bind로 연결</span></span>
<span id="cb8-14">result <span class="op" style="color: #5E5E5E;">=</span> torch.cat([tensor, tensor, tensor], dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)  </span>
<span id="cb8-15"><span class="bu" style="color: null;">print</span>(result)</span>
<span id="cb8-16"><span class="bu" style="color: null;">print</span>(result.shape) <span class="co" style="color: #5E5E5E;"># 3x12</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-형변환type-casting" class="level4">
<h4 class="anchored" data-anchor-id="텐서-형변환type-casting"><b>3) 텐서 형변환(Type Casting)</b></h4>
<ul>
<li>텐서의 자료형(정수, 실수 등)을 변환할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="9">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">2</span>], dtype<span class="op" style="color: #5E5E5E;">=</span>torch.<span class="bu" style="color: null;">int</span>) <span class="co" style="color: #5E5E5E;"># integers</span></span>
<span id="cb9-2">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">5.0</span>]) <span class="co" style="color: #5E5E5E;"># real numbers</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="bu" style="color: null;">print</span>(a.dtype)</span>
<span id="cb9-5"><span class="bu" style="color: null;">print</span>(b.dtype)</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;"># 텐서 a는 자동으로 float32형으로 형변환 처리</span></span>
<span id="cb9-8"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b)</span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;"># 텐서 b를 int32형으로 형변환하여 덧셈 수행</span></span>
<span id="cb9-10"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b.<span class="bu" style="color: null;">type</span>(torch.int32))</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-모양-변경" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-모양-변경"><b>4) 텐서의 모양 변경</b></h4>
<ul>
<li>view()는 텐서의 shape를 변경할 때 사용한다.</li>
<li>이때, 텐서(tensor)의 순서는 변경되지 않는다.</li>
</ul>
<div class="cell" data-execution_count="10">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># view()는 텐서의 모양을 변경할 때 사용한다.</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;"># 이때, 텐서(tensor)의 순서는 변경되지 않는다.</span></span>
<span id="cb10-3">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>])</span>
<span id="cb10-4">b <span class="op" style="color: #5E5E5E;">=</span> a.view(<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>) <span class="co" style="color: #5E5E5E;"># 4*2=8 개, # call by reference</span></span>
<span id="cb10-5"><span class="bu" style="color: null;">print</span>(b)</span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;"># a의 값을 변경하면 b도 변경: 메모리 주소값을 공유</span></span>
<span id="cb10-8">a[<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">7</span></span>
<span id="cb10-9"><span class="bu" style="color: null;">print</span>(b)</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;"># a의 값을 복사(copy)한 뒤에 변경, 새로운 메모리값 할당</span></span>
<span id="cb10-12">c <span class="op" style="color: #5E5E5E;">=</span> a.clone().view(<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>) <span class="co" style="color: #5E5E5E;"># call by value, 아예 다른 객체</span></span>
<span id="cb10-13">a[<span class="dv" style="color: #AD0000;">0</span>] <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">9</span></span>
<span id="cb10-14"><span class="bu" style="color: null;">print</span>(c)</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-차원-교환" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-차원-교환"><b>5) 텐서의 차원 교환</b></h4>
<ul>
<li>하나의 텐서에서 특정한 차원끼리 순서를 교체할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.rand((<span class="dv" style="color: #AD0000;">64</span>, <span class="dv" style="color: #AD0000;">32</span>, <span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb11-2"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb11-3"></span>
<span id="cb11-4">b <span class="op" style="color: #5E5E5E;">=</span> a.permute(<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>) <span class="co" style="color: #5E5E5E;"># 차원을 바꿔줌</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;"># (2번째 축, 1번째 축, 0번째 축)의 형태가 되도록 한다.</span></span>
<span id="cb11-6"><span class="bu" style="color: null;">print</span>(b.shape)</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="텐서의-연산과-함수" class="level3">
<h3 class="anchored" data-anchor-id="텐서의-연산과-함수"><b>4. 텐서의 연산과 함수</b></h3>
<section id="텐서의-연산" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-연산"><b>1) 텐서의 연산</b></h4>
<ul>
<li>텐서에 대하여 사칙연산 등 기본적인 연산을 수행할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;"># 같은 크기를 가진 두 개의 텐서에 대하여 사칙연산 가능</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;"># 기본적으로 요소별(element-wise) 연산, 행렬의 연산과 다름</span></span>
<span id="cb12-3">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb12-4">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb12-5">    [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb12-6">])</span>
<span id="cb12-7">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb12-8">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>],</span>
<span id="cb12-9">    [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb12-10">])</span>
<span id="cb12-11"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b)</span>
<span id="cb12-12"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">-</span> b)</span>
<span id="cb12-13"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">*</span> b)</span>
<span id="cb12-14"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">/</span> b)</span></code></pre></div>
</details>
</div>
<ul>
<li>행렬 곱을 수행할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="13">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb13-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb13-3">    [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb13-4">])</span>
<span id="cb13-5">b <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([</span>
<span id="cb13-6">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>],</span>
<span id="cb13-7">    [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb13-8">])</span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;"># 행렬 곱(matrix multiplication) 수행</span></span>
<span id="cb13-10"><span class="bu" style="color: null;">print</span>(a.matmul(b))</span>
<span id="cb13-11"><span class="bu" style="color: null;">print</span>(torch.matmul(a, b))</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-평균-함수" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-평균-함수"><b>2) 텐서의 평균 함수</b></h4>
<ul>
<li>텐서의 평균(mean)을 계산할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="14">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb14-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb14-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb14-4">])</span>
<span id="cb14-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb14-6"><span class="bu" style="color: null;">print</span>(a.mean()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 평균</span></span>
<span id="cb14-7"><span class="bu" style="color: null;">print</span>(a.mean(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 평균 계산</span></span>
<span id="cb14-8"><span class="bu" style="color: null;">print</span>(a.mean(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 평균 계산</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-합계-함수" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-합계-함수"><b>3) 텐서의 합계 함수</b></h4>
<ul>
<li>텐서의 합계(sum)를 계산할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="15">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb15-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb15-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb15-4">])</span>
<span id="cb15-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb15-6"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">sum</span>()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 합계</span></span>
<span id="cb15-7"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">sum</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 합계 계산</span></span>
<span id="cb15-8"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">sum</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 합계 계산</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-최대-함수" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-최대-함수"><b>4) 텐서의 최대 함수</b></h4>
<ul>
<li><b>max() 함수</b>는 원소의 최댓값을 반환한다.</li>
<li><b>argmax() 함수</b>는 가장 큰 원소(최댓값)의 인덱스를 반환한다.</li>
</ul>
<div class="cell" data-execution_count="16">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb16-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb16-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb16-4">])</span>
<span id="cb16-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb16-6"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">max</span>()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 최댓값</span></span>
<span id="cb16-7"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">max</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 최댓값 계산</span></span>
<span id="cb16-8"><span class="bu" style="color: null;">print</span>(a.<span class="bu" style="color: null;">max</span>(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 최댓값 계산</span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="17">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb17-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb17-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb17-4">])</span>
<span id="cb17-5"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb17-6"><span class="bu" style="color: null;">print</span>(a.argmax()) <span class="co" style="color: #5E5E5E;"># 전체 원소에 대한 최댓값의 인덱스</span></span>
<span id="cb17-7"><span class="bu" style="color: null;">print</span>(a.argmax(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 열에 대하여 최댓값의 인덱스 계산</span></span>
<span id="cb17-8"><span class="bu" style="color: null;">print</span>(a.argmax(dim<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 행에 대하여 최댓값의 인덱스 계산</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서의-차원-줄이기-혹은-늘리기" class="level4">
<h4 class="anchored" data-anchor-id="텐서의-차원-줄이기-혹은-늘리기"><b>5) 텐서의 차원 줄이기 혹은 늘리기</b></h4>
<ul>
<li><b>unsqueeze() 함수</b>는 크기가 1인 차원을 추가한다.
<ul>
<li>배치(batch) 차원을 추가하기 위한 목적으로 흔히 사용된다.</li>
</ul></li>
<li><b>squeeze() 함수</b>는 크기가 1인 차원을 제거한다.</li>
</ul>
<div class="cell" data-execution_count="18">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">a <span class="op" style="color: #5E5E5E;">=</span> torch.Tensor([</span>
<span id="cb18-2">    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb18-3">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb18-4">])</span>
<span id="cb18-5"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;"># 첫 번째 축에 차원 추가</span></span>
<span id="cb18-8">a <span class="op" style="color: #5E5E5E;">=</span> a.unsqueeze(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb18-9"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb18-10"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;"># 네 번째 축에 차원 추가</span></span>
<span id="cb18-13">a <span class="op" style="color: #5E5E5E;">=</span> a.unsqueeze(<span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb18-14"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb18-15"><span class="bu" style="color: null;">print</span>(a.shape)</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="19">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;"># 크기가 1인 차원 제거</span></span>
<span id="cb19-2">a <span class="op" style="color: #5E5E5E;">=</span> a.squeeze()</span>
<span id="cb19-3"><span class="bu" style="color: null;">print</span>(a)</span>
<span id="cb19-4"><span class="bu" style="color: null;">print</span>(a.shape)</span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="자동-미분과-기울기gradient" class="level3">
<h3 class="anchored" data-anchor-id="자동-미분과-기울기gradient"><b>5. 자동 미분과 기울기(Gradient)</b></h3>
<ul>
<li>PyTorch에서는 연산에 대하여 자동 미분을 수행할 수 있다.</li>
<li>각 텐서 변수에 대해 gradient추적이 가능하여 텐서 연산에 각 텐서 변수의 기울기(민감도)를 추적할 수 있다.</li>
</ul>
<div class="cell" data-execution_count="20">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;">import</span> torch</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;"># requires_grad를 설정할 때만 기울기 추적</span></span>
<span id="cb20-4">x <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb20-5">y <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">1.0</span>, <span class="fl" style="color: #AD0000;">2.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb20-6">z <span class="op" style="color: #5E5E5E;">=</span> x <span class="op" style="color: #5E5E5E;">+</span> y <span class="co" style="color: #5E5E5E;">#z를 연산하는데 x와 y의 민감도를 추적할 수 있다.</span></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;"># x or y의 민감도 즉 gradient가 크다는 것은 변수의 값이 조금만 바뀌어도 z값에 큰 영향을 미친다는것을 의미 </span></span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="bu" style="color: null;">print</span>(z) <span class="co" style="color: #5E5E5E;"># [4.0, 6.0]</span></span>
<span id="cb20-10"><span class="bu" style="color: null;">print</span>(z.grad_fn) <span class="co" style="color: #5E5E5E;"># 더하기(add), </span></span>
<span id="cb20-11"><span class="co" style="color: #5E5E5E;"># AddBackward: 기울기를 구하는 과정에서 Add를 사용한다. 뭔뜻인지? ㅋ</span></span>
<span id="cb20-12"><span class="co" style="color: #5E5E5E;"># Add를 연산하는 과정에서 기울기를 구하는거 아님?</span></span>
<span id="cb20-13"></span>
<span id="cb20-14">out <span class="op" style="color: #5E5E5E;">=</span> z.mean()</span>
<span id="cb20-15"><span class="bu" style="color: null;">print</span>(out) <span class="co" style="color: #5E5E5E;"># 5.0</span></span>
<span id="cb20-16"><span class="bu" style="color: null;">print</span>(out.grad_fn) <span class="co" style="color: #5E5E5E;"># 평균(mean)</span></span>
<span id="cb20-17"></span>
<span id="cb20-18">out.backward() <span class="co" style="color: #5E5E5E;"># scalar에 대하여 모든 연산의 기울기를 추적 가능</span></span>
<span id="cb20-19"><span class="bu" style="color: null;">print</span>(x.grad) <span class="co" style="color: #5E5E5E;"># tensor([0.5000, 0.5000]), 0.5: x의 값이 1만큼 바뀔 때 output값이 0.5만큼 바뀐다는것을 의미</span></span>
<span id="cb20-20"><span class="bu" style="color: null;">print</span>(y.grad) <span class="co" style="color: #5E5E5E;"># tensor([0.5000, 0.5000]),</span></span>
<span id="cb20-21"><span class="bu" style="color: null;">print</span>(z.grad) <span class="co" style="color: #5E5E5E;"># leaf variable에 대해서만 gradient 추적이 가능하다. 따라서 None.</span></span></code></pre></div>
</details>
</div>
<ul>
<li>일반적으로 모델을 학습할 때는 <b>기울기(gradient)를 추적</b>한다.
<ul>
<li>왜냐면, 가중치를 기울기에 따라 업데이트 해야하기 때문.</li>
</ul></li>
<li>하지만, 학습된 모델을 사용할 때는 파라미터를 업데이트하지 않으므로, 기울기를 추적하지 않는 것이 일반적이다.</li>
</ul>
<div class="cell" data-execution_count="21">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">temp <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)<span class="co" style="color: #5E5E5E;"># tape,라 부름. 왜?</span></span>
<span id="cb21-2"><span class="bu" style="color: null;">print</span>(temp.requires_grad)</span>
<span id="cb21-3"><span class="bu" style="color: null;">print</span>((temp <span class="op" style="color: #5E5E5E;">**</span> <span class="dv" style="color: #AD0000;">2</span>).requires_grad)</span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="co" style="color: #5E5E5E;"># 기울기 추적을 하지 않기 때문에 계산 속도가 더 빠르다.</span></span>
<span id="cb21-6"><span class="cf" style="color: #003B4F;">with</span> torch.no_grad():</span>
<span id="cb21-7">    temp <span class="op" style="color: #5E5E5E;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>], requires_grad<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb21-8">    <span class="bu" style="color: null;">print</span>(temp.requires_grad)</span>
<span id="cb21-9">    <span class="bu" style="color: null;">print</span>((temp <span class="op" style="color: #5E5E5E;">**</span> <span class="dv" style="color: #AD0000;">2</span>).requires_grad)</span></code></pre></div>
</details>
</div>


</section>
</section>

 ]]></description>
  <category>ML</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_pytorch_overview/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Tensor Overview</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_tesnsor_manipulation/index.html</link>
  <description><![CDATA[ 



<section id="tensor-flow" class="level2">
<h2 class="anchored" data-anchor-id="tensor-flow">Tensor Flow</h2>
<ul>
<li>데이터 자료형으로 텐서(tensor) 객체를 사용</li>
<li>GPU 사용 지원</li>
</ul>
<section id="tensor" class="level3">
<h3 class="anchored" data-anchor-id="tensor">Tensor</h3>
<ul>
<li>특징
<ul>
<li>다차원 배열</li>
<li>NumPy ndarray 객체와 유사</li>
<li>기본 python 데이터 유형을 자동 변환 (e.g., list)</li>
</ul></li>
<li>속성
<ul>
<li>크기 (shape)</li>
<li>자료형 (data type)</li>
<li>가속기 메모리에 상주 가능 (e.g., GPU )</li>
</ul></li>
<li>Numpy 배열과 tf.Tensor의 차이점
<ul>
<li>텐서는 가속기 메모리(GPU, TPU)에서 사용 가능</li>
<li>텐서는 불변성(immutable)</li>
</ul></li>
</ul>
</section>
<section id="텐서tensor-객체-생성-기본-python-데이터-유형" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-객체-생성-기본-python-데이터-유형">텐서(tensor) 객체 생성 (기본 python 데이터 유형)</h3>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> tensorflow <span class="im" style="color: #00769E;">as</span> tf</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="bu" style="color: null;">print</span>(tf.math.add(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>))</span>
<span id="cb1-5"><span class="bu" style="color: null;">print</span>(tf.math.add([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>], [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>]))</span>
<span id="cb1-6"><span class="bu" style="color: null;">print</span>(tf.math.square(<span class="dv" style="color: #AD0000;">5</span>))</span>
<span id="cb1-7"><span class="bu" style="color: null;">print</span>(tf.math.reduce_sum([<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>]))</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;"># Operator overloading is also supported</span></span>
<span id="cb1-10"><span class="bu" style="color: null;">print</span>(tf.math.square(<span class="dv" style="color: #AD0000;">2</span>) <span class="op" style="color: #5E5E5E;">+</span> tf.math.square(<span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb1-11"></span>
<span id="cb1-12">data <span class="op" style="color: #5E5E5E;">=</span> [</span>
<span id="cb1-13">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb1-14">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb1-15">]</span>
<span id="cb1-16">x <span class="op" style="color: #5E5E5E;">=</span> tf.constant(data)</span>
<span id="cb1-17"><span class="bu" style="color: null;">print</span>(x)</span>
<span id="cb1-18"><span class="bu" style="color: null;">print</span>(x.shape)</span>
<span id="cb1-19"><span class="bu" style="color: null;">print</span>(x.dtype)</span>
<span id="cb1-20"><span class="bu" style="color: null;">print</span>(tf.rank(x)) <span class="co" style="color: #5E5E5E;"># tf.rank() : 축(axis)의 개수 출력 (차원의 개수)</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서tensor-객체-생성-numpy" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-객체-생성-numpy">텐서(tensor) 객체 생성 (numpy)</h3>
<ul>
<li>TensorFlow 연산은 자동으로 NumPy 배열을 텐서(tensor)로 변환</li>
<li>NumPy 연산은 자동으로 텐서(tensor)를 NumPy 배열로 변환</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb2-2">ndarray <span class="op" style="color: #5E5E5E;">=</span> np.ones([<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">3</span>])</span>
<span id="cb2-3">ndarray</span>
<span id="cb2-4"></span>
<span id="cb2-5">tensor <span class="op" style="color: #5E5E5E;">=</span> tf.math.multiply(ndarray, <span class="dv" style="color: #AD0000;">42</span>)</span>
<span id="cb2-6">tensor</span>
<span id="cb2-7">np.add(tensor, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-8">tensor.numpy() <span class="co" style="color: #5E5E5E;"># numpy.ndarray</span></span>
<span id="cb2-9"><span class="bu" style="color: null;">type</span>(tensor.numpy())</span>
<span id="cb2-10">ctensor <span class="op" style="color: #5E5E5E;">=</span> tf.constant(ndarray)</span>
<span id="cb2-11">ctensor</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서tensor-객체-생성-tf.tensor" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-객체-생성-tf.tensor">텐서(tensor) 객체 생성 (tf.Tensor)</h3>
<p>tf.ones_like(x) : 값이 1이고 x와 shape &amp; data type이 동일한 텐서 생성</p>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb3-2">    [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">7</span>],</span>
<span id="cb3-3">    [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb3-4">])</span>
<span id="cb3-5"></span>
<span id="cb3-6">x_ones <span class="op" style="color: #5E5E5E;">=</span> tf.ones_like(x)</span>
<span id="cb3-7">x_ones</span>
<span id="cb3-8">     </span>
<span id="cb3-9"></span>
<span id="cb3-10">x <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb3-11">    [<span class="fl" style="color: #AD0000;">5.1</span>, <span class="fl" style="color: #AD0000;">7.0</span>],</span>
<span id="cb3-12">    [<span class="fl" style="color: #AD0000;">3.4</span>, <span class="fl" style="color: #AD0000;">2.1</span>]</span>
<span id="cb3-13">])</span>
<span id="cb3-14"></span>
<span id="cb3-15">x_ones <span class="op" style="color: #5E5E5E;">=</span> tf.ones_like(x)</span>
<span id="cb3-16">x_ones</span>
<span id="cb3-17"></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;"># tf.random.uniform(shape, dtype) : 랜덤 값으로 원하는 shape과 dtype을 갖는 텐서 생성</span></span>
<span id="cb3-19">x_rand <span class="op" style="color: #5E5E5E;">=</span> tf.random.uniform(shape<span class="op" style="color: #5E5E5E;">=</span>x.shape, dtype<span class="op" style="color: #5E5E5E;">=</span>tf.float32)</span>
<span id="cb3-20">x_rand</span></code></pre></div>
</details>
</div>
</section>
<section id="텐서tensor-사용" class="level3">
<h3 class="anchored" data-anchor-id="텐서tensor-사용">텐서(tensor) 사용</h3>
<p>특정 차원 접근</p>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">tensor <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb4-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb4-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb4-4">    [<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">10</span>,<span class="dv" style="color: #AD0000;">11</span>,<span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb4-5">])</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="bu" style="color: null;">print</span>(tensor[<span class="dv" style="color: #AD0000;">0</span>])       <span class="co" style="color: #5E5E5E;"># first row</span></span>
<span id="cb4-8"><span class="bu" style="color: null;">print</span>(tensor[:, <span class="dv" style="color: #AD0000;">0</span>])    <span class="co" style="color: #5E5E5E;"># first column</span></span>
<span id="cb4-9"><span class="bu" style="color: null;">print</span>(tensor[..., <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]) <span class="co" style="color: #5E5E5E;"># last column</span></span></code></pre></div>
</details>
</div>
<p>텐서 Concatenate</p>
<p>axis : 어느 축을 기준으로 객체를 이어붙일지 결정</p>
<p>axis=0 : 0번째 축 (=row) axis=1 : 1번째 축 (=column)</p>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">tensor <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb5-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb5-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>],</span>
<span id="cb5-4">    [<span class="dv" style="color: #AD0000;">9</span>,<span class="dv" style="color: #AD0000;">10</span>,<span class="dv" style="color: #AD0000;">11</span>,<span class="dv" style="color: #AD0000;">12</span>]</span>
<span id="cb5-5">])</span>
<span id="cb5-6"></span>
<span id="cb5-7">tensor_concat <span class="op" style="color: #5E5E5E;">=</span> tf.concat([tensor, tensor, tensor], axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>) <span class="co" style="color: #5E5E5E;"># row</span></span>
<span id="cb5-8">tensor_concat</span>
<span id="cb5-9"></span>
<span id="cb5-10">tensor_concat <span class="op" style="color: #5E5E5E;">=</span> tf.concat([tensor, tensor, tensor], axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>) <span class="co" style="color: #5E5E5E;"># column</span></span>
<span id="cb5-11">tensor_concat</span></code></pre></div>
</details>
</div>
<section id="형변환-type-casting" class="level4">
<h4 class="anchored" data-anchor-id="형변환-type-casting">형변환 (Type Casting)</h4>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([<span class="dv" style="color: #AD0000;">2</span>])   <span class="co" style="color: #5E5E5E;"># dtype: int32</span></span>
<span id="cb6-2">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([<span class="fl" style="color: #AD0000;">5.0</span>]) <span class="co" style="color: #5E5E5E;"># dtype: float32</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'a dtype: '</span>, a.dtype, <span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">b dtype: '</span>, b.dtype)</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">a <span class="op" style="color: #5E5E5E;">+</span> b <span class="co" style="color: #5E5E5E;"># dtype 불일치 -&gt; InvalidArgumentError 발생</span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="8">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">tf.cast(a, tf.float32) <span class="op" style="color: #5E5E5E;">+</span> b <span class="co" style="color: #5E5E5E;"># a의 dtype을 b의 dtype으로 변환 후 계산</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-shape-변경" class="level4">
<h4 class="anchored" data-anchor-id="텐서-shape-변경">텐서 Shape 변경</h4>
<div class="cell" data-execution_count="9">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.Variable([<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>])</span>
<span id="cb9-2">y <span class="op" style="color: #5E5E5E;">=</span> tf.reshape(x, (<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">2</span>))           <span class="co" style="color: #5E5E5E;"># row=4, col=2</span></span>
<span id="cb9-3">y</span></code></pre></div>
</details>
</div>
</section>
<section id="x와-y는-서로-다른-객체" class="level4">
<h4 class="anchored" data-anchor-id="x와-y는-서로-다른-객체">x와 y는 서로 다른 객체</h4>
<div class="cell" data-execution_count="10">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">x.assign_add([<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">1</span>])</span>
<span id="cb10-2"><span class="bu" style="color: null;">print</span>(x) <span class="co" style="color: #5E5E5E;"># 1씩 더해짐</span></span>
<span id="cb10-3"><span class="bu" style="color: null;">print</span>(y) <span class="co" style="color: #5E5E5E;"># 값 변화 X</span></span></code></pre></div>
</details>
</div>
</section>
<section id="텐서-차원-교환" class="level4">
<h4 class="anchored" data-anchor-id="텐서-차원-교환">텐서 차원 교환</h4>
<p><code>tf.transpose(a, perm=[], ...)</code> a의 차원 순서를 바꾼다. perm=[2, 1, 0]일 경우, a의 2번째 축을 첫번째로, 1번째 축을 두번째로, 0번째 축을 세번째로 교환하겠다는 의미</p>
<div class="cell" data-execution_count="11">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.random.uniform((<span class="dv" style="color: #AD0000;">64</span>, <span class="dv" style="color: #AD0000;">32</span>, <span class="dv" style="color: #AD0000;">3</span>))</span>
<span id="cb11-2"><span class="bu" style="color: null;">print</span>(a.shape)</span>
<span id="cb11-3"></span>
<span id="cb11-4">b <span class="op" style="color: #5E5E5E;">=</span> tf.transpose(a, perm<span class="op" style="color: #5E5E5E;">=</span>[<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>]) <span class="co" style="color: #5E5E5E;"># 차원 자체를 교환</span></span>
<span id="cb11-5"><span class="bu" style="color: null;">print</span>(b.shape)</span></code></pre></div>
</details>
</div>
</section>
<section id="사칙연산" class="level4">
<h4 class="anchored" data-anchor-id="사칙연산">사칙연산</h4>
<p>element끼리 연산한다</p>
<div class="cell" data-execution_count="12">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb12-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb12-3">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb12-4">])</span>
<span id="cb12-5">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb12-6">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb12-7">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb12-8">])</span>
<span id="cb12-9"></span>
<span id="cb12-10"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">+</span> b)</span>
<span id="cb12-11"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">-</span> b)</span>
<span id="cb12-12"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">*</span> b)</span>
<span id="cb12-13"><span class="bu" style="color: null;">print</span>(a <span class="op" style="color: #5E5E5E;">/</span> b)</span></code></pre></div>
</details>
</div>
</section>
<section id="행렬-곱-matrix-multiplication" class="level4">
<h4 class="anchored" data-anchor-id="행렬-곱-matrix-multiplication">행렬 곱 (matrix multiplication)</h4>
<div class="cell" data-execution_count="13">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb13-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb13-3">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb13-4">])</span>
<span id="cb13-5">b <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb13-6">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>],</span>
<span id="cb13-7">    [<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb13-8">])</span>
<span id="cb13-9">tf.matmul(a, b)</span></code></pre></div>
</details>
</div>
</section>
<section id="평균-함수" class="level4">
<h4 class="anchored" data-anchor-id="평균-함수">평균 함수</h4>
<p>차원을 축소하며 평균을 계산</p>
<ul>
<li><code>tf.reduce_mean(a, axis=0)</code> : 0차원(행)을 축소하여 평균 계산 -&gt; 각 열에 대한 평균</li>
<li><code>tf.reduce_mean(a, axis=1)</code> : 1차원(열)을 축소하여 평균 계산 -&gt; 각 행에 대한 평균</li>
</ul>
<div class="cell" data-execution_count="14">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb14-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb14-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb14-4">])</span>
<span id="cb14-5"></span>
<span id="cb14-6"><span class="bu" style="color: null;">print</span>(tf.reduce_mean(a))         <span class="co" style="color: #5E5E5E;"># a 전체 평균</span></span>
<span id="cb14-7"><span class="bu" style="color: null;">print</span>(tf.reduce_mean(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 평균</span></span>
<span id="cb14-8"><span class="bu" style="color: null;">print</span>(tf.reduce_mean(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 평균</span></span></code></pre></div>
</details>
</div>
</section>
<section id="합계-함수" class="level4">
<h4 class="anchored" data-anchor-id="합계-함수">합계 함수</h4>
<p>차원을 축소하며 합계를 계산 (평균과 동일하게 동작)</p>
<div class="cell" data-execution_count="15">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb15-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb15-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb15-4">])</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="bu" style="color: null;">print</span>(tf.reduce_sum(a))         <span class="co" style="color: #5E5E5E;"># a 전체 합계</span></span>
<span id="cb15-7"><span class="bu" style="color: null;">print</span>(tf.reduce_sum(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 합계</span></span>
<span id="cb15-8"><span class="bu" style="color: null;">print</span>(tf.reduce_sum(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 합계</span></span></code></pre></div>
</details>
</div>
</section>
<section id="최대-함수" class="level4">
<h4 class="anchored" data-anchor-id="최대-함수">최대 함수</h4>
<ul>
<li>max() : 원소의 최댓값 반환</li>
<li>argmax() : 최댓값의 index를 반환</li>
</ul>
<div class="cell" data-execution_count="16">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb16-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb16-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb16-4">])</span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="bu" style="color: null;">print</span>(tf.reduce_max(a))         <span class="co" style="color: #5E5E5E;"># a 전체 원소의 최댓값</span></span>
<span id="cb16-7"><span class="bu" style="color: null;">print</span>(tf.reduce_max(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 최댓값</span></span>
<span id="cb16-8"><span class="bu" style="color: null;">print</span>(tf.reduce_max(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 최댓값</span></span>
<span id="cb16-9"><span class="bu" style="color: null;">print</span>(tf.argmax(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>)) <span class="co" style="color: #5E5E5E;"># 각 column에 대한 최댓값의 index</span></span>
<span id="cb16-10"><span class="bu" style="color: null;">print</span>(tf.argmax(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>)) <span class="co" style="color: #5E5E5E;"># 각 row에 대한 최댓값의 index</span></span></code></pre></div>
</details>
</div>
<ul>
<li>차원 축소
<ul>
<li>squeeze() : 크기가 1인 차원을 제거</li>
</ul></li>
<li>차원 확장
<ul>
<li>expand_dims() : 크기가 1인 차원을 추가</li>
<li>흔히 배치(batch) 차원을 추가하기 위한 목적으로 사용됨</li>
<li>pytorch에서는 차원 축소 시, unsqueeze() 사용</li>
</ul></li>
</ul>
<div class="cell" data-execution_count="17">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">a <span class="op" style="color: #5E5E5E;">=</span> tf.constant([</span>
<span id="cb17-2">    [<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>],</span>
<span id="cb17-3">    [<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb17-4">])</span>
<span id="cb17-5"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'original a shape: '</span>, a.shape)</span>
<span id="cb17-6"></span>
<span id="cb17-7">a <span class="op" style="color: #5E5E5E;">=</span> tf.expand_dims(a, <span class="dv" style="color: #AD0000;">0</span>) <span class="co" style="color: #5E5E5E;"># 첫번째 축에 차원 추가</span></span>
<span id="cb17-8"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'add 0th dims: '</span>, a.shape)</span>
<span id="cb17-9"></span>
<span id="cb17-10">a <span class="op" style="color: #5E5E5E;">=</span> tf.expand_dims(a, <span class="dv" style="color: #AD0000;">3</span>) <span class="co" style="color: #5E5E5E;"># 세번째 축에 차원 추가</span></span>
<span id="cb17-11"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'add 3rd dims: '</span>, a.shape)</span>
<span id="cb17-12"></span>
<span id="cb17-13"></span>
<span id="cb17-14"><span class="bu" style="color: null;">print</span>(tf.squeeze(a).shape)         <span class="co" style="color: #5E5E5E;"># 크기가 1인 차원을 모두 제거 </span></span>
<span id="cb17-15"><span class="bu" style="color: null;">print</span>(tf.squeeze(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span>).shape) <span class="co" style="color: #5E5E5E;"># 세번째 차원을 제거</span></span>
<span id="cb17-16"></span>
<span id="cb17-17"></span>
<span id="cb17-18">tf.squeeze(a, axis<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>) <span class="co" style="color: #5E5E5E;"># 제거하려는 차원의 크기가 1이 아닐 경우 오류 발생</span></span></code></pre></div>
</details>
</div>
</section>
</section>
<section id="자동-미분과-기울기" class="level3">
<h3 class="anchored" data-anchor-id="자동-미분과-기울기">자동 미분과 기울기</h3>
<ul>
<li>기울기 테이프 (Gradient Tape)</li>
<li>중간 연산들을 테이프에 기록하고 역전파(back propagation)를 수행했을 때 기울기가 계산됨</li>
<li>TensorFlow에서는 변수가 아닌 상수에 대해 기본적으로 기울기를 측정하지 않음 (not watched). 또한 변수여도 학습 가능하지 않으면(not trainable) 자동 미분을 사용하지 않음</li>
</ul>
<div class="cell" data-execution_count="18">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.Variable([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>])</span>
<span id="cb18-2">y <span class="op" style="color: #5E5E5E;">=</span> tf.Variable([<span class="fl" style="color: #AD0000;">3.0</span>, <span class="fl" style="color: #AD0000;">4.0</span>])</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;"># with 구문 안에서 진행되는 모든 연산들을 기록</span></span>
<span id="cb18-5"><span class="cf" style="color: #003B4F;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;">as</span> tape:</span>
<span id="cb18-6">  z <span class="op" style="color: #5E5E5E;">=</span> x <span class="op" style="color: #5E5E5E;">+</span> y</span>
<span id="cb18-7">  loss <span class="op" style="color: #5E5E5E;">=</span> tf.math.reduce_mean(z)</span>
<span id="cb18-8"></span>
<span id="cb18-9">dx <span class="op" style="color: #5E5E5E;">=</span> tape.gradient(loss, x) <span class="co" style="color: #5E5E5E;"># loss가 scalar이므로 계산 가능</span></span>
<span id="cb18-10"><span class="bu" style="color: null;">print</span>(dx)</span></code></pre></div>
</details>
</div>
<p>TensorFlow에서는 변수가 아닌 상수에 대해 기본적으로 기울기를 측정하지 않음 (not watched). 또한 변수여도 학습 가능하지 않으면(not trainable) 자동 미분을 사용하지 않음</p>
<div class="cell" data-execution_count="19">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">x <span class="op" style="color: #5E5E5E;">=</span> tf.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">100</span>) <span class="co" style="color: #5E5E5E;"># -10 ~ 10까지 100r개의 데이터 생성</span></span>
<span id="cb19-2"></span>
<span id="cb19-3"><span class="cf" style="color: #003B4F;">with</span> tf.GradientTape() <span class="im" style="color: #00769E;">as</span> tape:</span>
<span id="cb19-4">  tape.watch(x) <span class="co" style="color: #5E5E5E;"># x에 대해 기울기를 측정할거니까 기록해줘</span></span>
<span id="cb19-5">  y <span class="op" style="color: #5E5E5E;">=</span> tf.nn.sigmoid(x)</span>
<span id="cb19-6"></span>
<span id="cb19-7">dx <span class="op" style="color: #5E5E5E;">=</span> tape.gradient(y, x)</span>
<span id="cb19-8"><span class="bu" style="color: null;">print</span>(dx)</span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="20">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb20-2"></span>
<span id="cb20-3">plt.plot(x, y, <span class="st" style="color: #20794D;">'r'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"y"</span>)</span>
<span id="cb20-4">plt.plot(x, dx, <span class="st" style="color: #20794D;">'b--'</span>, label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"dy/dx"</span>)</span>
<span id="cb20-5">plt.legend()</span>
<span id="cb20-6">plt.show()</span></code></pre></div>
</details>
</div>


</section>
</section>

 ]]></description>
  <category>ML</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/2023-02-03_tesnsor_manipulation/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Machine Learning</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/ML/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<section id="r" class="level3">
<h3 class="anchored" data-anchor-id="r">R</h3>
</section>
<section id="python" class="level3">
<h3 class="anchored" data-anchor-id="python">Python</h3>
<section id="tensor-flow-framework" class="level4">
<h4 class="anchored" data-anchor-id="tensor-flow-framework">Tensor Flow Framework</h4>
<ul>
<li>2023-02-03, <a href="../../../../../docs/blog/posts/ML/2023-02-03_tesnsor_manipulation/index.html">Tensor Flow Overview</a></li>
</ul>
</section>
<section id="pytorch-framework" class="level4">
<h4 class="anchored" data-anchor-id="pytorch-framework">Pytorch Framework</h4>
<ul>
<li>2023-02-03, <a href="../../../../../docs/blog/posts/ML/2023-02-03_tesnsor_manipulation/index.html">Pytorch Overview</a></li>
</ul>


</section>
</section>
</section>
</section>

 ]]></description>
  <category>ML</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/ML/guide_map/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Function</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="definition" class="level2">
<h2 class="anchored" data-anchor-id="definition">Definition</h2>
<section id="구성-요소" class="level3">
<h3 class="anchored" data-anchor-id="구성-요소">구성 요소</h3>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay=f(x;%5Calpha)%0A"></p>
<ul>
<li>독립변수 (independent variable): <img src="https://latex.codecogs.com/png.latex?x">, 함수의 출력값을 결정하는 변수로서, feature, decision variable 등으로도 표현</li>
<li>매개변수 (parameter): <img src="https://latex.codecogs.com/png.latex?%5Calpha">, 함수의 모양을 결정하기 위한 변수</li>
<li>종속 변수 (dependent variable): <img src="https://latex.codecogs.com/png.latex?y"> or <img src="https://latex.codecogs.com/png.latex?f(x)"> 독립변수와 매개 변수에 의해 값이 결정되는 변수</li>
</ul>
</section>
<section id="일반적인-함수의-종류" class="level3">
<h3 class="anchored" data-anchor-id="일반적인-함수의-종류">일반적인 함수의 종류</h3>
<ul>
<li>함수, 분수함수, 지수함수, 로그함수, 삼각함수 등</li>
</ul>
</section>
<section id="confusing-terms-about-rectangular-data" class="level3">
<h3 class="anchored" data-anchor-id="confusing-terms-about-rectangular-data">Confusing Terms about Rectangular Data</h3>
<p>독립 변수와 종속 변수는 각 분야에서 쓰이는 이름이 다르다. 아래 표 참고 (정확하진 않음. 아직도 업데이트 중) See Table&nbsp;1.</p>
<p>(The below table may be incorrect still under researching)</p>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: Confusing Terms in Data Science</caption>
<colgroup>
<col style="width: 7%">
<col style="width: 17%">
<col style="width: 41%">
<col style="width: 20%">
<col style="width: 13%">
</colgroup>
<thead>
<tr class="header">
<th>Terms</th>
<th>Mathmatics</th>
<th>Statistics</th>
<th>Computer Science</th>
<th>Data Engineering</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>graph</td>
<td>visulaized plot</td>
<td>visulaized plot</td>
<td>connections among entities</td>
<td>data structure</td>
</tr>
<tr class="even">
<td>variable</td>
<td>independent variable</td>
<td>predictor, experimental variable, explanatory variable</td>
<td>feature, input</td>
<td>attribute, column</td>
</tr>
<tr class="odd">
<td>outcome</td>
<td>dependent variable</td>
<td>response variable, outcome</td>
<td>output, target</td>
<td>target</td>
</tr>
<tr class="even">
<td>Records</td>
<td>pattern, example</td>
<td>case, sample, observation</td>
<td>instance</td>
<td>record, row</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>예시1 : 2차 함수</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;">def</span> f(x,a<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>,b<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>,c<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">3</span>): <span class="co" style="color: #5E5E5E;">#x: independent variable, f(x): dependent variable</span></span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;">return</span> a<span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">+</span>b<span class="op" style="color: #5E5E5E;">*</span>x<span class="op" style="color: #5E5E5E;">+</span>c <span class="co" style="color: #5E5E5E;"># a,b,c : parameters</span></span>
<span id="cb1-6">x<span class="op" style="color: #5E5E5E;">=</span>np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>,<span class="dv" style="color: #AD0000;">10</span>,<span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb1-7">fig<span class="op" style="color: #5E5E5E;">=</span>plt.figure()</span>
<span id="cb1-8">ax<span class="op" style="color: #5E5E5E;">=</span>plt.axes()</span>
<span id="cb1-9">ax.plot(x,f(x))</span>
<span id="cb1-10">ax.plot(x,f(x,<span class="dv" style="color: #AD0000;">2</span>,<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">2</span>))</span>
<span id="cb1-11">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/index_files/figure-html/cell-2-output-1.png" width="575" height="411"></p>
</div>
</div>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f(x)=2x%5E2-3x+2">
<ul>
<li>함수: <img src="https://latex.codecogs.com/png.latex?f(x;a,b,c)"></li>
<li>종속 변수: <img src="https://latex.codecogs.com/png.latex?f(x)"></li>
<li>독립 변수: <img src="https://latex.codecogs.com/png.latex?x"></li>
<li>매개 변수 (parameter): <img src="https://latex.codecogs.com/png.latex?a=2,%20%5Cspace%20b=-3,%20%5Cspace%20c=2"></li>
</ul></li>
<li>예시2
<ul>
<li>linear regression
<ul>
<li>매개변를 수학적으로 최적화하여 데이터에 맞는 직선의 방정식을 찾는 알고리즘</li>
<li>함수 : <img src="https://latex.codecogs.com/png.latex?f(x;%5Cmathbf%20%5Cbeta)=%5Cbeta_1x+%5Cbeta_0"></li>
<li>종속 변수: <img src="https://latex.codecogs.com/png.latex?f(x)=y"></li>
<li>독립 변수: <img src="https://latex.codecogs.com/png.latex?x"></li>
<li>매개 변수 (parameter): <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20%5Cbeta%20=%20(%5Cbeta_0,%20%5Cspace%20%5Cbeta_1)"></li>
</ul></li>
</ul></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Baligned%7D%0AL(oss)&amp;=%5Cfrac%7B1%7D%7B2%7D%5Csum_%7Bn=1%7D%5E%7BN%7D(y_n-f(x_n,%5Cmathbf%20%5Cbeta))%5E2%20%5C%5C%0A&amp;=%5Cfrac%7B1%7D%7B2%7D%5Csum_%7Bn=1%7D%5E%7BN%7D(y_n-%5Cbeta_1x_n-%5Cbeta_0)%5E2%0A%5Cend%7Baligned%7D%0A"></p>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/index.html</guid>
  <pubDate>Mon, 30 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Function - Multivariable Scalar Function</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/multivariable_scalar_function.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="multivariable-scalar-function" class="level2">
<h2 class="anchored" data-anchor-id="multivariable-scalar-function">Multivariable Scalar Function</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay=f(%5Cmathbf%20x),%20%5Cspace%20f:%5Cmathbb%20R%5En%20%5Crightarrow%20%5Cmathbb%20R%0A"></p>
<ul>
<li>Many to One</li>
<li>예시)
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=f(x_1,x_2)=x_1+x_2,%20%5Cspace%20f:%5Cmathbb%20R%5E2%5Crightarrow%20%5Cmathbb%20R">
<ul>
<li>y값이 곡면의 형태를 띈다</li>
</ul></li>
</ul></li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> matplotlib <span class="im" style="color: #00769E;">as</span> mpl</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">from</span> mpl_toolkits <span class="im" style="color: #00769E;">import</span> mplot3d</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> matplotlib.font_manager <span class="im" style="color: #00769E;">as</span> mfm</span>
<span id="cb1-6"></span>
<span id="cb1-7">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>))</span>
<span id="cb1-8">ax <span class="op" style="color: #5E5E5E;">=</span> plt.axes(projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb1-9">x1<span class="op" style="color: #5E5E5E;">=</span>np.linspace(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb1-10">x2<span class="op" style="color: #5E5E5E;">=</span>np.linspace(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb1-11">x1,x2 <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(x1,x2) <span class="co" style="color: #5E5E5E;"># multivariate scalar function 만들 때 사용</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;">#print(x2)  #x 축으로 값이 불변하고 y축으로는 값이 변함</span></span>
<span id="cb1-14"></span>
<span id="cb1-15">z <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span><span class="op" style="color: #5E5E5E;">*</span>(x2 <span class="op" style="color: #5E5E5E;">-</span> x1<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> (<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">-</span>x1)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;">#print(z)</span></span>
<span id="cb1-17"></span>
<span id="cb1-18">ax.scatter3D(x1, x2, z, marker<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'.'</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'gray'</span>)</span>
<span id="cb1-19">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/multivariable_scalar_function_files/figure-html/cell-2-output-1.png" width="546" height="537"></p>
</div>
</div>
</section>
<section id="음함수-implicit-function-형태" class="level2">
<h2 class="anchored" data-anchor-id="음함수-implicit-function-형태">음함수 (implicit function) 형태</h2>
<ul>
<li>Contour(등고선) Graph: 한쪽 변이 상수로 고정</li>
<li><img src="https://latex.codecogs.com/png.latex?f(x,y)=c"> (<img src="https://latex.codecogs.com/png.latex?x"> 와 <img src="https://latex.codecogs.com/png.latex?y">의 관계가 가려져 있어서 음함수)</li>
<li>bivariable scalar function <img src="https://latex.codecogs.com/png.latex?f(x_1,x_2)=c"></li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>))</span>
<span id="cb2-2">ax <span class="op" style="color: #5E5E5E;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-3">ax.xaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">18</span>)</span>
<span id="cb2-4">ax.yaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">18</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">x1 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">51</span>)</span>
<span id="cb2-7">x2 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">51</span>)</span>
<span id="cb2-8">X1, X2 <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(x1, x2)</span>
<span id="cb2-9">Z <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span><span class="op" style="color: #5E5E5E;">*</span>(X2 <span class="op" style="color: #5E5E5E;">-</span> X1<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> (<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">-</span>X1)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">contours <span class="op" style="color: #5E5E5E;">=</span> ax.contour(X1, X2, Z, levels<span class="op" style="color: #5E5E5E;">=</span>[<span class="dv" style="color: #AD0000;">30</span>, <span class="dv" style="color: #AD0000;">200</span>, <span class="dv" style="color: #AD0000;">600</span>],  colors<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>, </span>
<span id="cb2-12">            linestyles<span class="op" style="color: #5E5E5E;">=</span>[<span class="st" style="color: #20794D;">'solid'</span>,<span class="st" style="color: #20794D;">'dashed'</span>, <span class="st" style="color: #20794D;">'dotted'</span>])</span>
<span id="cb2-13"></span>
<span id="cb2-14">ax.clabel(contours, contours.levels, fmt<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">%d</span><span class="st" style="color: #20794D;">"</span>, inline<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16">ax.set_xlabel(<span class="vs" style="color: #20794D;">r'$x_1$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>)</span>
<span id="cb2-17">ax.set_ylabel(<span class="vs" style="color: #20794D;">r'$x_2$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">25</span>)</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;">#if file_print == True :</span></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;">#    fig.savefig("imgs/chap3/fig3-6.png", dpi=300, bbox_inches='tight')</span></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;">#    fig.savefig("imgs/chap3/fig3-6.pdf", format='pdf', bbox_inches='tight')</span></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;">#    </span></span>
<span id="cb2-23">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/multivariable_scalar_function_files/figure-html/cell-3-output-1.png" width="653" height="616"></p>
</div>
</div>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">paths200<span class="op" style="color: #5E5E5E;">=</span>contours.collections[<span class="dv" style="color: #AD0000;">0</span>].get_paths()</span>
<span id="cb3-2">paths600<span class="op" style="color: #5E5E5E;">=</span>contours.collections[<span class="dv" style="color: #AD0000;">1</span>].get_paths()</span>
<span id="cb3-3"></span>
<span id="cb3-4"></span>
<span id="cb3-5">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>))</span>
<span id="cb3-6"></span>
<span id="cb3-7">x1 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">51</span>)</span>
<span id="cb3-8">x2 <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">51</span>)</span>
<span id="cb3-9">X1, X2 <span class="op" style="color: #5E5E5E;">=</span> np.meshgrid(x1, x2)</span>
<span id="cb3-10">Z <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">50</span><span class="op" style="color: #5E5E5E;">*</span>(X2 <span class="op" style="color: #5E5E5E;">-</span> X1<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span>)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">+</span> (<span class="dv" style="color: #AD0000;">2</span><span class="op" style="color: #5E5E5E;">-</span>X1)<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb3-11"></span>
<span id="cb3-12">ax <span class="op" style="color: #5E5E5E;">=</span> plt.axes(projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb3-13">ax.xaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb3-14">ax.yaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb3-15">ax.zaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17">ax.plot_surface(X1, X2, Z, cmap<span class="op" style="color: #5E5E5E;">=</span>plt.cm.binary, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"k"</span>)</span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;">#ax.plot_wireframe(X1, X2, Z, cmap=plt.cm.OrRd, edgecolor="k")</span></span>
<span id="cb3-19"></span>
<span id="cb3-20">ax.plot3D(paths200[<span class="dv" style="color: #AD0000;">0</span>].vertices[:,<span class="dv" style="color: #AD0000;">0</span>], paths200[<span class="dv" style="color: #AD0000;">0</span>].vertices[:,<span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">200</span>]<span class="op" style="color: #5E5E5E;">*</span>paths200[<span class="dv" style="color: #AD0000;">0</span>].vertices.shape[<span class="dv" style="color: #AD0000;">0</span>], </span>
<span id="cb3-21">          lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>, linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'--'</span>)</span>
<span id="cb3-22">ax.plot3D(paths200[<span class="dv" style="color: #AD0000;">1</span>].vertices[:,<span class="dv" style="color: #AD0000;">0</span>], paths200[<span class="dv" style="color: #AD0000;">1</span>].vertices[:,<span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">200</span>]<span class="op" style="color: #5E5E5E;">*</span>paths200[<span class="dv" style="color: #AD0000;">1</span>].vertices.shape[<span class="dv" style="color: #AD0000;">0</span>], </span>
<span id="cb3-23">          lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>, linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'--'</span>)</span>
<span id="cb3-24">ax.plot3D(paths200[<span class="dv" style="color: #AD0000;">2</span>].vertices[:,<span class="dv" style="color: #AD0000;">0</span>], paths200[<span class="dv" style="color: #AD0000;">2</span>].vertices[:,<span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">200</span>]<span class="op" style="color: #5E5E5E;">*</span>paths200[<span class="dv" style="color: #AD0000;">2</span>].vertices.shape[<span class="dv" style="color: #AD0000;">0</span>], </span>
<span id="cb3-25">          lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>, linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'--'</span>)</span>
<span id="cb3-26"></span>
<span id="cb3-27">ax.plot3D(paths600[<span class="dv" style="color: #AD0000;">0</span>].vertices[:,<span class="dv" style="color: #AD0000;">0</span>], paths600[<span class="dv" style="color: #AD0000;">0</span>].vertices[:,<span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">600</span>]<span class="op" style="color: #5E5E5E;">*</span>paths600[<span class="dv" style="color: #AD0000;">0</span>].vertices.shape[<span class="dv" style="color: #AD0000;">0</span>], </span>
<span id="cb3-28">          lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'w'</span>, linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'-'</span>)</span>
<span id="cb3-29">ax.plot3D(paths600[<span class="dv" style="color: #AD0000;">1</span>].vertices[:,<span class="dv" style="color: #AD0000;">0</span>], paths600[<span class="dv" style="color: #AD0000;">1</span>].vertices[:,<span class="dv" style="color: #AD0000;">1</span>], [<span class="dv" style="color: #AD0000;">600</span>]<span class="op" style="color: #5E5E5E;">*</span>paths600[<span class="dv" style="color: #AD0000;">1</span>].vertices.shape[<span class="dv" style="color: #AD0000;">0</span>], </span>
<span id="cb3-30">          lw<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'w'</span>, linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'-'</span>)</span>
<span id="cb3-31"></span>
<span id="cb3-32">ax.text(<span class="fl" style="color: #AD0000;">1.5</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>,  <span class="dv" style="color: #AD0000;">400</span>, <span class="vs" style="color: #20794D;">r"$f(x_1,x_2)=200$"</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">18</span>)</span>
<span id="cb3-33">ax.text(<span class="fl" style="color: #AD0000;">1.</span>, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">800</span>, <span class="vs" style="color: #20794D;">r"$f(x_1,x_2)=600$"</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">18</span>)</span>
<span id="cb3-34"></span>
<span id="cb3-35">ax.set_xlabel(<span class="vs" style="color: #20794D;">r'$x_1$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb3-36">ax.set_ylabel(<span class="vs" style="color: #20794D;">r'$x_2$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb3-37">ax.set_zlabel(<span class="vs" style="color: #20794D;">r'$z$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb3-38"></span>
<span id="cb3-39">ax.view_init(<span class="dv" style="color: #AD0000;">50</span>, <span class="dv" style="color: #AD0000;">80</span>)</span>
<span id="cb3-40"></span>
<span id="cb3-41"><span class="co" style="color: #5E5E5E;">#if file_print == True :</span></span>
<span id="cb3-42"><span class="co" style="color: #5E5E5E;">#    fig.savefig("imgs/chap3/fig3-5.png", dpi=300, bbox_inches='tight')</span></span>
<span id="cb3-43"><span class="co" style="color: #5E5E5E;">#    fig.savefig("imgs/chap3/fig3-5.pdf", format='pdf', bbox_inches='tight')</span></span>
<span id="cb3-44"><span class="co" style="color: #5E5E5E;">#    </span></span>
<span id="cb3-45">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/multivariable_scalar_function_files/figure-html/cell-4-output-1.png" width="537" height="542"></p>
</div>
</div>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/multivariable_scalar_function.html</guid>
  <pubDate>Mon, 30 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Function - Multivariable Vector Function</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/mutivariable_vector_function.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="multivariable-vector-function" class="level2">
<h2 class="anchored" data-anchor-id="multivariable-vector-function">Multivariable Vector Function</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign*%7D%0A%5Cmathbf%7By%7D%20&amp;%20=%5Cmathbf%20F(%5Cmathbf%7Bx%7D),%5Cspace%20f:%5Cmathbb%7BR%7D%5E%7Bm%7D%5Crightarrow%5Cmathbb%7BR%7D%5E%7Bn%7D%5C%5C%0A%5Cmathbf%7BF%7D(%5Cmathbf%7Bx%7D)%20&amp;%20=(f_%7B1%7D(%5Cmathbf%7Bx%7D),f_%7B2%7D(%5Cmathbf%7Bx%7D),...,f_%7Bn%7D(%5Cmathbf%7Bx%7D))%5E%7BT%7D,%5Cmathbf%7Bx%7D%5Cin%5Cmathbb%7BR%7D%5E%7Bm%7D%0A%5Cend%7Balign*%7D%0A"></p>
<ul>
<li>입력: vector</li>
<li>출력: vector</li>
<li>예시
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%20s(u,v)=(u,v,1+u%5E2+%5Cfrac%7Bv%7D%7B1+v%5E2%7D)%5ET,%200%5Cleq%20u,v%5Cleq%201"> <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Baligned%7D%0A%5Cmathbb%20R%5E2%20&amp;%5Crightarrow%20%5Cmathbb%20R%5E3%20%5C%5C%0A(u,v)%20&amp;%5Crightarrow%20(x,y,z)%0A%5Cend%7Baligned%7D%0A"> where <img src="https://latex.codecogs.com/png.latex?x=u,%20y=1+u%5E2,%20z=1+u%5E2+%5Cfrac%7Bv%7D%7B1+v%5E2%7D"></li>
</ul></li>
<li>graph 표현</li>
</ul>
<div class="columns">
<div class="column" style="width:50%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/mvv_fig1.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">계산그래프</figcaption><p></p>
</figure>
</div>
</div><div class="column" style="width:50%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/mvv_fig2.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">인공신경망</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/mutivariable_vector_function.html</guid>
  <pubDate>Mon, 30 Jan 2023 15:00:00 GMT</pubDate>
  <media:content url="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/mvv_fig1.png" medium="image" type="image/png" height="104" width="144"/>
</item>
<item>
  <title>Function - Univariable Scalar Function</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/univariable_scalar_function.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="univariable-scalar-function" class="level2">
<h2 class="anchored" data-anchor-id="univariable-scalar-function">Univariable Scalar Function</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay=f(x),%20%5Cspace%20f:%20%5Cmathbb%20R%20%5Crightarrow%20%5Cmathbb%20R%0A"></p>
<ul>
<li>One to One</li>
<li><img src="https://latex.codecogs.com/png.latex?f:%5Cmathbb%7BR%7D%20%5Crightarrow%20%5Cmathbb%7BR%7D"> or <img src="https://latex.codecogs.com/png.latex?y=f(x)"> 으로 표현
<ul>
<li><img src="https://latex.codecogs.com/png.latex?f:%5Cmathbb%7BR%7D%20%5Crightarrow%20%5Cmathbb%7BR%7D"> : 입력과 출력의 개수를 직관적으로 알 수 있음</li>
<li>예시: <img src="https://latex.codecogs.com/png.latex?f(x)=x%5E2,%20f(x)=2%5Ex,%20f(x)=log_3x"></li>
</ul></li>
</ul>
<section id="scalar-function" class="level3">
<h3 class="anchored" data-anchor-id="scalar-function">Scalar Function</h3>
<ul>
<li>Polynomials
<ul>
<li>monomial: one term, 상수 또는 변수 항 하나로 이루어진 식
<ul>
<li>ex) <img src="https://latex.codecogs.com/png.latex?2,x,x%5E2,%5Cfrac%7Bx%7D%7B3%7D"></li>
</ul></li>
<li>binomial: two terms, 단항식이 덧셈과 뻴셈으로 연결된 식
<ul>
<li>ex) <img src="https://latex.codecogs.com/png.latex?3x%5E2+2">, coefficient=3. <img src="https://latex.codecogs.com/png.latex?x">= 변수, degree = 2, constant = 2</li>
</ul></li>
<li>trinomial: three terms</li>
<li>quadrinomial: four terms</li>
<li>quintinomial: five terms</li>
<li>multinomial: more than one terms, a combination of nomials with +/-.
<ul>
<li>ex) <img src="https://latex.codecogs.com/png.latex?x%5E2+2x+3"></li>
</ul></li>
</ul></li>
<li>Multinomial Function
<ul>
<li>다항식으로 구성된 함수</li>
<li>ex) <img src="https://latex.codecogs.com/png.latex?f(x)=x%5E2+2x+4"></li>
<li>연속이고 미분 가능</li>
</ul></li>
<li>Exponential Function
<ul>
<li>정의 : <img src="https://latex.codecogs.com/png.latex?y=a%5Ex"> where <img src="https://latex.codecogs.com/png.latex?z%3E0,%20%5Cspace%20a%5Cnot=1"></li>
<li>특징
<ul>
<li><img src="https://latex.codecogs.com/png.latex?a%3E1">: 양의 방향으로 증가</li>
<li><img src="https://latex.codecogs.com/png.latex?0%3Ca%3C1">: 양의 방향으로 갈 수록 감소</li>
<li>지수법칙</li>
<li>입력되는 x 값에 비해 출력되는 y값이 급격히 변화</li>
<li>미분 가능 &amp; 연속</li>
<li><a href="https://www.cuemath.com/algebra/exponent-rules/">Exponent Rule</a></li>
</ul></li>
</ul></li>
<li>Log Function
<ul>
<li>정의 : <img src="https://latex.codecogs.com/png.latex?log_ax=c%20%5Cleftrightarrow%20a%5Ec=x"></li>
<li>특징
<ul>
<li>미분 가능 &amp; 연속</li>
<li>지수함수와 역함수 관계</li>
<li>입력되는 x의 변화량에 비해 출력되는 y의 변화량이 작음
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y=log_%7B10%7Dx"> : x가 10만큼 증가해야 y가 1 증가함</li>
<li><img src="https://latex.codecogs.com/png.latex?y=log_%7Be%7Dx"> : x가 e(약 2.718)만큼 증가해야 y가 1 증가함</li>
</ul></li>
</ul></li>
</ul></li>
<li>Logistic Sigmoid Function
<ul>
<li>정의: <img src="https://latex.codecogs.com/png.latex?%5Csigma(z)=%5Cfrac%7B1%7D%7B1+e%5E%7B-z%7D%7D"></li>
<li>특징
<ul>
<li>미분 가능 &amp; 연속</li>
<li>신경망에서 뉴런의 활성을 결정하는 활성함수로 사용</li>
<li>모든 실수<img src="https://latex.codecogs.com/png.latex?z">를 <img src="https://latex.codecogs.com/png.latex?0~1"> 사이로 변환시킴</li>
<li>입력값을 확률 값으로 출력하기 위해 사용됨</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>template</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/univariable_scalar_function.html</guid>
  <pubDate>Mon, 30 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Function - Univariable Vector Function</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/univariable_vector_function.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="univariable-vector-function" class="level2">
<h2 class="anchored" data-anchor-id="univariable-vector-function">Univariable Vector Function</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0Ar(t)=(f_1(t),f_2(t),...,f_n(t))%5ET,%20f:%5Cmathbb%20R%5Crightarrow%20%5Cmathbb%20R%5En%0A"></p>
<ul>
<li>one to many</li>
<li>평면 또는 공간에 존재하는 곡선: 시간에 따른 물체의 이동 경로</li>
<li>입력: 스칼라</li>
<li>출력: vector</li>
<li>예시: <img src="https://latex.codecogs.com/png.latex?t%5Crightarrow(x,y,z)"></li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0Ar(t)=f(x(t),y(y),z(t))=(%5Ccos(-10t),%5Cfrac%7B3%7D%7B4%7Dt,%5Cfrac%7Bt%5E2%7D%7B6%7D)%5ET%0A"></p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> matplotlib <span class="im" style="color: #00769E;">as</span> mpl</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">from</span> mpl_toolkits <span class="im" style="color: #00769E;">import</span> mplot3d</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">import</span> matplotlib.font_manager <span class="im" style="color: #00769E;">as</span> mfm</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;"># numpy 출력 형식 지정</span></span>
<span id="cb1-8">np.set_printoptions(precision<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">4</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">150</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;"># matplotlib 스타일 지정</span></span>
<span id="cb1-11">mpl.style.use(<span class="st" style="color: #20794D;">'bmh'</span>)</span>
<span id="cb1-12">mpl.style.use(<span class="st" style="color: #20794D;">'seaborn-whitegrid'</span>)</span>
<span id="cb1-13">style <span class="op" style="color: #5E5E5E;">=</span> plt.style.library[<span class="st" style="color: #20794D;">'bmh'</span>]</span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;"># 스타일 컬러를 쉽게 쓸 수 있도록 리스트 저장</span></span>
<span id="cb1-15">style_colors <span class="op" style="color: #5E5E5E;">=</span> [ c[<span class="st" style="color: #20794D;">'color'</span>] <span class="cf" style="color: #003B4F;">for</span> c <span class="kw" style="color: #003B4F;">in</span> style[<span class="st" style="color: #20794D;">'axes.prop_cycle'</span>] ]</span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;"># 그림을 로컬 폴더에 저장하고 싶으면 True로 수정 </span></span>
<span id="cb1-18">file_print <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;">=</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">7</span>))</span>
<span id="cb2-2">ax <span class="op" style="color: #5E5E5E;">=</span> plt.axes(projection<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'3d'</span>)</span>
<span id="cb2-3">ax.xaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb2-4">ax.yaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb2-5">ax.zaxis.set_tick_params(labelsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb2-6">ax.set_xlabel(<span class="st" style="color: #20794D;">'$x$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb2-7">ax.set_ylabel(<span class="st" style="color: #20794D;">'$y$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb2-8">ax.set_zlabel(<span class="st" style="color: #20794D;">'$z$'</span>, fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10">t <span class="op" style="color: #5E5E5E;">=</span> np.linspace(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">101</span>)</span>
<span id="cb2-11">x <span class="op" style="color: #5E5E5E;">=</span> np.sin(<span class="dv" style="color: #AD0000;">6</span><span class="op" style="color: #5E5E5E;">*</span>t)</span>
<span id="cb2-12">y <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span><span class="op" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">4</span> <span class="op" style="color: #5E5E5E;">*</span> t</span>
<span id="cb2-13">z <span class="op" style="color: #5E5E5E;">=</span> t<span class="op" style="color: #5E5E5E;">**</span><span class="dv" style="color: #AD0000;">2</span> <span class="op" style="color: #5E5E5E;">/</span> <span class="dv" style="color: #AD0000;">2</span></span>
<span id="cb2-14"></span>
<span id="cb2-15">ax.plot3D(x, y, z, c<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>)</span>
<span id="cb2-16">ax.plot([x[<span class="dv" style="color: #AD0000;">0</span>]],  [y[<span class="dv" style="color: #AD0000;">0</span>]],  [z[<span class="dv" style="color: #AD0000;">0</span>]],  <span class="st" style="color: #20794D;">'o'</span>, markersize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>,</span>
<span id="cb2-17">        label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"t = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="st" style="color: #20794D;">"</span>.<span class="bu" style="color: null;">format</span>(t[<span class="dv" style="color: #AD0000;">0</span>]))</span>
<span id="cb2-18">ax.plot([x[<span class="dv" style="color: #AD0000;">50</span>]], [y[<span class="dv" style="color: #AD0000;">50</span>]], [z[<span class="dv" style="color: #AD0000;">50</span>]], <span class="st" style="color: #20794D;">'^'</span>, markersize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>,</span>
<span id="cb2-19">        label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"t = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="st" style="color: #20794D;">"</span>.<span class="bu" style="color: null;">format</span>(t[<span class="dv" style="color: #AD0000;">50</span>]))</span>
<span id="cb2-20">ax.plot([x[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]], [y[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]], [z[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]], <span class="st" style="color: #20794D;">'*'</span>, markersize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'k'</span>,</span>
<span id="cb2-21">        label<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"t = </span><span class="sc" style="color: #5E5E5E;">{:.2f}</span><span class="st" style="color: #20794D;">"</span>.<span class="bu" style="color: null;">format</span>(t[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>])) </span>
<span id="cb2-22"></span>
<span id="cb2-23">ax.legend(fontsize<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">15</span>, loc<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"upper left"</span>)</span>
<span id="cb2-24">    </span>
<span id="cb2-25">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/univariable_vector_function_files/figure-html/cell-3-output-1.png" width="558" height="538"></p>
</div>
</div>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>
<section id="blog-guide-map-link" class="level2">
<h2 class="anchored" data-anchor-id="blog-guide-map-link">Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

</div></ul> ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/function/univariable_vector_function.html</guid>
  <pubDate>Mon, 30 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Mathematics</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Mathmatics/guide_map/index.html</link>
  <description><![CDATA[ 



<p><strong>(Draft)</strong></p>
<section id="contents-list" class="level1">
<h1>Contents List</h1>
<section id="basic" class="level2">
<h2 class="anchored" data-anchor-id="basic">Basic</h2>
<ul>
<li>1111-11-11, Function
<ul>
<li>2023-01-31, Univariable Scalar Function (One to One)</li>
<li>2023-01-31, Multi-variable Scalar Function (Many to One)</li>
<li>2023-01-31, Univariable Vector Function (One to Many)</li>
<li>2023-01-31, Multi-variable Vector Function (Many to Many)</li>
</ul></li>
<li>1111-11-11, Vector &amp; Matrix</li>
<li>1111-11-11, Limit, <img src="https://latex.codecogs.com/png.latex?%5Cepsilon-%5Cdelta"> Method</li>
<li>1111-11-11, Differintiation
<ul>
<li>1111-11-11, Univariable Differintiation</li>
<li>1111-11-11, Multivariable Differintiation</li>
</ul></li>
<li>1111-11-11, Chain Rule</li>
<li>1111-11-11, Partial Derivative</li>
<li>1111-11-11, Gradient</li>
<li>1111-11-11, Talyer’s Series</li>
<li>1111-11-11, Gradient Direction</li>
<li>1111-11-11, Random Variable</li>
<li>1111-11-11, Probability Distribution</li>
<li>1111-11-11, Information Theory - Entropy</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>
</section>
<section id="linear-algebra" class="level2">
<h2 class="anchored" data-anchor-id="linear-algebra">Linear Algebra</h2>
<ul>
<li>1111-11-11, Vector Space</li>
<li>1111-11-11, Subspace</li>
<li>1111-11-11, Inner Product</li>
<li>1111-11-11, Linear Combination</li>
<li>1111-11-11, Quadratic Form</li>
<li>1111-11-11, Linear Independence</li>
<li>1111-11-11, Basis, Dimension, &amp; Rank</li>
<li>1111-11-11, Outer Product</li>
<li>1111-11-11, Eigen Value &amp; Eigen Vector</li>
<li>1111-11-11, Eigen Decomposition</li>
<li>1111-11-11, Singular Value Decomposition (SVD)</li>
<li>1111-11-11, Gram-Schmidt</li>
<li>1111-11-11, Group</li>
<li>1111-11-11, Orthogonal Matrix</li>
<li>1111-11-11, Rotation &amp; Group</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>
</section>
<section id="optimization" class="level2">
<h2 class="anchored" data-anchor-id="optimization">Optimization</h2>
<ul>
<li>1111-11-11, Convex Set</li>
<li>1111-11-11, Convex Function</li>
<li>1111-11-11, Unconstrained Optimization</li>
<li>1111-11-11, Non-linear Least Square</li>
<li>1111-11-11, Largrange Multiplier Method
<ul>
<li>1111-11-11, Largrange Primal Function</li>
<li>1111-11-11, Largrange Dual Function</li>
<li>1111-11-11, KKT conditions</li>
</ul></li>
<li>1111-11-11, Gradient Descent Optimizers</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
<li>1111-11-11,</li>
</ul>


</section>
</section>

 ]]></description>
  <category>Mathematics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Mathmatics/guide_map/index.html</guid>
  <pubDate>Sat, 28 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (8) Binary Search Tree</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="트리tree" class="level2">
<h2 class="anchored" data-anchor-id="트리tree">트리(Tree)</h2>
<ul>
<li>트리는 가계도와 같이 <strong>계층적인 구조</strong>를 표현할 때 사용할 수 있는 자료구조다.</li>
<li>나무(tree)의 형태를 뒤집은 것과 같이 생겼다.</li>
<li>다수의 데이터를 관리하기에 적합한 트리 자료 구조의 가장 기본적인 형태</li>
</ul>
</section>
<section id="트리-용어-정리" class="level2">
<h2 class="anchored" data-anchor-id="트리-용어-정리">트리 용어 정리</h2>
<ul>
<li>루트 노드(root node): 부모가 없는 최상위 노드</li>
<li>단말 노드(leaf node): 자식이 없는 노드</li>
<li>트리(tree)에서는 부모와 자식 관계가 성립한다 (직계).</li>
<li>형제 관계 (sibling, 방계): 부모 node로 부터 왼쪽 자식과 오른쪽 자식과의 관계</li>
<li>깊이(depth): 루트 노드에서의 길이(length), 루트 노드로부터 손자까지의 depth=2
<ul>
<li>이때, 길이란 출발 노드에서 목적지 노드까지 거쳐야 하는 간선의 수를 의미한다.</li>
</ul></li>
<li>트리의 높이(height)은 루트 노드에서 가장 깊은 노드까지의 길이를 의미한다.</li>
</ul>
</section>
<section id="이진-트리binary-tree" class="level2">
<h2 class="anchored" data-anchor-id="이진-트리binary-tree">이진 트리(Binary Tree)</h2>
<ul>
<li>이진 트리는 최대 2개의 자식을 가질 수 있는 트리를 말한다.</li>
</ul>
</section>
<section id="이진-탐색-트리binary-search-tree" class="level2">
<h2 class="anchored" data-anchor-id="이진-탐색-트리binary-search-tree">이진 탐색 트리(Binary Search Tree)</h2>
<ul>
<li>다수의 데이터를 관리(조회, 저장, 삭제)하기 위한 가장 기본적인 자료구조 중 하나다.</li>
<li>이진 탐색 트리의 성질: 순서가 있음
<ul>
<li>왼쪽 자식 노드 &lt; 부모 노드 &lt; 오른쪽 자식 노드</li>
<li>루트 노드 기준 모든 왼쪽 노드들은 루트 노드보다 작음</li>
<li>루트 노드 기준 모든 오른쪽 노드들은 루트 노드보다 큼</li>
<li>2진 탐색을 가능하게 하는 구조</li>
</ul></li>
</ul>
<section id="이진-탐색-트리binary-search-tree의-성질" class="level3">
<h3 class="anchored" data-anchor-id="이진-탐색-트리binary-search-tree의-성질">이진 탐색 트리(Binary Search Tree)의 성질</h3>
<ul>
<li>특정한 노드의 <strong>키(key) 값</strong>보다 그 왼쪽 자식 노드의 <strong>키(key) 값</strong>이 더 작다.</li>
<li>특정한 노드의 키(key) 값보다 그 오른쪽 자식 노드의 키(key) 값이 더 크다.</li>
<li>특정한 노드의 왼쪽 서브 트리, 오른쪽 서브 트리 모두 이진 탐색 트리다.</li>
<li>worst case: 찾는게 없을 때 혹은 찾고자 하는 데이터가 가장 마지막에 있을 때
<ul>
<li>탐색시 재귀적으로 중앙값을 기준으로 오른쪽만 찾음</li>
<li>매 실행마다 데이터의 개수가 절반씩 줄어듬</li>
<li>그러면, 몇 번만에 사이즈가 1이 되는가?</li>
<li>수식 유도, input size를 N이라고 가정했을때</li>
<li><img src="https://latex.codecogs.com/png.latex?N%20%5Ctimes%20%7B(%5Cfrac%7B1%7D%7B2%7D)%7D%5E%7Bk%7D=1%20%5Crightarrow%20N=2%5Ek%20%5Crightarrow%20k%20=%20log_2N"></li>
<li>위의 수식을 점근적 표기법으로 표현하면 <img src="https://latex.codecogs.com/png.latex?%5CTheta(logN)"></li>
</ul></li>
<li>best case: 한번에 찾았을 때
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5CTheta(1)"></li>
</ul></li>
<li>그러므로, lower bound = <img src="https://latex.codecogs.com/png.latex?%5CTheta(1)">, upper bound = <img src="https://latex.codecogs.com/png.latex?O(logN)"></li>
</ul>
</section>
<section id="삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="삽입-연산">삽입 연산</h3>
<ul>
<li>루트 노드에서 출발하여 아래쪽으로 내려오면서, 삽입할 위치를 찾는다.
<ol type="1">
<li>삽입할 노드의 키(key)가 작으면 왼쪽으로,</li>
<li>삽입할 노드의 키(key)가 크면 오른쪽으로 삽입</li>
</ol></li>
<li>삽입할 노드 목록 예시: [7,4,5,9,6,2,3,2,8]으로 트리 생성해보기</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/Binary_tree.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Binary Tree</figcaption><p></p>
</figure>
</div>
<p><a href="https://www.youtube.com/watch?v=i5yHkP1jQmo">Sorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나</a></p>
</section>
<section id="조회-연산" class="level3">
<h3 class="anchored" data-anchor-id="조회-연산">조회 연산</h3>
<ul>
<li>루트 노드에서 출발하여 아래쪽으로 내려오면서, 찾고자 하는 원소를 조회한다. 삽입 연산과 같은 로직을 따름</li>
<li>1 삽입할 노드의 키(key)가 작으면 왼쪽으로, 2 삽입할 노드의 키(key)가 크면 오른쪽으로 조회</li>
<li>조회할 노드 목록 예시: 5번 노드</li>
</ul>
</section>
<section id="삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="삭제-연산">삭제 연산</h3>
<ul>
<li>루트 노드에서 출발하여 아래쪽으로 내려오면서, 삭제할 원소에 접근한다.</li>
<li>삭제할 노드 목록 예시: 7번 노드
<ul>
<li>Case #1 왼쪽 자식이 없는 경우 → 오른쪽 자식으로 대체</li>
<li>Case #2 오른쪽 자식이 없는 경우 → 왼쪽 자식으로 대체</li>
<li>Case #3 왼쪽, 오른쪽이 모두 있는 경우 → 오른쪽 서브</li>
</ul></li>
<li>트리에서 가장 작은 노드로 대체</li>
<li>삭제할 노드 목록 예시: 4번 노드</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/binary_tree_deletion.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Binary Tree Deletion</figcaption><p></p>
</figure>
</div>
<p><a href="https://www.youtube.com/watch?v=i5yHkP1jQmo">Sorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나</a></p>
</section>
</section>
<section id="트리의-순회" class="level2">
<h2 class="anchored" data-anchor-id="트리의-순회">트리의 순회</h2>
<ul>
<li>트리에 포함되어 있는 정보를 모두 출력하고자 할 때, 어떤 방식을 사용할 수 있을까?</li>
<li>바로 순회(traversal)를 사용할 수 있다.</li>
<li>트리의 모든 노드를 특정한 순서(조건)에 따라서 방문하는 방법을 순회(traversal)라고 한다.</li>
</ul>
<ol type="1">
<li>전위 순회(pre-order traverse): 루트 방문 → 왼쪽 자식 방문 → 오른쪽 자식 방문</li>
<li>중위 순회(in-order traverse): 왼쪽 자식 방문 → 루트 방문 → 오른쪽 자식 방문</li>
<li>후위 순회(post-order traverse): 왼쪽 자식 방문 → 오른쪽 자식 방문 → 루트 방문</li>
</ol>
<section id="트리의-순회-한-눈에-보기" class="level3">
<h3 class="anchored" data-anchor-id="트리의-순회-한-눈에-보기">트리의 순회 한 눈에 보기</h3>
<ul>
<li>전위 순회(pre-order traverse): A → B → D → E → C → F → G</li>
<li>중위 순회(in-order traverse): D → B → E → A → F → C → G</li>
<li>후위 순회(post-order traverse): D → E → B → F → G → C → A</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/binary_tree_traverse.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Binary Tree Traverse</figcaption><p></p>
</figure>
</div>
<p><a href="https://www.youtube.com/watch?v=i5yHkP1jQmo">Sorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나</a></p>
</section>
<section id="전위-순회pre-order-traverse" class="level3">
<h3 class="anchored" data-anchor-id="전위-순회pre-order-traverse">전위 순회(pre-order traverse)</h3>
<p>• 방문 방법: 현재 노드 → 왼쪽 자식 노드 → 오른쪽 자식 노드</p>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">def</span> _preorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb1-2">  <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb1-3">    <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb1-4">    <span class="va" style="color: #111111;">self</span>._preorder(node.left)</span>
<span id="cb1-5">    <span class="va" style="color: #111111;">self</span>._preorder(node.right)</span></code></pre></div>
</details>
</div>
</section>
<section id="중위-순회inorder-traversal" class="level3">
<h3 class="anchored" data-anchor-id="중위-순회inorder-traversal">중위 순회(Inorder Traversal)</h3>
<ul>
<li>방문 방법: 왼쪽 자식 노드 → 현재 노드 → 오른쪽 자식 노드</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;">def</span> _inorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb2-2">  <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb2-3">    <span class="va" style="color: #111111;">self</span>._inorder(node.left)</span>
<span id="cb2-4">    <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb2-5">    <span class="va" style="color: #111111;">self</span>._inorder(node.right)</span></code></pre></div>
</details>
</div>
</section>
<section id="후위-순회postorder-traversal" class="level3">
<h3 class="anchored" data-anchor-id="후위-순회postorder-traversal">후위 순회(Postorder Traversal)</h3>
<ul>
<li>방문 방법: 왼쪽 자식 노드 → 오른쪽 자식 노드 → 현재 노드</li>
</ul>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">def</span> _postorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb3-2">  <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb3-3">    <span class="va" style="color: #111111;">self</span>._postorder(node.left)</span>
<span id="cb3-4">    <span class="va" style="color: #111111;">self</span>._postorder(node.right)</span>
<span id="cb3-5">    <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span></code></pre></div>
</details>
</div>
</section>
<section id="레벨-순회level-order-traversal" class="level3">
<h3 class="anchored" data-anchor-id="레벨-순회level-order-traversal">레벨 순회(Level Order Traversal)</h3>
<ul>
<li>낮은 레벨(루트)부터 높은 레벨까지 순차적으로 방문한다.</li>
<li>단순히 루트 노드에서부터 너비 우선 탐색(BST)를 진행하면 된다.</li>
<li>레벨 순회 순회(level-order traverse): A → B → C → D → E → F → G</li>
</ul>
</section>
</section>
<section id="이진-탐색-트리의-구현" class="level2">
<h2 class="anchored" data-anchor-id="이진-탐색-트리의-구현">이진 탐색 트리의 구현</h2>
<ul>
<li>다른 메서드 안에서 사용되는 메서드는 이름 앞에 언더바(_) 기호를 붙인다.</li>
</ul>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;">def</span> search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb4-2">  <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(<span class="va" style="color: #111111;">self</span>.root, key) <span class="co" style="color: #5E5E5E;"># search: recursively 조회</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;">def</span> _search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb4-5">  <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span> <span class="kw" style="color: #003B4F;">or</span> node.key <span class="op" style="color: #5E5E5E;">==</span> key:</span>
<span id="cb4-6">    <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb4-7"></span>
<span id="cb4-8">  <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb4-9">  <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb4-10">    <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.left, key)</span>
<span id="cb4-11"></span>
<span id="cb4-12">  <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb4-13">  <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb4-14">    <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.right, key)</span></code></pre></div>
</details>
</div>
<section id="편향-이진-트리skewed-binary-tree" class="level3">
<h3 class="anchored" data-anchor-id="편향-이진-트리skewed-binary-tree">편향 이진 트리(Skewed Binary Tree)</h3>
<ul>
<li>편향 이진 트리는 다음의 두 가지 속성을 가진다.</li>
</ul>
<ol type="1">
<li>같은 높이의 이진 트리 중 최소 개수의 노드 개수를 가진다.</li>
<li>왼쪽 혹은 오른쪽으로 한 방향에 대한 서브 트리를 가진다.</li>
</ol>
</section>
<section id="이진-탐색-트리의-시간-복잡도" class="level3">
<h3 class="anchored" data-anchor-id="이진-탐색-트리의-시간-복잡도">이진 탐색 트리의 시간 복잡도</h3>
<ul>
<li>노드의 개수가 N개일 때, 시간 복잡도는 다음과 같다.</li>
<li>트리의 높이(height)을 H라고 할 때, 엄밀한 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(H)"> 다.</li>
<li>이상적인 경우 H = log2 N로 볼 수 있다.</li>
<li>하지만 최악의 경우(편향된 경우) H = N로 볼 수 있다.</li>
</ul>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the time complexity of the binary search trees in Python</caption>
<colgroup>
<col style="width: 11%">
<col style="width: 33%">
<col style="width: 13%">
<col style="width: 13%">
<col style="width: 13%">
<col style="width: 13%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Methods</th>
<th>조회</th>
<th>삽입</th>
<th>삭제</th>
<th>수정</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>균형 잡힌 이진 탐색 트리</td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(logN)"></td>
</tr>
<tr class="even">
<td>2</td>
<td>편향 이진 탐색 트리</td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(N)"></td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="균형-잡힌-트리-avl-트리" class="level3">
<h3 class="anchored" data-anchor-id="균형-잡힌-트리-avl-트리">균형 잡힌 트리: AVL 트리</h3>
<ul>
<li>AVL stands for <strong>A</strong>delson-<strong>V</strong>elsky and <strong>L</strong>andis</li>
<li>이진 탐색 트리는 편향 트리가 될 수 있으므로, 최악의 경우 <img src="https://latex.codecogs.com/png.latex?O(N)"> 을 요구한다.</li>
<li>반면에 AVL 트리는 균형이 갖춰진 이진 트리다.</li>
<li>간단한 구현 과정으로 완전 이진 트리에 가까운 형태를 유지하도록 한다.</li>
</ul>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">from</span> collections <span class="im" style="color: #00769E;">import</span> deque</span>
<span id="cb5-2"></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb5-5">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, key):</span>
<span id="cb5-6">        <span class="va" style="color: #111111;">self</span>.key <span class="op" style="color: #5E5E5E;">=</span> key</span>
<span id="cb5-7">        <span class="va" style="color: #111111;">self</span>.left <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-8">        <span class="va" style="color: #111111;">self</span>.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;">class</span> BinarySearchTree:</span>
<span id="cb5-12">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-13">        <span class="va" style="color: #111111;">self</span>.root <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-14"></span>
<span id="cb5-15">    <span class="kw" style="color: #003B4F;">def</span> search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-16">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(<span class="va" style="color: #111111;">self</span>.root, key)</span>
<span id="cb5-17"></span>
<span id="cb5-18">    <span class="kw" style="color: #003B4F;">def</span> _search(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-19">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span> <span class="kw" style="color: #003B4F;">or</span> node.key <span class="op" style="color: #5E5E5E;">==</span> key:</span>
<span id="cb5-20">            <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb5-21"></span>
<span id="cb5-22">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb5-23">        <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb5-24">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.left, key)</span>
<span id="cb5-25">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb5-26">        <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb5-27">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._search(node.right, key)</span>
<span id="cb5-28"></span>
<span id="cb5-29">    <span class="kw" style="color: #003B4F;">def</span> insert(<span class="va" style="color: #111111;">self</span>, key):</span>
<span id="cb5-30">        <span class="va" style="color: #111111;">self</span>.root <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._insert(<span class="va" style="color: #111111;">self</span>.root, key)</span>
<span id="cb5-31"></span>
<span id="cb5-32">    <span class="kw" style="color: #003B4F;">def</span> _insert(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-33">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-34">            <span class="cf" style="color: #003B4F;">return</span> Node(key)</span>
<span id="cb5-35"></span>
<span id="cb5-36">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb5-37">        <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb5-38">            node.left <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._insert(node.left, key)</span>
<span id="cb5-39">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb5-40">        <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb5-41">            node.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._insert(node.right, key)</span>
<span id="cb5-42"></span>
<span id="cb5-43">        <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb5-44"></span>
<span id="cb5-45">    <span class="kw" style="color: #003B4F;">def</span> delete(<span class="va" style="color: #111111;">self</span>, key):</span>
<span id="cb5-46">        <span class="va" style="color: #111111;">self</span>.root <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(<span class="va" style="color: #111111;">self</span>.root, key)</span>
<span id="cb5-47"></span>
<span id="cb5-48">    <span class="kw" style="color: #003B4F;">def</span> _delete(<span class="va" style="color: #111111;">self</span>, node, key):</span>
<span id="cb5-49">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-50">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb5-51"></span>
<span id="cb5-52">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 작은 경우</span></span>
<span id="cb5-53">        <span class="cf" style="color: #003B4F;">if</span> node.key <span class="op" style="color: #5E5E5E;">&gt;</span> key:</span>
<span id="cb5-54">            node.left <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(node.left, key)</span>
<span id="cb5-55">        <span class="co" style="color: #5E5E5E;"># 현재 노드의 key보다 큰 경우</span></span>
<span id="cb5-56">        <span class="cf" style="color: #003B4F;">elif</span> node.key <span class="op" style="color: #5E5E5E;">&lt;</span> key:</span>
<span id="cb5-57">            node.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(node.right, key)</span>
<span id="cb5-58">        <span class="co" style="color: #5E5E5E;"># 삭제할 노드를 찾은 경우</span></span>
<span id="cb5-59">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb5-60">            <span class="co" style="color: #5E5E5E;"># 왼쪽 자식이 없는 경우</span></span>
<span id="cb5-61">            <span class="cf" style="color: #003B4F;">if</span> node.left <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-62">                <span class="cf" style="color: #003B4F;">return</span> node.right</span>
<span id="cb5-63">            <span class="co" style="color: #5E5E5E;"># 오른쪽 자식이 없는 경우</span></span>
<span id="cb5-64">            <span class="cf" style="color: #003B4F;">elif</span> node.right <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-65">                <span class="cf" style="color: #003B4F;">return</span> node.left</span>
<span id="cb5-66">            <span class="co" style="color: #5E5E5E;"># 왼쪽과 오른쪽 자식 모두 있는 경우</span></span>
<span id="cb5-67">            node.key <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._get_min(node.right)</span>
<span id="cb5-68">            node.right <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>._delete(node.right, node.key)</span>
<span id="cb5-69"></span>
<span id="cb5-70">        <span class="cf" style="color: #003B4F;">return</span> node</span>
<span id="cb5-71"></span>
<span id="cb5-72">    <span class="kw" style="color: #003B4F;">def</span> _get_min(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-73">        key <span class="op" style="color: #5E5E5E;">=</span> node.key</span>
<span id="cb5-74">        <span class="cf" style="color: #003B4F;">while</span> node.left:</span>
<span id="cb5-75">            key <span class="op" style="color: #5E5E5E;">=</span> node.left.key</span>
<span id="cb5-76">            node <span class="op" style="color: #5E5E5E;">=</span> node.left</span>
<span id="cb5-77">        <span class="cf" style="color: #003B4F;">return</span> key</span>
<span id="cb5-78"></span>
<span id="cb5-79">    <span class="kw" style="color: #003B4F;">def</span> preorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-80">        <span class="va" style="color: #111111;">self</span>._preorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-81"></span>
<span id="cb5-82">    <span class="kw" style="color: #003B4F;">def</span> _preorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-83">        <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-84">            <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-85">            <span class="va" style="color: #111111;">self</span>._preorder(node.left)</span>
<span id="cb5-86">            <span class="va" style="color: #111111;">self</span>._preorder(node.right)</span>
<span id="cb5-87"></span>
<span id="cb5-88">    <span class="kw" style="color: #003B4F;">def</span> inorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-89">        <span class="va" style="color: #111111;">self</span>._inorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-90"></span>
<span id="cb5-91">    <span class="kw" style="color: #003B4F;">def</span> _inorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-92">        <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-93">            <span class="va" style="color: #111111;">self</span>._inorder(node.left)</span>
<span id="cb5-94">            <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-95">            <span class="va" style="color: #111111;">self</span>._inorder(node.right)</span>
<span id="cb5-96"></span>
<span id="cb5-97">    <span class="kw" style="color: #003B4F;">def</span> postorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-98">        <span class="va" style="color: #111111;">self</span>._postorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-99"></span>
<span id="cb5-100">    <span class="kw" style="color: #003B4F;">def</span> _postorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-101">        <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-102">            <span class="va" style="color: #111111;">self</span>._postorder(node.left)</span>
<span id="cb5-103">            <span class="va" style="color: #111111;">self</span>._postorder(node.right)</span>
<span id="cb5-104">            <span class="bu" style="color: null;">print</span>(node.key, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-105"></span>
<span id="cb5-106">    <span class="kw" style="color: #003B4F;">def</span> levelorder(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-107">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._levelorder(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-108"></span>
<span id="cb5-109">    <span class="kw" style="color: #003B4F;">def</span> _levelorder(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-110">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-111">            <span class="cf" style="color: #003B4F;">return</span></span>
<span id="cb5-112"></span>
<span id="cb5-113">        result <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb5-114"></span>
<span id="cb5-115">        queue <span class="op" style="color: #5E5E5E;">=</span> deque()</span>
<span id="cb5-116">        queue.append((<span class="dv" style="color: #AD0000;">0</span>, node))  <span class="co" style="color: #5E5E5E;"># (level, node)</span></span>
<span id="cb5-117"></span>
<span id="cb5-118">        <span class="cf" style="color: #003B4F;">while</span> queue:</span>
<span id="cb5-119">            level, node <span class="op" style="color: #5E5E5E;">=</span> queue.popleft()</span>
<span id="cb5-120">            <span class="cf" style="color: #003B4F;">if</span> node:</span>
<span id="cb5-121">                result.append((level, node.key))</span>
<span id="cb5-122">                queue.append((level <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>, node.left))</span>
<span id="cb5-123">                queue.append((level <span class="op" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>, node.right))</span>
<span id="cb5-124"></span>
<span id="cb5-125">        <span class="cf" style="color: #003B4F;">for</span> level, key <span class="kw" style="color: #003B4F;">in</span> result:</span>
<span id="cb5-126">            <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"level: </span><span class="sc" style="color: #5E5E5E;">{</span>level<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">, key: </span><span class="sc" style="color: #5E5E5E;">{</span>key<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb5-127"></span>
<span id="cb5-128">    <span class="kw" style="color: #003B4F;">def</span> to_list(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb5-129">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._to_list(<span class="va" style="color: #111111;">self</span>.root)</span>
<span id="cb5-130"></span>
<span id="cb5-131">    <span class="kw" style="color: #003B4F;">def</span> _to_list(<span class="va" style="color: #111111;">self</span>, node):</span>
<span id="cb5-132">        <span class="cf" style="color: #003B4F;">if</span> node <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb5-133">            <span class="cf" style="color: #003B4F;">return</span> []</span>
<span id="cb5-134">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>._to_list(node.left) <span class="op" style="color: #5E5E5E;">+</span> [node.key] <span class="op" style="color: #5E5E5E;">+</span> <span class="va" style="color: #111111;">self</span>._to_list(</span>
<span id="cb5-135">            node.right)</span>
<span id="cb5-136"></span>
<span id="cb5-137"></span>
<span id="cb5-138">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb5-139">bst <span class="op" style="color: #5E5E5E;">=</span> BinarySearchTree()</span>
<span id="cb5-140"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb5-141">    bst.insert(x)</span>
<span id="cb5-142"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-143">bst.preorder()</span>
<span id="cb5-144"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-145">bst.inorder()</span>
<span id="cb5-146"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-147">bst.postorder()</span>
<span id="cb5-148"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-149">bst.levelorder()</span>
<span id="cb5-150"></span>
<span id="cb5-151">bst.delete(<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb5-152"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-153">bst.preorder()</span>
<span id="cb5-154"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-155">bst.inorder()</span>
<span id="cb5-156"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-157">bst.postorder()</span>
<span id="cb5-158"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-159">bst.levelorder()</span>
<span id="cb5-160"></span>
<span id="cb5-161">bst.delete(<span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-162"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-163">bst.preorder()</span>
<span id="cb5-164"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-165">bst.inorder()</span>
<span id="cb5-166"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-167">bst.postorder()</span>
<span id="cb5-168"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-169">bst.levelorder()</span>
<span id="cb5-170"></span>
<span id="cb5-171">bst.delete(<span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb5-172"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-173">bst.preorder()</span>
<span id="cb5-174"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">중위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-175">bst.inorder()</span>
<span id="cb5-176"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">후위 순회:'</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">' '</span>)</span>
<span id="cb5-177">bst.postorder()</span>
<span id="cb5-178"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[레벨 순회]'</span>)</span>
<span id="cb5-179">bst.levelorder()</span>
<span id="cb5-180"></span>
<span id="cb5-181"><span class="bu" style="color: null;">print</span>(bst.to_list())</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>전위 순회: 7 4 3 2 5 6 9 8 
중위 순회: 2 3 4 5 6 7 8 9 
후위 순회: 2 3 6 5 4 8 9 7 
[레벨 순회]
level: 0, key: 7
level: 1, key: 4
level: 1, key: 9
level: 2, key: 3
level: 2, key: 5
level: 2, key: 8
level: 3, key: 2
level: 3, key: 6

전위 순회: 8 4 3 2 5 6 9 
중위 순회: 2 3 4 5 6 8 9 
후위 순회: 2 3 6 5 4 9 8 
[레벨 순회]
level: 0, key: 8
level: 1, key: 4
level: 1, key: 9
level: 2, key: 3
level: 2, key: 5
level: 3, key: 2
level: 3, key: 6

전위 순회: 8 5 3 2 6 9 
중위 순회: 2 3 5 6 8 9 
후위 순회: 2 3 6 5 9 8 
[레벨 순회]
level: 0, key: 8
level: 1, key: 5
level: 1, key: 9
level: 2, key: 3
level: 2, key: 6
level: 3, key: 2

전위 순회: 8 5 2 6 9 
중위 순회: 2 5 6 8 9 
후위 순회: 2 6 5 9 8 
[레벨 순회]
level: 0, key: 8
level: 1, key: 5
level: 1, key: 9
level: 2, key: 2
level: 2, key: 6
[2, 5, 6, 8, 9]</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
  <media:content url="kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_binary_search_tree/Binary_tree.png" medium="image" type="image/png" height="100" width="144"/>
</item>
<item>
  <title>ANCOVA</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html</link>
  <description><![CDATA[ 



<p>(Draft, 바쁘니까 일단 대충이라도 적어놓음 ㅠ)</p>
<section id="description" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="description"><span class="header-section-number">1</span> Description</h2>
<p>ANCOVA (Analysis of Covariance, ANCOVA)</p>
<ul>
<li>ANOVA에 공변량 (covariate)을 추가하여 분석 수행</li>
<li>공변량을 조정하여 독립변수의 순수한 영향을 검정</li>
<li>공변량: 연속형 변수로 한정</li>
</ul>
</section>
<section id="example" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="example"><span class="header-section-number">2</span> Example</h2>
<section id="load-libraries-and-data" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="load-libraries-and-data"><span class="header-section-number">2.1</span> Load Libraries and Data</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(faraway)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(markdown)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(effects)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(HH)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(psych)</span></code></pre></div>
</details>
</div>
</section>
<section id="data-description" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="data-description"><span class="header-section-number">2.2</span> Data Description</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">str</span>(sexab)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   76 obs. of  3 variables:
 $ cpa : num  2.048 0.839 -0.241 -1.115 2.015 ...
 $ ptsd: num  9.71 6.17 15.16 11.31 9.95 ...
 $ csa : Factor w/ 2 levels "Abused","NotAbused": 1 1 1 1 1 1 1 1 1 1 ...</code></pre>
</div>
</div>
<p>R console에 <code>?sexab</code>를 입력하면 다음과 같은 설명이 나온다.</p>
<p><strong>Post traumatic stress disorder in abused adult females</strong></p>
<p><em>The data for this example come from a study of the effects of childhood sexual abuse on adult females. 45 women being treated at a clinic, who reported childhood sexual abuse, were measured for post traumatic stress disorder and childhood physical abuse both on standardized scales. 31 women also being treated at the same clinic, who did not report childhood sexual abuse were also measured. The full study was more complex than reported here and so readers interested in the subject matter should refer to the original article.</em></p>
<p>즉, 요약하면 아동기에 성폭력을 겸험한 성인들의 정신 건강을 측정한 데이터로서, 아동기의 성폭력 경험과 학대 경험이 성인기의 정신건강에 유의한 영향을 미치는지에 대한 실험을 한 것이다.</p>
<p>이 data는 3개의 변수와 76개의 samples을 포함한다.</p>
<ul>
<li>cpa : Childhood physical abuse on standard scale, covariate</li>
<li>ptsd : post-traumatic stress disorder on standard scale, response variable</li>
<li>csa : Childhood sexual abuse - abused or not abused, independent variable</li>
</ul>
<p>친절하게 response variable, independent variable 및 covariate을 규명해놓았다.</p>
</section>
</section>
<section id="eda" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="eda"><span class="header-section-number">3</span> EDA</h2>
<section id="descriptive-statistics" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="descriptive-statistics"><span class="header-section-number">3.1</span> Descriptive Statistics</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">temp<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">describeBy</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>csa,<span class="at" style="color: #657422;">data=</span>sexab)</span>
<span id="cb4-2">temp<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">rbind</span>(<span class="st" style="color: #20794D;">'abused'</span><span class="ot" style="color: #003B4F;">=</span>temp<span class="sc" style="color: #5E5E5E;">$</span>Abused,<span class="st" style="color: #20794D;">'notAbused'</span><span class="ot" style="color: #003B4F;">=</span>temp<span class="sc" style="color: #5E5E5E;">$</span>NotAbused)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">as.data.frame</span>()</span>
<span id="cb4-4">temp<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<colgroup>
<col style="width: 8%">
<col style="width: 4%">
<col style="width: 2%">
<col style="width: 8%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 7%">
<col style="width: 8%">
<col style="width: 8%">
<col style="width: 8%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: right;">vars</th>
<th style="text-align: right;">n</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">median</th>
<th style="text-align: right;">trimmed</th>
<th style="text-align: right;">mad</th>
<th style="text-align: right;">min</th>
<th style="text-align: right;">max</th>
<th style="text-align: right;">range</th>
<th style="text-align: right;">skew</th>
<th style="text-align: right;">kurtosis</th>
<th style="text-align: right;">se</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">abused</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">45</td>
<td style="text-align: right;">11.941093</td>
<td style="text-align: right;">3.440151</td>
<td style="text-align: right;">11.31277</td>
<td style="text-align: right;">11.883422</td>
<td style="text-align: right;">3.857355</td>
<td style="text-align: right;">5.98491</td>
<td style="text-align: right;">18.99251</td>
<td style="text-align: right;">13.00760</td>
<td style="text-align: right;">0.1556159</td>
<td style="text-align: right;">-0.9124483</td>
<td style="text-align: right;">0.5128275</td>
</tr>
<tr class="even">
<td style="text-align: left;">notAbused</td>
<td style="text-align: right;">1</td>
<td style="text-align: right;">31</td>
<td style="text-align: right;">4.695874</td>
<td style="text-align: right;">3.519743</td>
<td style="text-align: right;">5.79447</td>
<td style="text-align: right;">4.903441</td>
<td style="text-align: right;">1.978841</td>
<td style="text-align: right;">-3.34921</td>
<td style="text-align: right;">10.91447</td>
<td style="text-align: right;">14.26368</td>
<td style="text-align: right;">-0.6589170</td>
<td style="text-align: right;">-0.2008051</td>
<td style="text-align: right;">0.6321645</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>위의 요약된 기술 통계량들 중 표준 편차는 유사하지만 평균 ptsd가 약 7.245219의 차이를 보여준다. 아래의 histogram역시 성폭력을 경험한 그룹과 경험하지 않은 그룹간의 PTSD 수치가 다른것을 볼 수 있다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>ptsd,<span class="at" style="color: #657422;">color=</span>csa,<span class="at" style="color: #657422;">fill=</span>csa))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">y=</span>..density..),<span class="at" style="color: #657422;">position=</span><span class="st" style="color: #20794D;">"identity"</span>,<span class="at" style="color: #657422;">fill=</span><span class="st" style="color: #20794D;">'white'</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">geom_density</span>(<span class="at" style="color: #657422;">alpha=</span><span class="fl" style="color: #AD0000;">0.5</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Histogram, PTSD Grouped by Childhood Sexual Abuse Experience"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"PTSD"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"Desnsity"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="one-way-anova" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="one-way-anova"><span class="header-section-number">3.2</span> One-Way ANOVA</h3>
<p>성폭력 경험 유무에 따른 PTSD 평균 차이가 통계적으로 유의한지 확인하기 위해 ANOVA를 수행한다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">sexab_aov<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">aov</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>csa, <span class="at" style="color: #657422;">data=</span>sexab)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">summary</span>(sexab_aov)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value   Pr(&gt;F)    
csa          1  963.5   963.5    79.9 2.17e-13 ***
Residuals   74  892.4    12.1                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>집단간 변수 csa p value가 &lt;0.05 인 것을 확인할 수 있다. csa는 5% 유의수준에서 유의하다.</p>
<p>하지만 PTSD의 변동량은 아동 학대에 의해 설명될 수도 있기 때문에 ptsd의 평균은 csa뿐만 아니라 cpa에 또한 고려되어야한다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>cpa,<span class="at" style="color: #657422;">y=</span>ptsd))<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_point</span>()<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">"lm"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Scatter Plot, PTSD vs CPA"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"CPA"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"PTSD"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">correlation<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">cor.test</span>(sexab<span class="sc" style="color: #5E5E5E;">$</span>cpa,sexab<span class="sc" style="color: #5E5E5E;">$</span>ptsd, <span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">'pearson'</span>)</span></code></pre></div>
</details>
</div>
<p>그림과 같이 CPA가 증가하면서 PTSD또한 선형적으로 증가하는 패턴을 관찰할 수 있다. 두 변수간의 상관계수 = 0.49이고 p value= 6.2715909^{-6}으로 보아 두 변수 사이에 선형적인 상관관계가 있는 것으로 보인다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">ggplot</span>(<span class="at" style="color: #657422;">data=</span>sexab,<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>cpa,<span class="at" style="color: #657422;">y=</span>ptsd))<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_point</span>()<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method=</span><span class="st" style="color: #20794D;">"lm"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">facet_wrap</span>(.<span class="sc" style="color: #5E5E5E;">~</span>csa)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title=</span><span class="st" style="color: #20794D;">"Scatter Plot, PTSD vs CPA Grouped By CSA"</span>, <span class="at" style="color: #657422;">x=</span><span class="st" style="color: #20794D;">"CPA"</span>, <span class="at" style="color: #657422;">y=</span><span class="st" style="color: #20794D;">"PTSD"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>아동기 성폭력 경험 유/무에도 PTSD와 CPA와 선형적인 관계가 있는 것으로 보이기 때문에 CSA의 PTSD로의 효과를 검정하기 위해선 CPA를 조정할 필요가 있는것으로 보인다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;"># ptsd로의 순수한 성폭력 경험의 영향도를 얻기 위해서는 아동기 신체적 학대(공변량)에 대해서 고려를 해줘야함</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">sexab_aov<span class="ot" style="color: #003B4F;">&lt;-</span><span class="fu" style="color: #4758AB;">aov</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>cpa<span class="sc" style="color: #5E5E5E;">+</span>csa, <span class="at" style="color: #657422;">data=</span>sexab) </span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;">summary</span>(sexab_aov)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>            Df Sum Sq Mean Sq F value   Pr(&gt;F)    
cpa          1  449.8   449.8   41.98 9.46e-09 ***
csa          1  624.0   624.0   58.25 6.91e-11 ***
Residuals   73  782.1    10.7                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>아동기의 신체적 학대가 일정하다는 가정하에서 PTSD와 성폭력의 순수한 관계는 5% 유의수준에서 유의하고 공변량, CPA를 조정하기전과 그 유의성이 차이가 있음을 관찰할 수 있다.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;"># CPA가 제거 된 후에 CSA의 순수한 효과를 알아보기</span></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;">ancova</span>(ptsd<span class="sc" style="color: #5E5E5E;">~</span>cpa<span class="sc" style="color: #5E5E5E;">+</span>csa, <span class="at" style="color: #657422;">data=</span>sexab) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Analysis of Variance Table

Response: ptsd
          Df Sum Sq Mean Sq F value    Pr(&gt;F)    
cpa        1 449.80  449.80  41.984 9.462e-09 ***
csa        1 624.03  624.03  58.247 6.907e-11 ***
Residuals 73 782.08   10.71                      
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>두 csa집단에서 두 회귀선의 기울기 같고 절편이 다르게 나타나는 것을 관찰 할 수있다. 기울기가 같은 이유는 cpa가 ptsd에 영향을 미치는 정도가 두집단에서 일정하도록 공변량으로서 통제 했기 때문이다.</p>
</section>
</section>
<section id="blog-guide-map-link" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">4</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Repeated Meausres ANOVA</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html</link>
  <description><![CDATA[ 



<p>(Draft, 바쁘니까 일단 대충이라도 적어놓음 ㅠ)</p>
<section id="description" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="description"><span class="header-section-number">1</span> Description</h2>
<p>Repeated Meausres ANOVA (반복 측정 분산 분석)</p>
<ul>
<li>동일한 대상에 대해 여러 번 반복측정하여 반복측정(3번 이상) 집단 간에 차이가 존재하는지 검정
<ul>
<li>대응 표본 검정은 동일한 대상에 2번 반복 측정함 2개의 대응표본에 대한 검정</li>
</ul></li>
<li>이 때, 반복 측정 기간은 집단 내 요인이라 부르고 이를 반복측정 일원분산분석-집단내요인이라고 부름</li>
<li>반복측정 기간외에 대상을 구분하는 집단 변수가 포함되면 반복측정 이원분산분석- 집단내요인 &amp; 집단간 요인</li>
</ul>
</section>
<section id="example" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="example"><span class="header-section-number">2</span> Example</h2>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">str</span>(CO2)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Classes 'nfnGroupedData', 'nfGroupedData', 'groupedData' and 'data.frame':  84 obs. of  5 variables:
 $ Plant    : Ord.factor w/ 12 levels "Qn1"&lt;"Qn2"&lt;"Qn3"&lt;..: 1 1 1 1 1 1 1 2 2 2 ...
 $ Type     : Factor w/ 2 levels "Quebec","Mississippi": 1 1 1 1 1 1 1 1 1 1 ...
 $ Treatment: Factor w/ 2 levels "nonchilled","chilled": 1 1 1 1 1 1 1 1 1 1 ...
 $ conc     : num  95 175 250 350 500 675 1000 95 175 250 ...
 $ uptake   : num  16 30.4 34.8 37.2 35.3 39.2 39.7 13.6 27.3 37.1 ...
 - attr(*, "formula")=Class 'formula'  language uptake ~ conc | Plant
  .. ..- attr(*, ".Environment")=&lt;environment: R_EmptyEnv&gt; 
 - attr(*, "outer")=Class 'formula'  language ~Treatment * Type
  .. ..- attr(*, ".Environment")=&lt;environment: R_EmptyEnv&gt; 
 - attr(*, "labels")=List of 2
  ..$ x: chr "Ambient carbon dioxide concentration"
  ..$ y: chr "CO2 uptake rate"
 - attr(*, "units")=List of 2
  ..$ x: chr "(uL/L)"
  ..$ y: chr "(umol/m^2 s)"</code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">names</span>(CO2)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Plant"     "Type"      "Treatment" "conc"      "uptake"   </code></pre>
</div>
</div>
<p>R console에 <code>?CO2</code>를 입력하면 다음과 같은 설명이 나온다.</p>
<p><em>The CO2 data frame has 84 rows and 5 columns of data from an experiment on the cold tolerance of the grass species Echinochloa crus-galli.The <img src="https://latex.codecogs.com/png.latex?CO_2"> uptake of six plants from Quebec and six plants from Mississippi was measured at several levels of ambient <img src="https://latex.codecogs.com/png.latex?CO_2"> concentration. Half the plants of each type were chilled overnight before the experiment was conducted.</em></p>
<p>즉, 식물이 <strong>저온의 환경에서 견디는 정도를 실험한 데이터</strong>로 퀘벡 지역의 6개의 나무와 미시시피 지역의 6개 나무의 이산화 탄소 흡수율을 7개의 서로 다른 이산화 탄소 농도 하에서 반복적으로 측정했다.</p>
<section id="goals" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="goals"><span class="header-section-number">2.1</span> Goals</h3>
<p>분석의 편의를 위해 저온 처리된 나무에 한정하여 분석</p>
<ol type="1">
<li>두 지역간의 CO2흡수율의 차이를 검정</li>
<li>7개의 서로 다른 이산화탄소 농도에 따라서 이산화 탄소의 흡수율 차이를 검정</li>
<li>나무의 출신 지역과 이산화 탄소 흡수율 간의 관계가 이산화탄소 농도에 따라 달라지는 지도 검정</li>
</ol>
</section>
<section id="data-description" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="data-description"><span class="header-section-number">2.2</span> Data Description</h3>
<ul>
<li>Plant: plant id</li>
<li>Type: 나무의 출신 지역, 2개의 범주, 집단간 요인</li>
<li>Treatment: 퀘벡 지역 나무와 미시시피 지역 나무dp 각 각 절반씩 실험 전에 저온 처리 했음, 저온 처리 여부가 treatment 변수에 저장됨</li>
<li>conc: co2농도, 7개의 범주, 집단 내 요인</li>
<li>uptake: 종속 변수, 이산화 탄소 흡수율</li>
</ul>
</section>
<section id="load-libraries-and-data" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="load-libraries-and-data"><span class="header-section-number">2.3</span> Load Libraries and Data</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">library</span>(faraway)</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">library</span>(markdown)</span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;">library</span>(effects)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;">library</span>(HH)</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;">library</span>(psych)</span></code></pre></div>
</details>
</div>
</section>
<section id="eda" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="eda"><span class="header-section-number">2.4</span> EDA</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">data<span class="ot" style="color: #003B4F;">=</span>CO2<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">filter</span>(Treatment<span class="sc" style="color: #5E5E5E;">==</span><span class="st" style="color: #20794D;">'chilled'</span>)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">conc=</span><span class="fu" style="color: #4758AB;">factor</span>(conc),</span>
<span id="cb6-4"><span class="at" style="color: #657422;">type=</span><span class="fu" style="color: #4758AB;">factor</span>(conc))</span></code></pre></div>
</details>
</div>
</section>
<section id="descriptive-statistics" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="descriptive-statistics"><span class="header-section-number">2.5</span> Descriptive Statistics</h3>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">data<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">group_by</span>(Type)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">count=</span><span class="fu" style="color: #4758AB;">n</span>(),</span>
<span id="cb7-4"><span class="at" style="color: #657422;">mean_uptake=</span><span class="fu" style="color: #4758AB;">mean</span>(uptake),</span>
<span id="cb7-5"><span class="at" style="color: #657422;">sd_uptake=</span><span class="fu" style="color: #4758AB;">sd</span>(uptake)</span>
<span id="cb7-6">)<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">Type</th>
<th style="text-align: right;">count</th>
<th style="text-align: right;">mean_uptake</th>
<th style="text-align: right;">sd_uptake</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">31.75238</td>
<td style="text-align: right;">9.644823</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: right;">21</td>
<td style="text-align: right;">15.81429</td>
<td style="text-align: right;">4.058976</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>두 지역의 분산과 평균 흡수율이 차이가 남</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">data<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">group_by</span>(conc)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">count=</span><span class="fu" style="color: #4758AB;">n</span>(),</span>
<span id="cb8-4"><span class="at" style="color: #657422;">mean_uptake=</span><span class="fu" style="color: #4758AB;">mean</span>(uptake),</span>
<span id="cb8-5"><span class="at" style="color: #657422;">sd_uptake=</span><span class="fu" style="color: #4758AB;">sd</span>(uptake)</span>
<span id="cb8-6">)<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">conc</th>
<th style="text-align: right;">count</th>
<th style="text-align: right;">mean_uptake</th>
<th style="text-align: right;">sd_uptake</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">95</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">11.23333</td>
<td style="text-align: right;">2.860536</td>
</tr>
<tr class="even">
<td style="text-align: left;">175</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">19.45000</td>
<td style="text-align: right;">5.886510</td>
</tr>
<tr class="odd">
<td style="text-align: left;">250</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">25.28333</td>
<td style="text-align: right;">10.569090</td>
</tr>
<tr class="even">
<td style="text-align: left;">350</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">26.20000</td>
<td style="text-align: right;">10.831251</td>
</tr>
<tr class="odd">
<td style="text-align: left;">500</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">26.65000</td>
<td style="text-align: right;">11.445479</td>
</tr>
<tr class="even">
<td style="text-align: left;">675</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">27.88333</td>
<td style="text-align: right;">10.958361</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1000</td>
<td style="text-align: right;">6</td>
<td style="text-align: right;">29.78333</td>
<td style="text-align: right;">12.410547</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>농도에 따라서 평균 흡수율과 분산이 약간 차이가 나는 것 같음. 다만, 고농도가 될수록 변화량이 줄어드는 것으로 보임</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">data<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">group_by</span>(Type,conc)<span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">count=</span><span class="fu" style="color: #4758AB;">n</span>(),</span>
<span id="cb9-4"><span class="at" style="color: #657422;">mean_uptake=</span><span class="fu" style="color: #4758AB;">mean</span>(uptake),</span>
<span id="cb9-5"><span class="at" style="color: #657422;">sd_uptake=</span><span class="fu" style="color: #4758AB;">sd</span>(uptake)</span>
<span id="cb9-6">)<span class="sc" style="color: #5E5E5E;">%&gt;%</span>knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">
<table class="table table-sm table-striped">
<thead>
<tr class="header">
<th style="text-align: left;">Type</th>
<th style="text-align: left;">conc</th>
<th style="text-align: right;">count</th>
<th style="text-align: right;">mean_uptake</th>
<th style="text-align: right;">sd_uptake</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">95</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">12.86667</td>
<td style="text-align: right;">3.121431</td>
</tr>
<tr class="even">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">175</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">24.13333</td>
<td style="text-align: right;">3.150132</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">250</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">34.46667</td>
<td style="text-align: right;">3.927255</td>
</tr>
<tr class="even">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">350</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">35.80000</td>
<td style="text-align: right;">2.615339</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">500</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">36.66667</td>
<td style="text-align: right;">3.611556</td>
</tr>
<tr class="even">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">675</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">37.50000</td>
<td style="text-align: right;">2.100000</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Quebec</td>
<td style="text-align: left;">1000</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">40.83333</td>
<td style="text-align: right;">1.913984</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">95</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">9.60000</td>
<td style="text-align: right;">1.646208</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">175</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">14.76667</td>
<td style="text-align: right;">3.302020</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">250</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">16.10000</td>
<td style="text-align: right;">3.292416</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">350</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">16.60000</td>
<td style="text-align: right;">3.157531</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">500</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">16.63333</td>
<td style="text-align: right;">3.667879</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">675</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">18.26667</td>
<td style="text-align: right;">4.285246</td>
</tr>
<tr class="even">
<td style="text-align: left;">Mississippi</td>
<td style="text-align: left;">1000</td>
<td style="text-align: right;">3</td>
<td style="text-align: right;">18.73333</td>
<td style="text-align: right;">3.883727</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>농도가 증가함에 따라 지역간 평균 흡수율의 차이가 커지는 것을 관찰할 수 있음</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">boxplot</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>Type<span class="sc" style="color: #5E5E5E;">*</span>conc,<span class="at" style="color: #657422;">data=</span>data,<span class="at" style="color: #657422;">col=</span><span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"darkblue"</span>,<span class="st" style="color: #20794D;">"darkred"</span>),</span>
<span id="cb10-2">        <span class="at" style="color: #657422;">las=</span><span class="dv" style="color: #AD0000;">2</span>,<span class="at" style="color: #657422;">cex.axis=</span><span class="fl" style="color: #AD0000;">0.7</span>,<span class="at" style="color: #657422;">xlab=</span><span class="st" style="color: #20794D;">""</span>,<span class="at" style="color: #657422;">ylab=</span><span class="st" style="color: #20794D;">"Carbon Dioxide Uptake Rate"</span>,</span>
<span id="cb10-3">        <span class="at" style="color: #657422;">main=</span><span class="st" style="color: #20794D;">"Effects of Plant Ype and CO2 on Carbon Dioxide Uptake"</span>)</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;">legend</span>(<span class="st" style="color: #20794D;">"topleft"</span>,<span class="at" style="color: #657422;">inset=</span><span class="fl" style="color: #AD0000;">0.025</span>, <span class="at" style="color: #657422;">legend=</span><span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Quebec"</span>,<span class="st" style="color: #20794D;">"Mississippi"</span>),</span>
<span id="cb10-5">       <span class="at" style="color: #657422;">fill=</span><span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"darkblue"</span>,<span class="st" style="color: #20794D;">"darkred"</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_rmANOVA/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="one-wway-anova" class="level3" data-number="2.6">
<h3 data-number="2.6" class="anchored" data-anchor-id="one-wway-anova"><span class="header-section-number">2.6</span> One-Wway ANOVA</h3>
<p>반복 측정 일원분산분석: y~W+Error(subject) where W= a within grouping variable, subject= a sample identifier</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">aov</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>Type<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">Error</span>(Plant),<span class="at" style="color: #657422;">data=</span>data)<span class="sc" style="color: #5E5E5E;">%&gt;%</span><span class="fu" style="color: #4758AB;">summary</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
Error: Plant
          Df Sum Sq Mean Sq F value  Pr(&gt;F)   
Type       1 2667.2  2667.2   60.41 0.00148 **
Residuals  4  176.6    44.1                   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Error: Within
          Df Sum Sq Mean Sq F value Pr(&gt;F)
Residuals 36   2013   55.93               </code></pre>
</div>
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">aov</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>conc<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">Error</span>(Plant),<span class="at" style="color: #657422;">data=</span>data)<span class="sc" style="color: #5E5E5E;">%&gt;%</span><span class="fu" style="color: #4758AB;">summary</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
Error: Plant
          Df Sum Sq Mean Sq F value Pr(&gt;F)
Residuals  5   2844   568.8               

Error: Within
          Df Sum Sq Mean Sq F value   Pr(&gt;F)    
conc       6   1472  245.40   13.61 2.09e-07 ***
Residuals 30    541   18.03                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>지역간 농도간 평균 흡수율이 차이가 5% 유의수준에서 유의하다.</p>
</section>
<section id="two-wway-anova" class="level3" data-number="2.7">
<h3 data-number="2.7" class="anchored" data-anchor-id="two-wway-anova"><span class="header-section-number">2.7</span> Two-Wway ANOVA</h3>
<p>반복측정 이원분산 분석: y~B*W+Error(subject/W) where W= within grouping variable, B =Between Group Variable, and subject= a sample identifier</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">aov</span>(uptake<span class="sc" style="color: #5E5E5E;">~</span>Type<span class="sc" style="color: #5E5E5E;">*</span>conc<span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">Error</span>(Plant<span class="sc" style="color: #5E5E5E;">/</span>conc),<span class="at" style="color: #657422;">data=</span>data)<span class="sc" style="color: #5E5E5E;">%&gt;%</span><span class="fu" style="color: #4758AB;">summary</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
Error: Plant
          Df Sum Sq Mean Sq F value  Pr(&gt;F)   
Type       1 2667.2  2667.2   60.41 0.00148 **
Residuals  4  176.6    44.1                   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Error: Plant:conc
          Df Sum Sq Mean Sq F value   Pr(&gt;F)    
conc       6 1472.4  245.40   52.52 1.26e-12 ***
Type:conc  6  428.8   71.47   15.30 3.75e-07 ***
Residuals 24  112.1    4.67                     
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1</code></pre>
</div>
</div>
<p>지역간 농도간 집단간에서 흡수율 차이가 유의한것으로 나타나고 둘의 상호작용 또한 5% 유의수준에서 유의하다.</p>
</section>
</section>
<section id="blog-guide-map-link" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="blog-guide-map-link"><span class="header-section-number">3</span> Blog Guide Map Link</h2>
<ul>
<li><a href="../../../../../docs/blog/posts/statistics/guide_map/index.html">Statistics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Engineering/guide_map/index.html">Engineering Blog</a></li>
<li><a href="../../../../../docs/blog/posts/DL/guide_map/index.html">Deep Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/ML/guide_map/index.html">Machine Learning Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Mathmatics/guide_map/index.html">Mathematics Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Patent/guide_map/index.html">Patent Blog</a></li>
<li><a href="../../../../../docs/blog/posts/Validation/guide_map/index.html">Validation Blog</a></li>
</ul>


</section>

 ]]></description>
  <category>Statistics</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Validation</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Validation/guide_map/index.html</link>
  <description><![CDATA[ 



<section id="sgs" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="sgs"><span class="header-section-number">1</span> SGS</h2>
<ul>
<li>0000-00-00, EN62304</li>
</ul>
</section>
<section id="fda" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="fda"><span class="header-section-number">2</span> FDA</h2>
<ul>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html">General Guidance of SW Validation</a></li>
<li>2023-01-27, <a href="../../../../../docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html">General Guidance of SW Validation, Diagram Summary</a></li>
</ul>
</section>
<section id="dhf" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="dhf"><span class="header-section-number">3</span> DHF</h2>
</section>
<section id="public-health" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="public-health"><span class="header-section-number">4</span> Public Health</h2>
</section>
<section id="wet-lab" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="wet-lab"><span class="header-section-number">5</span> Wet Lab</h2>
<ul>
<li>0000-00-00, PCR (Polymerase Chain Reaction) Experiment</li>
</ul>


</section>

 ]]></description>
  <category>Validation</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Validation/guide_map/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (7) Deque</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_deque/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="덱deque" class="level2">
<h2 class="anchored" data-anchor-id="덱deque">덱(Deque)</h2>
<ul>
<li>덱은 스택(stack)과 큐(queue)의 기능을 모두 가지고 있다.</li>
<li>그래서, 스택과 큐대신 덱을 사용해도 괜찮음</li>
<li>다만, 포인터 변수가 더 많이 필요하기 때문에, 메모리는 상대적으로 더 많이 필요하다.</li>
<li>Python에서는 큐(queue)의 기능이 필요할 때 간단히 덱(deque)을 사용한다.</li>
<li>데이터의 삭제와 삽입 모두에서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 의 시간 복잡도가 소요된다.</li>
<li>덱에 여러 개의 데이터를 삽입하고 삭제하는 예시를 확인해 보자.</li>
</ul>
<p>[12개의 전체 연산]</p>
<ul>
<li>좌측으로부터 삽입 연산이 가능</li>
<li>우측으로부터 삽입 연산이 가능</li>
<li>삭제 연산시 우측/좌측 선택적 삭제가 가능</li>
</ul>
</section>
<section id="덱deque의-시간-복잡도" class="level2">
<h2 class="anchored" data-anchor-id="덱deque의-시간-복잡도">덱(Deque)의 시간 복잡도</h2>
<p>• 데이터의 삭제와 삽입 모두에서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 의 시간 복잡도가 소요된다.</p>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the deque functions in Python</caption>
<colgroup>
<col style="width: 7%">
<col style="width: 16%">
<col style="width: 15%">
<col style="width: 59%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Methods</th>
<th>Time Complexity</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>append left</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 왼쪽에 새 데이터를 삽입</td>
</tr>
<tr class="even">
<td>2</td>
<td>pop left</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 왼쪽에서 데이터를 추출</td>
</tr>
<tr class="odd">
<td>3</td>
<td>append right</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 오른쪽에 새 데이터를 삽입</td>
</tr>
<tr class="even">
<td>4</td>
<td>pop right</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>덱의 가장 오른쪽에서 데이터를 추출</td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="파이썬의-덱deque-라이브러리" class="level2">
<h2 class="anchored" data-anchor-id="파이썬의-덱deque-라이브러리">파이썬의 덱(Deque) 라이브러리</h2>
<ul>
<li>Python에서는 덱(deque) 라이브러리를 사용할 수 있다.</li>
<li>아래의 모든 메서드는 최악의 경우 시간 복잡도 O 1 을 보장한다.</li>
<li>우측 삽입: append()</li>
<li>좌측 삽입: appendleft()</li>
<li>우측 추출: pop()</li>
<li>좌측 추출: popleft()</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">from</span> collections <span class="im" style="color: #00769E;">import</span> deque</span>
<span id="cb1-2"></span>
<span id="cb1-3"></span>
<span id="cb1-4">d <span class="op" style="color: #5E5E5E;">=</span> deque()</span>
<span id="cb1-5">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>] </span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-7">    d.append(x) <span class="co" style="color: #5E5E5E;"># 오른쪽 삽입</span></span>
<span id="cb1-8">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-10">    d.appendleft(x) <span class="co" style="color: #5E5E5E;"># 좌측 삽입</span></span>
<span id="cb1-11"><span class="bu" style="color: null;">print</span>(d)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="cf" style="color: #003B4F;">while</span> d:</span>
<span id="cb1-14">    <span class="bu" style="color: null;">print</span>(d.popleft()) <span class="co" style="color: #5E5E5E;"># 좌측 삭제</span></span>
<span id="cb1-15"></span>
<span id="cb1-16">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb1-17"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-18">    d.appendleft(x)</span>
<span id="cb1-19"><span class="bu" style="color: null;">print</span>(d)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb1-22">    <span class="bu" style="color: null;">print</span>(d.pop())</span>
<span id="cb1-23">    <span class="cf" style="color: #003B4F;">if</span> <span class="kw" style="color: #003B4F;">not</span> d:</span>
<span id="cb1-24">        <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb1-25">    <span class="bu" style="color: null;">print</span>(d.popleft())</span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;">if</span> <span class="kw" style="color: #003B4F;">not</span> d:</span>
<span id="cb1-27">        <span class="cf" style="color: #003B4F;">break</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>deque([1, 2, 3, 4, 5, 6, 7, 8])
1
2
3
4
5
6
7
8
deque([8, 7, 6, 5, 4, 3, 2, 1])
1
8
2
7
3
6
4
5</code></pre>
</div>
</div>
<section id="python에서-deque을-사용하는-경우" class="level3">
<h3 class="anchored" data-anchor-id="python에서-deque을-사용하는-경우">Python에서 Deque을 사용하는 경우</h3>
<ul>
<li>기본적인 Python의 리스트 자료형은 큐(queue)의 기능을 제공하지 않는다.</li>
<li>가능하다면 Python에서 제공하는 덱(deque) 라이브러리를 사용한다.</li>
<li>큐(queue)의 기능이 필요할 때는 덱 라이브러리를 사용하는 것을 추천한다.</li>
<li>삽입과 삭제에 대하여 모두 시간 복잡도 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이 요구된다.</li>
</ul>
</section>
</section>
<section id="연결-리스트로-덱-구현하기" class="level2">
<h2 class="anchored" data-anchor-id="연결-리스트로-덱-구현하기">연결 리스트로 덱 구현하기</h2>
<ul>
<li>덱(deque)을 연결 리스트로 구현하면, 삽입과 삭제에 있어서 O 1 을 보장할 수 있다.</li>
<li>연결 리스트로 구현할 때는 앞(front)과 뒤(rear) 두 개의 포인터를 가진다.</li>
<li>앞(front): 가장 좌측에 있는 데이터를 가리키는 포인터</li>
<li>뒤(rear): 가장 우측에 있는 데이터를 가리키는 포인터</li>
<li>삽입과 삭제의 구현 방법은 스택 및 큐와 유사하다.</li>
<li>앞(front)과 뒤(rear)에 대하여 대칭적으로 로직이 구현될 수 있다.</li>
</ul>
<section id="좌측-삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="좌측-삽입-연산">좌측 삽입 연산</h3>
<ul>
<li>좌측 삽입할 때는 앞(front) 위치에 데이터를 넣는다.</li>
<li>새로운 데이터가 삽입되었을 때 front data와 연결이 먼저 된 후 front data의 이전 노드가 새로운 데이터가 되도록 설정</li>
</ul>
</section>
<section id="좌측-삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="좌측-삭제-연산">좌측 삭제 연산</h3>
<ul>
<li>삭제할 때는 앞(front) 위치에서 데이터를 꺼낸다. 즉, 그냥 front를 그 다음 데이터로 설정하면 됨</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb3-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-3">        <span class="va" style="color: #111111;">self</span>.data <span class="op" style="color: #5E5E5E;">=</span> data</span>
<span id="cb3-4">        <span class="va" style="color: #111111;">self</span>.prev <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-5">        <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;">class</span> Deque:</span>
<span id="cb3-9">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-10">        <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-11">        <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-12">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb3-13"></span>
<span id="cb3-14">    <span class="kw" style="color: #003B4F;">def</span> appendleft(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-15">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb3-16">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-17">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-18">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-20">            node.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front</span>
<span id="cb3-21">            <span class="va" style="color: #111111;">self</span>.front.prev <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-22">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-23">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-24"></span>
<span id="cb3-25">    <span class="kw" style="color: #003B4F;">def</span> append(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-26">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb3-27">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-28">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-29">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-30">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-31">            node.prev <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.rear</span>
<span id="cb3-32">            <span class="va" style="color: #111111;">self</span>.rear.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-33">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-34">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-35"></span>
<span id="cb3-36">    <span class="kw" style="color: #003B4F;">def</span> popleft(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-37">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-38">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-39">        <span class="co" style="color: #5E5E5E;"># 앞에서 노드 꺼내기</span></span>
<span id="cb3-40">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front.data</span>
<span id="cb3-41">        <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-42">        <span class="co" style="color: #5E5E5E;"># 삭제로 인해 노드가 하나도 없는 경우</span></span>
<span id="cb3-43">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-44">            <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-45">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-46">            <span class="va" style="color: #111111;">self</span>.front.prev <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-47">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">-=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-48">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb3-49"></span>
<span id="cb3-50">    <span class="kw" style="color: #003B4F;">def</span> pop(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-51">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-52">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-53">        <span class="co" style="color: #5E5E5E;"># 뒤에서 노드 꺼내기</span></span>
<span id="cb3-54">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.rear.data</span>
<span id="cb3-55">        <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.rear.prev</span>
<span id="cb3-56">        <span class="co" style="color: #5E5E5E;"># 삭제로 인해 노드가 하나도 없는 경우</span></span>
<span id="cb3-57">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.rear <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-58">            <span class="va" style="color: #111111;">self</span>.front <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-59">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb3-60">            <span class="va" style="color: #111111;">self</span>.rear.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-61">        <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">-=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-62">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb3-63"></span>
<span id="cb3-64">    <span class="kw" style="color: #003B4F;">def</span> front(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-65">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-66">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-67">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.front.data</span>
<span id="cb3-68"></span>
<span id="cb3-69">    <span class="kw" style="color: #003B4F;">def</span> rear(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-70">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-71">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-72">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.rear.data</span>
<span id="cb3-73"></span>
<span id="cb3-74">    <span class="co" style="color: #5E5E5E;"># 앞에서부터 원소 출력</span></span>
<span id="cb3-75">    <span class="kw" style="color: #003B4F;">def</span> show(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-76">        cur <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.front</span>
<span id="cb3-77">        <span class="cf" style="color: #003B4F;">while</span> cur:</span>
<span id="cb3-78">            <span class="bu" style="color: null;">print</span>(cur.data, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb3-79">            cur <span class="op" style="color: #5E5E5E;">=</span> cur.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-80"></span>
<span id="cb3-81"></span>
<span id="cb3-82">d <span class="op" style="color: #5E5E5E;">=</span> Deque()</span>
<span id="cb3-83">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb3-84"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-85">    d.append(x)</span>
<span id="cb3-86">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb3-87"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-88">    d.appendleft(x)</span>
<span id="cb3-89">d.show()</span>
<span id="cb3-90"></span>
<span id="cb3-91"><span class="bu" style="color: null;">print</span>()</span>
<span id="cb3-92"><span class="cf" style="color: #003B4F;">while</span> d.size <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-93">    <span class="bu" style="color: null;">print</span>(d.popleft())</span>
<span id="cb3-94"></span>
<span id="cb3-95">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">8</span>]</span>
<span id="cb3-96"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-97">    d.appendleft(x)</span>
<span id="cb3-98">d.show()</span>
<span id="cb3-99"></span>
<span id="cb3-100"><span class="bu" style="color: null;">print</span>()</span>
<span id="cb3-101"><span class="cf" style="color: #003B4F;">while</span> <span class="va" style="color: #111111;">True</span>:</span>
<span id="cb3-102">    <span class="bu" style="color: null;">print</span>(d.pop())</span>
<span id="cb3-103">    <span class="cf" style="color: #003B4F;">if</span> d.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-104">        <span class="cf" style="color: #003B4F;">break</span></span>
<span id="cb3-105">    <span class="bu" style="color: null;">print</span>(d.popleft())</span>
<span id="cb3-106">    <span class="cf" style="color: #003B4F;">if</span> d.size <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb3-107">        <span class="cf" style="color: #003B4F;">break</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>1 2 3 4 5 6 7 8 
1
2
3
4
5
6
7
8
8 7 6 5 4 3 2 1 
1
8
2
7
3
6
4
5</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_deque/index.html</guid>
  <pubDate>Wed, 25 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Guide Map, Engineering</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/index.html</link>
  <description><![CDATA[ 



<section id="it-terminology" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="it-terminology"><span class="header-section-number">1</span> IT Terminology</h2>
<ul>
<li>0000-00-00, PoC (Proof of Concept)</li>
</ul>
</section>
<section id="data-structure" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="data-structure"><span class="header-section-number">2</span> Data Structure</h2>
<ul>
<li>2023-01-17, <a href="../2023-01-17_data_structure_overview/">Overview</a></li>
<li>2023-01-18, <a href="../2023-01-18_array/">Array</a></li>
<li>2023-01-18, <a href="../2023-01-18_linked_list/">Linked List</a></li>
<li>2023-01-18, <a href="../2023-01-18_python_list/">Python List</a></li>
<li>2023-01-19, <a href="../2023-01-19_stack/">Stack</a></li>
<li>2023-01-19, <a href="../2023-01-19_queue/">Queue</a></li>
<li>2023-01-26, <a href="../2023-01-19_deque/">Deque</a></li>
<li>2023-01-26, <a href="../2023-01-20_binary_search_tree/">Binary Search Tree</a></li>
<li>2023-01-20, <a href="../2023-01-20_priority_queue/">Priority Queue</a></li>
<li>2023-01-20, <a href="../2023-01-20_graph/">Graph</a></li>
</ul>
</section>
<section id="conda" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="conda"><span class="header-section-number">3</span> Conda</h2>
</section>
<section id="docker" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="docker"><span class="header-section-number">4</span> Docker</h2>
<ul>
<li>2023-01-30, Docker Install</li>
<li>2023-01-31, Docker Compose</li>
<li>2023-02-01, Docker Container</li>
</ul>
</section>
<section id="dynamic-documentation" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="dynamic-documentation"><span class="header-section-number">5</span> Dynamic Documentation</h2>
<ul>
<li>2023-01-19, <a href="https://quarto.org/docs/get-started/">Quarto</a></li>
<li>2023-01-19, <a href="https://github.com/yihui/xaringan">xaringan[R]</a></li>
<li>2023-01-19, <a href="https://bookdown.org/yihui/bookdown/get-started.html">Bookdown[R]</a></li>
<li>2023-01-19, <a href="https://decile-team-distil.readthedocs.io/en/latest/index.html">DISTL</a></li>
<li>2023-01-26, <a href="https://www.sphinx-doc.org/en/master/">Sphinx[Python]</a></li>
</ul>
</section>
<section id="aws-cloud" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="aws-cloud"><span class="header-section-number">6</span> AWS Cloud</h2>
</section>
<section id="azure-cloud" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="azure-cloud"><span class="header-section-number">7</span> Azure Cloud</h2>
</section>
<section id="data-modeling" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="data-modeling"><span class="header-section-number">8</span> Data Modeling</h2>
</section>
<section id="apache-airflow" class="level2" data-number="9">
<h2 data-number="9" class="anchored" data-anchor-id="apache-airflow"><span class="header-section-number">9</span> Apache Airflow</h2>
</section>
<section id="apache-spark" class="level2" data-number="10">
<h2 data-number="10" class="anchored" data-anchor-id="apache-spark"><span class="header-section-number">10</span> Apache Spark</h2>
</section>
<section id="front-end" class="level2" data-number="11">
<h2 data-number="11" class="anchored" data-anchor-id="front-end"><span class="header-section-number">11</span> Front End</h2>
</section>
<section id="back-end" class="level2" data-number="12">
<h2 data-number="12" class="anchored" data-anchor-id="back-end"><span class="header-section-number">12</span> Back End</h2>


</section>

 ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/guide_map/index.html</guid>
  <pubDate>Wed, 25 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (10) Graph</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_graph/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="그래프graph" class="level2">
<h2 class="anchored" data-anchor-id="그래프graph">그래프(Graph)</h2>
<p>• 그래프(graph)란 사물을 정점(vertex)과 간선(edge)으로 나타내기 위한 도구다.</p>
<p>• 그래프는 두 가지 방식으로 구현할 수 있다.</p>
<ol type="1">
<li><p>인접 행렬(adjacency matrix): 2차원 배열을 사용하는 방식</p></li>
<li><p>인접 리스트(adjacency list): 연결 리스트를 이용하는 방식</p></li>
</ol>
</section>
<section id="인접-행렬adjacency-matrix" class="level2">
<h2 class="anchored" data-anchor-id="인접-행렬adjacency-matrix">인접 행렬(Adjacency Matrix)</h2>
<p>• 인접 행렬(adjacency matrix)에서는 그래프를 2차원 배열로 표현한다.</p>
<section id="인접-행렬---무방향-무가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-행렬---무방향-무가중치-그래프">인접 행렬 - 무방향 무가중치 그래프</h3>
<p>• 모든 간선이 방향성을 가지지 않는 그래프를 무방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 없는 그래프를 무가중치 그래프라고 한다.</p>
<p>• 무방향 무가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 행렬로 출력할 수 있다.</p>
</section>
<section id="인접-행렬---방향-가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-행렬---방향-가중치-그래프">인접 행렬 - 방향 가중치 그래프</h3>
<p>• 모든 간선이 방향을 가지는 그래프를 방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 있는 그래프를 가중치 그래프라고 한다.</p>
<p>• 방향 가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 행렬로 출력할 수 있다.</p>
</section>
</section>
<section id="인접-리스트adjacency-list" class="level2">
<h2 class="anchored" data-anchor-id="인접-리스트adjacency-list">인접 리스트(Adjacency List)</h2>
<p>• 인접 리스트(adjacency list)에서는 그래프를 리스트로 표현한다.</p>
<section id="인접-리스트---무방향-무가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-리스트---무방향-무가중치-그래프">인접 리스트 - 무방향 무가중치 그래프</h3>
<p>• 모든 간선이 방향성을 가지지 않는 그래프를 무방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 없는 그래프를 무가중치 그래프라고 한다.</p>
<p>• 무방향 무가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 리스트로 출력할 수 있다.</p>
</section>
<section id="인접-리스트---방향-가중치-그래프" class="level3">
<h3 class="anchored" data-anchor-id="인접-리스트---방향-가중치-그래프">인접 리스트 - 방향 가중치 그래프</h3>
<p>• 모든 간선이 방향을 가지는 그래프를 방향 그래프라고 한다.</p>
<p>• 모든 간선에 가중치가 있는 그래프를 가중치 그래프라고 한다.</p>
<p>• 방향 가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 리스트로 출력할 수 있다.</p>
</section>
</section>
<section id="그래프의-시간-복잡도" class="level2">
<h2 class="anchored" data-anchor-id="그래프의-시간-복잡도">그래프의 시간 복잡도</h2>
<ol type="1">
<li>인접 행렬: 모든 정점들의 연결 여부를 저장해 O V</li>
</ol>
<p>2 의 공간을 요구한다.</p>
<p>• 공간 효율성이 떨어지지만, 두 노드의 연결 여부를 O 1 에 확인할 수 있다.</p>
<ol start="2" type="1">
<li>인접 리스트: 연결된 간선의 정보만을 저장하여 O V + E 의 공간을 요구한다.</li>
</ol>
<p>• 공간 효율성이 우수하지만, 두 노드의 연결 여부를 확인하기 위해 O V 의 시간이 필요하다.</p>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the stack functions in Python</caption>
<colgroup>
<col style="width: 11%">
<col style="width: 26%">
<col style="width: 22%">
<col style="width: 39%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Category</th>
<th>필요한 메모리</th>
<th>연결 여부 확인</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>인접 행렬</td>
<td><img src="https://latex.codecogs.com/png.latex?O(V%5E2)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
</tr>
<tr class="even">
<td>2</td>
<td>인접 리스트</td>
<td><img src="https://latex.codecogs.com/png.latex?O(V+E)"></td>
<td><img src="https://latex.codecogs.com/png.latex?O(V)"></td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="인접-행렬-vs.-인접-리스트" class="level2">
<h2 class="anchored" data-anchor-id="인접-행렬-vs.-인접-리스트">인접 행렬 vs.&nbsp;인접 리스트</h2>
<p>• 최단 경로 알고리즘을 구현할 때, 어떤 자료구조가 유용할까?</p>
<p>• 각각 근처의 노드와 연결되어 있는 경우가 많으므로, 간선 개수가 적어 인접 리스트가 유리하다.</p>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-20_graph/index.html</guid>
  <pubDate>Thu, 19 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (6) Queue</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_queue/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="queue" class="level2">
<h2 class="anchored" data-anchor-id="queue">Queue</h2>
<ul>
<li>큐(queue)는 먼저 삽입된 데이터가 먼저 추출되는 자료구조(data structure)다. (First-In First-Out)</li>
<li>딥러닝 모델에 들어가는 데이터 순서대로 들어가는데 먼저 들어간 데이터는 먼저 나오게 할때 사용되는 자료 구조이다.</li>
</ul>
</section>
<section id="연결-리스트로-큐-구현" class="level2">
<h2 class="anchored" data-anchor-id="연결-리스트로-큐-구현">연결 리스트로 큐 구현</h2>
<ul>
<li>큐를 연결 리스트로 구현하면, 삽입과 삭제에 있어서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 을 보장할 수 있다.</li>
<li>연결 리스트로 구현할 때는 머리(head)와 꼬리(tail) 두 개의 포인터를 가진다.</li>
<li>머리(head): 남아있는 원소 중 가장 먼저 들어 온 데이터를 가리키는 포인터</li>
<li>꼬리(tail): 남아있는 원소 중 가장 마지막에 들어 온 데이터를 가리키는 포인터</li>
</ul>
<section id="삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="삽입-연산">삽입 연산</h3>
<ul>
<li>삽입할 때는 꼬리(tail) 위치에 데이터를 넣는다.</li>
<li>값으로 8을 갖는 새로운 데이터가 삽입되었을 때 예시)</li>
</ul>
</section>
<section id="삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="삭제-연산">삭제 연산</h3>
<ul>
<li>삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.</li>
<li>하나의 데이터를 삭제할 때의 예시)</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-3">        <span class="va" style="color: #111111;">self</span>.data <span class="op" style="color: #5E5E5E;">=</span> data</span>
<span id="cb1-4">        <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-5"></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;">class</span> Queue:</span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-9">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-10">        <span class="va" style="color: #111111;">self</span>.tail <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">    <span class="kw" style="color: #003B4F;">def</span> enqueue(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-13">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb1-14">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb1-15">            <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb1-16">            <span class="va" style="color: #111111;">self</span>.tail <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb1-17">        <span class="co" style="color: #5E5E5E;"># 꼬리(tail) 위치에 새로운 노드 삽입</span></span>
<span id="cb1-18">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb1-19">            <span class="va" style="color: #111111;">self</span>.tail.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb1-20">            <span class="va" style="color: #111111;">self</span>.tail <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.tail.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-21"></span>
<span id="cb1-22">    <span class="kw" style="color: #003B4F;">def</span> dequeue(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-23">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">==</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb1-24">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-25"></span>
<span id="cb1-26">        <span class="co" style="color: #5E5E5E;"># 머리(head) 위치에서 노드 꺼내기</span></span>
<span id="cb1-27">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.data</span>
<span id="cb1-28">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-29"></span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb1-31"></span>
<span id="cb1-32">    <span class="kw" style="color: #003B4F;">def</span> show(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-33">        cur <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb1-34">        <span class="cf" style="color: #003B4F;">while</span> cur:</span>
<span id="cb1-35">            <span class="bu" style="color: null;">print</span>(cur.data, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-36">            cur <span class="op" style="color: #5E5E5E;">=</span> cur.<span class="bu" style="color: null;">next</span></span>
<span id="cb1-37"></span>
<span id="cb1-38"></span>
<span id="cb1-39">queue <span class="op" style="color: #5E5E5E;">=</span> Queue()</span>
<span id="cb1-40">data_list <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">8</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">7</span>]</span>
<span id="cb1-41"></span>
<span id="cb1-42"><span class="cf" style="color: #003B4F;">for</span> data <span class="kw" style="color: #003B4F;">in</span> data_list:</span>
<span id="cb1-43">    queue.enqueue(data)</span>
<span id="cb1-44"></span>
<span id="cb1-45"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-46">queue.show()</span>
<span id="cb1-47"></span>
<span id="cb1-48"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">[원소 삭제]"</span>)</span>
<span id="cb1-49"><span class="bu" style="color: null;">print</span>(queue.dequeue())</span>
<span id="cb1-50"><span class="bu" style="color: null;">print</span>(queue.dequeue())</span>
<span id="cb1-51"><span class="bu" style="color: null;">print</span>(queue.dequeue())</span>
<span id="cb1-52"></span>
<span id="cb1-53"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"[원소 삽입]"</span>)</span>
<span id="cb1-54">queue.enqueue(<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-55">queue.enqueue(<span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb1-56">queue.enqueue(<span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb1-57"></span>
<span id="cb1-58"><span class="bu" style="color: null;">print</span>(<span class="st" style="color: #20794D;">"전체 노드 출력:"</span>, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb1-59">queue.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>
전체 노드 출력: 3 5 9 8 5 6 1 7 
[원소 삭제]
3
5
9
[원소 삽입]
전체 노드 출력: 8 5 6 1 7 2 5 3 </code></pre>
</div>
</div>
</section>
<section id="큐-동작-속도-연결-리스트-vs.-리스트-자료형" class="level3">
<h3 class="anchored" data-anchor-id="큐-동작-속도-연결-리스트-vs.-리스트-자료형">큐 동작 속도: 연결 리스트 vs.&nbsp;리스트 자료형</h3>
<ul>
<li>다수의 데이터를 삽입 및 삭제할 때에 대하여, 수행 시간을 측정할 수 있다.</li>
<li>단순히 Python의 리스트 자료형을 이용할 때보다 수행 시간 관점에서 효율적이다.</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;">import</span> time</span>
<span id="cb3-2"></span>
<span id="cb3-3">data_list <span class="op" style="color: #5E5E5E;">=</span> [i <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">100000</span>)]</span>
<span id="cb3-4"></span>
<span id="cb3-5">start_time <span class="op" style="color: #5E5E5E;">=</span> time.time()</span>
<span id="cb3-6"></span>
<span id="cb3-7">queue <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;">for</span> data <span class="kw" style="color: #003B4F;">in</span> data_list:</span>
<span id="cb3-9">    queue.append(data)</span>
<span id="cb3-10"><span class="cf" style="color: #003B4F;">while</span> queue:</span>
<span id="cb3-11">    queue.pop(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Elapsed time: </span><span class="sc" style="color: #5E5E5E;">{</span>time<span class="sc" style="color: #5E5E5E;">.</span>time() <span class="op" style="color: #5E5E5E;">-</span> start_time<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> seconds."</span>)</span>
<span id="cb3-14"><span class="bu" style="color: null;">print</span>(queue)</span>
<span id="cb3-15"></span>
<span id="cb3-16">start_time <span class="op" style="color: #5E5E5E;">=</span> time.time()</span>
<span id="cb3-17"></span>
<span id="cb3-18">queue <span class="op" style="color: #5E5E5E;">=</span> Queue()</span>
<span id="cb3-19"><span class="cf" style="color: #003B4F;">for</span> data <span class="kw" style="color: #003B4F;">in</span> data_list:</span>
<span id="cb3-20">    queue.enqueue(data)</span>
<span id="cb3-21"><span class="cf" style="color: #003B4F;">while</span> queue.head <span class="op" style="color: #5E5E5E;">!=</span> <span class="va" style="color: #111111;">None</span>:</span>
<span id="cb3-22">    queue.dequeue()</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Elapsed time: </span><span class="sc" style="color: #5E5E5E;">{</span>time<span class="sc" style="color: #5E5E5E;">.</span>time() <span class="op" style="color: #5E5E5E;">-</span> start_time<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> seconds."</span>)</span>
<span id="cb3-25">queue.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Elapsed time: 0.8808736801147461 seconds.
[]
Elapsed time: 0.1013329029083252 seconds.</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_queue/index.html</guid>
  <pubDate>Wed, 18 Jan 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Structure (5) Stack</title>
  <dc:creator>Kwangmin Kim</dc:creator>
  <link>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_stack/index.html</link>
  <description><![CDATA[ 



<ul class="nav nav-pills" id="language-tab">
<li class="nav-item">
<button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" aria-controls="Korean" aria-selected="true">
Korean
</button>
</li>
<li class="nav-item">
<button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" aria-controls="knitr" aria-selected="false">
English
</button>
</li>
<div class="tab-content" id="language-tabcontent">

<div id="Korean" class="tab-pane fade show active" aria-labelledby="Korean-tab">
<section id="stack" class="level2">
<h2 class="anchored" data-anchor-id="stack">Stack</h2>
<ul>
<li>다양한 알고리즘과 프로그램에서 사용됨</li>
<li>스택: 먼저 들어온 데이터가 나중에 나가는 자료구조</li>
<li>흔히 박스가 쌓인 형태를 스택(stack)이라고 한다. 예) ‘Deep Learning 알고리즘의 구조가 stacked 되어 있는 구조다’ 라고 표현
<ul>
<li>우리가 박스를 쌓은 뒤에 꺼낼 때는, 가장 마지막에 올렸던 박스부터 꺼내야 한다.</li>
</ul></li>
<li>새로운 원소를 삽입할 때는 마지막 위치에 삽입한다. (가장 최근에 삽입된 원소가 가장 끝에 위치)</li>
<li>새로운 원소를 삭제할 때는 마지막 원소가 삭제된다. (가장 최근에 삽입된 원소가 제거됨)</li>
<li>head = 최상위 원소 = 가장 최근에 삽입이된 원소</li>
</ul>
</section>
<section id="스택-자료구조의-중요성" class="level2">
<h2 class="anchored" data-anchor-id="스택-자료구조의-중요성">스택 자료구조의 중요성</h2>
<ul>
<li>스택은 굉장히 기본적인 자료구조이다.</li>
<li>기계 학습 분야뿐 아니라 다양한 프로그램을 개발할 때 빠지지 않고 사용된다.</li>
</ul>
</section>
<section id="스택-자료구조의-시간-복잡도" class="level2">
<h2 class="anchored" data-anchor-id="스택-자료구조의-시간-복잡도">스택 자료구조의 시간 복잡도</h2>
<ul>
<li>스택은 여러 가지 연산을 제공한다.</li>
</ul>
<div id="tbl-letters" class="anchored">
<table class="table">
<caption>Table&nbsp;1: a list of the stack functions in Python</caption>
<colgroup>
<col style="width: 7%">
<col style="width: 16%">
<col style="width: 15%">
<col style="width: 59%">
</colgroup>
<thead>
<tr class="header">
<th>Number</th>
<th>Methods</th>
<th>Time Complexity</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>삽입(Push)</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택에 원소를 삽입하는 연산</td>
</tr>
<tr class="even">
<td>2</td>
<td>추출(Pop)</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택에서 원소를 추출하는 연산</td>
</tr>
<tr class="odd">
<td>3</td>
<td>최상위 원소 (Top)</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택의 최상위 원소(마지막에 들어온 원소) 를 확인(조회)하는 연산</td>
</tr>
<tr class="even">
<td>4</td>
<td>Empty</td>
<td><img src="https://latex.codecogs.com/png.latex?O(1)"></td>
<td>스택이 비어 있는지 확인하는 연산</td>
</tr>
</tbody>
</table>
</div>
<p>See Table&nbsp;1.</p>
</section>
<section id="python에서-스택을-구현하는-방법-1-리스트-자료형" class="level2">
<h2 class="anchored" data-anchor-id="python에서-스택을-구현하는-방법-1-리스트-자료형">Python에서 스택을 구현하는 방법 1: 리스트 자료형</h2>
<ul>
<li>파이썬의 기본적인 리스트 자료형은 다음의 두 가지 메서드를 제공한다.</li>
<li>append() 메서드: 마지막 위치에 원소를 삽입하며, 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이다.</li>
<li>pop() 메서드: 마지막 위치에서 원소를 추출하며, 시간 복잡도는 <img src="https://latex.codecogs.com/png.latex?O(1)"> 이다.</li>
<li>따라서 일반적으로 스택을 구현할 때, 파이썬의 리스트(list) 자료형을 사용한다.</li>
</ul>
<div class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;">class</span> Stack:</span>
<span id="cb1-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-3">        <span class="va" style="color: #111111;">self</span>.stack <span class="op" style="color: #5E5E5E;">=</span> []</span>
<span id="cb1-4"></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;">def</span> push(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb1-6">        <span class="co" style="color: #5E5E5E;"># 마지막 위치에 원소 삽입</span></span>
<span id="cb1-7">        <span class="va" style="color: #111111;">self</span>.stack.append(data)</span>
<span id="cb1-8"></span>
<span id="cb1-9">    <span class="kw" style="color: #003B4F;">def</span> pop(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-10">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb1-11">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-12">        <span class="co" style="color: #5E5E5E;"># 마지막 원소 추출</span></span>
<span id="cb1-13">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.stack.pop()</span>
<span id="cb1-14"></span>
<span id="cb1-15">    <span class="kw" style="color: #003B4F;">def</span> top(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-16">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb1-17">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb1-18">        <span class="co" style="color: #5E5E5E;"># 마지막 원소 반환</span></span>
<span id="cb1-19">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.stack[<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb1-20"></span>
<span id="cb1-21">    <span class="kw" style="color: #003B4F;">def</span> is_empty(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb1-22">        <span class="cf" style="color: #003B4F;">return</span> <span class="bu" style="color: null;">len</span>(<span class="va" style="color: #111111;">self</span>.stack) <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-23"></span>
<span id="cb1-24"></span>
<span id="cb1-25">stack <span class="op" style="color: #5E5E5E;">=</span> Stack()</span>
<span id="cb1-26">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb1-27"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb1-28">    stack.push(x)</span>
<span id="cb1-29"></span>
<span id="cb1-30"><span class="cf" style="color: #003B4F;">while</span> <span class="kw" style="color: #003B4F;">not</span> stack.is_empty():</span>
<span id="cb1-31">    <span class="bu" style="color: null;">print</span>(stack.pop())</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>2
4
6
5
2
7
9</code></pre>
</div>
</div>
</section>
<section id="연결-리스트로-스택-구현하기" class="level2">
<h2 class="anchored" data-anchor-id="연결-리스트로-스택-구현하기">연결 리스트로 스택 구현하기</h2>
<ul>
<li>스택을 연결 리스트로 구현하면, 삽입과 삭제에 있어서 <img src="https://latex.codecogs.com/png.latex?O(1)"> 을 보장한다.</li>
<li>연결 리스트로 구현할 때는 머리(head)를 가리키는 하나의 포인터만 가진다.</li>
<li>머리(head): 남아있는 원소 중 가장 마지막에 들어 온 데이터를 가리키는 포인터</li>
</ul>
<section id="삽입-연산" class="level3">
<h3 class="anchored" data-anchor-id="삽입-연산">삽입 연산</h3>
<ul>
<li>삽입할 때는 기존의 머리 뒤에 데이터가 들어가고 포인터가 가장 최근에 삽입된 데이터를 가리키도록 머리(head) 위치를 바꿔준다.</li>
<li>삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.
<ul>
<li>즉, 포인터를 삭제할 데이터에 앞에 있는 데이터로 머리 위치를 바꾸는 것만으로 삭제는 이루어진다.</li>
</ul></li>
</ul>
</section>
<section id="삭제-연산" class="level3">
<h3 class="anchored" data-anchor-id="삭제-연산">삭제 연산</h3>
<ul>
<li>삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.</li>
</ul>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;">class</span> Node:</span>
<span id="cb3-2">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-3">        <span class="va" style="color: #111111;">self</span>.data <span class="op" style="color: #5E5E5E;">=</span> data</span>
<span id="cb3-4">        <span class="va" style="color: #111111;">self</span>.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;">class</span> Stack:</span>
<span id="cb3-8">    <span class="kw" style="color: #003B4F;">def</span> <span class="fu" style="color: #4758AB;">__init__</span>(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-9">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-10"></span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;"># 원소 삽입</span></span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;">def</span> push(<span class="va" style="color: #111111;">self</span>, data):</span>
<span id="cb3-13">        node <span class="op" style="color: #5E5E5E;">=</span> Node(data)</span>
<span id="cb3-14">        node.<span class="bu" style="color: null;">next</span> <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb3-15">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> node</span>
<span id="cb3-16"></span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;"># 원소 추출하기</span></span>
<span id="cb3-18">    <span class="kw" style="color: #003B4F;">def</span> pop(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb3-20">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-21"></span>
<span id="cb3-22">        <span class="co" style="color: #5E5E5E;"># 머리(head) 위치에서 노드 꺼내기</span></span>
<span id="cb3-23">        data <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.data</span>
<span id="cb3-24">        <span class="va" style="color: #111111;">self</span>.head <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-25"></span>
<span id="cb3-26">        <span class="cf" style="color: #003B4F;">return</span> data</span>
<span id="cb3-27"></span>
<span id="cb3-28">    <span class="co" style="color: #5E5E5E;"># 최상위 원소(top)</span></span>
<span id="cb3-29">    <span class="kw" style="color: #003B4F;">def</span> top(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-30">        <span class="cf" style="color: #003B4F;">if</span> <span class="va" style="color: #111111;">self</span>.is_empty():</span>
<span id="cb3-31">            <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-32">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.head.data</span>
<span id="cb3-33"></span>
<span id="cb3-34">    <span class="co" style="color: #5E5E5E;"># 먼저 추출할 원소부터 출력</span></span>
<span id="cb3-35">    <span class="kw" style="color: #003B4F;">def</span> show(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-36">        cur <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">self</span>.head</span>
<span id="cb3-37">        <span class="cf" style="color: #003B4F;">while</span> cur:</span>
<span id="cb3-38">            <span class="bu" style="color: null;">print</span>(cur.data, end<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">" "</span>)</span>
<span id="cb3-39">            cur <span class="op" style="color: #5E5E5E;">=</span> cur.<span class="bu" style="color: null;">next</span></span>
<span id="cb3-40"></span>
<span id="cb3-41">    <span class="co" style="color: #5E5E5E;"># 스택이 비어있는지 확인</span></span>
<span id="cb3-42">    <span class="kw" style="color: #003B4F;">def</span> is_empty(<span class="va" style="color: #111111;">self</span>):</span>
<span id="cb3-43">        <span class="cf" style="color: #003B4F;">return</span> <span class="va" style="color: #111111;">self</span>.head <span class="kw" style="color: #003B4F;">is</span> <span class="va" style="color: #111111;">None</span></span>
<span id="cb3-44"></span>
<span id="cb3-45"></span>
<span id="cb3-46">stack <span class="op" style="color: #5E5E5E;">=</span> Stack()</span>
<span id="cb3-47">arr <span class="op" style="color: #5E5E5E;">=</span> [<span class="dv" style="color: #AD0000;">9</span>, <span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">2</span>]</span>
<span id="cb3-48"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> arr:</span>
<span id="cb3-49">    stack.push(x)</span>
<span id="cb3-50">stack.show()</span>
<span id="cb3-51"><span class="bu" style="color: null;">print</span>()</span>
<span id="cb3-52"></span>
<span id="cb3-53"><span class="cf" style="color: #003B4F;">while</span> <span class="kw" style="color: #003B4F;">not</span> stack.is_empty():</span>
<span id="cb3-54">    <span class="bu" style="color: null;">print</span>(stack.pop())</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>2 4 6 5 2 7 9 
2
4
6
5
2
7
9</code></pre>
</div>
</div>
</section>
</section>
</div>
<div id="English" class="tab-pane fade" aria-labelledby="English-tab">

</div>



</div></ul> ]]></description>
  <category>Engineering</category>
  <guid>kmink3225.netlify.app/docs/blog/posts/Engineering/2023-01-19_stack/index.html</guid>
  <pubDate>Wed, 18 Jan 2023 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
