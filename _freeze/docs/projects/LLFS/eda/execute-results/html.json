{
  "hash": "18be69cb2a1df62c9da884e02ba339cc",
  "result": {
    "markdown": "---\ntitle: \"EDA\"\nsubtitle: \"Explorative Data Analysis\"\ndescription: \"Both EDA and Data Mining are used\"\nauthor: Kwangmin Kim\ndate: 2023-02-18\nexecute:\n  warning: false\n  message: false\n  freeze: true\nformat: \n  html:\n    toc: true\n    number-sections: true\n    page-layout: full\n    code-fold: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n<ul class=\"nav nav-pills\" id=\"language-tab\" role=\"tablist\">\n\n<li class=\"nav-item\" role=\"presentation\">\n\n<button class=\"nav-link active\" id=\"Korean-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#Korean\" type=\"button\" role=\"tab\" aria-controls=\"Korean\" aria-selected=\"true\">\n\nKorean\n\n</button>\n\n</li>\n\n<li class=\"nav-item\" role=\"presentation\">\n\n<button class=\"nav-link\" id=\"English-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#English\" type=\"button\" role=\"tab\" aria-controls=\"knitr\" aria-selected=\"false\">\n\nEnglish\n\n</button>\n\n</li>\n\n<div class=\"tab-content\" id=\"language-tabcontent\">\n\n::: {#Korean .tab-pane .fade .show .active role=\"tabpanel\" aria-labelledby=\"Korean-tab\"}\n\n**(한글 준비중)**\n\nplease, read the English section first. \n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Function List\n\ncolor_function<-function(category_number){\nreturn(\n    if(category_number==2){\n        c(\"darkblue\",\"darkred\")\n    }else if(category_number==3){\n        c(\"darkblue\",\"darkred\",\"yellow4\")\n    }else if(category_number==4){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\")\n    }else if(category_number==5){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\")\n    }else{\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\",\"darkgreen\")\n    }\n    )\n}\n\nscale_function=function(vector=x,min=NULL,max=NULL,method){\n    scaling_methods<-c('min_max normalization','customized normalization','standardization')\n\n    if(method==\"min-max\"){\n        output=(vector-min(vector))(max(vector)-min(vector))\n    }else if(method==\"customized\"){\n        output=(max-min)*(vector-min(vector))/(max(vector)-min(vector))+min\n    }else if(method==\"standarized\"){\n        output=(vector-mean(vector))/sd(vector)\n    }else{\n        paste0(\"Error!, no such a scaling method in this module. Please, put the first word of each method you want to use in the 'method' argument among the following tests: \", paste(scaling_methods,collapse=\", \"))\n    }\n  return(output)\n}\n\nmultiple_shapiro_test<-function(in_data){\n        normality_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                            function(x)shapiro.test(x))\n        temp<-data.frame(matrix(nrow=length(normality_test),ncol=4))\n        for (i in 1:length(normality_test)){\n            temp[i,]<-c(\n                coloumn_name=names(normality_test)[i],\n                statistic=normality_test[[i]]$statistic,\n                p_value=normality_test[[i]]$p.value,\n                method=normality_test[[i]]$method)\n        }\n        names(temp)<-c('column_name','statistic','p_value','method')\n        output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'not_normal','normal'))%>%\n            dplyr::select('column_name','statistic','p_value','p_adjusted','type','method')\n        return(output)\n}    \n\nmultiple_levene_test<-function(in_data,categorical_variable){\n        homoscedasticity_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                                    function(x)leveneTest(x~in_data[,categorical_variable]))\n        temp<-data.frame(matrix(nrow=length(homoscedasticity_test),ncol=6))\n            for (i in 1:length(homoscedasticity_test)){\n                temp[i,]<-c(\n                    coloumn_name=names(homoscedasticity_test)[i],\n                    group_df=homoscedasticity_test[[i]]$Df[1],\n                    residual_df=homoscedasticity_test[[i]]$Df[2],\n                    statistic=homoscedasticity_test[[i]]$`F value`[1],\n                    p_value=homoscedasticity_test[[i]]$`Pr(>F)`[1],\n                    method=\"levene's test\")\n            }\n            names(temp)<-c('column_name','group_df','residual_df','statistic','p_value','method')\n            output<-temp%>%\n                mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n                type=ifelse(p_adjusted<0.05,'heteroscedasticity','homoscedasticity'))%>%\n                dplyr::select('column_name','group_df','residual_df','statistic','p_value','p_adjusted','type','method')\n        return(output)} \n\ncategorical_variable='outcome'\n\nmultiple_unpaired_t_test<-function(in_data,categorical_variable,homo_variables,hetero_variables){\n    homo_unpaired_t_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))][,homo_variables],2,\n                                    function(x)t.test(x~in_data[,categorical_variable],var.equal=TRUE))\n    hetero_unpaired_t_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))][,hetero_variables],2,\n                                    function(x)t.test(x~in_data[,categorical_variable],var.equal=FALSE)) \n    unpaired_t_test<-c(homo_unpaired_t_test,hetero_unpaired_t_test)\n\n    temp<-data.frame(matrix(nrow=length(unpaired_t_test),ncol=7))\n        for (i in 1:length(unpaired_t_test)){\n            temp[i,]<-c(names(unpaired_t_test)[i], \n                        unpaired_t_test[[i]]$estimate,\n                        unpaired_t_test[[i]]$parameter,\n                        unpaired_t_test[[i]]$statistic,\n                        unpaired_t_test[[i]]$p.value,\n                        unpaired_t_test[[i]]$method)\n        }\n        names(temp)<-c('column_name',names(unpaired_t_test[[1]]$estimate),'df','statistic','p_value','method')\n        output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'significant','insignificant'))%>%\n            dplyr::select('column_name',names(unpaired_t_test[[1]]$estimate),'df','statistic','p_value','p_adjusted','type','method')\n    return(output)} \n\n\nmultiple_correlation_test<-function(in_data,in_numeric_variable){\n    correlation_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                                    function(x)cor.test(x,in_data[,in_numeric_variable],method='pearson'))\n    temp<-data.frame(matrix(nrow=length(correlation_test),ncol=6))\n        for (i in 1:length(correlation_test)){\n            temp[i,]<-c(names(correlation_test)[i], \n                        correlation_test[[i]]$estimate,\n                        correlation_test[[i]]$parameter,\n                        correlation_test[[i]]$statistic,\n                        correlation_test[[i]]$p.value,\n                        correlation_test[[i]]$method)\n        }\n        names(temp)<-c('column_name',names(correlation_test[[1]]$estimate),'df','statistic','p_value','method')\n        output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'significant','insignificant'))%>%\n            dplyr::select('column_name',names(correlation_test[[1]]$estimate),'df','statistic','p_value','p_adjusted','type','method')\n    return(output)} \n\nmultiple_anova_test<-function(in_data, in_categorical_variable){\n    aov_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                function(x)aov(x~get(in_categorical_variable),data=in_data)%>%summary)\n\n    temp<-data.frame(matrix(nrow=length(aov_test),ncol=10))\n    for (i in 1:length(aov_test)){\n        temp[i,]<-c(names(aov_test)[i], \n                    aov_test[[i]][[1]]$`Df`[1],\n                    aov_test[[i]][[1]]$`Df`[2],\n                    aov_test[[i]][[1]]$`Sum Sq`[1],\n                    aov_test[[i]][[1]]$`Sum Sq`[2],\n                    aov_test[[i]][[1]]$`Mean Sq`[1],\n                    aov_test[[i]][[1]]$`Mean Sq`[2],\n                    aov_test[[i]][[1]]$`F value`[1],\n                    aov_test[[i]][[1]]$`Pr(>F)`[1],\n                    'one_way_anova')\n    }\n    names(temp)<-c('column_name','group_df','residual_df','group_ssq','residual_ssq',\n                    'group_msq','residual_msq','F_value','p_value','method')\n    output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'significant','insignificant'))%>%\n            dplyr::select('column_name','group_df','residual_df','group_ssq','residual_ssq',\n                    'group_msq','residual_msq','F_value','p_value','method',\n                    'p_adjusted','type','method')\n    return(output)} \n\nmain_statistical_test<-function(\n    in_data,method,categorical_variable,in_numeric_variable,\n    homo_variables=NULL,hetero_variables=NULL,\n    fun1=multiple_shapiro_test,\n    fun2=multiple_levene_test,\n    fun3=multiple_unpaired_t_test){\n    test_list<-c(\"shapiro wilks test\",\"levene's test\",\"student t test\",\"pearson correlation test\",\"anova\")#,\"ANCOVA\",\"MANOVA\",\"wilcoxon manwhitney\",'kruskal wallis test')\n    error_massage<-paste0(\"Error!, no such a test in this module. Please, put the first word of each method you want to use in the 'method' argument among the following tests: \", paste(test_list,collapse=\", \"))\n    if(grepl('shapiro',method)){\n        output=multiple_shapiro_test(in_data)\n    }else if(grepl('levene',method)){\n        output=multiple_levene_test(in_data,categorical_variable)\n        # var.test()\n    }else if(grepl('student',method)){\n        # code unpaired vs paired t test in the future\n        output=multiple_unpaired_t_test(in_data,categorical_variable,homo_variables,hetero_variables)\n    }else if(grepl('kruskal',method)){\n        return(error_massage)\n    }else if(grepl('wilcoxon|manwhitney',method)){\n        return(error_massage)\n    }else if(grepl('anova|aov',method)){\n        output=multiple_anova_test(in_data,categorical_variable)\n    }else if(grepl('cor',method)){\n        output=multiple_correlation_test(in_data,in_numeric_variable)\n    }else{\n        return(error_massage)\n    }\n    return(output)\n}\n\n\ngetNumericSummaryTable=function(in_data,group_variable,summary_variable,set_color=color_function,...){\n    # table\n    temp<-in_data %>% \n    #group_by_at(vars(...)) %>% \n    group_by_at(vars(group_variable)) %>% \n    mutate(count=n())%>%\n    summarise_at(vars(summary_variable,count),\n                 list(mean=mean,\n                 sd=sd,\n                 min=min,\n                 Q1=~quantile(., probs = 0.25),\n                 median=median, \n                 Q3=~quantile(., probs = 0.75),\n                 max=max))%>%\n                 as.data.frame()%>%\n                 rename(\n                 n=count_mean)%>%\n                 dplyr::select(-contains('count'))%>%\n                 as.data.frame()\n    names(temp)<-c(\"group\",\n    sapply(names(temp)[-1],function(x)str_replace(x,paste0(summary_variable,\"_\"),\"\")))\n    output<-temp%>%\n    mutate(\n        variable=group_variable,\n        summary=summary_variable,\n        mean=mean%>%round(2),\n        sd=sd%>%round(2),\n        min=min%>%round(2),\n        Q1=Q1%>%round(2),\n        Q4=Q3%>%round(2),\n        max=max%>%round(2),\n        IQR_min=Q1-(Q3-Q1)*1.5%>%round(2),\n    IQR_max=Q3+(Q3-Q1)*1.5%>%round(2),\n    proportion=paste0(round(n/nrow(all_data)*100,2),\"%\"))%>%\n    dplyr::select(variable,group,summary,n,proportion,mean,sd,min,IQR_min,Q1,median,Q3,IQR_max,max)\n    return(output)\n}\n\ngetNumericSummaryPlot=function(\n    in_data=all_data,group_variable,summary_variable,\n    set_color=color_function,\n    summary_function=getNumericSummaryTable,...){\n    # plot\n    temp=getNumericSummaryTable(in_data,group_variable,summary_variable)\n    temp2=temp\n    names(temp2)[2]=group_variable\n    plot<-\n    in_data%>%\n    dplyr::select(group_variable,summary_variable)%>%\n    inner_join(.,temp2,by=group_variable)%>%\n    ggplot(aes(x=age,fill=get(group_variable),color=get(group_variable)))+\n    geom_histogram(aes(y=..density..),binwidth=1,alpha=0.5, position=\"identity\")+\n    geom_vline(aes(xintercept=mean,color=get(group_variable)), linetype=\"dashed\", size=1.5) + \n    geom_density(aes(y=..density..),alpha=0.3) +\n    scale_color_manual(values=set_color(nrow(temp2)))+\n    scale_fill_manual(values=set_color(nrow(temp2)))+\n    theme_bw()+\n    theme(legend.position = c(.95, .95),\n    legend.justification = c(\"right\", \"top\"),\n    legend.margin = margin(6, 6, 6, 6),\n    legend.text = element_text(size = 10))+\n    guides(fill=guide_legend(title=group_variable),\n    color=FALSE)+\n    geom_text(aes(label=round(mean,1),y=0,x=mean),\n                vjust=-1,col='yellow',size=5)+\n    ggtitle(paste0(\"Histogram & Density, \", summary_variable, \" Grouped by \", group_variable))+\n        labs(x=summary_variable, y = \"Density\")\n\n    result<-plot\n    return(result)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# load simulation data\nsimulated_data<-read_rds(datapath)\n\n# simple data pre-processing\nall_data<-\n    simulated_data%>%\n    mutate(\n      outcome=factor(outcome,levels=c(\"negative\",\"positive\")),\n      sex=ifelse(sex==0,\"man\",\"woman\"),\n      sex=factor(sex,levels=c(\"man\",\"woman\")),\n      genotype=factor(genotype,levels=c(\"e3\",\"e2\",\"e4\"))\n      )\n\n# rename metabolite variables\nnames(all_data)[6:ncol(all_data)]<-paste0(\"meta\",1:predictor_size)\n```\n:::\n\n# Summary \n\n## Summary of Exploratory Data Analysis (EDA) \n## Summary of Data Mining\n\n# Supplements\n\n## EDA\n\n### Univariable Analysis\n\n### Normality Test\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# raw data\nnormality_test_result<-multiple_shapiro_test(all_data)%>%\n    filter(column_name!='id')%>%\n    group_by(type)%>%\n    summarise(count=n())%>%\n    mutate(proportion=round(count/sum(count),3),\n    total=sum(count))%>%\n    dplyr::select(type,total,everything())\n    \nnormality_test_result%>%\n    knitr::kable(caption=\"Summary of the Result of Shapiro Wilk Tests on Numeric Variables\")\n```\n\n::: {.cell-output-display}\nTable: Summary of the Result of Shapiro Wilk Tests on Numeric Variables\n\n|type   | total| count| proportion|\n|:------|-----:|-----:|----------:|\n|normal |  5001|  5001|          1|\n:::\n:::\n\n\nOut of 5001 numeric variables, the variables following a normal distribution are 5001 (100%) and the ones that do not are NA (NA%).\n\n### Visualization\n\n#### 16 Variables That Follow Normal Distributions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 16 numeric variables randomly selected\nnormal_variables<-\n    multiple_shapiro_test(all_data)%>%\n        filter(p_value>0.05,column_name!='id')%>%\n            dplyr::select(column_name)%>%\n            pull%>%sample(16)\n\nnormal_data<-\n    all_data%>%\n        dplyr::select(outcome,normal_variables)%>%\n        gather(key=metabolite,value=value,normal_variables)\n\nnormal_data%>%\n    ggplot(aes(x=value))+\n    geom_histogram(aes(y=..density..))+\n    geom_density(color='red',linewidth=1.5)+\n    facet_wrap(.~metabolite)+\n    labs(title=\"Histogram, Numeric Variables Following Normal Distribution\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-7-1.png){width=864}\n:::\n\n```{.r .cell-code}\nnormal_data%>%\n    ggplot(aes(x=metabolite,y=value))+\n    geom_boxplot()+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+\n    labs(title=\"Boxplot, Numeric Variables Following Normal Distribution\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-7-2.png){width=864}\n:::\n\n```{.r .cell-code}\nnormal_data%>%\n    ggplot(aes(x=value,fill=outcome))+\n    geom_histogram(aes(y=..density..),alpha=0.5)+\n    geom_density(linewidth=1.5,alpha=0.5)+\n    scale_fill_manual(values=color_function(length(unique(normal_data$outcome))))+\n    facet_wrap(.~metabolite)+\n    labs(title=\"Numeric Variables Following Normal Distribution Grouped by Disease Status\")    \n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-7-3.png){width=864}\n:::\n\n```{.r .cell-code}\nnormal_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(normal_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+\n    labs(title=\"Boxplot, Numeric Variables Following Normal Distribution\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-7-4.png){width=864}\n:::\n:::\n\n\n#### Variables That Do Not Follow Normal Distributions\n\nThere is no variable that do not follow a normal distribution.\n\n### Bivariable Analysis\n\n#### AD vs Metabolites\n\nThrough the exploratory data analysis above, it was confirmed that all variables follow a normal distribution, and a t test is conducted to select metabolites that have a significant relationship with the disease, AD.\n\n* Homoscedasticity Test\n\nLeven's test is performed to confirm equal variance, one of the assumptions of the t test.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleven_test_result<-\n    main_statistical_test(in_data=all_data,method=\"levene\",categorical_variable=\"outcome\")%>%\n    filter(column_name!='id')\n\nhomo_variable<-leven_test_result%>%\nfilter(p_adjusted>0.05)%>%\ndplyr::select(column_name)%>%\npull()%>%\nunique()\n\nhetero_variable<-leven_test_result%>%\nfilter(p_adjusted<0.05)%>%\ndplyr::select(column_name)%>%\npull()%>%\nunique()\n```\n:::\n\n\n*  10 variables randomly selected out of 4995 variables with equal variance: meta4799, meta2891, meta3532, meta1828, meta903, meta1115, meta3776, meta3490, meta3423, meta356\n* 6 variables randomly selected with equal variance: meta2169, meta2269, meta2386, meta2409, meta2429, meta2474\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhomo_variable_sample<-homo_variable%>%sample(10)\nhetero_variable_sample<-hetero_variable\n\nstratified_levene_data<-all_data%>%\n    dplyr::select(outcome,homo_variable_sample,hetero_variable_sample)%>%\n    gather(key=metabolite,value=value,c(homo_variable_sample,hetero_variable_sample))%>%\n    mutate(levene_test=ifelse(metabolite%in%(homo_variable_sample),\"homoscedasticity\",\"heteroscedasticity\"))\n\nstratified_levene_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(stratified_levene_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+\n    facet_wrap(.~levene_test)+\n    labs(title=\"Boxplot, Metabolites with Heteroscedasticity vs Homoscedasticity\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n* Unpaired Two Sample Mean t Test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt_test_result<-\n    main_statistical_test(in_data=all_data,method=\"student\",\n                        categorical_variable=\"outcome\",\n                        homo_variables=homo_variable,\n                        hetero_variables=hetero_variable)\n\nmetabolites_associated_AD<-\n    t_test_result%>%\n    filter(type==\"significant\"&column_name!='age')%>%\n    arrange(p_adjusted)%>%\n    dplyr::select(column_name)%>%pull\n\nmetabolites_associated_AD_data<-\n    all_data%>%\n    dplyr::select(outcome,sex,genotype,metabolites_associated_AD)%>%\n    gather(key=metabolite,value=value,metabolites_associated_AD)        \n\nmetabolites_associated_AD_data%>%\n    group_by(outcome)%>%\n    summarise(mean=mean(value),sd=sd(value))%>%\n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |       mean|        sd|\n|:--------|----------:|---------:|\n|negative |  0.3457544| 0.9691240|\n|positive | -0.5343944| 0.8796064|\n:::\n\n```{.r .cell-code}\ntop_metabolites_associated_AD<-t_test_result%>%\n    filter(type==\"significant\"&column_name!='age')%>%\n    arrange(p_adjusted)%>%head(10)%>%\n    dplyr::select(column_name)%>%pull\n\ntop_metabolites_associated_AD_data<-\n    all_data%>%\n    dplyr::select(outcome,top_metabolites_associated_AD)%>%\n    gather(key=metabolite,value=value,top_metabolites_associated_AD)        \n\nbottom_metabolites_associated_AD<-t_test_result%>%\n    filter(type==\"significant\"&column_name!='age')%>%\n    arrange(p_adjusted)%>%tail(10)%>%\n    dplyr::select(column_name)%>%pull\n\nbottom_metabolites_associated_AD_data<-\n    all_data%>%\n    dplyr::select(outcome,bottom_metabolites_associated_AD)%>%\n    gather(key=metabolite,value=value,bottom_metabolites_associated_AD)        \n\na1<-top_metabolites_associated_AD_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(top_metabolites_associated_AD_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1), legend.position=\"top\")+\n    labs(title=\"Boxplot, Metabolites Strongly Associated with AD\")\n\na2<-bottom_metabolites_associated_AD_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(bottom_metabolites_associated_AD_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1), legend.position=\"top\")+\n    labs(title=\"Boxplot, Metabolites Weakly Associated with AD\")\n\nggarrange(a1, a2, ncol=2, nrow=1)\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nAs a result of the t test, metabolites with the highest significance were designated as *strong metabolites* and metabolites with the lowest significance among metabolites significantly related to AD were designated as *weak metabolites*, and the expression level of metabolites between the disease status was confirmed through visualization. As a result, a greater difference was observed in strong metabolites than in weak metabolites, but both groups were not clearly separated in terms of AD. \n\n#### AD vs Sex\n\n\n::: {.cell}\n\n```{.r .cell-code}\nad_sex_summary<-all_data%>%\n    group_by(outcome,sex)%>%\n    summarise(count=n(),\n            mean_age=mean(age),\n            sd_age=sd(age))%>%\n            ungroup%>%\n    mutate(sum=sum(count),\n    proportion=paste0(count/sum*100,\"%\"))%>%\n    dplyr::select(outcome, sex,count,proportion,mean_age,sd_age)%>%\n    mutate(p_value=chisq.test(all_data$outcome,all_data$sex)$p.value,\n    method=\"chisquare_test\")\n\nad_sex_summary%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |sex   | count|proportion | mean_age|   sd_age|  p_value|method         |\n|:--------|:-----|-----:|:----------|--------:|--------:|--------:|:--------------|\n|negative |man   |   297|29.7%      | 88.01347| 6.172067| 0.089716|chisquare_test |\n|negative |woman |   297|29.7%      | 87.77441| 6.294003| 0.089716|chisquare_test |\n|positive |man   |   226|22.6%      | 80.68584| 6.016531| 0.089716|chisquare_test |\n|positive |woman |   180|18%        | 79.98889| 5.824231| 0.089716|chisquare_test |\n:::\n:::\n\n\n#### AD vs Genotype\n\n\n::: {.cell}\n\n```{.r .cell-code}\nad_genotype_summary<-all_data%>%\n    group_by(outcome,genotype)%>%\n    summarise(count=n(),\n            mean_age=mean(age),\n            sd_age=sd(age))%>%\n            ungroup%>%\n    mutate(sum=sum(count),\n    proportion=paste0(count/sum*100,\"%\"))%>%\n    dplyr::select(outcome, genotype,count,proportion,mean_age,sd_age)%>%\n    mutate(p_value=chisq.test(all_data$outcome,all_data$genotype)$p.value,\n    method=\"chisquare_test\")\nad_genotype_summary%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |genotype | count|proportion | mean_age|   sd_age|   p_value|method         |\n|:--------|:--------|-----:|:----------|--------:|--------:|---------:|:--------------|\n|negative |e3       |   459|45.9%      | 87.91721| 6.256674| 0.1271068|chisquare_test |\n|negative |e2       |    55|5.5%       | 88.74545| 6.535425| 0.1271068|chisquare_test |\n|negative |e4       |    80|8%         | 87.17500| 5.839141| 0.1271068|chisquare_test |\n|positive |e3       |   331|33.1%      | 80.46224| 5.982367| 0.1271068|chisquare_test |\n|positive |e2       |    24|2.4%       | 80.45833| 4.452446| 0.1271068|chisquare_test |\n|positive |e4       |    51|5.1%       | 79.78431| 6.290672| 0.1271068|chisquare_test |\n:::\n:::\n\n\n\n#### Age vs AD, Sex, Genotype\n\nAge is known as a strong risk factor of AD or dementia. Human nerve system gets damaged as people are aged and the nerve fibrosis symptoms progress gradually. For this reason, we need to look into how the sample data are distributed in terms of age.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nad_age_summary=getNumericSummaryTable(in_data=all_data,group_variable=\"outcome\",summary_variable=\"age\")\nsex_age_summary=getNumericSummaryTable(in_data=all_data,group_variable=\"sex\",summary_variable=\"age\")\ngenotype_age_summary=getNumericSummaryTable(in_data=all_data,group_variable=\"genotype\",summary_variable=\"age\")\nage_summary=rbind(\n    ad_age_summary,\n    sex_age_summary,\n    genotype_age_summary)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nage_summary%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|variable |group    |summary |   n|proportion |  mean|   sd| min| IQR_min| Q1| median|    Q3| IQR_max| max|\n|:--------|:--------|:-------|---:|:----------|-----:|----:|---:|-------:|--:|------:|-----:|-------:|---:|\n|outcome  |negative |age     | 594|59.4%      | 87.89| 6.23|  67|  72.000| 84|     88| 92.00| 104.000| 105|\n|outcome  |positive |age     | 406|40.6%      | 80.38| 5.93|  65|  65.375| 77|     80| 84.75|  96.375|  95|\n|sex      |man      |age     | 523|52.3%      | 84.85| 7.10|  65|  65.000| 80|     85| 90.00| 105.000| 105|\n|sex      |woman    |age     | 477|47.7%      | 84.84| 7.19|  66|  65.000| 80|     85| 90.00| 105.000| 105|\n|genotype |e3       |age     | 790|79%        | 84.79| 7.16|  65|  65.000| 80|     85| 90.00| 105.000| 105|\n|genotype |e2       |age     |  79|7.9%       | 86.23| 7.08|  72|  66.000| 81|     86| 91.00| 106.000| 105|\n|genotype |e4       |age     | 131|13.1%      | 84.30| 7.00|  67|  65.000| 80|     84| 90.00| 105.000| 100|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot<- ggarrange(\n    getNumericSummaryPlot(in_data=all_data,group_variable=\"outcome\",summary_variable=\"age\"),\n    getNumericSummaryPlot(in_data=all_data,group_variable=\"sex\",summary_variable=\"age\"),\n    getNumericSummaryPlot(in_data=all_data,group_variable=\"genotype\",summary_variable=\"age\"),\n    ncol=2, nrow=2,legend=\"bottom\")\n```\n:::\n\n\nThe table above shows the summary statistics of age grouped by the affected status, AD and non AD. The difference of age between the two groups are about -7.51, but their standard deviations are 5.93 and 6.23. Thus, it is hard to say their age in average differ in the affected status because the age variations of the two groups are overlapped. This research has two conflicting characteristics at the population level. \n\nThe glaring difference of age is also shown below. As you can see, the people with a negative status 7.51 years younger than those with a positive one.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\na1<-all_data%>%\n    dplyr::select(outcome,age)%>%\n    ggplot(aes(x=age,fill=outcome))+\n    geom_histogram(aes(y=..density..),alpha=0.5)+\n    geom_density(linewidth=1.5,alpha=0.5)+\n    scale_fill_manual(values=color_function(length(unique(all_data$outcome))))+\n    theme(legend.position=\"top\")+\n    labs(title=\"Histogram, Age Distribution Grouped by Disease Status\")   \na2<-all_data%>%\n    dplyr::select(outcome,age)%>%\n    ggplot(aes(x=outcome,y=age,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(all_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1), legend.position=\"top\")+\n    labs(title=\"Boxplot, Age Distribution Grouped by Disease Status\")\n\nggarrange(a1, a2, ncol=2, nrow=1)\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n#### Age vs Metabolites\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_correlation_data<-\n    main_statistical_test(in_data=all_data,in_numeric_variable = 'age',method = \"cor\")%>%\n    filter(p_adjusted<0.05,column_name!='id')\n```\n:::\n\n\n1201 metabolites are significantly associated with age.\n\n\n#### Genotype vs Metabolites\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenotype_aov<-main_statistical_test(in_data=all_data,categorical_variable=\"genotype\",method='aov')\ngenotype_aov%>%\nfilter(column_name!='id',p_adjusted<0.05)%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|column_name |group_df |residual_df |group_ssq |residual_ssq |group_msq |residual_msq |F_value |p_value |method | p_adjusted|type |\n|:-----------|:--------|:-----------|:---------|:------------|:---------|:------------|:-------|:-------|:------|----------:|:----|\n:::\n:::\n\n\n0 metabolites are significantly associated with the genotype variable.\n\n### Multivariable Analysis\n\n#### AD vs Sex vs Genotype vs Age\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data%>%\n    group_by(outcome,sex,genotype)%>%\n    summarise(count=n(),\n    mean_age=mean(age),\n    sd_age=sd(age))%>%ungroup%>%\n    mutate(sum_count=sum(count),\n    proportion=paste0(round(count/sum_count*100,3),'%'))%>%\n    dplyr::select(outcome,sex,genotype,count,proportion, mean_age,sd_age)%>%\n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |sex   |genotype | count|proportion | mean_age|   sd_age|\n|:--------|:-----|:--------|-----:|:----------|--------:|--------:|\n|negative |man   |e3       |   232|23.2%      | 88.16810| 6.064746|\n|negative |man   |e2       |    26|2.6%       | 88.34615| 7.557472|\n|negative |man   |e4       |    39|3.9%       | 86.87179| 5.831762|\n|negative |woman |e3       |   227|22.7%      | 87.66079| 6.450246|\n|negative |woman |e2       |    29|2.9%       | 89.10345| 5.576384|\n|negative |woman |e4       |    41|4.1%       | 87.46341| 5.903802|\n|positive |man   |e3       |   181|18.1%      | 80.80111| 6.180093|\n|positive |man   |e2       |    15|1.5%       | 80.73333| 4.096456|\n|positive |man   |e4       |    30|3%         | 79.96667| 5.921809|\n|positive |woman |e3       |   150|15%        | 80.05333| 5.728519|\n|positive |woman |e2       |     9|0.9%       | 80.00000| 5.220153|\n|positive |woman |e4       |    21|2.1%       | 79.52381| 6.925453|\n:::\n:::\n\n\nExcept for the disease status variable, it looks like there is no difference of age in average and count in the other categorical variables. Taking into account age varialble is significantly associated with the metabolites that are significantly associated with the disease status, outcome (or AD). There is no need to conduct futher exploratory data analysis in the multivariable analysis senction.\n\n## Data Mining\n\n### PCA (Principal Component Analysis)\n\n\n::: {.cell}\n\n:::\n\n\n### K-means Clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# K means\nkm_fit = kmeans(all_data[,-c(1:5)],centers = 2,iter.max = 300 )\n\n# \"K-Means Clustering- Confusion matrix\")\n# table(all_data[,1],km_fit$cluster)\n\nmat_avgss = matrix(nrow = 20, ncol = 2)\n\n# Average within the cluster sum of square\nprint(paste(\"Avg. Within sum of squares\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Avg. Within sum of squares\"\n```\n:::\n\n```{.r .cell-code}\nfor (i in (1:20)){\n  km_fit = kmeans(all_data[,-c(1:6)],centers = i,iter.max = 300 )\n  mean_km = mean(km_fit$withinss)\n  print(paste(\"K-Value\",i,\",Avg.within sum of squares\",round(mean_km,2)))\n  mat_avgss[i,1] = i\n  mat_avgss[i,2] = mean_km\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"K-Value 1 ,Avg.within sum of squares 5084212.57\"\n[1] \"K-Value 2 ,Avg.within sum of squares 2307327.83\"\n[1] \"K-Value 3 ,Avg.within sum of squares 1485870.86\"\n[1] \"K-Value 4 ,Avg.within sum of squares 1084452.78\"\n[1] \"K-Value 5 ,Avg.within sum of squares 853053.2\"\n[1] \"K-Value 6 ,Avg.within sum of squares 701172.72\"\n[1] \"K-Value 7 ,Avg.within sum of squares 594677.21\"\n[1] \"K-Value 8 ,Avg.within sum of squares 515120.19\"\n[1] \"K-Value 9 ,Avg.within sum of squares 454068.18\"\n[1] \"K-Value 10 ,Avg.within sum of squares 405213.23\"\n[1] \"K-Value 11 ,Avg.within sum of squares 365245.16\"\n[1] \"K-Value 12 ,Avg.within sum of squares 332931.58\"\n[1] \"K-Value 13 ,Avg.within sum of squares 305412.98\"\n[1] \"K-Value 14 ,Avg.within sum of squares 282339.37\"\n[1] \"K-Value 15 ,Avg.within sum of squares 262314.99\"\n[1] \"K-Value 16 ,Avg.within sum of squares 244329.68\"\n[1] \"K-Value 17 ,Avg.within sum of squares 228893.25\"\n[1] \"K-Value 18 ,Avg.within sum of squares 215403.56\"\n[1] \"K-Value 19 ,Avg.within sum of squares 202990.99\"\n[1] \"K-Value 20 ,Avg.within sum of squares 192329.12\"\n```\n:::\n\n```{.r .cell-code}\nplot(mat_avgss[,1],mat_avgss[,2],type = 'o',xlab = \"K_Value\",ylab = \"Avg. within sum of square\")\ntitle(\"Avg. within sum of squares vs. K-value\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmat_varexp = matrix(nrow = 20, ncol = 2)\n# Percentage of Variance explained\nprint(paste(\"Percent. variance explained\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Percent. variance explained\"\n```\n:::\n\n```{.r .cell-code}\nfor (i in (1:20)){\n  km_fit = kmeans(all_data[,-c(1:6)],centers = i,iter.max = 300 )\n  var_exp = km_fit$betweenss/km_fit$totss\n  print(paste(\"K-Value\",i,\",Percent var explained\",round(var_exp,4)))\n  mat_varexp[i,1]=i\n  mat_varexp[i,2]=var_exp\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"K-Value 1 ,Percent var explained 0\"\n[1] \"K-Value 2 ,Percent var explained 0.0924\"\n[1] \"K-Value 3 ,Percent var explained 0.1232\"\n[1] \"K-Value 4 ,Percent var explained 0.1468\"\n[1] \"K-Value 5 ,Percent var explained 0.1602\"\n[1] \"K-Value 6 ,Percent var explained 0.1734\"\n[1] \"K-Value 7 ,Percent var explained 0.1818\"\n[1] \"K-Value 8 ,Percent var explained 0.1895\"\n[1] \"K-Value 9 ,Percent var explained 0.1965\"\n[1] \"K-Value 10 ,Percent var explained 0.202\"\n[1] \"K-Value 11 ,Percent var explained 0.2077\"\n[1] \"K-Value 12 ,Percent var explained 0.2138\"\n[1] \"K-Value 13 ,Percent var explained 0.2194\"\n[1] \"K-Value 14 ,Percent var explained 0.2209\"\n[1] \"K-Value 15 ,Percent var explained 0.2261\"\n[1] \"K-Value 16 ,Percent var explained 0.2317\"\n[1] \"K-Value 17 ,Percent var explained 0.2333\"\n[1] \"K-Value 18 ,Percent var explained 0.236\"\n[1] \"K-Value 19 ,Percent var explained 0.2392\"\n[1] \"K-Value 20 ,Percent var explained 0.2418\"\n```\n:::\n\n```{.r .cell-code}\nplot(mat_varexp[,1],mat_varexp[,2],type = 'o',xlab = \"K_Value\",ylab = \"Percent Var explained\")\ntitle(\"Avg. within sum of squares vs. K-value\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-21-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n\n::: {#English .tab-pane .fade role=\"tabpanel\" aria-labelledby=\"English-tab\"}\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_function<-function(category_number){\nreturn(\n    if(category_number==2){\n        c(\"darkblue\",\"darkred\")\n    }else if(category_number==3){\n        c(\"darkblue\",\"darkred\",\"yellow4\")\n    }else if(category_number==4){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\")\n    }else if(category_number==5){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\")\n    }else{\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\",\"darkgreen\")\n    }\n    )\n}\n\nscale_function=function(vector=x,min=NULL,max=NULL,method){\n    scaling_methods<-c('min_max normalization','customized normalization','standardization')\n\n    if(method==\"min-max\"){\n        output=(vector-min(vector))(max(vector)-min(vector))\n    }else if(method==\"customized\"){\n        output=(max-min)*(vector-min(vector))/(max(vector)-min(vector))+min\n    }else if(method==\"standarized\"){\n        output=(vector-mean(vector))/sd(vector)\n    }else{\n        paste0(\"Error!, no such a scaling method in this module. Please, put the first word of each method you want to use in the 'method' argument among the following tests: \", paste(scaling_methods,collapse=\", \"))\n    }\n  return(output)\n}\n\nmultiple_shapiro_test<-function(in_data){\n        normality_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                            function(x)shapiro.test(x))\n        temp<-data.frame(matrix(nrow=length(normality_test),ncol=4))\n        for (i in 1:length(normality_test)){\n            temp[i,]<-c(\n                coloumn_name=names(normality_test)[i],\n                statistic=normality_test[[i]]$statistic,\n                p_value=normality_test[[i]]$p.value,\n                method=normality_test[[i]]$method)\n        }\n        names(temp)<-c('column_name','statistic','p_value','method')\n        output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'not_normal','normal'))%>%\n            dplyr::select('column_name','statistic','p_value','p_adjusted','type','method')\n        return(output)\n}    \n\nmultiple_levene_test<-function(in_data,categorical_variable){\n        homoscedasticity_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                                    function(x)leveneTest(x~in_data[,categorical_variable]))\n        temp<-data.frame(matrix(nrow=length(homoscedasticity_test),ncol=6))\n            for (i in 1:length(homoscedasticity_test)){\n                temp[i,]<-c(\n                    coloumn_name=names(homoscedasticity_test)[i],\n                    group_df=homoscedasticity_test[[i]]$Df[1],\n                    residual_df=homoscedasticity_test[[i]]$Df[2],\n                    statistic=homoscedasticity_test[[i]]$`F value`[1],\n                    p_value=homoscedasticity_test[[i]]$`Pr(>F)`[1],\n                    method=\"levene's test\")\n            }\n            names(temp)<-c('column_name','group_df','residual_df','statistic','p_value','method')\n            output<-temp%>%\n                mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n                type=ifelse(p_adjusted<0.05,'heteroscedasticity','homoscedasticity'))%>%\n                dplyr::select('column_name','group_df','residual_df','statistic','p_value','p_adjusted','type','method')\n        return(output)} \n\ncategorical_variable='outcome'\n\nmultiple_unpaired_t_test<-function(in_data,categorical_variable,homo_variables,hetero_variables){\n    homo_unpaired_t_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))][,homo_variables],2,\n                                    function(x)t.test(x~in_data[,categorical_variable],var.equal=TRUE))\n    hetero_unpaired_t_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))][,hetero_variables],2,\n                                    function(x)t.test(x~in_data[,categorical_variable],var.equal=FALSE)) \n    unpaired_t_test<-c(homo_unpaired_t_test,hetero_unpaired_t_test)\n\n    temp<-data.frame(matrix(nrow=length(unpaired_t_test),ncol=7))\n        for (i in 1:length(unpaired_t_test)){\n            temp[i,]<-c(names(unpaired_t_test)[i], \n                        unpaired_t_test[[i]]$estimate,\n                        unpaired_t_test[[i]]$parameter,\n                        unpaired_t_test[[i]]$statistic,\n                        unpaired_t_test[[i]]$p.value,\n                        unpaired_t_test[[i]]$method)\n        }\n        names(temp)<-c('column_name',names(unpaired_t_test[[1]]$estimate),'df','statistic','p_value','method')\n        output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'significant','insignificant'))%>%\n            dplyr::select('column_name',names(unpaired_t_test[[1]]$estimate),'df','statistic','p_value','p_adjusted','type','method')\n    return(output)} \n\n\nmultiple_correlation_test<-function(in_data,in_numeric_variable){\n    correlation_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                                    function(x)cor.test(x,in_data[,in_numeric_variable],method='pearson'))\n    temp<-data.frame(matrix(nrow=length(correlation_test),ncol=6))\n        for (i in 1:length(correlation_test)){\n            temp[i,]<-c(names(correlation_test)[i], \n                        correlation_test[[i]]$estimate,\n                        correlation_test[[i]]$parameter,\n                        correlation_test[[i]]$statistic,\n                        correlation_test[[i]]$p.value,\n                        correlation_test[[i]]$method)\n        }\n        names(temp)<-c('column_name',names(correlation_test[[1]]$estimate),'df','statistic','p_value','method')\n        output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'significant','insignificant'))%>%\n            dplyr::select('column_name',names(correlation_test[[1]]$estimate),'df','statistic','p_value','p_adjusted','type','method')\n    return(output)} \n\nmultiple_anova_test<-function(in_data, in_categorical_variable){\n    aov_test<-apply(in_data[,unlist(lapply(in_data, is.numeric))],2,\n                function(x)aov(x~get(in_categorical_variable),data=in_data)%>%summary)\n\n    temp<-data.frame(matrix(nrow=length(aov_test),ncol=10))\n    for (i in 1:length(aov_test)){\n        temp[i,]<-c(names(aov_test)[i], \n                    aov_test[[i]][[1]]$`Df`[1],\n                    aov_test[[i]][[1]]$`Df`[2],\n                    aov_test[[i]][[1]]$`Sum Sq`[1],\n                    aov_test[[i]][[1]]$`Sum Sq`[2],\n                    aov_test[[i]][[1]]$`Mean Sq`[1],\n                    aov_test[[i]][[1]]$`Mean Sq`[2],\n                    aov_test[[i]][[1]]$`F value`[1],\n                    aov_test[[i]][[1]]$`Pr(>F)`[1],\n                    'one_way_anova')\n    }\n    names(temp)<-c('column_name','group_df','residual_df','group_ssq','residual_ssq',\n                    'group_msq','residual_msq','F_value','p_value','method')\n    output<-temp%>%\n            mutate(p_adjusted=p.adjust(p_value,method=\"bonferroni\"),\n            type=ifelse(p_adjusted<0.05,'significant','insignificant'))%>%\n            dplyr::select('column_name','group_df','residual_df','group_ssq','residual_ssq',\n                    'group_msq','residual_msq','F_value','p_value','method',\n                    'p_adjusted','type','method')\n    return(output)} \n\nmain_statistical_test<-function(\n    in_data,method,categorical_variable,in_numeric_variable,\n    homo_variables=NULL,hetero_variables=NULL,\n    fun1=multiple_shapiro_test,\n    fun2=multiple_levene_test,\n    fun3=multiple_unpaired_t_test){\n    test_list<-c(\"shapiro wilks test\",\"levene's test\",\"student t test\",\"pearson correlation test\",\"anova\")#,\"ANCOVA\",\"MANOVA\",\"wilcoxon manwhitney\",'kruskal wallis test')\n    error_massage<-paste0(\"Error!, no such a test in this module. Please, put the first word of each method you want to use in the 'method' argument among the following tests: \", paste(test_list,collapse=\", \"))\n    if(grepl('shapiro',method)){\n        output=multiple_shapiro_test(in_data)\n    }else if(grepl('levene',method)){\n        output=multiple_levene_test(in_data,categorical_variable)\n        # var.test()\n    }else if(grepl('student',method)){\n        # code unpaired vs paired t test in the future\n        output=multiple_unpaired_t_test(in_data,categorical_variable,homo_variables,hetero_variables)\n    }else if(grepl('kruskal',method)){\n        return(error_massage)\n    }else if(grepl('wilcoxon|manwhitney',method)){\n        return(error_massage)\n    }else if(grepl('anova|aov',method)){\n        output=multiple_anova_test(in_data,categorical_variable)\n    }else if(grepl('cor',method)){\n        output=multiple_correlation_test(in_data,in_numeric_variable)\n    }else{\n        return(error_massage)\n    }\n    return(output)\n}\n\n\ngetNumericSummaryTable=function(in_data,group_variable,summary_variable,set_color=color_function,...){\n    # table\n    temp<-in_data %>% \n    #group_by_at(vars(...)) %>% \n    group_by_at(vars(group_variable)) %>% \n    mutate(count=n())%>%\n    summarise_at(vars(summary_variable,count),\n                 list(mean=mean,\n                 sd=sd,\n                 min=min,\n                 Q1=~quantile(., probs = 0.25),\n                 median=median, \n                 Q3=~quantile(., probs = 0.75),\n                 max=max))%>%\n                 as.data.frame()%>%\n                 rename(\n                 n=count_mean)%>%\n                 dplyr::select(-contains('count'))%>%\n                 as.data.frame()\n    names(temp)<-c(\"group\",\n    sapply(names(temp)[-1],function(x)str_replace(x,paste0(summary_variable,\"_\"),\"\")))\n    output<-temp%>%\n    mutate(\n        variable=group_variable,\n        summary=summary_variable,\n        mean=mean%>%round(2),\n        sd=sd%>%round(2),\n        min=min%>%round(2),\n        Q1=Q1%>%round(2),\n        Q4=Q3%>%round(2),\n        max=max%>%round(2),\n        IQR_min=Q1-(Q3-Q1)*1.5%>%round(2),\n    IQR_max=Q3+(Q3-Q1)*1.5%>%round(2),\n    proportion=paste0(round(n/nrow(all_data)*100,2),\"%\"))%>%\n    dplyr::select(variable,group,summary,n,proportion,mean,sd,min,IQR_min,Q1,median,Q3,IQR_max,max)\n    return(output)\n}\n\ngetNumericSummaryPlot=function(\n    in_data=all_data,group_variable,summary_variable,\n    set_color=color_function,\n    summary_function=getNumericSummaryTable,...){\n    # plot\n    temp=getNumericSummaryTable(in_data,group_variable,summary_variable)\n    temp2=temp\n    names(temp2)[2]=group_variable\n    plot<-\n    in_data%>%\n    dplyr::select(group_variable,summary_variable)%>%\n    inner_join(.,temp2,by=group_variable)%>%\n    ggplot(aes(x=age,fill=get(group_variable),color=get(group_variable)))+\n    geom_histogram(aes(y=..density..),binwidth=1,alpha=0.5, position=\"identity\")+\n    geom_vline(aes(xintercept=mean,color=get(group_variable)), linetype=\"dashed\", size=1.5) + \n    geom_density(aes(y=..density..),alpha=0.3) +\n    scale_color_manual(values=set_color(nrow(temp2)))+\n    scale_fill_manual(values=set_color(nrow(temp2)))+\n    theme_bw()+\n    theme(legend.position = c(.95, .95),\n    legend.justification = c(\"right\", \"top\"),\n    legend.margin = margin(6, 6, 6, 6),\n    legend.text = element_text(size = 10))+\n    guides(fill=guide_legend(title=group_variable),\n    color=FALSE)+\n    geom_text(aes(label=round(mean,1),y=0,x=mean),\n                vjust=-1,col='yellow',size=5)+\n    ggtitle(paste0(\"Histogram & Density, \", summary_variable, \" Grouped by \", group_variable))+\n        labs(x=summary_variable, y = \"Density\")\n\n    result<-plot\n    return(result)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# load simulation data\nsimulated_data<-read_rds(datapath)\n\n# simple data pre-processing\nall_data<-\n    simulated_data%>%\n    mutate(\n      outcome=factor(outcome,levels=c(\"negative\",\"positive\")),\n      sex=ifelse(sex==0,\"man\",\"woman\"),\n      sex=factor(sex,levels=c(\"man\",\"woman\")),\n      genotype=factor(genotype,levels=c(\"e3\",\"e2\",\"e4\"))\n      )\n\n# rename metabolite variables\nnames(all_data)[6:ncol(all_data)]<-paste0(\"meta\",1:predictor_size)\n```\n:::\n\n# Summary \n\n## Summary of Exploratory Data Analysis (EDA) \n## Summary of Data Mining\n\n# Supplements\n\n## EDA\n\n### Univariable Analysis\n\n### Normality Test\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# raw data\nnormality_test_result<-multiple_shapiro_test(all_data)%>%\n    filter(column_name!='id')%>%\n    group_by(type)%>%\n    summarise(count=n())%>%\n    mutate(proportion=round(count/sum(count),3),\n    total=sum(count))%>%\n    dplyr::select(type,total,everything())\n    \nnormality_test_result%>%\n    knitr::kable(caption=\"Summary of the Result of Shapiro Wilk Tests on Numeric Variables\")\n```\n\n::: {.cell-output-display}\nTable: Summary of the Result of Shapiro Wilk Tests on Numeric Variables\n\n|type   | total| count| proportion|\n|:------|-----:|-----:|----------:|\n|normal |  5001|  5001|          1|\n:::\n:::\n\n\nOut of 5001 numeric variables, the variables following a normal distribution are 5001 (100%) and the ones that do not are NA (NA%).\n\n### Visualization\n\n#### 16 Variables That Follow Normal Distributions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 16 numeric variables randomly selected\nnormal_variables<-\n    multiple_shapiro_test(all_data)%>%\n        filter(p_value>0.05,column_name!='id')%>%\n            dplyr::select(column_name)%>%\n            pull%>%sample(16)\n\nnormal_data<-\n    all_data%>%\n        dplyr::select(outcome,normal_variables)%>%\n        gather(key=metabolite,value=value,normal_variables)\n\nnormal_data%>%\n    ggplot(aes(x=value))+\n    geom_histogram(aes(y=..density..))+\n    geom_density(color='red',linewidth=1.5)+\n    facet_wrap(.~metabolite)+\n    labs(title=\"Histogram, Numeric Variables Following Normal Distribution\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-29-1.png){width=864}\n:::\n\n```{.r .cell-code}\nnormal_data%>%\n    ggplot(aes(x=metabolite,y=value))+\n    geom_boxplot()+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+\n    labs(title=\"Boxplot, Numeric Variables Following Normal Distribution\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-29-2.png){width=864}\n:::\n\n```{.r .cell-code}\nnormal_data%>%\n    ggplot(aes(x=value,fill=outcome))+\n    geom_histogram(aes(y=..density..),alpha=0.5)+\n    geom_density(linewidth=1.5,alpha=0.5)+\n    scale_fill_manual(values=color_function(length(unique(normal_data$outcome))))+\n    facet_wrap(.~metabolite)+\n    labs(title=\"Numeric Variables Following Normal Distribution Grouped by Disease Status\")    \n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-29-3.png){width=864}\n:::\n\n```{.r .cell-code}\nnormal_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(normal_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+\n    labs(title=\"Boxplot, Numeric Variables Following Normal Distribution\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-29-4.png){width=864}\n:::\n:::\n\n\n#### Variables That Do Not Follow Normal Distributions\n\nThere is no variable that do not follow a normal distribution.\n\n### Bivariable Analysis\n\n#### AD vs Metabolites\n\nThrough the exploratory data analysis above, it was confirmed that all variables follow a normal distribution, and a t test is conducted to select metabolites that have a significant relationship with the disease, AD.\n\n* Homoscedasticity Test\n\nLeven's test is performed to confirm equal variance, one of the assumptions of the t test.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleven_test_result<-\n    main_statistical_test(in_data=all_data,method=\"levene\",categorical_variable=\"outcome\")%>%\n    filter(column_name!='id')\n\nhomo_variable<-leven_test_result%>%\nfilter(p_adjusted>0.05)%>%\ndplyr::select(column_name)%>%\npull()%>%\nunique()\n\nhetero_variable<-leven_test_result%>%\nfilter(p_adjusted<0.05)%>%\ndplyr::select(column_name)%>%\npull()%>%\nunique()\n```\n:::\n\n\n*  10 variables randomly selected out of 4995 variables with equal variance: meta4799, meta2891, meta3532, meta1828, meta903, meta1115, meta3776, meta3490, meta3423, meta356\n* 6 variables randomly selected with equal variance: meta2169, meta2269, meta2386, meta2409, meta2429, meta2474\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhomo_variable_sample<-homo_variable%>%sample(10)\nhetero_variable_sample<-hetero_variable\n\nstratified_levene_data<-all_data%>%\n    dplyr::select(outcome,homo_variable_sample,hetero_variable_sample)%>%\n    gather(key=metabolite,value=value,c(homo_variable_sample,hetero_variable_sample))%>%\n    mutate(levene_test=ifelse(metabolite%in%(homo_variable_sample),\"homoscedasticity\",\"heteroscedasticity\"))\n\nstratified_levene_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(stratified_levene_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))+\n    facet_wrap(.~levene_test)+\n    labs(title=\"Boxplot, Metabolites with Heteroscedasticity vs Homoscedasticity\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n* Unpaired Two Sample Mean t Test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt_test_result<-\n    main_statistical_test(in_data=all_data,method=\"student\",\n                        categorical_variable=\"outcome\",\n                        homo_variables=homo_variable,\n                        hetero_variables=hetero_variable)\n\nmetabolites_associated_AD<-\n    t_test_result%>%\n    filter(type==\"significant\"&column_name!='age')%>%\n    arrange(p_adjusted)%>%\n    dplyr::select(column_name)%>%pull\n\nmetabolites_associated_AD_data<-\n    all_data%>%\n    dplyr::select(outcome,sex,genotype,metabolites_associated_AD)%>%\n    gather(key=metabolite,value=value,metabolites_associated_AD)        \n\nmetabolites_associated_AD_data%>%\n    group_by(outcome)%>%\n    summarise(mean=mean(value),sd=sd(value))%>%\n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |       mean|        sd|\n|:--------|----------:|---------:|\n|negative |  0.3457544| 0.9691240|\n|positive | -0.5343944| 0.8796064|\n:::\n\n```{.r .cell-code}\ntop_metabolites_associated_AD<-t_test_result%>%\n    filter(type==\"significant\"&column_name!='age')%>%\n    arrange(p_adjusted)%>%head(10)%>%\n    dplyr::select(column_name)%>%pull\n\ntop_metabolites_associated_AD_data<-\n    all_data%>%\n    dplyr::select(outcome,top_metabolites_associated_AD)%>%\n    gather(key=metabolite,value=value,top_metabolites_associated_AD)        \n\nbottom_metabolites_associated_AD<-t_test_result%>%\n    filter(type==\"significant\"&column_name!='age')%>%\n    arrange(p_adjusted)%>%tail(10)%>%\n    dplyr::select(column_name)%>%pull\n\nbottom_metabolites_associated_AD_data<-\n    all_data%>%\n    dplyr::select(outcome,bottom_metabolites_associated_AD)%>%\n    gather(key=metabolite,value=value,bottom_metabolites_associated_AD)        \n\na1<-top_metabolites_associated_AD_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(top_metabolites_associated_AD_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1), legend.position=\"top\")+\n    labs(title=\"Boxplot, Metabolites Strongly Associated with AD\")\n\na2<-bottom_metabolites_associated_AD_data%>%\n    ggplot(aes(x=metabolite,y=value,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(bottom_metabolites_associated_AD_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1), legend.position=\"top\")+\n    labs(title=\"Boxplot, Metabolites Weakly Associated with AD\")\n\nggarrange(a1, a2, ncol=2, nrow=1)\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nAs a result of the t test, metabolites with the highest significance were designated as *strong metabolites* and metabolites with the lowest significance among metabolites significantly related to AD were designated as *weak metabolites*, and the expression level of metabolites between the disease status was confirmed through visualization. As a result, a greater difference was observed in strong metabolites than in weak metabolites, but both groups were not clearly separated in terms of AD. \n\n#### AD vs Sex\n\n\n::: {.cell}\n\n```{.r .cell-code}\nad_sex_summary<-all_data%>%\n    group_by(outcome,sex)%>%\n    summarise(count=n(),\n            mean_age=mean(age),\n            sd_age=sd(age))%>%\n            ungroup%>%\n    mutate(sum=sum(count),\n    proportion=paste0(count/sum*100,\"%\"))%>%\n    dplyr::select(outcome, sex,count,proportion,mean_age,sd_age)%>%\n    mutate(p_value=chisq.test(all_data$outcome,all_data$sex)$p.value,\n    method=\"chisquare_test\")\n\nad_sex_summary%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |sex   | count|proportion | mean_age|   sd_age|  p_value|method         |\n|:--------|:-----|-----:|:----------|--------:|--------:|--------:|:--------------|\n|negative |man   |   297|29.7%      | 88.01347| 6.172067| 0.089716|chisquare_test |\n|negative |woman |   297|29.7%      | 87.77441| 6.294003| 0.089716|chisquare_test |\n|positive |man   |   226|22.6%      | 80.68584| 6.016531| 0.089716|chisquare_test |\n|positive |woman |   180|18%        | 79.98889| 5.824231| 0.089716|chisquare_test |\n:::\n:::\n\n\n#### AD vs Genotype\n\n\n::: {.cell}\n\n```{.r .cell-code}\nad_genotype_summary<-all_data%>%\n    group_by(outcome,genotype)%>%\n    summarise(count=n(),\n            mean_age=mean(age),\n            sd_age=sd(age))%>%\n            ungroup%>%\n    mutate(sum=sum(count),\n    proportion=paste0(count/sum*100,\"%\"))%>%\n    dplyr::select(outcome, genotype,count,proportion,mean_age,sd_age)%>%\n    mutate(p_value=chisq.test(all_data$outcome,all_data$genotype)$p.value,\n    method=\"chisquare_test\")\nad_genotype_summary%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |genotype | count|proportion | mean_age|   sd_age|   p_value|method         |\n|:--------|:--------|-----:|:----------|--------:|--------:|---------:|:--------------|\n|negative |e3       |   459|45.9%      | 87.91721| 6.256674| 0.1271068|chisquare_test |\n|negative |e2       |    55|5.5%       | 88.74545| 6.535425| 0.1271068|chisquare_test |\n|negative |e4       |    80|8%         | 87.17500| 5.839141| 0.1271068|chisquare_test |\n|positive |e3       |   331|33.1%      | 80.46224| 5.982367| 0.1271068|chisquare_test |\n|positive |e2       |    24|2.4%       | 80.45833| 4.452446| 0.1271068|chisquare_test |\n|positive |e4       |    51|5.1%       | 79.78431| 6.290672| 0.1271068|chisquare_test |\n:::\n:::\n\n\n\n#### Age vs AD, Sex, Genotype\n\nAge is known as a strong risk factor of AD or dementia. Human nerve system gets damaged as people are aged and the nerve fibrosis symptoms progress gradually. For this reason, we need to look into how the sample data are distributed in terms of age.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nad_age_summary=getNumericSummaryTable(in_data=all_data,group_variable=\"outcome\",summary_variable=\"age\")\nsex_age_summary=getNumericSummaryTable(in_data=all_data,group_variable=\"sex\",summary_variable=\"age\")\ngenotype_age_summary=getNumericSummaryTable(in_data=all_data,group_variable=\"genotype\",summary_variable=\"age\")\nage_summary=rbind(\n    ad_age_summary,\n    sex_age_summary,\n    genotype_age_summary)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nage_summary%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|variable |group    |summary |   n|proportion |  mean|   sd| min| IQR_min| Q1| median|    Q3| IQR_max| max|\n|:--------|:--------|:-------|---:|:----------|-----:|----:|---:|-------:|--:|------:|-----:|-------:|---:|\n|outcome  |negative |age     | 594|59.4%      | 87.89| 6.23|  67|  72.000| 84|     88| 92.00| 104.000| 105|\n|outcome  |positive |age     | 406|40.6%      | 80.38| 5.93|  65|  65.375| 77|     80| 84.75|  96.375|  95|\n|sex      |man      |age     | 523|52.3%      | 84.85| 7.10|  65|  65.000| 80|     85| 90.00| 105.000| 105|\n|sex      |woman    |age     | 477|47.7%      | 84.84| 7.19|  66|  65.000| 80|     85| 90.00| 105.000| 105|\n|genotype |e3       |age     | 790|79%        | 84.79| 7.16|  65|  65.000| 80|     85| 90.00| 105.000| 105|\n|genotype |e2       |age     |  79|7.9%       | 86.23| 7.08|  72|  66.000| 81|     86| 91.00| 106.000| 105|\n|genotype |e4       |age     | 131|13.1%      | 84.30| 7.00|  67|  65.000| 80|     84| 90.00| 105.000| 100|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot<- ggarrange(\n    getNumericSummaryPlot(in_data=all_data,group_variable=\"outcome\",summary_variable=\"age\"),\n    getNumericSummaryPlot(in_data=all_data,group_variable=\"sex\",summary_variable=\"age\"),\n    getNumericSummaryPlot(in_data=all_data,group_variable=\"genotype\",summary_variable=\"age\"),\n    ncol=2, nrow=2,legend=\"bottom\")\n```\n:::\n\n\nThe table above shows the summary statistics of age grouped by the affected status, AD and non AD. The difference of age between the two groups are about -7.51, but their standard deviations are 5.93 and 6.23. Thus, it is hard to say their age in average differ in the affected status because the age variations of the two groups are overlapped. This research has two conflicting characteristics at the population level. \n\nThe glaring difference of age is also shown below. As you can see, the people with a negative status 7.51 years younger than those with a positive one.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\na1<-all_data%>%\n    dplyr::select(outcome,age)%>%\n    ggplot(aes(x=age,fill=outcome))+\n    geom_histogram(aes(y=..density..),alpha=0.5)+\n    geom_density(linewidth=1.5,alpha=0.5)+\n    scale_fill_manual(values=color_function(length(unique(all_data$outcome))))+\n    theme(legend.position=\"top\")+\n    labs(title=\"Histogram, Age Distribution Grouped by Disease Status\")   \na2<-all_data%>%\n    dplyr::select(outcome,age)%>%\n    ggplot(aes(x=outcome,y=age,fill=outcome))+\n    geom_boxplot()+\n    scale_fill_manual(values=color_function(length(unique(all_data$outcome))))+\n    theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1), legend.position=\"top\")+\n    labs(title=\"Boxplot, Age Distribution Grouped by Disease Status\")\n\nggarrange(a1, a2, ncol=2, nrow=1)\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n#### Age vs Metabolites\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_correlation_data<-\n    main_statistical_test(in_data=all_data,in_numeric_variable = 'age',method = \"cor\")%>%\n    filter(p_adjusted<0.05,column_name!='id')\n```\n:::\n\n\n1201 metabolites are significantly associated with age.\n\n\n#### Genotype vs Metabolites\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenotype_aov<-main_statistical_test(in_data=all_data,categorical_variable=\"genotype\",method='aov')\ngenotype_aov%>%\nfilter(column_name!='id',p_adjusted<0.05)%>%knitr::kable()\n```\n\n::: {.cell-output-display}\n|column_name |group_df |residual_df |group_ssq |residual_ssq |group_msq |residual_msq |F_value |p_value |method | p_adjusted|type |\n|:-----------|:--------|:-----------|:---------|:------------|:---------|:------------|:-------|:-------|:------|----------:|:----|\n:::\n:::\n\n\n0 metabolites are significantly associated with the genotype variable.\n\n### Multivariable Analysis\n\n#### AD vs Sex vs Genotype vs Age\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data%>%\n    group_by(outcome,sex,genotype)%>%\n    summarise(count=n(),\n    mean_age=mean(age),\n    sd_age=sd(age))%>%ungroup%>%\n    mutate(sum_count=sum(count),\n    proportion=paste0(round(count/sum_count*100,3),'%'))%>%\n    dplyr::select(outcome,sex,genotype,count,proportion, mean_age,sd_age)%>%\n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|outcome  |sex   |genotype | count|proportion | mean_age|   sd_age|\n|:--------|:-----|:--------|-----:|:----------|--------:|--------:|\n|negative |man   |e3       |   232|23.2%      | 88.16810| 6.064746|\n|negative |man   |e2       |    26|2.6%       | 88.34615| 7.557472|\n|negative |man   |e4       |    39|3.9%       | 86.87179| 5.831762|\n|negative |woman |e3       |   227|22.7%      | 87.66079| 6.450246|\n|negative |woman |e2       |    29|2.9%       | 89.10345| 5.576384|\n|negative |woman |e4       |    41|4.1%       | 87.46341| 5.903802|\n|positive |man   |e3       |   181|18.1%      | 80.80111| 6.180093|\n|positive |man   |e2       |    15|1.5%       | 80.73333| 4.096456|\n|positive |man   |e4       |    30|3%         | 79.96667| 5.921809|\n|positive |woman |e3       |   150|15%        | 80.05333| 5.728519|\n|positive |woman |e2       |     9|0.9%       | 80.00000| 5.220153|\n|positive |woman |e4       |    21|2.1%       | 79.52381| 6.925453|\n:::\n:::\n\n\nExcept for the disease status variable, it looks like there is no difference of age in average and count in the other categorical variables. Taking into account age varialble is significantly associated with the metabolites that are significantly associated with the disease status, outcome (or AD). There is no need to conduct futher exploratory data analysis in the multivariable analysis senction.\n\n## Data Mining\n\n### PCA (Principal Component Analysis)\n\n\n::: {.cell}\n\n:::\n\n\n### K-means Clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# K means\nkm_fit = kmeans(all_data[,-c(1:5)],centers = 2,iter.max = 300 )\n\n# \"K-Means Clustering- Confusion matrix\")\n# table(all_data[,1],km_fit$cluster)\n\nmat_avgss = matrix(nrow = 20, ncol = 2)\n\n# Average within the cluster sum of square\nprint(paste(\"Avg. Within sum of squares\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Avg. Within sum of squares\"\n```\n:::\n\n```{.r .cell-code}\nfor (i in (1:20)){\n  km_fit = kmeans(all_data[,-c(1:6)],centers = i,iter.max = 300 )\n  mean_km = mean(km_fit$withinss)\n  print(paste(\"K-Value\",i,\",Avg.within sum of squares\",round(mean_km,2)))\n  mat_avgss[i,1] = i\n  mat_avgss[i,2] = mean_km\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"K-Value 1 ,Avg.within sum of squares 5084212.57\"\n[1] \"K-Value 2 ,Avg.within sum of squares 2307327.83\"\n[1] \"K-Value 3 ,Avg.within sum of squares 1485870.86\"\n[1] \"K-Value 4 ,Avg.within sum of squares 1084452.78\"\n[1] \"K-Value 5 ,Avg.within sum of squares 853053.2\"\n[1] \"K-Value 6 ,Avg.within sum of squares 701172.72\"\n[1] \"K-Value 7 ,Avg.within sum of squares 594677.21\"\n[1] \"K-Value 8 ,Avg.within sum of squares 515120.19\"\n[1] \"K-Value 9 ,Avg.within sum of squares 454068.18\"\n[1] \"K-Value 10 ,Avg.within sum of squares 405213.23\"\n[1] \"K-Value 11 ,Avg.within sum of squares 365245.16\"\n[1] \"K-Value 12 ,Avg.within sum of squares 332931.58\"\n[1] \"K-Value 13 ,Avg.within sum of squares 305412.98\"\n[1] \"K-Value 14 ,Avg.within sum of squares 282339.37\"\n[1] \"K-Value 15 ,Avg.within sum of squares 262314.99\"\n[1] \"K-Value 16 ,Avg.within sum of squares 244329.68\"\n[1] \"K-Value 17 ,Avg.within sum of squares 228893.25\"\n[1] \"K-Value 18 ,Avg.within sum of squares 215403.56\"\n[1] \"K-Value 19 ,Avg.within sum of squares 202990.99\"\n[1] \"K-Value 20 ,Avg.within sum of squares 192329.12\"\n```\n:::\n\n```{.r .cell-code}\nplot(mat_avgss[,1],mat_avgss[,2],type = 'o',xlab = \"K_Value\",ylab = \"Avg. within sum of square\")\ntitle(\"Avg. within sum of squares vs. K-value\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmat_varexp = matrix(nrow = 20, ncol = 2)\n# Percentage of Variance explained\nprint(paste(\"Percent. variance explained\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Percent. variance explained\"\n```\n:::\n\n```{.r .cell-code}\nfor (i in (1:20)){\n  km_fit = kmeans(all_data[,-c(1:6)],centers = i,iter.max = 300 )\n  var_exp = km_fit$betweenss/km_fit$totss\n  print(paste(\"K-Value\",i,\",Percent var explained\",round(var_exp,4)))\n  mat_varexp[i,1]=i\n  mat_varexp[i,2]=var_exp\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"K-Value 1 ,Percent var explained 0\"\n[1] \"K-Value 2 ,Percent var explained 0.0924\"\n[1] \"K-Value 3 ,Percent var explained 0.1232\"\n[1] \"K-Value 4 ,Percent var explained 0.1468\"\n[1] \"K-Value 5 ,Percent var explained 0.1602\"\n[1] \"K-Value 6 ,Percent var explained 0.1734\"\n[1] \"K-Value 7 ,Percent var explained 0.1818\"\n[1] \"K-Value 8 ,Percent var explained 0.1895\"\n[1] \"K-Value 9 ,Percent var explained 0.1965\"\n[1] \"K-Value 10 ,Percent var explained 0.202\"\n[1] \"K-Value 11 ,Percent var explained 0.2077\"\n[1] \"K-Value 12 ,Percent var explained 0.2138\"\n[1] \"K-Value 13 ,Percent var explained 0.2194\"\n[1] \"K-Value 14 ,Percent var explained 0.2209\"\n[1] \"K-Value 15 ,Percent var explained 0.2261\"\n[1] \"K-Value 16 ,Percent var explained 0.2317\"\n[1] \"K-Value 17 ,Percent var explained 0.2333\"\n[1] \"K-Value 18 ,Percent var explained 0.236\"\n[1] \"K-Value 19 ,Percent var explained 0.2392\"\n[1] \"K-Value 20 ,Percent var explained 0.2418\"\n```\n:::\n\n```{.r .cell-code}\nplot(mat_varexp[,1],mat_varexp[,2],type = 'o',xlab = \"K_Value\",ylab = \"Percent Var explained\")\ntitle(\"Avg. within sum of squares vs. K-value\")\n```\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-43-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n:::\n",
    "supporting": [
      "eda_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}