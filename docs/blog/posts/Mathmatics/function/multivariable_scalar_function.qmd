---
title: Function - Multivariable Scalar Function
subtitle: template
description: |
  template
categories:
  - Mathematics
author: Kwangmin Kim
date: 01/31/2023
format: 
  html:
    page-layout: full
    code-fold: true
draft: False
---


<ul class="nav nav-pills" id="language-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" role="tab" aria-controls="Korean" aria-selected="true">Korean</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" role="tab" aria-controls="knitr" aria-selected="false">English</button>
  </li>

<div class="tab-content" id="language-tabcontent">

<div class="tab-pane fade  show active" id="Korean" role="tabpanel" aria-labelledby="Korean-tab">




## Multivariable Scalar Function

$$
y=f(\mathbf x), \space f:\mathbb R^n \rightarrow \mathbb R
$$

* Many to One
* 예시)
  * $y=f(x_1,x_2)=x_1+x_2, \space f:\mathbb R^2\rightarrow \mathbb R$,
    * y값이 곡면의 형태를 띈다
```{python}

import numpy as np
import matplotlib.pyplot as plt

fig = plt.figure(figsize=(7, 7))
ax = plt.axes(projection='3d')
x1=np.linspace(0,1,5)
x2=np.linspace(0,1,5)
x1,x2 = np.meshgrid(x1,x2) # multivariate scalar function 만들 때 사용

print(x2)  #x 축으로 값이 불변하고 y축으로는 값이 변함

z = 50*(x2 - x1**2)**2 + (2-x1)**2
print(z)

ax.scatter3D(x1, x2, z, marker='.', color='gray')
plt.show()

```


## 음함수 (implicit function) 형태
  * Contour Graph 한쪽 변이 상수로 고정
  * $f(x,y)=c$ (x 와 y의 관계가 가려져 있어서 음함수)
  * bivariate scalar function $f(x_1,x_2)=c$, 등고선 그래프


```{python}
fig = plt.figure(figsize=(7, 7))
ax = fig.add_subplot(1, 1, 1)
ax.xaxis.set_tick_params(labelsize=18)
ax.yaxis.set_tick_params(labelsize=18)

x1 = np.linspace(-2, 2, 51)
x2 = np.linspace(-1, 3, 51)
X1, X2 = np.meshgrid(x1, x2)
Z = 50*(X2 - X1**2)**2 + (2-X1)**2

contours = ax.contour(X1, X2, Z, levels=[30, 200, 600],  colors='k', 
            linestyles=['solid','dashed', 'dotted'])

ax.clabel(contours, contours.levels, fmt="%d", inline=True, fontsize=20)

ax.set_xlabel(r'$x_1$', fontsize=25)
ax.set_ylabel(r'$x_2$', fontsize=25)

#if file_print == True :
#    fig.savefig("imgs/chap3/fig3-6.png", dpi=300, bbox_inches='tight')
#    fig.savefig("imgs/chap3/fig3-6.pdf", format='pdf', bbox_inches='tight')
#    
plt.show()
```
</div>

<div class="tab-pane fade" id="English" role="tabpanel" aria-labelledby="English-tab">

</div>

```{python}
#| echo: false
#| eval: false
radius = 10
from IPython.display import display, Markdown
display(Markdown("""
The radius of the circle is {radius}.
""".format(radius = radius)))
```


## Blog Guide Map Link

* [Statistics Blog](../guide_map/index.qmd)
* [Engineering Blog](../../Engineering/guide_map/index.qmd)
* [Deep Learning Blog](../../DL/guide_map/index.qmd)
* [Machine Learning Blog](../../ML/guide_map/index.qmd)
* [Mathematics Blog](../../Mathmatics/guide_map/index.qmd)
* [Patent Blog](../../Patent/guide_map/index.qmd)
* [Validation Blog](../../Validation/guide_map/index.qmd)