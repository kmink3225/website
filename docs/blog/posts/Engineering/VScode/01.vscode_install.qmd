---
title: "VS code Introduction"
subtitle: VS code Introduction and Installation
description: |
  template
categories:
  - Engineering
author: Kwangmin Kim
date: 05/01/2023
format: 
  html:
    page-layout: full
    code-fold: true
    toc: true
    number-sections: true
comments: 
  utterances: 
    repo: ./docs/comments
draft: False
---

<ul class="nav nav-pills" id="language-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" role="tab" aria-controls="Korean" aria-selected="true">Korean</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" role="tab" aria-controls="knitr" aria-selected="false">English</button>
  </li>

<div class="tab-content" id="language-tabcontent">

<div class="tab-pane fade  show active" id="Korean" role="tabpanel" aria-labelledby="Korean-tab">

::: {#Korean .tab-pane .fade .show .active role="tabpanel" aria-labelledby="Korean-tab"}

# VScode Installation

* VScode란?
    - Microsoft사에서 2015년에 제작, 다양한 언어 개발을 돕는 IDE tool
    - Visual Studio 라는 IDE 툴과는 엄연히 다른 툴
* Actions
    1. [VScode 다운로드](https://code.visualstudio.com/download)
        * 설치 마법사에서 추가 작업 선택란에 code로 열기 작업을 windows탐색기 파일의 상황에 맞는 메뉴에 추가 선택할 것. programming file을 열때 VScode가 디폴트가 되도록함
    2. VScode 설치, 파이썬 확장팩 설치
    3. 프로젝트 생성, 파이썬 가상환경 설정
        * VScode가 file이나 directory단위로 관리하는 IDE tool이라 프로젝트 생성 개념이 없음
        * windows에 프로젝트 directory하나 만들고 VScode에서 open folder로 열면 그 folder를 최상위 folder로 인식 (project 생성됨)
    4. python interpreter 설정
        * VScode > Terminal > New Terminal > python version 확인
* 파이썬 가상환경
    - 라이브러리 버전 충돌 방지를 위해 설치/사용되는 파이썬 인터프리터 환경을 격리시키는 기술
    - 파이썬은 라이브러리 설치 시점에 따라서도 설치되는 버전이 상이한 경우가 많음

    ![가상 환경의 필요성](../../../../../images/airflow/virtual-environment.PNG)

    - python을 global 환경에 설치할 경우 위의 그림처럼 C,D프로젝트가 동시에 진행될 때 둘 중하나의 library version이 차이가 나면 old version의 library 로 진행되는 프로젝트는 에러가 발생함 
        - 2개의 다른 프로젝트가 같은 python interpreter를 바라보고 library를 설치하기 때문에 종속성 문제가 생김 (library 충돌 발생)
        - 그래서 다른 가상환경 venv안에 다른 프로젝트를 할당해서 독립적으로 프로젝트를 진행하는게 일반적임
    - python 가상환경 만들기
        - conda로 만들 경우 conda 설치 후 만들면 됨. [설치 링크](https://github.com/conda-forge/miniforge)
        - python에 있는 가상환경 생성 기능으로 만들 경우 `python -m airflow ./venv` 실행
            * `./venv` directory에 python 설치하고 version 관리하겠다는 의미
    - VScode가 python 가상환경 참조하도록 설정
        *  help>show all commands or `ctrl+shift+p` 누른후 `interpreter` 입력하여 가상환경에 있는 python 클릭
    - terminal 에서 가상환경 잘 잡혔는지 확인


:::
</div>

<div class="tab-pane fade" id="English" role="tabpanel" aria-labelledby="English-tab">

::: {#English .tab-pane .fade role="tabpanel" aria-labelledby="English-tab"}

:::


</div>


# Go to Blog Content List

[Blog Content List](../../content_list.qmd)