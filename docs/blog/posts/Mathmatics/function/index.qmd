---
title: Function
subtitle: template
description: |
  template
categories:
  - Mathematics
author: Kwangmin Kim
date: 01/31/2023
format: 
  html:
    page-layout: full
    code-fold: true
draft: False
---


<ul class="nav nav-pills" id="language-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="Korean-tab" data-bs-toggle="tab" data-bs-target="#Korean" type="button" role="tab" aria-controls="Korean" aria-selected="true">Korean</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="English-tab" data-bs-toggle="tab" data-bs-target="#English" type="button" role="tab" aria-controls="knitr" aria-selected="false">English</button>
  </li>

<div class="tab-content" id="language-tabcontent">

<div class="tab-pane fade  show active" id="Korean" role="tabpanel" aria-labelledby="Korean-tab">

## Definition

$$
f: A \rightarrow B
$$

* A function $f$ is a relation between a set $A$ called the domain and a set $B$ called the codomain such that every element in the domain is uniquely associated with an element in the codomain.
* The element associated with an input $x$ in the domain is denoted as $f(x)$.
* The set of all possible inputs in the domain is called the domain of the function, denoted as $\text{dom}(f)$.
* The set of all possible outputs in the codomain is called the codomain of the function, denoted as $\text{cod}(f)$. 
* The set of all actual outputs produced by the function is called the range of the function, which is a subset of the codomain and denoted as $\text{range}(f)$.


### 함수의 종류

* Surjective Function (Onto Function)
$$
f: A \rightarrow B
$$
  * A function $f$ is said to be surjective (or onto) if every element in the codomain $B$ has a corresponding element in the domain $A$ such that $f(x) = b$ for some $x \in A$ and $b \in B$.
  * In other words, every element in the codomain $B$ is "hit" or "mapped to" by the function $f$.
  * The range of a surjective function is equal to the codomain.
* Injective Function (One-to-One Function) 
$$
f: A \rightarrow B
$$
  * A function $f$ is said to be injective (or one-to-one) if every element in the domain $A$ is uniquely mapped to a distinct element in the codomain $B$.
  * In other words, for any distinct elements $x_1, x_2 \in A$, if $f(x_1) = f(x_2)$, then $x_1 = x_2$. 
  * An injective function ensures that no two different elements in the domain are mapped to the same element in the codomain.
* Bijective Function (Bijection, one to one correspondence)
$$
f: A \rightarrow B
$$
  * A function $f$ is said to be bijective (or a bijection) if it is both injective and surjective.
  * In other words, a bijective function is a one-to-one correspondence between the elements of the domain $A$ and the elements of the codomain $B$.
  * It means that every element in the domain has a unique corresponding element in the codomain, and every element in the codomain is "hit" or "mapped to" by exactly one element in the domain.
  * In terms of sets, a bijective function establishes a one-to-one correspondence between the sets $A$ and $B$, which implies that the cardinality of the domain $A$ is equal to the cardinality of the codomain $B$.


### 구성 요소
$$
y=f(x;\alpha)
$$

* 독립변수 (independent variable): $x$, 함수의 출력값을 결정하는 변수로서, feature, decision variable 등으로도 표현
* 매개변수 (parameter): $\alpha$,  함수의 모양을 결정하기 위한 변수
* 종속 변수 (dependent variable): $y$ or $f(x)$ 독립변수와 매개 변수에 의해 값이 결정되는 변수

:::{.callout-tip}
#### Confusing Terms about Rectangular Data

독립 변수와 종속 변수는 각 분야에서 쓰이는 이름이 다르다. 아래 표 참고 (정확하진 않음. 아직도 업데이트 중) See @tbl-letters.

(The below table may be incorrect still under research)

|   Terms  | Mathmatics            | Statistics                                             | Computer Science           | Data Engineering |
|:--------:|:---------------------:|:------------------------------------------------------:|:--------------------------:|:----------------:|
| graph    | visulaized plot       | visulaized plot                                        | connections among entities | connections among entities, data structure   |
| variable | independent variable  | predictor, experimental variable, explanatory variable | feature, input             | attribute, column|
| outcome  | dependent variable    | response variable, outcome                             | target, output             | attribute, column|
| Records  | pattern, example      | case, sample, observation                              | instance, record, row     | instance, record, row|

: Confusing Terms in Data Science {#tbl-letters}
:::

### 일반적인 함수의 종류

* 함수, 분수함수, 지수함수, 로그함수, 삼각함수 등

### 예시

* 2차 함수

```{python}
import numpy as np
import matplotlib.pyplot as plt

def f(x,a=1,b=2,c=3): #x: independent variable, f(x): dependent variable
    return a*x**2+b*x+c # a,b,c : parameters
x=np.linspace(-10,10,1000)
fig=plt.figure()
ax=plt.axes()
ax.plot(x,f(x))
ax.plot(x,f(x,2,-3,2))
plt.show()

```

* $f(x)=2x^2-3x+2$
  * 함수: $f(x;a,b,c)$
  * 종속 변수: $f(x)$
  * 독립 변수: $x$
  * 매개 변수 (parameter): $a=2, \space b=-3, \space c=2$

* 예시2
  * linear regression 
    * 매개변를 수학적으로 최적화하여 데이터에 맞는 직선의 방정식을 찾는 알고리즘
    * 함수 : $f(x;\mathbf \beta)=\beta_1x+\beta_0$ 
    * 종속 변수: $f(x)=y$ 
    * 독립 변수: $x$
    * 매개 변수 (parameter): $\mathbf \beta = (\beta_0, \space \beta_1)$

$$
\begin{aligned}
L(oss)&=\frac{1}{2}\sum_{n=1}^{N}(y_n-f(x_n,\mathbf \beta))^2 \\
&=\frac{1}{2}\sum_{n=1}^{N}(y_n-\beta_1x_n-\beta_0)^2 
\end{aligned}
$$


</div>

<div class="tab-pane fade" id="English" role="tabpanel" aria-labelledby="English-tab">


</div>
