[
  {
    "objectID": "about.html#enthusiastic-data-scientist",
    "href": "about.html#enthusiastic-data-scientist",
    "title": "Kwangmin Kim",
    "section": "Enthusiastic Data Scientist",
    "text": "Enthusiastic Data Scientist\n\nInterests\nData Modeling, Statistics, Machine Learning, Deep Learning, Optimization"
  },
  {
    "objectID": "docs/blog/index.html",
    "href": "docs/blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Data Structure (8) Binary Search Tree\n\n\nPython List\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 27, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nANCOVA\n\n\nANOVA, one-way ANOVA, Two-way ANOVA, ANCOVA, repeated measures ANOVA, MANOVA, MANCOVA\n\n\n\n\nStatistics\n\n\n\n\nThe analysis of variance (ANOVA) is one of the most widely used statistical techniques. When we conduct a comparison testing of multiple groups such as A, B, and C on each with numeric data, the statistical test for a significant difference among the groups is called analysis of variance, or ANOVA.\n\n\n\n\n\n\nJan 27, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRepeated Meausres ANOVA\n\n\nANOVA, one-way ANOVA, Two-way ANOVA, ANCOVA, repeated measures ANOVA, MANOVA, MANCOVA\n\n\n\n\nStatistics\n\n\n\n\n.\n\n\n\n\n\n\nJan 27, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMANOVA\n\n\nANOVA, one-way ANOVA, Two-way ANOVA, ANCOVA, repeated measures ANOVA, MANOVA, MANCOVA\n\n\n\n\nStatistics\n\n\n\n\n\n\n\n\n\n\n\nJan 27, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Guide Map, Validation\n\n\nVerification & Validation on Software\n\n\n\n\nValidation\n\n\n\n\nAny business that directly or indirectly affects human health or life must comply with regulations regarding inspection, testing, verification and validation. It is necessary to systematically manage and document risks by arranging regulatory policy data for the medical and IT industry. These materials are rigorous and conservative, so there are various documents for each case, but the underlying principles have the same root. In this blog, the documents that are fundamental to each area are summarized and organized. 사람의 건강이나 생명에 직 간접적으로 영향을 미치는 어떠한 비즈니스는 검사, 테스트, 검증 및 인증에 관한 규정을 준수해야한다. 의료분야와 IT 분야에 대한 규정 방침 자료를 정리하여 체계적인 위험 관리를 해야한다. 이러한 자료들은 엄격하고 보수적이어서 각 사례마다 다양한 문서들이 존재하지만 그 근본 원리는 같다. 이 블로그에서는 각 영역마다 근본이 되는 문서들을 요약 및 정리한다.\n\n\n\n\n\n\nJan 27, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Structure (7) Deque\n\n\nPython List\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 26, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Guide Map, Engineering\n\n\nEngineering for Python\n\n\n\n\nEngineering\n\n\n\n\nEngineering for Data Science\n\n\n\n\n\n\nJan 26, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Structure (10) Graph\n\n\nPython List\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 20, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Structure (6) Queue\n\n\nPython List\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 19, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Structure (5) Stack\n\n\nPython List\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 19, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Structure (2) Array\n\n\nArray\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 18, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Structure (3) Linked List\n\n\nLinked List\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 18, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n  \n\n\n\n\nData Structure (1) Overview\n\n\nOverview\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 17, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Structure (4) Python List\n\n\nPython List\n\n\n\n\nEngineering\n\n\n\n\nData Structure for Data Science\n\n\n\n\n\n\nJan 17, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNormality Check\n\n\nShapiro-Wilk Test, Anderson–Darling test, Kolmogorov–Smirnov test, and Lilliefors test, qqplot\n\n\n\n\nStatistics\n\n\n\n\nnormality check\n\n\n\n\n\n\nJan 16, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nANOVA\n\n\nANOVA, one-way ANOVA, Two-way ANOVA, ANCOVA, repeated measures ANOVA, MANOVA, MANCOVA\n\n\n\n\nStatistics\n\n\n\n\nThe analysis of variance (ANOVA) is one of the most widely used statistical techniques. When we conduct a comparison testing of multiple groups such as A, B, and C on each with numeric data, the statistical test for a significant difference among the groups is called analysis of variance, or ANOVA.\n\n\n\n\n\n\nJan 7, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMANOVA\n\n\nANOVA, one-way ANOVA, Two-way ANOVA, ANCOVA, repeated measures ANOVA, MANOVA, MANCOVA\n\n\n\n\nStatistics\n\n\n\n\nThe analysis of variance (ANOVA) is one of the most widely used statistical techniques. When we conduct a comparison testing of multiple groups such as A, B, and C on each with numeric data, the statistical test for a significant difference among the groups is called analysis of variance, or ANOVA.\n\n\n\n\n\n\nJan 7, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Guide Map, Statistics\n\n\nGuide Map of Blogs in Statistics Section\n\n\n\n\nStatistics\n\n\n\n\nJust enumerating a list of the contents in the the statistics section\n\n\n\n\n\n\nJan 2, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Guide Map, Statistics\n\n\nGuide Map of Blogs in Statistics Section\n\n\n\n\nStatistics\n\n\n\n\nJust enumerating a list of the contents in the the statistics section\n\n\n\n\n\n\nJan 2, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Guide Map, Statistics\n\n\nGuide Map of Blogs in Statistics Section\n\n\n\n\nStatistics\n\n\n\n\nJust enumerating a list of the contents in the the statistics section\n\n\n\n\n\n\nJan 2, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Guide Map, Statistics\n\n\nGuide Map of Blogs in Statistics Section\n\n\n\n\nStatistics\n\n\n\n\nJust enumerating a list of the contents in the the statistics section\n\n\n\n\n\n\nJan 2, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlog Guide Map, Statistics\n\n\nGuide Map of Blogs in Statistics Section\n\n\n\n\nStatistics\n\n\n\n\nJust enumerating a list of the contents in the the statistics section\n\n\n\n\n\n\nJan 2, 2023\n\n\nKwangmin Kim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFDA Software Validation Guidance Presentation\n\n\nSource: General Principles of Software Validation\n\n\n\n\nValidation\n\n\n\n\nThe purpose of this article is to help understand the summary of the ‘General Principles of the ’Software Validation; Final Guidance for Industry and FDA Staff’ document issued on 2002-01-11. This article provides short sentences with many diagrams for intuitive understanding.\n\n\n\n\n\n\nDec 28, 2022\n\n\nKwangmin Kim\n\n\n\n\n\n\n  \n\n\n\n\np-values\n\n\nStatistical Hypothesis Test\n\n\n\n\nStatistics\n\n\n\n\np-value is one of the most commonly used statistcal index to show significance level of a hypothesis testing result of your experiment.\n\n\n\n\n\n\nDec 15, 2022\n\n\nKwangmin Kim\n\n\n\n\n\n\n  \n\n\n\n\nFDA Software Validation Guidance Summary\n\n\nDcoument: General Principles of Software Validation\n\n\n\n\nValidation\n\n\n\n\nThe purpose of this blog is to get a rough concept of the FDA approval process by making a summary of the ‘General Principles of the ’Software Validation; Final Guidance for Industry and FDA Staff’ document issued on 2002-01-11. So far, the document seems to be still valid taking into account that its guidance for the FDA approval are broad, general, and comprehensive, and that many recent FDA documents supplement it.\n\n\n\n\n\n\nDec 15, 2022\n\n\nKwangmin Kim\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "docs/blog/posts/2022-12-08-P-value/index.html",
    "href": "docs/blog/posts/2022-12-08-P-value/index.html",
    "title": "p-values",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n실험 결과가 우연히 생성된 것보다 더 극단적인 경우를 통계적으로 유의하다고 한다. (결과가 귀무 가설 하의 분포와 다른 분포에서 나올 수 있다고 생각해 보십시오.)\n\n\n\n’p-값’의 p는 ’확률’을 나타냅니다. p-값은 실험에서 관찰된 결과가 귀무 가설 하에서 발생할 수 있는 극단적인 결과를 얻을 확률의 합계입니다. 즉, p-값은 실험 결과가 우연히 얻어질 확률입니다.\n\n\n\n우연한 결과가 통계적으로 유의미하다고 하기 위해 실험의 실제 결과를 넘어서야 하는 극단적이거나 드문 결과의 확률 임계값입니다.\n\n\n\n귀무가설이 참인데 실수로 귀무가설을 기각하는 오류\n\n\n\n대립가설이 참인데 실수로 귀무가설을 기각하지 못하는 오류\n\n\n\n\n\np-값은 테스트 결과의 유의성을 측정할 때 효율적이고 효과적인 통계 지표입니다. 회귀 분석을 수행했다고 가정해 봅시다. 그런 다음 회귀 모델의 결과로 베타 계수와 표준 오차를 얻을 수 있습니다.\n\nNumber of Cases of How You Interpret Regresssion Result\n\n\n\nhigh Standard Error\nlow Standard Error\n\n\n\n\nhigh \\(\\beta\\)\nUnclear Interpretation\nOK\n\n\nlow \\(\\beta\\)\nOK\nUnclear Interpretation\n\n\n\n위의 표는 회귀 모델의 결과를 해석할 수 있는 경우의 수를 보여줍니다. 각 계수 \\(\\beta\\) 에 대해 4개의 경우가 있습니다.\n\nhigh \\(\\beta\\) and high Standard Error mean that 해당 변수가 강한 영향을 미치나 그 영향이 변동될 수 있음을 의미하므로 회귀 모델에서 도출된 \\(\\beta\\) 계수는 유의하지 않을 가능성이 높습니다. 그 효과가 통계적으로 유의미한지 확신할 수 없습니다.\nhigh \\(\\beta\\) and low Standard Error mean that the corresponding variable has a strong effect, and its variation is small, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be significant.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, its effect has a high variation. So, we can clearly interprete the variable with the \\(\\beta\\) as a variable that is not significantly associated with your response variable.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, but its effect has a low variation. So, it is difficult to conclude that the variable is significant.\n\nThe p-value could be used to provide a clearer interpretation of the unclear situation (i.e. (high \\(\\beta\\), high Standard Error), (low \\(\\beta\\), high Standard Error) ) by looking at the ratio of the estimated value of a parameter(= \\(\\beta\\)) to its standard error on the distribution under the null hypothesis. By general convention, the cut-off of p-value indicating statistical signficance is 0.05.\n\n\n\nDespite the goodness of p-value, it is controversial to make a decision based solely on the p-value. As mentioned above, p-value is the probability that the result of your experiment is due to chance. In addition, looking into \\(\\frac{\\beta}{\\frac{s.e}{\\sqrt{n}}}\\), the p-value gets smaller as the sample size becomes larger and larger. It should be avoided that something is proved just because a low p-value is calucated.\nEven if a result is statistically significant, that does not necessarily mean it has real significance. A small difference that has no practical meaning can be statistically significant if the sample size is large enough. It is because large samples ensure that meaningless effects can become big enough to possibly exclude chance due to simple math.\nThe American Statistical Association (ASA) has released a statement of six principles for researchers and journal editors on p-values:\nSource: ASA Statement on Statistical Significance and p-values\n\nP-values can indicate how incompatible the data are with a specified statistical model.\nP-values do not measure the probability that the studied hypothesis is true, or the probability that the data produced by random chance alone.\nScientific conclusions and business or policy decisions should not be based only on whether a p-value passes a specific threshold.\nProper inference requires full reporting and transparency.\nA p-value, or statistical significance, does not measure the size of an effect or the importance of a result.\nBy itself, a p-value does not provide a good measure of evidence regarding a model or hypothesis.\n\n\n\n\n\nPersonally, I make use of p-values as a tool in data science to just check whether a model result or a set of variables that appears interesting and useful is in the range of normal variability by chance in the exploratory data analysis(EDA) or data mining step.\nIf you want to get a statistical significance level through p-values, other methodologies could help increase the accuracy of real significance such as permuted p-values, q-values, and penalization on multiple comparison tests\n\n\n\n\n\nIt is said to be statistically significant if a result of your experiment is more extreme than one that is produced by chance. (Try thinking that your result could have come from a different distribution from the one under the null hypothesis.)\n\n\n\np of ‘p-value’ stands for ‘probability’. The p-value is the summation of the probabilities of obtaining results as extreme as the observed results from your experiments could occur under the null hypothesis. In other words, p-value is the probability that the result of your experiment is obtained by chance.\n\n\n\nThe probability threshold of the extreme or rarer results that chance results must be beyond actual results of your experiments in order to be said to be statistically significant.\n\n\n\nconcluding \\(H_o\\) or the null hypothesis is true by mistake.\n\n\n\nconcluding \\(H_a\\) or the alternative hypothesis is true by mistake.\n\n\n\n\n\np-value is an efficient and effective statistical index when to measure the significance of your test result. Let’s make an assumption that you have conducted a regression analysis. Then, you can get beta coefficients and their standard errors as results of your regression model.\n\nNumber of Cases of How You Interpret Regresssion Result\n\n\n\nhigh Standard Error\nlow Standard Error\n\n\n\n\nhigh \\(\\beta\\)\nUnclear Interpretation\nOK\n\n\nlow \\(\\beta\\)\nOK\nUnclear Interpretation\n\n\n\nThe above table shows the number of cases you can interprete the results of your regression model. There are 4 cases for each coefficient \\(\\beta\\).\n\nhigh \\(\\beta\\) and high Standard Error mean that the corresponding variable has a strong effect but its effect may be fluctuated, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be not significant. We are not sure that its effect is statistically significant.\nhigh \\(\\beta\\) and low Standard Error mean that the corresponding variable has a strong effect, and its variation is small, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be significant.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, its effect has a high variation. So, we can clearly interprete the variable with the \\(\\beta\\) as a variable that is not significantly associated with your response variable.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, but its effect has a low variation. So, it is difficult to conclude that the variable is significant.\n\nThe p-value could be used to provide a clearer interpretation of the unclear situation (i.e. (high \\(\\beta\\), high Standard Error), (low \\(\\beta\\), high Standard Error) ) by looking at the ratio of the estimated value of a parameter(= \\(\\beta\\)) to its standard error on the distribution under the null hypothesis. By general convention, the cut-off of p-value indicating statistical signficance is 0.05.\n\n\n\nDespite the goodness of p-value, it is controversial to make a decision based solely on the p-value. As mentioned above, p-value is the probability that the result of your experiment is due to chance. In addition, looking into \\(\\frac{\\beta}{\\frac{s.e}{\\sqrt{n}}}\\), the p-value gets smaller as the sample size becomes larger and larger. It should be avoided that something is proved just because a low p-value is calucated.\nEven if a result is statistically significant, that does not necessarily mean it has real significance. A small difference that has no practical meaning can be statistically significant if the sample size is large enough. It is because large samples ensure that meaningless effects can become big enough to possibly exclude chance due to simple math.\nThe American Statistical Association (ASA) has released a statement of six principles for researchers and journal editors on p-values:\nSource: ASA Statement on Statistical Significance and p-values\n\nP-values can indicate how incompatible the data are with a specified statistical model.\nP-values do not measure the probability that the studied hypothesis is true, or the probability that the data produced by random chance alone.\nScientific conclusions and business or policy decisions should not be based only on whether a p-value passes a specific threshold.\nProper inference requires full reporting and transparency.\nA p-value, or statistical significance, does not measure the size of an effect or the importance of a result.\nBy itself, a p-value does not provide a good measure of evidence regarding a model or hypothesis.\n\n\n\n\n\nPersonally, I make use of p-values as a tool in data science to just check whether a model result or a set of variables that appears interesting and useful is in the range of normal variability by chance in the exploratory data analysis(EDA) or data mining step.\nIf you want to get a statistical significance level through p-values, other methodologies could help increase the accuracy of real significance such as permuted p-values, q-values, and penalization on multiple comparison tests"
  },
  {
    "objectID": "docs/blog/posts/2022-12-08-P-value/index.html#p-value-good-vs-bad",
    "href": "docs/blog/posts/2022-12-08-P-value/index.html#p-value-good-vs-bad",
    "title": "p-values",
    "section": "p-value: Good vs Bad?",
    "text": "p-value: Good vs Bad?\n\nGoodness\np-value is an efficient and effective statistical index when to measure the significance of your test result. Let’s make an assumption that you have conducted a regression analysis. Then, you can get beta coefficients and their standard errors as results of your regression model.\n\nNumber of Cases of How You Interpret Regresssion Result\n\n\n\nhigh Standard Error\nlow Standard Error\n\n\n\n\nhigh \\(\\beta\\)\nUnclear Interpretation\nOK\n\n\nlow \\(\\beta\\)\nOK\nUnclear Interpretation\n\n\n\nThe above table shows the number of cases you can interprete the results of your regression model. There are 4 cases for each coefficient \\(\\beta\\).\n\nhigh \\(\\beta\\) and high Standard Error mean that the corresponding variable has a strong effect but its effect may be fluctuated, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be not significant. We are not sure that its effect is statistically significant.\nhigh \\(\\beta\\) and low Standard Error mean that the corresponding variable has a strong effect, and its variation is small, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be significant.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, its effect has a high variation. So, we can clearly interprete the variable with the \\(\\beta\\) as a variable that is not significantly associated with your response variable.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, but its effect has a low variation. So, it is difficult to conclude that the variable is significant.\n\nThe p-value could be used to provide a clearer interpretation of the unclear situation (i.e. (high \\(\\beta\\), high Standard Error), (low \\(\\beta\\), high Standard Error) ) by looking at the ratio of the estimated value of a parameter(= \\(\\beta\\)) to its standard error on the distribution under the null hypothesis. By general convention, the cut-off of p-value indicating statistical signficance is 0.05.\n\n\nBadness\nDespite the goodness of p-value, it is controversial to make a decision based solely on the p-value. As mentioned above, p-value is the probability that the result of your experiment is due to chance. In addition, looking into \\(\\frac{\\beta}{\\frac{s.e}{\\sqrt{n}}}\\), the p-value gets smaller as the sample size becomes larger and larger. It should be avoided that something is proved just because a low p-value is calucated.\nEven if a result is statistically significant, that does not necessarily mean it has real significance. A small difference that has no practical meaning can be statistically significant if the sample size is large enough. It is because large samples ensure that meaningless effects can become big enough to possibly exclude chance due to simple math.\nThe American Statistical Association (ASA) has released a statement of six principles for researchers and journal editors on p-values:\nSource: ASA Statement on Statistical Significance and p-values\n\nP-values can indicate how incompatible the data are with a specified statistical model.\nP-values do not measure the probability that the studied hypothesis is true, or the probability that the data produced by random chance alone.\nScientific conclusions and business or policy decisions should not be based only on whether a p-value passes a specific threshold.\nProper inference requires full reporting and transparency.\nA p-value, or statistical significance, does not measure the size of an effect or the importance of a result.\nBy itself, a p-value does not provide a good measure of evidence regarding a model or hypothesis."
  },
  {
    "objectID": "docs/blog/posts/2022-12-08-P-value/index.html#how-to-use-p-vlaues",
    "href": "docs/blog/posts/2022-12-08-P-value/index.html#how-to-use-p-vlaues",
    "title": "p-values",
    "section": "How to use p-vlaues?",
    "text": "How to use p-vlaues?\nPersonally, I make use of p-values as a tool in data science to just check whether a model result or a set of variables that appears interesting and useful is in the range of normal variability by chance in the exploratory data analysis(EDA) or data mining step.\nIf you want to get a statistical significance level through p-values, other methodologies could help increase the accuracy of real significance such as permuted p-values, q-values, and penalization on multiple comparison tests"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/index.html",
    "href": "docs/blog/posts/2022-12-10-FDA/index.html",
    "title": "FDA Software Validation Guidance Summary",
    "section": "",
    "text": "I am so sorry not for providing a compfortab visualization. Although I have tried to use revealjs provided in the guide section in the Quarto website, I am still clumsy at handling it. I will update this article as I get proficient at revealjs using Quarto.\nThe FDA validation guidance document is a bit difficult to understand because its explanations provides abstract, general, and present broad cocepts. For this reason, I compiled and made a summary of the document with many diagrams. However, some diagrams are too small to see. Please, scroll up your mouse wheel with the ‘Ctrl’ key on your keyboard pressed to zoom in on the small text in the diagrams.\n(Writing in Progress) It is hard to say that this version of summary is suitable for representing and covering the original document. Some of the content of this document has been excluded for personal use (less than 10% of it have been excluded).\n\n\n\n\n2022-12-28, download this article as PDF\n2022-12-28, summary with diagrams\n\n\n\n\nFDA: General Principles of Software Validation\n\n\n\nFDA has reported the following analysis:\n\n242 of 3140 (7.7%) medical device recalls between 1992 and 1998 are attributable to software failures.\n192 of the 242 (79.3%) failures were caused by software defects that were introduced when changes were made to the software after its initial production and distribution.\nThe software validation check is a principal means of avoiding such defects and resultant recalls.\n\n\n\n\n\nCenter for Devices and Radiological Health (CDRH)\nU.S. Department Of Health and Human Services\nFood and Drug Administration\nCenter for Biologics Evaluation and Research"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/index.html#purpose",
    "href": "docs/blog/posts/2022-12-10-FDA/index.html#purpose",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.1 Purpose",
    "text": "2.1 Purpose\nThe purpose is to make a sketch of general validation principle of the validation of medical device software or software used to design or develop."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/index.html#scope",
    "href": "docs/blog/posts/2022-12-10-FDA/index.html#scope",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.2 Scope",
    "text": "2.2 Scope\nThe scope of this guidance is broad. The important activities for the software validation include at least:\n\nplanning,\nverfication,\ntesting,\ntraceability, and\nconfiguration management.\n\nAll of the activities above should be\n\nintegrated\nbe able to describe software life cycle management and\nbe able to describe software risk management.\n\nThe software validation and verification activities should be focused into the entire software life cycle. (It does not necessarily mean that the activies must follow any technical models.)\nThe guidance is applicable to any software related to a regulated medical device and anyone who is employed in a bio or medical industry.\n\n2.2.1 The Least Burdensome Approach\nThe guidance reflects that the minimum list of the relavant scientific and legal requirements that you must comply with.\n\n\n2.2.2 Regulatory Requirements for Software Validation\n\nSoftware validation: a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997. (See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\nSpecific requirements for validation of device software are found in 21 CFR §820.30(g). Other design controls, such as planning, input, verification, and reviews, are required for medical device software. (See 21 CFR §820.30.)\ncomputer systems used to create, modify, and maintain electronic records and to manage electronic signatures are also subject to the validation requirements. (See 21 CFR §11.10(a).)\n\n\n2.2.2.1 Objective\nThe objective of software validation is to ensure:\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\n2.2.2.2 What to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software.\n\n\n\n2.2.3 Quality System Regulation vs Pre-market Submissions\nThis document does not address any specific requirements but general ones. Specific issues should be addressed to\n\nthe Office of Device Evaluation (ODE),\nCenter for Devices and Radiological Health (CDRH)\nthe Office of Blood Research and Review,\nCenter for Biologics Evaluation and Research (CBER). See the references in Appendix A for applicable FDA guidance documents for pre-market submissions."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/index.html#context-for-software-validation",
    "href": "docs/blog/posts/2022-12-10-FDA/index.html#context-for-software-validation",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.3 Context for Software Validation",
    "text": "2.3 Context for Software Validation\n\nValidation elements that FDA expects to do for the Quality System regulation, using the principles and tasks are listed in Sections 4 and 5.\nAdditional specific information is available from many of the references listed in Appendix A\n\n\n2.3.1 Definition and Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology between the medical device Quality System regulation and the software industry:\n\nrequirements,\nspecification,\nverification, and\nvalidation.\n\n\n\n2.3.1.1 Requirements and Specifications\nThe Quality System regulation states\n\nthat design input requirements must be documented and\nthat specified requirements must be verified\n\nBut, the regulation does not further clarify the distinction between the terms “requirement” and “specification.”\n\nRequirement\n\ncan be any need or expectation for a system or for its software.\nreflects the stated or implied needs of the customer: requirements may be\n\nmarket-based,\ncontractual,\nstatutory, or\nan organization’s internal requirements.\n\nvarious examples of requirements\n\ndesign, functional, implementation, interface, performance, or physical requirements\n\nSoftware requirements derived from the system requirements for those aspects of system functionality\nSoftware requirements are typically stated in functional terms and are defined, refined, and updated as a development project progresses.\nSuccess in accurately and completely documenting software requirements is a crucial factor in successful validation of the resulting software.\n\nSpecification\n\ndefined as “a document that states requirements.” (See 21 CFR §820.3(y).)\nIt may refer to or include drawings, patterns, or other relevant documents\nIt usually indicates the means and the criteria whereby conformity with the requirement can be checked.\nVarious examples of written specifications\n\nsystem requirements specification,\nsoftware requirements specification,\nsoftware design specification,\nsoftware test specification,\nsoftware integration specification, etc.\n\nAll of these documents are design outputs for which various forms of verification are necessary.\n\n\n\n\n2.3.1.2 Verifiaction and Validation\nThe Quality System regulation is harmonized with ISO 8402:1994, which treats “verification” and “validation” as separate and distinct terms.\n\nSoftware verification\n\nIt provides objective evidence that the design outputs of a particular phase of the software development life cycle meet all of the specified requirements for that phase.\nIt looks for\n\nconsistency,\ncompleteness, and\ncorrectness of the software and its supporting documentation\n\nSoftware testing\n\nverification activities intended to confirm that software development output meets its input requirements.\n\nTypes of verification activities include\n\nvarious static and dynamic analyses,\ncode and document inspections,\nwalkthroughs, and other techniques.\n\n\nSoftware Validation\n\nConfirmation by examination and provision of the following objective evidence:\nEvidence 1: software specifications conform to user needs and intended uses, and\nEvidnece 2: the particular requirements implemented through software can be consistently fulfilled.\nEvidnece 3: all software requirements have been implemented correctly and completely and are traceable to system requirements.\nA conclusion that software is validated is highly dependent upon comprehensive software testing, inspections, analyses, and other verification tasks performed at each stage of the software development life cycle.\nTesting of device software functionality in a simulated* use environment, and user site testing are typically included as components of an overall design validation program for a software automated device.\n\nDifficulty in Software verification and validation\n\na developer cannot test forever, and\nit is difficult to know how much evidence is enough.\nIn large measure, software validation is a matter of developing a “level of confidence” that the device meets all requirements and user expectations for the software automated functions and features of the device.\nConsiderations for an acceptable level of confidence\n\nmeasures such as defects found in specifications documents,\nestimates of defects remaining,\ntesting coverage, and other techniques are all used to develop before shipping the product.\nHowever, a level of confidence varies depending upon the safety risk (hazard) posed by the automated functions of the device. (Info on safety risk is found in Section 4 and in the international standards ISO/IEC 14971-1 and IEC 60601-1-4 referenced in Appendix A).\n\n\n\n\n\n2.3.1.3 IQ/OQ/PQ\nIQ/OQ/PQ are the terminology related to user site software validation\n\nInstallation qualification (IQ)\nOperational qualification (OQ)\nPerformance qualification (PQ).\n\nDefinitions of these terms may be found in FDA’s Guideline on General Principles of Process Validation, dated May 11, 1987, and in FDA’s Glossary of Computerized System and Software Development Terminology, dated August 1995. Both FDA personnel and device manufacturers need to be aware of these differences in terminology as they ask for and provide information regarding software validation.\n\n\n\n2.3.2 Software Development as Part of System Design\nSoftware validation must be considered within the context of the overall design validation for the system. A documented requirements specification represents\n\nthe user’s needs\nintended uses from which the product is developed.\n\nA primary goal of software validation is to then demonstrate that all completed software products comply with all documented software and system requirements.\n\n\n2.3.3 Software Is Different from Hardware\nSoftware engineering needs an even greater level of managerial scrutiny and control than does hardware engineering.\n\n\n2.3.4 Benefits of Software Validation\n\nIncrease the usability and reliability of the device,\nResulting in decreased failure rates, fewer recalls and corrective actions, less risk to patients and users, and reduced liability to device manufacturers.\nSoftware validation can also reduce long term costs by making it easier and less costly to reliably modify software and revalidate software changes.\n\n\n\n2.3.5 Design Review\nDesign reviews are documented, comprehensive, and systematic examinations of a design to evaluate\n\nthe adequacy of the design requirements,\nthe capability of the design to meet these requirements, and\nto identify problems.\n\nDesign review is a primary tool for managing and evaluating development projects.\n\nIt is strongly recommended that it should be formal design because it is more structured than the informal one.\nIt includes participation from others outside the development team.\nIt may review reference or include results from other formal and informal reviews.\nDesign reviews should include\n\nexamination of development plans,\nrequirements specifications,\ndesign specifications,\ntesting plans and procedures,\nall other documents and activities associated with the project,\nverification results from each stage of the defined life cycle, and\nvalidation results for the overall device.\n\nThe Quality System regulation requires that at least one formal design review be conducted during the device design process. However, it is recommended that multiple design reviews be conducted\n\n(e.g., at the end of each software life cycle activity, in preparation for proceeding to the next activity).\n\nFormal design reviews documented should include:\n\nthe appropriate tasks and expected results, outputs, or products been established for each software life cycle activity\ncorrectness, completeness, consistency, and accuracy\nsatisfaction for the standards, practices, and conventions of that activity\nestablishment of a proper basis for initiating tasks for the next software life cycle activity"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/index.html#principles-of-software-validation",
    "href": "docs/blog/posts/2022-12-10-FDA/index.html#principles-of-software-validation",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.4 Principles of Software Validation",
    "text": "2.4 Principles of Software Validation\n\n2.4.1 Requirements\nA documented software requirements specification provides a baseline for both validation and verification. The software validation process must include an established software requirements specification (Ref: 21 CFR 820.3(z) and (aa) and 820.30(f) and (g)).\n\n\n2.4.2 Defect Prevention\nIn order to establish that confidence, software developers should use a mixture of methods and techniques to prevent software errors and to detect software errors that do occur.\n\n\n2.4.3 Time and Effort\nPreparation for software validation should begin early, i.e., during design and development planning and design input. The final conclusion that the software is validated should be based on evidence collected from planned efforts conducted throughout the software lifecycle.\n\n\n2.4.4 Software Life Cycle\n\nSoftware validation takes place within the environment of an established software life cycle.\nThe software life cycle contains software engineering tasks and documentation necessary to support the software validation effort.\nspecific verification and validation tasks need to be appropriate for the intended use of the software\n\n\n\n2.4.5 Plans\n\nThe software validation process is defined and controlled through the use of a plan.\nThe software validation plan defines “what” is to be accomplished through the software validation effort.\nSoftware validation plans specify areas such as\n\nscope,\napproach,\nresources,\nschedules and the types and extent of activities,\ntasks, and\nwork items.\n\n\n\n\n2.4.6 Procedures\nThe software validation process is executed through the use of procedures. These procedures establish “how” to conduct the software validation effort. The procedures should identify the specific actions or sequence of actions that must be taken to complete individual validation activities, tasks, and work items.\n\n\n2.4.7 Software Validation After a Change\n\nDue to the complexity of software, a small local change may have a significant global system impact.\nIf a change exists in the software, the whole validation status of the software needs to be re-established.\nneed to determine the extent and impact of that change on the entire software system.\nthe software developer should then conduct an appropriate level of software regression testing to show that unchanged but vulnerable portions of the system have not been adversely affected.\n\n\n\n2.4.8 Validation Coverage\n\nValidation coverage should be based on the software’s complexity and safety risk.\nThe selection of validation activities, tasks, and work items should be commensurate with the complexity of the software design and the risk associated with the use of the software for the specified intended use.\n\n\n\n2.4.9 Independence of Review\n\nValidation activities should be based on the basic quality assurance precept of “independence of review.”\nSelf-validation is extremely difficult.\nWhen possible, an independent evaluation is always better (like a contracted third-party independent verification and validation)\nAnother approach is to assign internal staff members that are not involved in a particular design or its implementation, but who have sufficient knowledge to evaluate the project and conduct the verification and validation activities.\n\n\n\n2.4.10 Flexibility and Responsibility\nThe device manufacturer has flexibility in choosing how to apply these validation principles, but retains ultimate responsibility for demonstrating that the software has been validated. FDA regulated medical device applications include software that:\n\nIs a component, part, or accessory of a medical device;\n\ncomponents: e.g., application software, operating systems, compilers, debuggers, configuration management tools, and many more\n\nIs itself a medical device; or\nIs used in manufacturing, design and development, or other parts of the quality system.\nNo matter how complex and disperse the software is, the manufacturer is in charge of responsibility for software validation."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/index.html#activities-and-tasks",
    "href": "docs/blog/posts/2022-12-10-FDA/index.html#activities-and-tasks",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.5 Activities and Tasks",
    "text": "2.5 Activities and Tasks\nSoftware validation is accomplished through a series of activities and tasks that are planned and executed at various stages of the software development life cycle. These tasks may be\n\none time occurrences\niterated many times\n\n\n2.5.1 Software Life Cycle Activities\n\nSoftware developers should establish a software life cycle model that is appropriate for their product and organization.\nThe selected software life cycle model should cover the software from its birth to its retirement.\nActivities in a typical software life cycle model:\n\nQuality Planning\nSystem Requirements Definition\nDetailed Software Requirements Specification\nSoftware Design Specification\nConstruction or Coding\nTesting\nInstallation\nOperation and Support\nMaintenance\nRetirement\n\nVerification, testing, and other tasks that support software validation occur during each of these activities.\nSeveral software life cycle models defined in FDA’s Glossary of Computerized System and Software Development\n\nTerminology dated August 1995:\n\nwaterfall\nspiral\nrapid prototyping\nincremental development, etc.\n\n\n\n2.5.2 Typical Tasks Supporting Validation\nthe software developer should at least consider each of the risk-related tasks and should define and document which tasks are or are not appropriate for their specific application.\n\n2.5.2.1 Quality Planning\nDesign and development planning should culminate in a plan that identifies\n\nnecessary tasks,\nprocedures for anomaly reporting and resolution,\nnecessary resources, and\nmanagement review requirements including formal design reviews.\n\nThe plan should include:\n\nThe specific tasks for each life cycle activity;\nEnumeration of important quality factors (e.g., reliability, maintainability, and usability);\nMethods and procedures for each task;\nTask acceptance criteria;\nCriteria for defining and documenting outputs in terms that will allow evaluation of their conformance to input requirements;\nInputs for each task;\nOutputs from each task;\nRoles, resources, and responsibilities for each task;\nRisks and assumptions; and\nDocumentation of user needs.\n\nThe plan should identify\n\nthe personnel,\nthe facility and equipment resources for each task, and\nthe role that risk (hazard) management will play.\n\nA configuration management plan should be developed that will guide and control multiple parallel development activities and ensure proper communications and documentation.\nControls are necessary to ensure positive and correct correspondence among all approved versions of the specifications documents, source code, object code, and test suites that comprise a software system. The controls also should ensure accurate identification of, and access to, the currently approved versions.\nProcedures should be created for reporting and resolving software anomalies found through validation or other activities.\nManagement should identify the reports and specify the contents, format, and responsible organizational elements for each report. Procedures also are necessary for the review and approval of software development results, including the responsible organizational elements for such reviews and approvals.\nTypical Tasks – Quality Planning\n\nRisk (Hazard) Management Plan\nConfiguration Management Plan\nSoftware Quality Assurance Plan\n\nSoftware Verification and Validation Plan\n\nVerification and Validation Tasks, and Acceptance Criteria\nSchedule and Resource Allocation (for software verification and validation activities)\nReporting Requirements\n\nFormal Design Review Requirements\nOther Technical Review Requirements\n\nProblem Reporting and Resolution Procedures\nOther Support Activities\n\n\n\n2.5.2.2 Requirements\nRequirements development includes the\n\nidentification,\nanalysis, and\ndocumentation of information about the device and its intended use.\n\nAreas of special importance include allocation of system functions to\n\nhardware/software,\noperating conditions,\nuser characteristics,\npotential hazards, and\nanticipated tasks.\n\nIn addition, the requirements should state clearly the intended use of the software. It is not possible to validate software without predetermined and documented software requirements. Typical software requirements specify the following:\n\nAll software system inputs;\nAll software system outputs;\nAll functions that the software system will perform;\nAll performance requirements that the software will meet, (e.g., data throughput, reliability, and timing);\nThe definition of all external and user interfaces, as well as any internal software-to-system interfaces;\nHow users will interact with the system;\nWhat constitutes an error and how errors should be handled;\nRequired response times;\nThe intended operating environment for the software, if this is a design constraint (e.g., hardware platform, operating system);\nAll ranges, limits, defaults, and specific values that the software will accept; and\nAll safety related requirements, specifications, features, or functions that will be implemented in software.\n\nSoftware requirement specifications should identify clearly the potential hazards that can result from a software failure in the system as well as any safety requirements to be implemented in software.\nThe consequences of software failure should be evaluated, along with means of mitigating such failures (e.g., hardware mitigation, defensive programming, etc.).\nThe Quality System regulation requires a mechanism for addressing incomplete, ambiguous, or conflicting requirements. (See 21 CFR 820.30(c).) Each requirement (e.g., hardware, software, user, operator interface, and safety) identified in the software requirements specification should be evaluated for accuracy, completeness, consistency, testability, correctness, and clarity.\nFor example, software requirements should be evaluated to verify that:\n\nThere are no internal inconsistencies among requirements;\nAll of the performance requirements for the system have been spelled out;\nFault tolerance, safety, and security requirements are complete and correct;\nAllocation of software functions is accurate and complete;\nSoftware requirements are appropriate for the system hazards; and\nAll requirements are expressed in terms that are measurable or objectively verifiable.\n\nA software requirements traceability analysis should be conducted to trace software requirements to (and from) system requirements and to risk analysis results. In addition to any other analyses and documentation used to verify software requirements, a formal design review is recommended to confirm that requirements are fully specified and appropriate before extensive software design efforts begin. Requirements can be approved and released incrementally, but care should be taken that interactions and interfaces among software (and hardware) requirements are properly reviewed, analyzed, and controlled.\nTypical Tasks – Requirements\n\nPreliminary Risk Analysis\nTraceability Analysis\n\nSoftware Requirements to System Requirements (and vice versa)\nSoftware Requirements to Risk Analysis\n\nDescription of User Characteristics\nListing of Characteristics and Limitations of Primary and Secondary Memory\nSoftware Requirements Evaluation\nSoftware User Interface Requirements Analysis\nSystem Test Plan Generation\nAcceptance Test Plan Generation\nAmbiguity Review or Analysis\n\n\n\n2.5.2.3 Design\nIn the design process, the software requirements specification is translated into a logical and physical representation of the software to be implemented. The software design specification is a description of what the software should do and how it should do it. The design specification may contain both a high level summary of the design and detailed design information. Human factors engineering should be woven into\n\nthe entire design and development process,\nthe device design requirements,\nanalyses, and\ntests.\n\nDevice safety and usability issues should be considered when developing\n\nflowcharts,\nstate diagrams,\nprototyping tools, and\ntest plans.\n\nAlso, task and function analyses, risk analyses, prototype tests and reviews, and full usability tests should be performed. Participants from the user population should be included when applying these methodologies.\nThe software design specification should include:\n\nSoftware requirements specification, including predetermined criteria for acceptance of the software;\nSoftware risk analysis;\nDevelopment procedures and coding guidelines (or other programming procedures);\nSystems documentation (e.g., a narrative or a context diagram) that describes the systems context in which the program is intended to function, including the relationship of hardware, software, and the physical environment;\nHardware to be used;\nParameters to be measured or recorded;\nLogical structure (including control logic) and logical processing steps (e.g., algorithms);\nData structures and data flow diagrams;\nDefinitions of variables (control and data) and description of where they are used;\nError, alarm, and warning messages;\nSupporting software (e.g., operating systems, drivers, other application software);\nCommunication links (links among internal modules of the software, links with the supporting software, links with the hardware, and links with the user);\nSecurity measures (both physical and logical security); and\nAny additional constraints not identified in the above elements.\n\nThe first four of the elements noted above usually are separate pre-existing documents that are included by reference in the software design specification. Software requirements specification was discussed in the preceding section, as was software risk analysis.\nSoftware design evaluations criteria:\n\ncomplete,\ncorrect,\nconsistent,\nunambiguous,\nfeasible,\nmaintainable,\nanalyses of control flow,\ndata flow,\ncomplexity,\ntiming,\nsizing,\nmemory allocation,\ncriticality analysis, and many other aspects of the design\n\nAppropriate consideration of software architecture (e.g., modular structure) during design can reduce the magnitude of future validation efforts when software changes are needed.\nA traceability analysis should be conducted to verify that the software design implements all of the software requirements. As a technique for identifying where requirements are not sufficient, the traceability analysis should also verify that all aspects of the design are traceable to software requirements.\nAn analysis of communication links should be conducted to evaluate the proposed design with respect to hardware, user, and related software requirements. At the end of the software design activity, a Formal Design Review should be conducted to verify that the design is correct, consistent, complete, accurate, and testable, before moving to implement the design.\nSeveral versions of both the software requirement specification and the software design specification should be maintained. All approved versions should be archived and controlled in accordance with established configuration management procedures.\nTypical Tasks – Design\n\nUpdated Software Risk Analysis\nTraceability Analysis - Design Specification to Software Requirements (and vice versa)\nSoftware Design Evaluation\nDesign Communication Link Analysis\nModule Test Plan Generation\nIntegration Test Plan Generation\nTest Design Generation (module, integration, system, and acceptance)\n\n\n\n2.5.2.4 Construction or Coding\nSoftware may be constructed either by coding. Coding is the software activity where the detailed design specification is implemented as source code. It is the last stage in decomposition of the software requirements where module specifications are translated into a programming language.\nCoding usually involves the use of a high-level programming language, but may also entail the use of assembly language (or microcode) for time-critical operations.\nA source code traceability analysis is an important tool to verify that all code is linked to established specifications and established test procedures. A source code traceability analysis should be conducted and documented to verify that:\n\nEach element of the software design specification has been implemented in code;\nModules and functions implemented in code can be traced back to an element in the software design specification and to the risk analysis;\nTests for modules and functions can be traced back to an element in the software design specification and to the risk analysis; and\nTests for modules and functions can be traced to source code for the same modules and functions.\n\nTypical Tasks – Construction or Coding\n\nTraceability Analyses\n\nSource Code to Design Specification (and vice versa)\nTest Cases to Source Code and to Design Specification\n\nSource Code and Source Code Documentation Evaluation\nSource Code Interface Analysis\nTest Procedure and Test Case Generation (module, integration, system, and acceptance)\n\n\n\n2.5.2.5 Testing by the Software Developer\nSoftware testing entails running software products under known conditions with defined inputs and documented outcomes that can be compared to their predefined expectations. It is a time consuming, difficult, and imperfect activity.\nAs such, it requires early planning in order to be effective and efficient. Test plans and test cases should be created as early in the software development process as feasible.\nThey should identify\n\nthe schedules,\nenvironments,\nresources (personnel, tools, etc.),\nmethodologies,\ncases (inputs, procedures, outputs, expected results),\ndocumentation, and\nreporting criteria.\n\nDescriptions of categories of software and software testing effort appear in the literature\n\nNIST Special Publication 500-235, Structured Testing: A Testing Methodology Using the Cyclomatic Complexity Metric;\nNUREG/CR-6293, Verification and Validation Guidelines for High Integrity Systems; and\nIEEE Computer Society Press, Handbook of Software Reliability Engineering.\n\nTesting of all program functionality does not mean all of the program has been tested. Testing of all of a program’s code does not mean all necessary functionality is present in the program. Testing of all program functionality and all program code does not mean the program is 100% correct! Software testing that finds no errors should not be interpreted to mean that errors do not exist in the software product; it may mean the testing was superficial.\nAn essential element of a software test case is the expected result. It is the key detail that permits objective evaluation of the actual test result. This necessary testing information is obtained from the corresponding, predefined definition or specification.\nA software testing process should be based on principles that foster effective examinations of a software product. Applicable software testing tenets include:\n\nThe expected test outcome is predefined;\nA good test case has a high probability of exposing an error;\nA successful test is one that finds an error;\nThere is independence from coding;\nBoth application (user) and software (programming) expertise are employed;\nTesters use different tools from coders;\nExamining only the usual case is insufficient;\nTest documentation permits its reuse and an independent confirmation of the pass/fail status of a test outcome during subsequent review.\n\nCode-based testing is also known as structural testing or “white-box” testing. It identifies test cases based on knowledge obtained from the source code, detailed design specification, and other development documents. Structural testing can identify “dead” code that is never executed when the program is run. Structural testing is accomplished primarily with unit (module) level testing, but can be extended to other levels of software testing.\nThe level of structural testing can be evaluated using metrics that are designed to show what percentage of the software structure has been evaluated during structural testing. These metrics are typically referred to as “coverage” and are a measure of completeness with respect to test selection criteria. The amount of structural coverage should be commensurate with the level of risk posed by the software. Use of the term “coverage” usually means 100% coverage. Common structural coverage metrics include:\n\nStatement Coverage – This criteria requires sufficient test cases for each program statement to be executed at least once; however, its achievement is insufficient to provide confidence in a software product’s behavior.\nDecision (Branch) Coverage – This criteria requires sufficient test cases for each program decision or branch to be executed so that each possible outcome occurs at least once. It is considered to be a minimum level of coverage for most software products, but decision coverage alone is insufficient for high-integrity applications.\nCondition Coverage – This criteria requires sufficient test cases for each condition in a program decision to take on all possible outcomes at least once. It differs from branch coverage only when multiple conditions must be evaluated to reach a decision.\nMulti-Condition Coverage – This criteria requires sufficient test cases to exercise all possible combinations of conditions in a program decision.\nLoop Coverage – This criteria requires sufficient test cases for all program loops to be executed for zero, one, two, and many iterations covering initialization, typical running and termination (boundary) conditions.\nPath Coverage – This criteria requires sufficient test cases for each feasible path, basis path, etc., from start to exit of a defined program segment, to be executed at least once. Because of the very large number of possible paths through a software program, path coverage is generally not achievable. The amount of path coverage is normally established based on the risk or criticality of the software under test.\nData Flow Coverage – This criteria requires sufficient test cases for each feasible data flow to be executed at least once. A number of data flow testing strategies are available.\n\nThe following types of functional software testing involve generally increasing levels of effort:\n\nNormal Case – Testing with usual inputs is necessary. However, testing a software product only with expected, valid inputs does not thoroughly test that software product. By itself, normal case testing cannot provide sufficient confidence in the dependability of the software product.\nOutput Forcing – Choosing test inputs to ensure that selected (or all) software outputs are generated by testing.\nRobustness – Software testing should demonstrate that a software product behaves correctly when given unexpected, invalid inputs. Methods for identifying a sufficient set of such test cases include Equivalence Class Partitioning, Boundary Value Analysis, and Special Case Identification (Error Guessing). While important and necessary, these techniques do not ensure that all of the most appropriate challenges to a software product have been identified for testing.\nCombinations of Inputs – The functional testing methods identified above all emphasize individual or single test inputs. Most software products operate with multiple inputs under their conditions of use. Thorough software product testing should consider the combinations of inputs a software unit or system may encounter during operation. Error guessing can be extended to identify combinations of inputs, but it is an ad hoc technique. Cause-effect graphing is one functional software testing technique that systematically identifies combinations of inputs to a software product for inclusion in test cases.\n\nFunctional and structural software test case identification techniques provide specific inputs for testing, rather than random test inputs. One weakness of these techniques is the difficulty in linking structural and functional test completion criteria to a software product’s reliability.\nAdvanced software testing methods, such as statistical testing, can be employed to provide further assurance that a software product is dependable. Statistical testing uses randomly generated test data from defined distributions based on an operational profile (e.g., expected use, hazardous use, or malicious use of the software product). Large amounts of test data are generated and can be targeted to cover particular areas or concerns, providing an increased possibility of identifying individual and multiple rare operating conditions that were not anticipated by either the software product’s designers or its testers. Statistical testing also provides high structural coverage. It does require a stable software product. Thus, structural and functional testing are prerequisites for statistical testing of a software product.\nAnother aspect of software testing is the testing of software changes. Changes occur frequently during software development. These changes are the result of\n\ndebugging that finds an error and it is corrected,\nnew or changed requirements (“requirements creep”), and\nmodified designs as more effective or efficient implementations are found.\n\nOnce a software product has been baselined (approved), any change to that product should have its own “mini life cycle,” including testing. Testing of a changed software product requires additional effort. It should demonstrate\n\nthat the change was implemented correctly, and\nthat the change did not adversely impact other parts of the software product.\n\nRegression analysis is the determination of the impact of a change based on review of the relevant documentation in order to identify the necessary regression tests to be run. Regression testing is the rerunning of test cases that a program has previously executed correctly and comparing the current result to the previous result in order to detect unintended effects of a software change. Regression analysis and regression testing should also be employed when using integration methods to build a software product to ensure that newly integrated modules do not adversely impact the operation of previously integrated modules.\nIn order to provide a thorough and rigorous examination of a software product, development testing is typically organized into levels: unit, integration, and system levels of testing.\n\nUnit (module or component) level testing focuses on the early examination of sub-program functionality and ensures that functionality not visible at the system level is examined by testing. Unit testing ensures that quality software units are furnished for integration into the finished software product.\nIntegration level testing focuses on the transfer of data and control across a program’s internal and external interfaces. External interfaces are those with\n\nother software (including operating system software),\nsystem hardware, and\nthe users and can be described as communications links.\n\nSystem level testing demonstrates that all specified functionality exists and that the software product is trustworthy. This testing verifies the as-built program’s functionality and performance with respect to the requirements for the software product as exhibited on the specified operating platform(s). System level software testing addresses functional concerns and the following elements of a device’s software that are related to the intended use(s):\n\nPerformance issues (e.g., response times, reliability measurements);\nResponses to stress conditions, e.g., behavior under maximum load, continuous use;\nOperation of internal and external security features;\nEffectiveness of recovery procedures, including disaster recovery;\nUsability; (Usability vs Utility??)\nCompatibility with other software products;\nBehavior in each of the defined hardware configurations; and\nAccuracy of documentation.\n\n\nControl measures (e.g., a traceability analysis) should be used to ensure that the intended coverage is achieved.\nSystem level testing also exhibits the software product’s behavior in the intended operating environment. The location of such testing is dependent upon the software developer’s ability to produce the target operating environment(s). Depending upon the circumstances, simulation and/or testing at (potential) customer locations may be utilized.\nTest plans should identify the controls needed to ensure\n\nthat the intended coverage is achieved and\nthat proper documentation is prepared when planned system level testing is conducted at sites not directly controlled by the software developer.\n\nTest procedures, test data, and test results\n\nshould be documented in a manner permitting objective pass/fail decisions to be reached.\nshould also be suitable for review and objective decision making subsequent to running the test,\nshould be suitable for use in any subsequent regression testing.\n\nErrors detected during testing should be\n\nlogged,\nclassified,\nreviewed, and\nresolved prior to release of the software.\n\nSoftware error data that is collected and analyzed during a development life cycle may be used to determine the suitability of the software product for release for commercial distribution. Test reports should comply with the requirements of the corresponding test plans.\nSoftware testing tools are frequently used to ensure consistency, thoroughness, and efficiency in the testing of such software products and to fulfill the requirements of the planned testing activities.\nAppropriate documentation providing evidence of the validation of these software tools for their intended use should be maintained (see section 6 of this guidance).\nTypical Tasks – Testing by the Software Developer\n\nTest Planning\nStructural Test Case Identification\nFunctional Test Case Identification\nTraceability Analysis - Testing\nUnit (Module) Tests to Detailed Design\nIntegration Tests to High Level Design\nSystem Tests to Software Requirements\nUnit (Module) Test Execution\nIntegration Test Execution\nFunctional Test Execution\nSystem Test Execution\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\n2.5.2.6 User Site Testing\nTesting at the user site is an essential part of software validation. The Quality System regulation requires\n\ninstallation and\ninspection procedures (including testing where appropriate) as well as\ndocumentation of inspection and\ntesting to demonstrate proper installation. (See 21 CFR §820.170.)\n\nLikewise, manufacturing equipment must meet specified requirements, and automated systems must be validated for their intended use. (See 21 CFR §820.70(g) and 21 CFR §820.70(i) respectively.)\nTerminology regarding user site testing can be confusing. Terms such as\n\nbeta test,\nsite validation,\nuser acceptance test,\ninstallation verification, and\ninstallation testing have all been used to describe user site testing.\n\nFor the purposes of this guidance, the term “user site testing” encompasses all of these and any other testing that takes place outside of the developer’s controlled environment.\nThis testing should take place at a user’s site with the actual hardware and software that will be part of the installed system configuration. The testing is accomplished through either actual or simulated use of the software being tested within the context in which it is intended to function.\nTest planners should check with the FDA Center(s) with the corresponding product jurisdiction to determine whether there are any additional regulatory requirements for user site testing.\nUser site testing should follow a pre-defined written plan with\n\na formal summary of testing and\na record of formal acceptance.\n\nThe following documented evidence should be retained:\n\nall testing procedures,\ntest input data, and\ntest results\n\nThere should be evidence that hardware and software are installed and configured as specified. Measures should ensure that all system components are exercised during the testing and that the versions of these components are those specified. The testing plan should specify testing throughout the full range of operating conditions and should specify continuation for a sufficient time to allow the system to encounter a wide spectrum of conditions and events in an effort to detect any latent faults that are not apparent during more normal activities.\nSome of the evaluations of the system’s ability that have been performed earlier by the software developer at the developer’s site should be repeated at the site of actual use. These may include tests for:\n\na high volume of data,\nheavy loads or stresses,\nsecurity,\nfault testing (avoidance, detection, tolerance, and recovery),\nerror messages, and\nimplementation of safety requirements.\n\nThere should be an evaluation of the ability of the users of the system to understand and correctly interface with it.\nOperators should be able to perform the intended functions and respond in an appropriate and timely manner to all alarms, warnings, and error messages.\nRecords should be maintained of both proper system performance and any system failures that are encountered.\nThe revision of the system to compensate for faults detected during this user site testing should follow the same procedures and controls as for any other software change.\nThe developers of the software may or may not be involved in the user site testing.\n\nIf the developers are involved, they may seamlessly carry over to the user’s site the last portions of design-level systems testing.\nIf the developers are not involved, it is all the more important that the user have persons who understand the importance of careful test planning, the definition of expected test results, and the recording of all test outputs.\n\nTypical Tasks – User Site Testing\n\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\n2.5.2.7 Maintenance and Software Changes\n\n2.5.2.7.1 Hardware vs Software\nHardware maintenance typically includes\n\npreventive hardware maintenance actions,\ncomponent replacement, and\ncorrective changes.\n\nSoftware maintenance includes\n\ncorrective,\nperfective, and\nadaptive maintenance\nbut does not include preventive maintenance actions or software component replacement.\n\n\n\n2.5.2.7.2 Maintenance Types\n\nCorrective maintenance: Changes made to correct errors and faults in the software.\nPerfective maintenance: Changes made to the software to improve the performance, maintainability, or other attributes of the software system .\nAdaptive maintenance: Changes to make the software system usable in a changed environment.\n\nSufficient regression analysis and testing should be conducted to demonstrate that portions of the software not involved in the change were not adversely impacted. When changes are made to a software system,\n\neither during initial development or\nduring post release maintenance,\n\nThis is in addition to testing that evaluates the correctness of the implemented change(s). The specific validation effort necessary for each software change is determined by\n\nthe type of change,\nthe development products affected, and the\nimpact of those products on the operation of the software.\n\n\n\n2.5.2.7.3 Factors of Limitting Validation Effort Needed When a Change Is Made\n\ncareful and complete documentation of the design structure and\ncareful and complete documentation of interrelationships of various modules,\ninterfaces, etc.\nFor example,\n\ntest documentation,\ntest cases, and\nresults of previous verification and validation testing All of them need to be archived if they are to be available for performing subsequent regression testing.\n\n\nThe following additional maintenance tasks should be addressed:\n\nSoftware Validation Plan Revision - For software that was previously validated, the existing software validation plan should be revised to support the validation of the revised software. If no previous software validation plan exists, such a plan should be established to support the validation of the revised software.\nAnomaly Evaluation – Software organizations frequently maintain documentation, such as software problem reports that describe software anomalies discovered and the specific corrective action taken to fix each anomaly.\n\nToo often, however, mistakes are repeated because software developers do not take the next step to determine the root causes of problems and make the process and procedural changes needed to avoid recurrence of the problem.\nSoftware anomalies should be evaluated in terms of their severity and their effects on system operation and safety,\nbut they should also be treated as symptoms of process deficiencies in the quality system.\nA root cause analysis of anomalies can identify specific quality system deficiencies.\nWhere trends are identified (e.g., recurrence of similar software anomalies), appropriate corrective and preventive actions must be implemented and documented to avoid further recurrence of similar quality problems. (See 21 CFR 820.100.)\n\nProblem Identification and Resolution Tracking - All problems discovered during maintenance of the software should be documented. The resolution of each problem should be tracked to ensure it is fixed, for historical reference, and for trending.\nProposed Change Assessment - All proposed modifications, enhancements, or additions should be assessed to determine the effect each change would have on the system. This information should determine the extent to which verification and/or validation tasks need to be iterated.\nTask Iteration - For approved software changes, all necessary verification and validation tasks should be performed to ensure that planned changes are implemented correctly, all documentation is complete and up to date, and no unacceptable changes have occurred in software performance.\nDocumentation Updating – Documentation should be carefully reviewed to determine which documents have been impacted by a change. All approved documents (e.g., specifications, test procedures, user manuals, etc.) that have been affected should be updated in accordance with configuration management procedures. Specifications should be updated before any maintenance and software changes are made."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/index.html#validation-of-automated-process-equipment-and-quality-system-software",
    "href": "docs/blog/posts/2022-12-10-FDA/index.html#validation-of-automated-process-equipment-and-quality-system-software",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.6 Validation of Automated Process Equipment and Quality System Software",
    "text": "2.6 Validation of Automated Process Equipment and Quality System Software\nThe Quality System regulation requires that “when computers or automated data processing systems are used as part of production or the quality system, the [device] manufacturer shall validate computer software for its intended use according to an established protocol.” (See 21 CFR §820.70(i)). This has been a regulatory requirement of FDA’s medical device Good Manufacturing Practice (GMP) regulations since 1978.\nComputer systems that implement part of a device manufacturer’s production processes or quality system (or that are used to create and maintain records required by any other FDA regulation) are subject to the Electronic Records; Electronic Signatures regulation. (See 21 CFR Part 11.) This regulation establishes additional security, data integrity, and validation requirements when records are created or maintained electronically. These additional Part 11 requirements should be carefully considered and included in system requirements and software requirements for any automated record keeping systems. System validation and software validation should demonstrate that all Part 11 requirements have been met.\nComputers and automated equipment are used extensively throughout all aspects of\n\nmedical device design,\nlaboratory testing and analysis,\nproduct inspection and acceptance,\nproduction and process control,\nenvironmental controls,\npackaging,\nlabeling,\ntraceability,\ndocument control,\ncomplaint management, and many other aspects of the quality system.\n\nIncreasingly, automated plant floor operations can involve extensive use of embedded systems in:\n\nprogrammable logic controllers;\ndigital function controllers;\nstatistical process control;\nsupervisory control and data acquisition;\nrobotics;\nhuman-machine interfaces;\ninput/output devices; and\ncomputer operating systems.\n\nAll software tools used for software design are subject to the requirement for software validation, but the validation approach used for each application can vary widely.\nValidation is typically supported by:\n\nverifications of the outputs from each stage of that software development life cycle; and\nchecking for proper operation of the finished software in the device manufacturer’s intended use environment.\n\n\n2.6.1 How Much Validation Evidence Is Needed?\nThe level of validation effort should be commensurate with\n\nthe risk posed by the automated operation,\nthe complexity of the process software,\nthe degree to which the device manufacturer is dependent upon that automated process to produce a safe and effective device\n\nDocumented requirements and risk analysis of the automated process help to define the scope of the evidence needed to show that the software is validated for its intended use. Without a plan, extensive testing may be needed for:\n\na plant-wide electronic record and electronic signature system;\nan automated controller for a sterilization cycle; or\nautomated test equipment used for inspection and acceptance of finished circuit boards in a lifesustaining / life-supporting device.\n\nHigh risk applications should not be running in the same operating environment with non-validated software functions, even if those software functions are not used. Risk mitigation techniques such as memory partitioning or other approaches to resource protection may need to be considered when high risk applications and lower risk applications are to be used in the same operating environment.\nWhen software is upgraded or any changes are made to the software, the device manufacturer should consider how those changes may impact the “used portions” of the software and must reconfirm the validation of those portions of the software that are used. (See 21 CFR §820.70(i).)\n\n\n2.6.2 Defined User Equipment\nA very important key to software validation is a documented user requirements specification that defines:\n\nthe “intended use” of the software or automated equipment; and\nthe extent to which the device manufacturer is dependent upon that software or equipment for production of a quality medical device.\n\nThe device manufacturer (user) needs to define the expected operating environment including any required hardware and software configurations, software versions, utilities, etc. The user also needs to:\n\ndocument requirements for system performance, quality, error handling, startup, shutdown, security, etc.;\nidentify any safety related functions or features, such as sensors, alarms, interlocks, logical processing steps, or command sequences; and\ndefine objective criteria for determining acceptable performance.\n\nThe validation must be conducted in accordance with a documented protocol, and the validation results must also be documented. (See 21 CFR §820.70(i).) Test cases should be documented that will exercise the system to challenge its performance against the pre-determined criteria, especially for its most critical parameters.\nTest cases should address\n\nerror and alarm conditions,\nstartup, shutdown,\nall applicable user functions and operator controls,\npotential operator errors,\nmaximum and minimum ranges of allowed values, and\nstress conditions applicable to the intended use of the equipment.\n\nThe test cases should be executed and the results should be recorded and evaluated to determine whether the results support a conclusion that the software is validated for its intended use.\nA device manufacturer may conduct a validation using their own personnel or may depend on a third party such as the equipment/software vendor or a consultant. In any case, the device manufacturer retains the ultimate responsibility for ensuring that the production and quality system software:\n\nis validated according to a written procedure for the particular intended use; and\nwill perform as intended in the chosen application.\n\nThe device manufacturer should have documentation including:\n\ndefined user requirements;\nvalidation protocol used;\nacceptance criteria;\ntest cases and results; and\na validation summary that objectively confirms that the software is validated for its intended use.\n\n\n\n2.6.3 Validation of Off-The-Shelf Software and Automated Equipment\nMost of the automated equipment and systems used by device manufacturers are supplied by thirdparty vendors and are purchased off-the-shelf (OTS). The device manufacturer is responsible for ensuring that the product development methodologies used by the OTS software developer are appropriate and sufficient for the device manufacturer’s intended use of that OTS software.\nWhere possible and depending upon the device risk involved, the device manufacturer should consider auditing the vendor’s design and development methodologies used in the construction of the OTS software and should assess the development and validation documentation generated for the OTS software. Such audits can be conducted by the device manufacturer or by a qualified third party.\nThe audit should demonstrate that the vendor’s procedures for and results of the verification and validation activities performed the OTS software are appropriate and sufficient for the safety and effectiveness requirements of the medical device to be produced using that software."
  },
  {
    "objectID": "docs/CV/index.html",
    "href": "docs/CV/index.html",
    "title": "Curriculum Vitae",
    "section": "",
    "text": "an application for a position in industry, non-profit, and public sector\nskills, work experience, educuation\nwithin 2 pages"
  },
  {
    "objectID": "docs/CV/index.html#cv",
    "href": "docs/CV/index.html#cv",
    "title": "Curriculum Vitae",
    "section": "CV",
    "text": "CV\n\napplying for positions in academia, fellowships and grants\nacademic accomplishments\nLength depends upon experience and includes a complete list of publications, posters, and presentations\nbegins with education and can include name of advisor and dissertation title or summary (see examples). Also used for merit/tenure review and sabbatical leave"
  },
  {
    "objectID": "docs/projects/high_dimension.html#data-preparation",
    "href": "docs/projects/high_dimension.html#data-preparation",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nPackage Loading and Option Settings\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(glmnet)\nlibrary(MASS)\n#library(mixOmics)\nset.seed(20221213) \nknitr::opts_chunk$set(message=FALSE,warning=FALSE)\n\n\n\n\nData Simulation\n\n\n\n\n\nLoad Data\n\n\nShow the code\n#all_data=read_csv(\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rda\",\n#                  progress = show_progress(),\n#                  show_col_types = FALSE)%>%\n\n all_data=read_rds(\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rds\")%>%\n     dplyr::select(-1,-probabilities)\n all_data=all_data%>%\n     mutate(outcome=factor(outcome,levels=c(0,1)),\n            sex=factor(sex,levels=c(0,1)),\n            country=factor(country,levels=c(0,1)),\n            treatment=factor(treatment,levels=c(0,1)),\n            genotype=factor(genotype,levels=c(3,0,1,2,4,5))\n            )\n \n dim(all_data)\n\n\n[1]  1000 10006"
  },
  {
    "objectID": "docs/projects/high_dimension.html#data-description",
    "href": "docs/projects/high_dimension.html#data-description",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Data Description",
    "text": "Data Description\nThis data include\nMin.   :10.40  , 1st Qu.:15.43  , Median :19.20  , Mean   :20.09  , 3rd Qu.:22.80  , Max.   :33.90  , Min.   :4.000  , 1st Qu.:4.000  , Median :6.000  , Mean   :6.188  , 3rd Qu.:8.000  , Max.   :8.000  , Min.   : 71.1  , 1st Qu.:120.8  , Median :196.3  , Mean   :230.7  , 3rd Qu.:326.0  , Max.   :472.0  , Min.   : 52.0  , 1st Qu.: 96.5  , Median :123.0  , Mean   :146.7  , 3rd Qu.:180.0  , Max.   :335.0  , Min.   :2.760  , 1st Qu.:3.080  , Median :3.695  , Mean   :3.597  , 3rd Qu.:3.920  , Max.   :4.930  , Min.   :1.513  , 1st Qu.:2.581  , Median :3.325  , Mean   :3.217  , 3rd Qu.:3.610  , Max.   :5.424  , Min.   :14.50  , 1st Qu.:16.89  , Median :17.71  , Mean   :17.85  , 3rd Qu.:18.90  , Max.   :22.90  , Min.   :0.0000  , 1st Qu.:0.0000  , Median :0.0000  , Mean   :0.4375  , 3rd Qu.:1.0000  , Max.   :1.0000  , Min.   :0.0000  , 1st Qu.:0.0000  , Median :0.0000  , Mean   :0.4062  , 3rd Qu.:1.0000  , Max.   :1.0000  , Min.   :3.000  , 1st Qu.:3.000  , Median :4.000  , Mean   :3.688  , 3rd Qu.:4.000  , Max.   :5.000  , Min.   :1.000  , 1st Qu.:2.000  , Median :2.000  , Mean   :2.812  , 3rd Qu.:4.000  , Max.   :8.000  \nthis inline code works but it seems to rmd files look more organized and tidier."
  },
  {
    "objectID": "docs/projects/high_dimension.html#architecture-of-analysis-pipeline",
    "href": "docs/projects/high_dimension.html#architecture-of-analysis-pipeline",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Architecture of Analysis Pipeline",
    "text": "Architecture of Analysis Pipeline"
  },
  {
    "objectID": "docs/projects/high_dimension.html#methods",
    "href": "docs/projects/high_dimension.html#methods",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Methods",
    "text": "Methods\n\n\n   alpha      mse fit.name\n1    0.0 2529.146   alpha0\n2    0.1 2529.146 alpha0.1\n3    0.2 2529.146 alpha0.2\n4    0.3 2529.146 alpha0.3\n5    0.4 2529.146 alpha0.4\n6    0.5 2529.146 alpha0.5\n7    0.6 2529.146 alpha0.6\n8    0.7 2529.146 alpha0.7\n9    0.8 2529.146 alpha0.8\n10   0.9 2529.146 alpha0.9\n11   1.0 2529.146   alpha1"
  },
  {
    "objectID": "docs/projects/high_dimension.html#results",
    "href": "docs/projects/high_dimension.html#results",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Results",
    "text": "Results"
  },
  {
    "objectID": "docs/projects/high_dimension.html#conclusion",
    "href": "docs/projects/high_dimension.html#conclusion",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Conclusion",
    "text": "Conclusion"
  },
  {
    "objectID": "docs/projects/high_dimension.html#bibliography",
    "href": "docs/projects/high_dimension.html#bibliography",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Bibliography",
    "text": "Bibliography"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\nBrief Introduction\n저는 R과 Python같은 open-source tool을 사용하여 통계, machine learning 및 deep learning을 독학하는 열정 가득한 data scientist입니다. 약 7년여 동안 data modeling, 통계적 모델링, machine learning 모델링 및 시각화를 통하여 data 관련 업무 경험을 쌓았습니다.\n\n\nExperience\n저는 한국에서 학부과정으로 생화학과 미국에서 학부 과정으로 수학과 석사 과정으로 생물통계학을 전공했습니다. 저의 생화학 전공을 살려 Bio와 의료분야에서 커리어를 시작했고 그 과정에서 많은 data science 비전문가들과 협업하면서 통계 및 data science에 대하여 그들과 소통하는 법을 익혔습니다.\n\n\nReason for Blogging in Data Science\nData science에 대하여 비전문가들과 SW 개발자들과 협업을 하면서 그들과 효율적이고 효과적으로 소통하는것이 중요하다는 것을 깨달았습니다. 그 효과적인 소통이 수학, 통계 및 IT에 대한 지식으로부터 온다고 생각해서 새로운 기술에 대하여 세부적이고 체계적인 지식을 쌓기위해 블로깅을 시작했습니다.\n\n\n\n\nBrief Introduction\nI am passionate and self-taught in statistics, machine learning, deep learning, and programming using open-source tools such as Python, R, and SQL. It has been 7years since I dealth with data research from data modeling to data visualization through modeling.\n\n\nExperience\nMy educational background is a Bachelor of Science in biochemistry in South Korea, Bachelor of Arts in mathematics in the USA, and Master of Sceince in biostatistics in the USA. I started my career in the medical area of analytics because I have a strong background in biology. My work experience exposed me to an environment where I had to interact with non-experts to make them understand data science.\n\n\nReason for Blogging in Data Science\n(Pursuing Goal in Data Science)\nAfter dealing with data and collaborating with SW developers and non-professional colleagues, I realized that the importance of communicating with them efficiently and effectively. This requires more knowledge in mathematics, statistics, and IT to master the art of explaining easily, clearly, and concisely. So, I started blogging to have an opportunity to have a detailed and systematic understanding of new techaniques of machine learning, as well as fundamental statistics."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/sw_validation.html",
    "href": "docs/blog/posts/2022-12-10-FDA/sw_validation.html",
    "title": "FDA Validation Document Summary",
    "section": "",
    "text": "FDA: General Principles of Software Validation\n\n\n\nFDA has reported the following analysis:\n\n242 of 3140 (7.7%) medical device recalls between 1992 and 1998 are attributable to software failures.\n192 of the 242 (79.3%) failures were caused by software defects that were introduced when changes were made to the software after its initial production and distribution.\nThe software validation check is a principal means of avoiding such defects and resultant recalls.\n\n\n\n\n\nCenter for Devices and Radiological Health (CDRH)\nU.S. Department Of Health and Human Services\nFood and Drug Administration\nCenter for Biologics Evaluation and Research"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#purpose",
    "href": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#purpose",
    "title": "FDA Validation Document Summary",
    "section": "Purpose",
    "text": "Purpose\nThe purpose is to make a sketch of general validation principle of the validation of medical device software or software used to design or develop."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#scope",
    "href": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#scope",
    "title": "FDA Validation Document Summary",
    "section": "Scope",
    "text": "Scope\nThe scope of this guidance is broad. The important activities for the software validation include at least:\n\nplanning,\nverfication,\ntesting,\ntraceability, and\nconfiguration management.\n\nAll of the activities above should be\n\nintegrated\nbe able to describe software life cycle management and\nbe able to describe software risk management.\n\nThe software validation and verification activities should be focused into the entire software life cycle. (It does not necessarily mean that the activies must follow any technical models.)\nThe guidance is applicable to any software related to a regulated medical device and anyone who is employed in a bio or medical industry.\n\nThe Least Burdensome Approach\nThe guidance reflects that the minimum list of the relavant scientific and legal requirements that you must comply with.\n\n\nRegulatory Requirements for Software Validation\n\nSoftware validation: a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997. (See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\nSpecific requirements for validation of device software are found in 21 CFR §820.30(g). Other design controls, such as planning, input, verification, and reviews, are required for medical device software. (See 21 CFR §820.30.)\ncomputer systems used to create, modify, and maintain electronic records and to manage electronic signatures are also subject to the validation requirements. (See 21 CFR §11.10(a).)\n\n\nObjective\nThe objective of software validation is to ensure:\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\nWhat to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software.\n\n\n\nQuality System Regulation vs Pre-market Submissions\nThis document does not address any specific requirements but general ones. Specific issues should be addressed to\n\nthe Office of Device Evaluation (ODE),\nCenter for Devices and Radiological Health (CDRH)\nthe Office of Blood Research and Review,\nCenter for Biologics Evaluation and Research (CBER). See the references in Appendix A for applicable FDA guidance documents for pre-market submissions."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#context-for-software-validation",
    "href": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#context-for-software-validation",
    "title": "FDA Validation Document Summary",
    "section": "Context for Software Validation",
    "text": "Context for Software Validation\n\nValidation elements that FDA expects to do for the Quality System regulation, using the principles and tasks are listed in Sections 4 and 5.\nAdditional specific information is available from many of the references listed in Appendix A\n\n\nDefinition and Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology between the medical device Quality System regulation and the software industry:\n\nrequirements,\nspecification,\nverification, and\nvalidation.\n\n\n\nRequirements and Specifications\nThe Quality System regulation states\n\nthat design input requirements must be documented and\nthat specified requirements must be verified\n\nBut, the regulation does not further clarify the distinction between the terms “requirement” and “specification.”\n\nRequirement\n\ncan be any need or expectation for a system or for its software.\nreflects the stated or implied needs of the customer: requirements may be\n\nmarket-based,\ncontractual,\nstatutory, or\nan organization’s internal requirements.\n\nvarious examples of requirements\n\ndesign, functional, implementation, interface, performance, or physical requirements\n\nSoftware requirements derived from the system requirements for those aspects of system functionality\nSoftware requirements are typically stated in functional terms and are defined, refined, and updated as a development project progresses.\nSuccess in accurately and completely documenting software requirements is a crucial factor in successful validation of the resulting software.\n\nSpecification\n\ndefined as “a document that states requirements.” (See 21 CFR §820.3(y).)\nIt may refer to or include drawings, patterns, or other relevant documents\nIt usually indicates the means and the criteria whereby conformity with the requirement can be checked.\nVarious examples of written specifications\n\nsystem requirements specification,\nsoftware requirements specification,\nsoftware design specification,\nsoftware test specification,\nsoftware integration specification, etc.\n\nAll of these documents are design outputs for which various forms of verification are necessary.\n\n\n\n\nVerifiaction and Validation\nThe Quality System regulation is harmonized with ISO 8402:1994, which treats “verification” and “validation” as separate and distinct terms.\n\nSoftware verification\n\nIt provides objective evidence that the design outputs of a particular phase of the software development life cycle meet all of the specified requirements for that phase.\nIt looks for\n\nconsistency,\ncompleteness, and\ncorrectness of the software and its supporting documentation\n\nSoftware testing\n\nverification activities intended to confirm that software development output meets its input requirements.\n\nTypes of verification activities include\n\nvarious static and dynamic analyses,\ncode and document inspections,\nwalkthroughs, and other techniques.\n\n\nSoftware Validation\n\nConfirmation by examination and provision of the following objective evidence:\nEvidence 1: software specifications conform to user needs and intended uses, and\nEvidnece 2: the particular requirements implemented through software can be consistently fulfilled.\nEvidnece 3: all software requirements have been implemented correctly and completely and are traceable to system requirements.\nA conclusion that software is validated is highly dependent upon comprehensive software testing, inspections, analyses, and other verification tasks performed at each stage of the software development life cycle.\nTesting of device software functionality in a simulated* use environment, and user site testing are typically included as components of an overall design validation program for a software automated device.\n\nDifficulty in Software verification and validation\n\na developer cannot test forever, and\nit is difficult to know how much evidence is enough.\nIn large measure, software validation is a matter of developing a “level of confidence” that the device meets all requirements and user expectations for the software automated functions and features of the device.\nConsiderations for an acceptable level of confidence\n\nmeasures such as defects found in specifications documents,\nestimates of defects remaining,\ntesting coverage, and other techniques are all used to develop before shipping the product.\nHowever, a level of confidence varies depending upon the safety risk (hazard) posed by the automated functions of the device. (Info on safety risk is found in Section 4 and in the international standards ISO/IEC 14971-1 and IEC 60601-1-4 referenced in Appendix A).\n\n\n\n\n\nIQ/OQ/PQ\nIQ/OQ/PQ are the terminology related to user site software validation\n\nInstallation qualification (IQ)\nOperational qualification (OQ)\nPerformance qualification (PQ).\n\nDefinitions of these terms may be found in FDA’s Guideline on General Principles of Process Validation, dated May 11, 1987, and in FDA’s Glossary of Computerized System and Software Development Terminology, dated August 1995. Both FDA personnel and device manufacturers need to be aware of these differences in terminology as they ask for and provide information regarding software validation.\n\n\n\nSoftware Development as Part of System Design\nSoftware validation must be considered within the context of the overall design validation for the system. A documented requirements specification represents\n\nthe user’s needs\nintended uses from which the product is developed.\n\nA primary goal of software validation is to then demonstrate that all completed software products comply with all documented software and system requirements.\n\n\nSoftware Is Different from Hardware\nSoftware engineering needs an even greater level of managerial scrutiny and control than does hardware engineering.\n\n\nBenefits of Software Validation\n\nIncrease the usability and reliability of the device,\nResulting in decreased failure rates, fewer recalls and corrective actions, less risk to patients and users, and reduced liability to device manufacturers.\nSoftware validation can also reduce long term costs by making it easier and less costly to reliably modify software and revalidate software changes.\n\n\n\nDesign Review\nDesign reviews are documented, comprehensive, and systematic examinations of a design to evaluate\n\nthe adequacy of the design requirements,\nthe capability of the design to meet these requirements, and\nto identify problems.\n\nDesign review is a primary tool for managing and evaluating development projects.\n\nIt is strongly recommended that it should be formal design because it is more structured than the informal one.\nIt includes participation from others outside the development team.\nIt may review reference or include results from other formal and informal reviews.\nDesign reviews should include\n\nexamination of development plans,\nrequirements specifications,\ndesign specifications,\ntesting plans and procedures,\nall other documents and activities associated with the project,\nverification results from each stage of the defined life cycle, and\nvalidation results for the overall device.\n\nThe Quality System regulation requires that at least one formal design review be conducted during the device design process. However, it is recommended that multiple design reviews be conducted\n\n(e.g., at the end of each software life cycle activity, in preparation for proceeding to the next activity).\n\nFormal design reviews documented should include:\n\nthe appropriate tasks and expected results, outputs, or products been established for each software life cycle activity\ncorrectness, completeness, consistency, and accuracy\nsatisfaction for the standards, practices, and conventions of that activity\nestablishment of a proper basis for initiating tasks for the next software life cycle activity"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#principles-of-software-validation",
    "href": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#principles-of-software-validation",
    "title": "FDA Validation Document Summary",
    "section": "Principles of Software Validation",
    "text": "Principles of Software Validation\n\nRequirements\nA documented software requirements specification provides a baseline for both validation and verification. The software validation process must include an established software requirements specification (Ref: 21 CFR 820.3(z) and (aa) and 820.30(f) and (g)).\n\n\nDefect Prevention\nIn order to establish that confidence, software developers should use a mixture of methods and techniques to prevent software errors and to detect software errors that do occur.\n\n\nTime and Effort\nPreparation for software validation should begin early, i.e., during design and development planning and design input. The final conclusion that the software is validated should be based on evidence collected from planned efforts conducted throughout the software lifecycle.\n\n\nSoftware Life Cycle\n\nSoftware validation takes place within the environment of an established software life cycle.\nThe software life cycle contains software engineering tasks and documentation necessary to support the software validation effort.\nspecific verification and validation tasks need to be appropriate for the intended use of the software\n\n\n\nPlans\n\nThe software validation process is defined and controlled through the use of a plan.\nThe software validation plan defines “what” is to be accomplished through the software validation effort.\nSoftware validation plans specify areas such as\n\nscope,\napproach,\nresources,\nschedules and the types and extent of activities,\ntasks, and\nwork items.\n\n\n\n\nProcedures\nThe software validation process is executed through the use of procedures. These procedures establish “how” to conduct the software validation effort. The procedures should identify the specific actions or sequence of actions that must be taken to complete individual validation activities, tasks, and work items.\n\n\nSoftware Validation After a Change\n\nDue to the complexity of software, a small local change may have a significant global system impact.\nIf a change exists in the software, the whole validation status of the software needs to be re-established.\nneed to determine the extent and impact of that change on the entire software system.\nthe software developer should then conduct an appropriate level of software regression testing to show that unchanged but vulnerable portions of the system have not been adversely affected.\n\n\n\nValidation Coverage\n\nValidation coverage should be based on the software’s complexity and safety risk.\nThe selection of validation activities, tasks, and work items should be commensurate with the complexity of the software design and the risk associated with the use of the software for the specified intended use.\n\n\n\nIndependence of Review\n\nValidation activities should be based on the basic quality assurance precept of “independence of review.”\nSelf-validation is extremely difficult.\nWhen possible, an independent evaluation is always better (like a contracted third-party independent verification and validation)\nAnother approach is to assign internal staff members that are not involved in a particular design or its implementation, but who have sufficient knowledge to evaluate the project and conduct the verification and validation activities.\n\n\n\nFlexibility and Responsibility\nThe device manufacturer has flexibility in choosing how to apply these validation principles, but retains ultimate responsibility for demonstrating that the software has been validated. FDA regulated medical device applications include software that:\n\nIs a component, part, or accessory of a medical device;\n\ncomponents: e.g., application software, operating systems, compilers, debuggers, configuration management tools, and many more\n\nIs itself a medical device; or\nIs used in manufacturing, design and development, or other parts of the quality system.\nNo matter how complex and disperse the software is, the manufacturer is in charge of responsibility for software validation."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#activities-and-tasks",
    "href": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#activities-and-tasks",
    "title": "FDA Validation Document Summary",
    "section": "Activities and Tasks",
    "text": "Activities and Tasks\nSoftware validation is accomplished through a series of activities and tasks that are planned and executed at various stages of the software development life cycle. These tasks may be\n\none time occurrences\niterated many times\n\n\nSoftware Life Cycle Activities\n\nSoftware developers should establish a software life cycle model that is appropriate for their product and organization.\nThe selected software life cycle model should cover the software from its birth to its retirement.\nActivities in a typical software life cycle model:\n\nQuality Planning\nSystem Requirements Definition\nDetailed Software Requirements Specification\nSoftware Design Specification\nConstruction or Coding\nTesting\nInstallation\nOperation and Support\nMaintenance\nRetirement\n\nVerification, testing, and other tasks that support software validation occur during each of these activities.\nSeveral software life cycle models defined in FDA’s Glossary of Computerized System and Software Development\n\nTerminology dated August 1995:\n\nwaterfall\nspiral\nrapid prototyping\nincremental development, etc.\n\n\n\nTypical Tasks Supporting Validation\nthe software developer should at least consider each of the risk-related tasks and should define and document which tasks are or are not appropriate for their specific application.\n\nQuality Planning\nDesign and development planning should culminate in a plan that identifies\n\nnecessary tasks,\nprocedures for anomaly reporting and resolution,\nnecessary resources, and\nmanagement review requirements including formal design reviews.\n\nThe plan should include:\n\nThe specific tasks for each life cycle activity;\nEnumeration of important quality factors (e.g., reliability, maintainability, and usability);\nMethods and procedures for each task;\nTask acceptance criteria;\nCriteria for defining and documenting outputs in terms that will allow evaluation of their conformance to input requirements;\nInputs for each task;\nOutputs from each task;\nRoles, resources, and responsibilities for each task;\nRisks and assumptions; and\nDocumentation of user needs.\n\nThe plan should identify\n\nthe personnel,\nthe facility and equipment resources for each task, and\nthe role that risk (hazard) management will play.\n\nA configuration management plan should be developed that will guide and control multiple parallel development activities and ensure proper communications and documentation.\nControls are necessary to ensure positive and correct correspondence among all approved versions of the specifications documents, source code, object code, and test suites that comprise a software system. The controls also should ensure accurate identification of, and access to, the currently approved versions.\nProcedures should be created for reporting and resolving software anomalies found through validation or other activities.\nManagement should identify the reports and specify the contents, format, and responsible organizational elements for each report. Procedures also are necessary for the review and approval of software development results, including the responsible organizational elements for such reviews and approvals.\nTypical Tasks – Quality Planning\n\nRisk (Hazard) Management Plan\nConfiguration Management Plan\nSoftware Quality Assurance Plan\n\nSoftware Verification and Validation Plan\n\nVerification and Validation Tasks, and Acceptance Criteria\nSchedule and Resource Allocation (for software verification and validation activities)\nReporting Requirements\n\nFormal Design Review Requirements\nOther Technical Review Requirements\n\nProblem Reporting and Resolution Procedures\nOther Support Activities\n\n\n\nRequirements\nRequirements development includes the\n\nidentification,\nanalysis, and\ndocumentation of information about the device and its intended use.\n\nAreas of special importance include allocation of system functions to\n\nhardware/software,\noperating conditions,\nuser characteristics,\npotential hazards, and\nanticipated tasks.\n\nIn addition, the requirements should state clearly the intended use of the software. It is not possible to validate software without predetermined and documented software requirements. Typical software requirements specify the following:\n\nAll software system inputs;\nAll software system outputs;\nAll functions that the software system will perform;\nAll performance requirements that the software will meet, (e.g., data throughput, reliability, and timing);\nThe definition of all external and user interfaces, as well as any internal software-to-system interfaces;\nHow users will interact with the system;\nWhat constitutes an error and how errors should be handled;\nRequired response times;\nThe intended operating environment for the software, if this is a design constraint (e.g., hardware platform, operating system);\nAll ranges, limits, defaults, and specific values that the software will accept; and\nAll safety related requirements, specifications, features, or functions that will be implemented in software.\n\nSoftware requirement specifications should identify clearly the potential hazards that can result from a software failure in the system as well as any safety requirements to be implemented in software.\nThe consequences of software failure should be evaluated, along with means of mitigating such failures (e.g., hardware mitigation, defensive programming, etc.).\nThe Quality System regulation requires a mechanism for addressing incomplete, ambiguous, or conflicting requirements. (See 21 CFR 820.30(c).) Each requirement (e.g., hardware, software, user, operator interface, and safety) identified in the software requirements specification should be evaluated for accuracy, completeness, consistency, testability, correctness, and clarity.\nFor example, software requirements should be evaluated to verify that:\n\nThere are no internal inconsistencies among requirements;\nAll of the performance requirements for the system have been spelled out;\nFault tolerance, safety, and security requirements are complete and correct;\nAllocation of software functions is accurate and complete;\nSoftware requirements are appropriate for the system hazards; and\nAll requirements are expressed in terms that are measurable or objectively verifiable.\n\nA software requirements traceability analysis should be conducted to trace software requirements to (and from) system requirements and to risk analysis results. In addition to any other analyses and documentation used to verify software requirements, a formal design review is recommended to confirm that requirements are fully specified and appropriate before extensive software design efforts begin. Requirements can be approved and released incrementally, but care should be taken that interactions and interfaces among software (and hardware) requirements are properly reviewed, analyzed, and controlled.\nTypical Tasks – Requirements\n\nPreliminary Risk Analysis\nTraceability Analysis\n\nSoftware Requirements to System Requirements (and vice versa)\nSoftware Requirements to Risk Analysis\n\nDescription of User Characteristics\nListing of Characteristics and Limitations of Primary and Secondary Memory\nSoftware Requirements Evaluation\nSoftware User Interface Requirements Analysis\nSystem Test Plan Generation\nAcceptance Test Plan Generation\nAmbiguity Review or Analysis\n\n\n\nDesign\nIn the design process, the software requirements specification is translated into a logical and physical representation of the software to be implemented. The software design specification is a description of what the software should do and how it should do it. The design specification may contain both a high level summary of the design and detailed design information. Human factors engineering should be woven into\n\nthe entire design and development process,\nthe device design requirements,\nanalyses, and\ntests.\n\nDevice safety and usability issues should be considered when developing\n\nflowcharts,\nstate diagrams,\nprototyping tools, and\ntest plans.\n\nAlso, task and function analyses, risk analyses, prototype tests and reviews, and full usability tests should be performed. Participants from the user population should be included when applying these methodologies.\nThe software design specification should include:\n\nSoftware requirements specification, including predetermined criteria for acceptance of the software;\nSoftware risk analysis;\nDevelopment procedures and coding guidelines (or other programming procedures);\nSystems documentation (e.g., a narrative or a context diagram) that describes the systems context in which the program is intended to function, including the relationship of hardware, software, and the physical environment;\nHardware to be used;\nParameters to be measured or recorded;\nLogical structure (including control logic) and logical processing steps (e.g., algorithms);\nData structures and data flow diagrams;\nDefinitions of variables (control and data) and description of where they are used;\nError, alarm, and warning messages;\nSupporting software (e.g., operating systems, drivers, other application software);\nCommunication links (links among internal modules of the software, links with the supporting software, links with the hardware, and links with the user);\nSecurity measures (both physical and logical security); and\nAny additional constraints not identified in the above elements.\n\nThe first four of the elements noted above usually are separate pre-existing documents that are included by reference in the software design specification. Software requirements specification was discussed in the preceding section, as was software risk analysis.\nSoftware design evaluations criteria:\n\ncomplete,\ncorrect,\nconsistent,\nunambiguous,\nfeasible,\nmaintainable,\nanalyses of control flow,\ndata flow,\ncomplexity,\ntiming,\nsizing,\nmemory allocation,\ncriticality analysis, and many other aspects of the design\n\nAppropriate consideration of software architecture (e.g., modular structure) during design can reduce the magnitude of future validation efforts when software changes are needed.\nA traceability analysis should be conducted to verify that the software design implements all of the software requirements. As a technique for identifying where requirements are not sufficient, the traceability analysis should also verify that all aspects of the design are traceable to software requirements.\nAn analysis of communication links should be conducted to evaluate the proposed design with respect to hardware, user, and related software requirements. At the end of the software design activity, a Formal Design Review should be conducted to verify that the design is correct, consistent, complete, accurate, and testable, before moving to implement the design.\nSeveral versions of both the software requirement specification and the software design specification should be maintained. All approved versions should be archived and controlled in accordance with established configuration management procedures.\nTypical Tasks – Design\n\nUpdated Software Risk Analysis\nTraceability Analysis - Design Specification to Software Requirements (and vice versa)\nSoftware Design Evaluation\nDesign Communication Link Analysis\nModule Test Plan Generation\nIntegration Test Plan Generation\nTest Design Generation (module, integration, system, and acceptance)\n\n\n\nConstruction or Coding\nSoftware may be constructed either by coding. Coding is the software activity where the detailed design specification is implemented as source code. It is the last stage in decomposition of the software requirements where module specifications are translated into a programming language.\nCoding usually involves the use of a high-level programming language, but may also entail the use of assembly language (or microcode) for time-critical operations.\nA source code traceability analysis is an important tool to verify that all code is linked to established specifications and established test procedures. A source code traceability analysis should be conducted and documented to verify that:\n\nEach element of the software design specification has been implemented in code;\nModules and functions implemented in code can be traced back to an element in the software design specification and to the risk analysis;\nTests for modules and functions can be traced back to an element in the software design specification and to the risk analysis; and\nTests for modules and functions can be traced to source code for the same modules and functions.\n\nTypical Tasks – Construction or Coding\n\nTraceability Analyses\n\nSource Code to Design Specification (and vice versa)\nTest Cases to Source Code and to Design Specification\n\nSource Code and Source Code Documentation Evaluation\nSource Code Interface Analysis\nTest Procedure and Test Case Generation (module, integration, system, and acceptance)\n\n\n\nTesting by the Software Developer\nSoftware testing entails running software products under known conditions with defined inputs and documented outcomes that can be compared to their predefined expectations. It is a time consuming, difficult, and imperfect activity.\nAs such, it requires early planning in order to be effective and efficient. Test plans and test cases should be created as early in the software development process as feasible.\nThey should identify\n\nthe schedules,\nenvironments,\nresources (personnel, tools, etc.),\nmethodologies,\ncases (inputs, procedures, outputs, expected results),\ndocumentation, and\nreporting criteria.\n\nDescriptions of categories of software and software testing effort appear in the literature\n\nNIST Special Publication 500-235, Structured Testing: A Testing Methodology Using the Cyclomatic Complexity Metric;\nNUREG/CR-6293, Verification and Validation Guidelines for High Integrity Systems; and\nIEEE Computer Society Press, Handbook of Software Reliability Engineering.\n\nTesting of all program functionality does not mean all of the program has been tested. Testing of all of a program’s code does not mean all necessary functionality is present in the program. Testing of all program functionality and all program code does not mean the program is 100% correct! Software testing that finds no errors should not be interpreted to mean that errors do not exist in the software product; it may mean the testing was superficial.\nAn essential element of a software test case is the expected result. It is the key detail that permits objective evaluation of the actual test result. This necessary testing information is obtained from the corresponding, predefined definition or specification.\nA software testing process should be based on principles that foster effective examinations of a software product. Applicable software testing tenets include:\n\nThe expected test outcome is predefined;\nA good test case has a high probability of exposing an error;\nA successful test is one that finds an error;\nThere is independence from coding;\nBoth application (user) and software (programming) expertise are employed;\nTesters use different tools from coders;\nExamining only the usual case is insufficient;\nTest documentation permits its reuse and an independent confirmation of the pass/fail status of a test outcome during subsequent review.\n\nCode-based testing is also known as structural testing or “white-box” testing. It identifies test cases based on knowledge obtained from the source code, detailed design specification, and other development documents. Structural testing can identify “dead” code that is never executed when the program is run. Structural testing is accomplished primarily with unit (module) level testing, but can be extended to other levels of software testing.\nThe level of structural testing can be evaluated using metrics that are designed to show what percentage of the software structure has been evaluated during structural testing. These metrics are typically referred to as “coverage” and are a measure of completeness with respect to test selection criteria. The amount of structural coverage should be commensurate with the level of risk posed by the software. Use of the term “coverage” usually means 100% coverage. Common structural coverage metrics include:\n\nStatement Coverage – This criteria requires sufficient test cases for each program statement to be executed at least once; however, its achievement is insufficient to provide confidence in a software product’s behavior.\nDecision (Branch) Coverage – This criteria requires sufficient test cases for each program decision or branch to be executed so that each possible outcome occurs at least once. It is considered to be a minimum level of coverage for most software products, but decision coverage alone is insufficient for high-integrity applications.\nCondition Coverage – This criteria requires sufficient test cases for each condition in a program decision to take on all possible outcomes at least once. It differs from branch coverage only when multiple conditions must be evaluated to reach a decision.\nMulti-Condition Coverage – This criteria requires sufficient test cases to exercise all possible combinations of conditions in a program decision.\nLoop Coverage – This criteria requires sufficient test cases for all program loops to be executed for zero, one, two, and many iterations covering initialization, typical running and termination (boundary) conditions.\nPath Coverage – This criteria requires sufficient test cases for each feasible path, basis path, etc., from start to exit of a defined program segment, to be executed at least once. Because of the very large number of possible paths through a software program, path coverage is generally not achievable. The amount of path coverage is normally established based on the risk or criticality of the software under test.\nData Flow Coverage – This criteria requires sufficient test cases for each feasible data flow to be executed at least once. A number of data flow testing strategies are available.\n\nThe following types of functional software testing involve generally increasing levels of effort:\n\nNormal Case – Testing with usual inputs is necessary. However, testing a software product only with expected, valid inputs does not thoroughly test that software product. By itself, normal case testing cannot provide sufficient confidence in the dependability of the software product.\nOutput Forcing – Choosing test inputs to ensure that selected (or all) software outputs are generated by testing.\nRobustness – Software testing should demonstrate that a software product behaves correctly when given unexpected, invalid inputs. Methods for identifying a sufficient set of such test cases include Equivalence Class Partitioning, Boundary Value Analysis, and Special Case Identification (Error Guessing). While important and necessary, these techniques do not ensure that all of the most appropriate challenges to a software product have been identified for testing.\nCombinations of Inputs – The functional testing methods identified above all emphasize individual or single test inputs. Most software products operate with multiple inputs under their conditions of use. Thorough software product testing should consider the combinations of inputs a software unit or system may encounter during operation. Error guessing can be extended to identify combinations of inputs, but it is an ad hoc technique. Cause-effect graphing is one functional software testing technique that systematically identifies combinations of inputs to a software product for inclusion in test cases.\n\nFunctional and structural software test case identification techniques provide specific inputs for testing, rather than random test inputs. One weakness of these techniques is the difficulty in linking structural and functional test completion criteria to a software product’s reliability.\nAdvanced software testing methods, such as statistical testing, can be employed to provide further assurance that a software product is dependable. Statistical testing uses randomly generated test data from defined distributions based on an operational profile (e.g., expected use, hazardous use, or malicious use of the software product). Large amounts of test data are generated and can be targeted to cover particular areas or concerns, providing an increased possibility of identifying individual and multiple rare operating conditions that were not anticipated by either the software product’s designers or its testers. Statistical testing also provides high structural coverage. It does require a stable software product. Thus, structural and functional testing are prerequisites for statistical testing of a software product.\nAnother aspect of software testing is the testing of software changes. Changes occur frequently during software development. These changes are the result of\n\ndebugging that finds an error and it is corrected,\nnew or changed requirements (“requirements creep”), and\nmodified designs as more effective or efficient implementations are found.\n\nOnce a software product has been baselined (approved), any change to that product should have its own “mini life cycle,” including testing. Testing of a changed software product requires additional effort. It should demonstrate\n\nthat the change was implemented correctly, and\nthat the change did not adversely impact other parts of the software product.\n\nRegression analysis is the determination of the impact of a change based on review of the relevant documentation in order to identify the necessary regression tests to be run. Regression testing is the rerunning of test cases that a program has previously executed correctly and comparing the current result to the previous result in order to detect unintended effects of a software change. Regression analysis and regression testing should also be employed when using integration methods to build a software product to ensure that newly integrated modules do not adversely impact the operation of previously integrated modules.\nIn order to provide a thorough and rigorous examination of a software product, development testing is typically organized into levels: unit, integration, and system levels of testing.\n\nUnit (module or component) level testing focuses on the early examination of sub-program functionality and ensures that functionality not visible at the system level is examined by testing. Unit testing ensures that quality software units are furnished for integration into the finished software product.\nIntegration level testing focuses on the transfer of data and control across a program’s internal and external interfaces. External interfaces are those with\n\nother software (including operating system software),\nsystem hardware, and\nthe users and can be described as communications links.\n\nSystem level testing demonstrates that all specified functionality exists and that the software product is trustworthy. This testing verifies the as-built program’s functionality and performance with respect to the requirements for the software product as exhibited on the specified operating platform(s). System level software testing addresses functional concerns and the following elements of a device’s software that are related to the intended use(s):\n\nPerformance issues (e.g., response times, reliability measurements);\nResponses to stress conditions, e.g., behavior under maximum load, continuous use;\nOperation of internal and external security features;\nEffectiveness of recovery procedures, including disaster recovery;\nUsability; (Usability vs Utility??)\nCompatibility with other software products;\nBehavior in each of the defined hardware configurations; and\nAccuracy of documentation.\n\n\nControl measures (e.g., a traceability analysis) should be used to ensure that the intended coverage is achieved.\nSystem level testing also exhibits the software product’s behavior in the intended operating environment. The location of such testing is dependent upon the software developer’s ability to produce the target operating environment(s). Depending upon the circumstances, simulation and/or testing at (potential) customer locations may be utilized.\nTest plans should identify the controls needed to ensure\n\nthat the intended coverage is achieved and\nthat proper documentation is prepared when planned system level testing is conducted at sites not directly controlled by the software developer.\n\nTest procedures, test data, and test results\n\nshould be documented in a manner permitting objective pass/fail decisions to be reached.\nshould also be suitable for review and objective decision making subsequent to running the test,\nshould be suitable for use in any subsequent regression testing.\n\nErrors detected during testing should be\n\nlogged,\nclassified,\nreviewed, and\nresolved prior to release of the software.\n\nSoftware error data that is collected and analyzed during a development life cycle may be used to determine the suitability of the software product for release for commercial distribution. Test reports should comply with the requirements of the corresponding test plans.\nSoftware testing tools are frequently used to ensure consistency, thoroughness, and efficiency in the testing of such software products and to fulfill the requirements of the planned testing activities.\nAppropriate documentation providing evidence of the validation of these software tools for their intended use should be maintained (see section 6 of this guidance).\nTypical Tasks – Testing by the Software Developer\n\nTest Planning\nStructural Test Case Identification\nFunctional Test Case Identification\nTraceability Analysis - Testing\nUnit (Module) Tests to Detailed Design\nIntegration Tests to High Level Design\nSystem Tests to Software Requirements\nUnit (Module) Test Execution\nIntegration Test Execution\nFunctional Test Execution\nSystem Test Execution\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\nUser Site Testing\nTesting at the user site is an essential part of software validation. The Quality System regulation requires\n\ninstallation and\ninspection procedures (including testing where appropriate) as well as\ndocumentation of inspection and\ntesting to demonstrate proper installation. (See 21 CFR §820.170.)\n\nLikewise, manufacturing equipment must meet specified requirements, and automated systems must be validated for their intended use. (See 21 CFR §820.70(g) and 21 CFR §820.70(i) respectively.)\nTerminology regarding user site testing can be confusing. Terms such as\n\nbeta test,\nsite validation,\nuser acceptance test,\ninstallation verification, and\ninstallation testing have all been used to describe user site testing.\n\nFor the purposes of this guidance, the term “user site testing” encompasses all of these and any other testing that takes place outside of the developer’s controlled environment.\nThis testing should take place at a user’s site with the actual hardware and software that will be part of the installed system configuration. The testing is accomplished through either actual or simulated use of the software being tested within the context in which it is intended to function.\nTest planners should check with the FDA Center(s) with the corresponding product jurisdiction to determine whether there are any additional regulatory requirements for user site testing.\nUser site testing should follow a pre-defined written plan with\n\na formal summary of testing and\na record of formal acceptance.\n\nThe following documented evidence should be retained:\n\nall testing procedures,\ntest input data, and\ntest results\n\nThere should be evidence that hardware and software are installed and configured as specified. Measures should ensure that all system components are exercised during the testing and that the versions of these components are those specified. The testing plan should specify testing throughout the full range of operating conditions and should specify continuation for a sufficient time to allow the system to encounter a wide spectrum of conditions and events in an effort to detect any latent faults that are not apparent during more normal activities.\nSome of the evaluations of the system’s ability that have been performed earlier by the software developer at the developer’s site should be repeated at the site of actual use. These may include tests for:\n\na high volume of data,\nheavy loads or stresses,\nsecurity,\nfault testing (avoidance, detection, tolerance, and recovery),\nerror messages, and\nimplementation of safety requirements.\n\nThere should be an evaluation of the ability of the users of the system to understand and correctly interface with it.\nOperators should be able to perform the intended functions and respond in an appropriate and timely manner to all alarms, warnings, and error messages.\nRecords should be maintained of both proper system performance and any system failures that are encountered.\nThe revision of the system to compensate for faults detected during this user site testing should follow the same procedures and controls as for any other software change.\nThe developers of the software may or may not be involved in the user site testing.\n\nIf the developers are involved, they may seamlessly carry over to the user’s site the last portions of design-level systems testing.\nIf the developers are not involved, it is all the more important that the user have persons who understand the importance of careful test planning, the definition of expected test results, and the recording of all test outputs.\n\nTypical Tasks – User Site Testing\n\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\nMaintenance and Software Changes\n\nHardware vs Software\nHardware maintenance typically includes\n\npreventive hardware maintenance actions,\ncomponent replacement, and\ncorrective changes.\n\nSoftware maintenance includes\n\ncorrective,\nperfective, and\nadaptive maintenance\nbut does not include preventive maintenance actions or software component replacement.\n\n\n\nMaintenance Types\n\nCorrective maintenance: Changes made to correct errors and faults in the software.\nPerfective maintenance: Changes made to the software to improve the performance, maintainability, or other attributes of the software system .\nAdaptive maintenance: Changes to make the software system usable in a changed environment.\n\nSufficient regression analysis and testing should be conducted to demonstrate that portions of the software not involved in the change were not adversely impacted. When changes are made to a software system,\n\neither during initial development or\nduring post release maintenance,\n\nThis is in addition to testing that evaluates the correctness of the implemented change(s). The specific validation effort necessary for each software change is determined by\n\nthe type of change,\nthe development products affected, and the\nimpact of those products on the operation of the software.\n\n\n\nFactors of Limitting Validation Effort Needed When a Change Is Made\n\ncareful and complete documentation of the design structure and\ncareful and complete documentation of interrelationships of various modules,\ninterfaces, etc.\nFor example,\n\ntest documentation,\ntest cases, and\nresults of previous verification and validation testing All of them need to be archived if they are to be available for performing subsequent regression testing.\n\n\nThe following additional maintenance tasks should be addressed:\n\nSoftware Validation Plan Revision - For software that was previously validated, the existing software validation plan should be revised to support the validation of the revised software. If no previous software validation plan exists, such a plan should be established to support the validation of the revised software.\nAnomaly Evaluation – Software organizations frequently maintain documentation, such as software problem reports that describe software anomalies discovered and the specific corrective action taken to fix each anomaly.\n\nToo often, however, mistakes are repeated because software developers do not take the next step to determine the root causes of problems and make the process and procedural changes needed to avoid recurrence of the problem.\nSoftware anomalies should be evaluated in terms of their severity and their effects on system operation and safety,\nbut they should also be treated as symptoms of process deficiencies in the quality system.\nA root cause analysis of anomalies can identify specific quality system deficiencies.\nWhere trends are identified (e.g., recurrence of similar software anomalies), appropriate corrective and preventive actions must be implemented and documented to avoid further recurrence of similar quality problems. (See 21 CFR 820.100.)\n\nProblem Identification and Resolution Tracking - All problems discovered during maintenance of the software should be documented. The resolution of each problem should be tracked to ensure it is fixed, for historical reference, and for trending.\nProposed Change Assessment - All proposed modifications, enhancements, or additions should be assessed to determine the effect each change would have on the system. This information should determine the extent to which verification and/or validation tasks need to be iterated.\nTask Iteration - For approved software changes, all necessary verification and validation tasks should be performed to ensure that planned changes are implemented correctly, all documentation is complete and up to date, and no unacceptable changes have occurred in software performance.\nDocumentation Updating – Documentation should be carefully reviewed to determine which documents have been impacted by a change. All approved documents (e.g., specifications, test procedures, user manuals, etc.) that have been affected should be updated in accordance with configuration management procedures. Specifications should be updated before any maintenance and software changes are made."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#validation-of-automated-process-equipment-and-quality-system-software",
    "href": "docs/blog/posts/2022-12-10-FDA/sw_validation.html#validation-of-automated-process-equipment-and-quality-system-software",
    "title": "FDA Validation Document Summary",
    "section": "Validation of Automated Process Equipment and Quality System Software",
    "text": "Validation of Automated Process Equipment and Quality System Software\nThe Quality System regulation requires that “when computers or automated data processing systems are used as part of production or the quality system, the [device] manufacturer shall validate computer software for its intended use according to an established protocol.” (See 21 CFR §820.70(i)). This has been a regulatory requirement of FDA’s medical device Good Manufacturing Practice (GMP) regulations since 1978.\nComputer systems that implement part of a device manufacturer’s production processes or quality system (or that are used to create and maintain records required by any other FDA regulation) are subject to the Electronic Records; Electronic Signatures regulation. (See 21 CFR Part 11.) This regulation establishes additional security, data integrity, and validation requirements when records are created or maintained electronically. These additional Part 11 requirements should be carefully considered and included in system requirements and software requirements for any automated record keeping systems. System validation and software validation should demonstrate that all Part 11 requirements have been met.\nComputers and automated equipment are used extensively throughout all aspects of\n\nmedical device design,\nlaboratory testing and analysis,\nproduct inspection and acceptance,\nproduction and process control,\nenvironmental controls,\npackaging,\nlabeling,\ntraceability,\ndocument control,\ncomplaint management, and many other aspects of the quality system.\n\nIncreasingly, automated plant floor operations can involve extensive use of embedded systems in:\n\nprogrammable logic controllers;\ndigital function controllers;\nstatistical process control;\nsupervisory control and data acquisition;\nrobotics;\nhuman-machine interfaces;\ninput/output devices; and\ncomputer operating systems.\n\nAll software tools used for software design are subject to the requirement for software validation, but the validation approach used for each application can vary widely.\nValidation is typically supported by:\n\nverifications of the outputs from each stage of that software development life cycle; and\nchecking for proper operation of the finished software in the device manufacturer’s intended use environment.\n\n\nHow Much Validation Evidence Is Needed?\nThe level of validation effort should be commensurate with\n\nthe risk posed by the automated operation,\nthe complexity of the process software,\nthe degree to which the device manufacturer is dependent upon that automated process to produce a safe and effective device\n\nDocumented requirements and risk analysis of the automated process help to define the scope of the evidence needed to show that the software is validated for its intended use. Without a plan, extensive testing may be needed for:\n\na plant-wide electronic record and electronic signature system;\nan automated controller for a sterilization cycle; or\nautomated test equipment used for inspection and acceptance of finished circuit boards in a lifesustaining / life-supporting device.\n\nHigh risk applications should not be running in the same operating environment with non-validated software functions, even if those software functions are not used. Risk mitigation techniques such as memory partitioning or other approaches to resource protection may need to be considered when high risk applications and lower risk applications are to be used in the same operating environment.\nWhen software is upgraded or any changes are made to the software, the device manufacturer should consider how those changes may impact the “used portions” of the software and must reconfirm the validation of those portions of the software that are used. (See 21 CFR §820.70(i).)\n\n\nDefined User Equipment\nA very important key to software validation is a documented user requirements specification that defines:\n\nthe “intended use” of the software or automated equipment; and\nthe extent to which the device manufacturer is dependent upon that software or equipment for production of a quality medical device.\n\nThe device manufacturer (user) needs to define the expected operating environment including any required hardware and software configurations, software versions, utilities, etc. The user also needs to:\n\ndocument requirements for system performance, quality, error handling, startup, shutdown, security, etc.;\nidentify any safety related functions or features, such as sensors, alarms, interlocks, logical processing steps, or command sequences; and\ndefine objective criteria for determining acceptable performance.\n\nThe validation must be conducted in accordance with a documented protocol, and the validation results must also be documented. (See 21 CFR §820.70(i).) Test cases should be documented that will exercise the system to challenge its performance against the pre-determined criteria, especially for its most critical parameters.\nTest cases should address\n\nerror and alarm conditions,\nstartup, shutdown,\nall applicable user functions and operator controls,\npotential operator errors,\nmaximum and minimum ranges of allowed values, and\nstress conditions applicable to the intended use of the equipment.\n\nThe test cases should be executed and the results should be recorded and evaluated to determine whether the results support a conclusion that the software is validated for its intended use.\nA device manufacturer may conduct a validation using their own personnel or may depend on a third party such as the equipment/software vendor or a consultant. In any case, the device manufacturer retains the ultimate responsibility for ensuring that the production and quality system software:\n\nis validated according to a written procedure for the particular intended use; and\nwill perform as intended in the chosen application.\n\nThe device manufacturer should have documentation including:\n\ndefined user requirements;\nvalidation protocol used;\nacceptance criteria;\ntest cases and results; and\na validation summary that objectively confirms that the software is validated for its intended use.\n\n\n\nValidation of Off-The-Shelf Software and Automated Equipment\nMost of the automated equipment and systems used by device manufacturers are supplied by thirdparty vendors and are purchased off-the-shelf (OTS). The device manufacturer is responsible for ensuring that the product development methodologies used by the OTS software developer are appropriate and sufficient for the device manufacturer’s intended use of that OTS software.\nWhere possible and depending upon the device risk involved, the device manufacturer should consider auditing the vendor’s design and development methodologies used in the construction of the OTS software and should assess the development and validation documentation generated for the OTS software. Such audits can be conducted by the device manufacturer or by a qualified third party.\nThe audit should demonstrate that the vendor’s procedures for and results of the verification and validation activities performed the OTS software are appropriate and sufficient for the safety and effectiveness requirements of the medical device to be produced using that software."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "",
    "text": "Notice\nLast Update\nIntroduction\n\nDefinition of SW Validation\nSome Terminology\nRationale\nObjective of SW Validation\nWhat to validate\nMain Institutions\n\nQuality System Regulation\nVerification\nValidation\nBenefits and Difficulty in SW V&V\nSW Development as Part of System Design\n\nOverview\nDesign Reveiw\n\n\n\n\nValidation Pinciples\n\nOverview\nConditions\nPlanning\nAfter SW Change\nSW Lifecycle\n\nSW Lifecycle Tasks\n\nOverview\nQuality Planning\nConfiguration Management\nTask Requirements\nDesign Overview\n\nDesign Consideration\nDesign Specification\nDesign Activity and Task\n\n\n\n\n\nTesting Tasks\n\nOverview\nConsideration Before Testing Tasks\nCode Based Testing\nSolution to White Box Testing\nDevelopment Testing\nUser Site Testing\n\nOverview\nTesting\n\n\nMaintenance and SW Changes\nValidation of Quality System SW\n\nOverview\nFactors in Validation"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#definition-of-software-validation",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#definition-of-software-validation",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Definition of Software Validation",
    "text": "Definition of Software Validation\nSoftware Validation is a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997.\n(See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\n\nSome Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology: requirements, specification, verification, and validation.\n\n\n\nObjective of SW validation is to ensure\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\nWhat to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#quality-system-regulation",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#quality-system-regulation",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Quality System Regulation",
    "text": "Quality System Regulation\nThe guidance reflects that the minimum list of the relavant scientific and legal requirements that you must comply with.\n\n\n\n\nflowchart TB\n    subgraph Quality_System_Regulation\n        direction LR\n        subgraph Requirement\n            direction TB\n            user_requirements\n        end\n        subgraph Specification\n           direction TB\n           document_user_requirements \n        end \n        subgraph Verification\n           direction TB\n           verify_spacified_requirements\n        end\n        subgraph Validation\n           direction TB\n           Confirmation_by_Examinations\n           Provision_of_objective_3evidences\n        end\n        Requirement--> Specification --> Verification --> Validation                    \n    end\n    subgraph First_Detail\n        direction TB\n        subgraph User_Requirement\n            direction TB\n            any_need_for_customer---\n            any_need_for_system---\n            any_need_for_software\n        end\n            subgraph Document_User_Requirement\n            direction TB\n            define_means_for_requirements---\n          define_criteria_for_requirements\n        end         \n        subgraph Verify_Spacified_Requirement\n            direction TB\n            Objective_Evidence--->|needs|Software_Testing\n        end\n        subgraph SW_Validation\n            direction TB\n            subgraph Confirmation_by_Examination\n            direction TB\n                subgraph Examination_List_of_SW_LifeCycle\n                    direction TB\n                    comprehensiveness_of_software_testing---\n                    inspection_verification_test---\n                    analysis_verification_test---\n                    other_varification_tests    \n                end \n            end             \n            subgraph Provision_of_Objective_3evidences\n                direction TB\n                Software_specifications_conformity---\n                Consistent_SW_Implementation---\n                Correctness_Completeness_Traceability\n            end\n        end\n        Requirement---User_Requirement\n        Specification---Document_User_Requirement\n        Verification---Verify_Spacified_Requirement\n        Confirmation_by_Examinations---Confirmation_by_Examination\n        Provision_of_objective_3evidences---Provision_of_Objective_3evidences             \n    end"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#verification",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#verification",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Verification",
    "text": "Verification\n\n\n\n\nflowchart LR\n    subgraph Objective_Evidence\n        direction LR\n        subgraph Design_Outputs_of_SW_life_cycle_for_Specified_Requirements\n            direction TB\n            Consistency---\n            Completeness---\n            Correctness---\n            Documentation\n        end       \n        subgraph Software_Testing\n            direction LR\n            subgraph Testing_Environments\n                direction TB\n                satisfaction_for_input_requirements\n                satisfaction_for_input_requirements---Simulated_Use_Environment\n                subgraph User_Site_Testing\n                    direction TB                            \n                    Installation_Qualification---\n                    Operational_Qualification---\n                    Performance_Qualification\n                end\n            end\n            satisfaction_for_input_requirements---User_Site_Testing\n            subgraph Testing_Activities\n                direction TB\n                static_analyses---\n                dynamic_analyses---\n                code_and_document_inspections---\n                walkthroughs\n            end \n        Testing_Environments-->Testing_Activities\n        end\n    Design_Outputs_of_SW_life_cycle_for_Specified_Requirements-->Software_Testing-->Testing_Activities\nend    \n\n\n\n\n\n\n\n\n\n\nInstallation_Qualification (IQ): documentation of correct installations according to requirements, specifications, vendor’s recommendations, and the FDA’s guidance for all hardware, software, equipment and systems.\nOperational_Qualification (OQ): establishment of confidence that the software shows constant performances according to specified requirements.\nPerformance_Qualification (PQ): confirmation of the performance in the intended use according to the specified requirements for functionality and safety throughout the SW life cycle."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation",
    "text": "Validation\n\n\n\n\nflowchart LR\n    subgraph Validation\n    direction LR\n        subgraph Confirmation_by_Examination\n            direction TB\n            subgraph Examination_List_at_each_stage_of_SW_Life_Cycle\n                direction TB\n                comprehensiveness_of_software_testing---\n                inspection_verification_test---\n                analysis_verification_test---\n                other_varification_tests    \n            end \n        end\n        subgraph Provision_of_objective_3evidences\n            direction TB\n            subgraph Software_specifications_conform_to\n                direction TB\n                user_needs \n                intended_uses\n            end\n            subgraph Consistent_SW_Implementation\n                direction TB\n                particular_requirements\n            end\n            subgraph Correctness_Completeness_Traceability\n                direction TB\n                correct_complete_implementation_by_all_SW_requirements---\n                traceable_to_system_requirements\n            end\n            Software_specifications_conform_to---\n            Consistent_SW_Implementation---\n            Correctness_Completeness_Traceability\n        end\n        Confirmation_by_Examination-->\n        Provision_of_objective_3evidences\n    end\n\n\n\n\n\n\n\n\n\n\n\n\nA conclusion that software is validated is highly dependent upon comprehensive software testing, inspections, analyses, and other verification tasks performed at each stage of the software development life cycle.\nTesting of device software functionality in a simulated* use environment, and user site testing are typically included as components of an overall design validation program for a software automated device."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#benefits-and-difficulty-of-sw-vv",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#benefits-and-difficulty-of-sw-vv",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Benefits and Difficulty of SW V&V",
    "text": "Benefits and Difficulty of SW V&V\n\nBenefits of SW V&V\n\nIncrease the usability and reliability of the device,\nResulting in decreased failure rates, fewer recalls and corrective actions, less risk to patients and users, and reduced liability to device manufacturers.\nReduce long term costs by making V&V easier and less costly to reliably modify software and revalidate software changes.\n\n\n\nDifficulty in SW V&V\n\na developer cannot test forever, and\n\nit is difficult to know how much evidence is enough.\na matter of developing a level of confidence that the device meets all requirements\n\nConsiderations for an acceptable level of confidence\nmeasures and estimates such as defects found in specifications documents\ntesting coverage, and other techniques are all used before shipping the product.\na level of confidence varies depending upon the safety risk (hazard) of a SW or device"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-development-as-part-of-system-design",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-development-as-part-of-system-design",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "SW Development as Part of System Design",
    "text": "SW Development as Part of System Design\n\nOverview\n\n\n\n\nflowchart LR\n    subgraph Design_Review\n        direction LR\n        purpose_design_review---\n        design_review_types---\n        design_review_requirements---\n        design_review_outputs\n    end\n\n\n\n\n\n\n\n\nSoftware validation must be considered within the context of the overall design validation for the system. A documented requirements specification represents\n\nuser’s needs\nintended uses from which the product is developed.\n\nA primary goal of SW validation is to demonstrate that all completed SW products comply with all documented requirements.\n\n\nDesign Review\n\n\n\n\nflowchart LR\n    subgraph Design_Review\n        direction LR\n        subgraph Purpose_Design_Review\n            direction TB\n            documented_structured_comprehensive_systematic_examinations---\n            adequacy_of_design_requirements---\n            capability_of_design_for_requirements---\n            identification_of_problem   \n        end\n        subgraph Design_Reivew_Types\n            direction TB\n            subgraph Formal_Design_Review\n                direction TB\n                3rd_parties_outside_development_team\n            end\n            subgraph Informal_Design_Review\n                direction TB\n                within_development_team\n            end\n        Formal_Design_Review---Informal_Design_Review    \n        end\n        subgraph Design_Review_Requirements\n            direction TB\n               necessary_at_least_one_formal_design_review---\n               optinal_informal_design_review---\n               recommended_multiple_design_reviews\n        end\n        subgraph Formal_Design_Review_Outputs\n            direction TB\n            more_than_10_outputs\n        end\n        Purpose_Design_Review--> Design_Reivew_Types--> Design_Review_Requirements\n        Design_Review_Requirements-->Formal_Design_Review_Outputs\n    end\n\n\n\n\n\n\n\n\n\n\nDesign review is a primary tool for managing and evaluating development projects.\nAt least one formal design review must be conducted during the device design process.\nIt is recommended that multiple design reviews be conducted.\nProblems found at this point can\n\nbe resolved more easily,\nsave time and money, and\nreduce the likelihood of missing a critical issue."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#design-review",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#design-review",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Design Review",
    "text": "Design Review\n\n\n\n\nflowchart LR\n    subgraph Design_Review\n        direction LR\n        subgraph Purpose_Design_Review\n            direction TB\n            documented_structured_comprehensive_systematic_examinations---\n            adequacy_of_design_requirements---\n            capability_of_design_for_requirements---\n            identification_of_problem   \n        end\n        subgraph Design_Reivew_Types\n            direction TB\n            subgraph Formal_Design_Review\n                direction TB\n                3rd_parties_outside_development_team\n            end\n            subgraph Informal_Design_Review\n                direction TB\n                within_development_team\n            end\n        Formal_Design_Review---Informal_Design_Review    \n        end\n        subgraph Design_Review_Requirements\n            direction TB\n               necessary_at_least_one_formal_design_review---\n               optinal_informal_design_review---\n               recommended_multiple_design_reviews\n        end\n        subgraph Formal_Design_Review_Outputs\n            direction TB\n            more_than_10_outputs\n        end\n        Purpose_Design_Review--> Design_Reivew_Types--> Design_Review_Requirements\n        Design_Review_Requirements-->Formal_Design_Review_Outputs\n    end\n\n\n\n\n\n\n\n\n\n\nDesign review is a primary tool for managing and evaluating development projects.\nAt least one formal design review must be conducted during the device design process.\nIt is recommended that multiple design reviews be conducted.\nProblems found at this point can\n\nbe resolved more easily,\nsave time and money, and\nreduce the likelihood of missing a critical issue."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-principles",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-principles",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation Principles",
    "text": "Validation Principles\n\nOverview\n\n\n\n\nflowchart LR\n  subgraph Validation_Principles\n        direction LR\n        subgraph Validation_Starting_Point\n            direction TB\n            during_design_planning---\n            during_development_planning---\n            all_results_should_be_supported_by_evidence_collected_from_planning_SW_lifecylce\n        end\n        subgraph Validation_Conditions\n            direction TB\n            Requirements---Estabilishment_Confidence---SW_Lifecycle\n        end\n\n        subgraph Validation_Planning\n            direction TB\n            Specify_Areas\n            subgraph Validation_Coverage\n                direction TB\n            end\n            subgraph Validation_Process_Establishment\n                direction TB\n            end\n        Specify_Areas---Validation_Coverage---Validation_Process_Establishment\n        end\n\n        subgraph After_Self_Validation\n            direction TB\n            subgraph Validation_After_SW_Change\n        direction TB\n        end\n\n        subgraph Independence_of_Review\n        direction TB\n\n        end\n        Validation_After_SW_Change---Independence_of_Review\n        end\n            Validation_Starting_Point-->Validation_Conditions-->Validation_Planning-->\nAfter_Self_Validation\n    end\n\n\n\n\n\n\n\n\n\nPreparation for software validation should begin as early as possible because the final conclusion that the software is validated should be based on evidence collected from planned efforts conducted throughout the software lifecycle.\n\n\n\nConditions\n\n\n\n\nflowchart LR\n\nsubgraph Validation_Conditions\n    direction LR\n    subgraph SW_Requirments\n        direction TB\n        subgraph Documented_SW_Requirments_Specification\n            direction TB\n            Baseline_Provision_for_V&V---\n            establishment_of_software_requirements_specification\n        end\n    end\n    subgraph Estabilishment_Confidence\n        direction TB\n            mixture_of_methods_techinques---\n            preventing_SW_errors---\n            detecting_SW_errors                 \n    end\n    subgraph SW_Lifecycle\n        direction TB\n        validation_must_be_conducted_within_established_environment_across_lifecycle---\n        lifecycle_contains_SW_engineering_tasks_and_documentation---\n        V&V_tasks_must_reflect_intended_use\n    end\nend\nSW_Requirments---Estabilishment_Confidence---SW_Lifecycle\n\n\n\n\n\n\n\n\n\n\nPlanning\n\n\n\n\nflowchart LR\n    subgraph Validation_Planning\n        direction LR\n        define_what_to_accomplish\n        subgraph Specify_Areas\n            direction TB\n            scope---\n            approach---\n            resources---\n            schedules_activities---\n            types_activitieis---\n            extent_of_activities---\n            tasks---\n            work_items\n        end\n            define_what_to_accomplish-->Specify_Areas\n        subgraph Validation_Coverage\n               direction TB\n            depending_on_SW_complexity_of_SW_design---\n            depending_on_safety_risk_for_specified_intended_use---\n            select_activities_tasks_work_items_for_complexity_safety_risk\n        end\n        subgraph Validation_Process_Establishment\n            direction TB\n            establish_how_to_conduct-->\n            identify_sequence_of_specific_actions-->\n            identify_specific_activitieis-->\n            identify_specific_tasks-->\n            identify_specific_work_items\n        end\n    Specify_Areas-->Validation_Coverage-->Validation_Process_Establishment\n    end\n\n\n\n\n\n\n\n\n\n\nAfter SW Change\n\n\n\n\nflowchart LR\n\nsubgraph After_Self_Validation\n    direction LR\n    subgraph Validation_After_SW_Change\n        direction TB\n        determine_extent_of_change_on_entire_SW_system-->\n        determine_impact_of_change_on_entire_SW_system-->\n        conduct_SW_regression_testing_on_unchanged_but_vulnerable_modules\n    end\n    subgraph Independence_of_Review\n        direction TB\n        follow_basic_quality_assurance_precept_of_independence_of_review---\n        avoid_self_validation---\n        should_conduct_contracted_3rd_party_independent_V&V---\n        or_conduct_blind_test_with_internal_staff\n    end\n    Validation_After_SW_Change---Independence_of_Review\nend\n    \n\n\n\n\n\n\n\n\n\n\nSW Lifecycle\n\n\n\n\nflowchart LR\nsubgraph SW_Lifecycle\n    direction TB\n    validation_must_be_conducted_within_the_established_environment_across_lifecycle---\n    lifecycle_contains_SW_engineering_tasks_and_documentation---\n    V&V_tasks_must_reflect_intended_use\nend\n\nsubgraph SW_Lifecycle_Activities\n    direction TB\n    subgraph should_establish_lifecycle_model\n        direction TB\n        subgraph SW_Lifecycle_Model_List_Defined_in_FDA\n            direction TB\n            waterfall---\n            spiral---\n            rapid_prototyping---\n            incremental_development---\n            etc\n        end     \n    end\n    subgraph should_cover_SW_birth_to_retirement\n        direction TB\n        subgraph Lifecycle_Activities\n            direction TB\n            Quality_Plan-->\n            System_Requirements_Definition-->\n            Detailed_Software_Requirements_Specification-->\n            Software_Design_Specification-->\n            Construction_or_Coding-->\n            Testing-->\n            Installation-->\n            Operation_and_Support-->\n            Maintenance-->\n            Retirement\n        end\n    end\n    should_establish_lifecycle_model-->should_cover_SW_birth_to_retirement\n    should_cover_SW_birth_to_retirement-->Lifecycle_Activities\nend\nsubgraph SW_Lifecycle_Tasks\n    direction TB\n    should_define_and_document_risk_related_tasks---\n    should_define_and_document_which_tasks_are_appropriate_in_vice_versa---\n    Quality_Planning---\n    Quality_Planning_Tasks---\n    Inclusion_Task_List_for_Plan---\n    Identification_Task_List_for_Plan---\n    Configuration_Management---\n    Control---\n    Management---\n    Procedures---\n    ensure_proper_communications_and_documentation---\n    Task_Requirements\nend\nSW_Lifecycle-->SW_Lifecycle_Activities-->SW_Lifecycle_Tasks"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-lifecycle-tasks",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-lifecycle-tasks",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "SW Lifecycle Tasks",
    "text": "SW Lifecycle Tasks\n\nOverview\n\n\n\n\n \nflowchart TB\n\nsubgraph SW_Lifecycle_Tasks\n    direction LR\n    subgraph Define_and_Document_List\n        direction TB\n        risk_related_tasks---\n        whether_or_not_tasks_are_appropriate\n    end\n    \n    subgraph Quality_Planning\n        direction TB\n        subgraph Quality_Planning_Tasks\n            direction TB\n        \n        end\n        subgraph Inclusion_List_for_Plan\n            direction TB\n            \n        end\n        subgraph Identification_List_for_Plan\n            direction TB\n            \n        end\n    Quality_Planning_Tasks-->Inclusion_List_for_Plan-->Identification_List_for_Plan\n    end\n    \n    subgraph Configuration_Management\n        direction TB\n        subgraph Control\n            direction TB\n            \n        end\n        subgraph Management\n            direction TB\n        end\n        subgraph Procedures\n            direction TB\n        end\n        ensure_proper_communications_and_documentation\n        Control-->Management-->Procedures-->ensure_proper_communications_and_documentation \n    end\n    subgraph Task_Requirements\n        direction TB\n        identification---\n        analysis---\n        predetermined_documentation_about_device_its_intended_use---\n        Requirements_Specification_List---\n        Verfification_List_by_Evaluation---\n        Requirements_Tasks    \n    end\nDefine_and_Document_List-->Quality_Planning-->Configuration_Management-->Task_Requirements\nend     \n\n\n\n\n\n\n\n\n\n\nQuality Planning\n\n\n\n\nflowchart TB\nsubgraph Quality_Planning\n    direction LR\n    subgraph Quality_Planning_Tasks\n        direction TB\n        Risk_Hazard_Management_Plan---\n        Configuration_Management_Plan---\n        Software_Quality_Assurance_Plan---\n        Software_Verification_and_Validation_Plan---\n        Verification_and_Validation_Tasks---\n        Acceptance_Criteria---\n        Schedule_and_Resource_Allocation_for_V&V_activities---\n        Reporting_Requirements---\n        Formal_Design_Review_Requirements---\n        Other_Technical_Review_Requirements---\n        Problem_Reporting_and_Resolution_Procedures---\n        Other_Support_Activities\n    end\n    subgraph Inclusion_List_for_Plan\n        direction TB\n        specific_tasks_for_each_life_cycle_activity---\n        Enumeration_of_important_quality_factors--- \n        like_reliability_maintainability_usability---\n        Methods_and_procedures_for_each_task---\n        Task_acceptance_criteria---\n        Criteria_for_defining_and_documenting_outputs_for_input_requirements---\n        Inputs_for_each_task---\n        Outputs_from_each_task---\n        Roles_resources_and_responsibilities_for_each_task---\n        Risks_and_assumptions---\n        Documentation_of_user_needs    \n    end\n    subgraph Identification_List_for_Plan\n        direction TB\n        personnel---\n        facility_and_equipment_resources_for_each_task---\n        role_that_risk_hazard_management        \n    end\nQuality_Planning_Tasks-->Inclusion_List_for_Plan-->Identification_List_for_Plan\nend\n\n\n\n\n\n\n\n\n\n\nConfiguration Management\n\n\n\n\nflowchart LR\nsubgraph Configuration_Management\n    direction LR\n    subgraph Control\n        direction TB\n        control_multiple_parallel_development_activities---\n        ensure_positive_and_correct_correspondence_of---\n        specifications_documents---\n        source_code---\n        object_code---\n        test_suites---\n        ensure_accurate_identification_of_approved_versions---\n        ensure_access_to_approved_versions---\n        create_procedures_for_reporting---\n        create_procedures_for_resolving_SW_anomalies                            \n    end\n    subgraph Management\n        direction TB\n        identify_reports---\n        specify_contents---\n        specify_format---\n        specify_responsible_organizational_elements_for_each_report\n    end\n    subgraph Procedures\n        direction TB\n        necessary_for_review_of_SW_development_results---\n        necessary_for_approval_of_SW_development_results\n    end\n    ensure_proper_communications_and_documentation\n    Control-->Management-->Procedures-->ensure_proper_communications_and_documentation \nend\n\n\n\n\n\n\n\n\n\n\nTask Requirements\n\n\n\n\n\nflowchart TB\n    subgraph Task_Requirements\n        direction LR\n        subgraph group\n            direction TB\n            identification---\n            analysis---\n            predetermined_documentation_about_device_its_intended_use\n        end\n        \n        subgraph Requirements_Specification_List\n            direction TB\n            All_software_system_inputs---\n            All_software_system_outputs---\n            All_functions_that_software_system_will_perform---\n            All_performance_requirements_that_software_will_meet---\n            requirement_example_data_throughput_reliability_timing---\n            definition_of_all_external_and_user_interfaces---\n            any_internal_software_to_system_interfaces---\n            How_users_will_interact_with_system---\n            What_constitutes_error---\n            how_errors_should_be_handled---\n            Required_response_times---\n            Intended_operating_environment_for_software---\n            All_acceptable_ranges_limits_defaults_specific_values---\n            All_safety_related_requirements_that_will_be_implemented_in_SW---\n            All_safety_related_specifications_that_will_be_implemented_in_SW---\n            All_safety_related_features_that_will_be_implemented_in_SW---\n            All_safety_related_functions_that_will_be_implemented_in_SW---\n            clearly_identify_potential_hazards---\n            risk_evaluation_for_accuracy---\n            risk_evaluation_for_completeness---\n            risk_evaluation_for_consistency---\n            risk_evaluation_for_testability---\n            risk_evaluation_for_correctness---\n            risk_evaluation_for_clarity\n        end\n        subgraph Verfification_List_by_Evaluation\n            direction TB\n            no_internal_inconsistencies_among_requirements---\n            All_of_performance_requirements_for_system---\n            Complete_correct_Fault_tolerance_safety_security_requirements---\n            Accurate_Complete_Allocation_of_software_functions---\n            Appropriate_Software_requirements_for_system_hazards---\n            mesurable_requirements---\n            objectively_verifiable_requirements---\n            traceable_requirements\n        end\n        subgraph Requirements_Tasks\n            direction TB\n            Preliminary_Risk_Analysis---\n            Traceability_Analysis---\n            ex_Software_Requirements_to_System_Requirements_vice_versa---\n            ex_Software_Requirements_to_Risk_Analysis---\n            Description_of_User_Characteristics---\n            Listing_of_Characteristics_and_Limitations_of_Memory---\n            Software_Requirements_Evaluation---\n            Software_User_Interface_Requirements_Analysis---\n            System_Test_Plan_Generation---\n            Acceptance_Test_Plan_Generation---\n            Ambiguity_Review_or_Analysis\n        end\n    group-->Requirements_Specification_List \n    Verfification_List_by_Evaluation-->Requirements_Tasks\n    end\n\n\n\n\n\n\n\n\n\n\nDesign Overview\n\n\n\n\nflowchart TB\n    subgraph Deign_Task\n        direction LR\n    subgraph Design_Consideration_List\n        direction TB\n        subgraph Description\n                    direction TB\n                end\n        subgraph Human_Factors_Engineering\n          direction TB\n    \n        end\n        subgraph Safety_Usability_Issues_Conisderation\n            direction TB\n\n            end\n        Description---Human_Factors_Engineering---Safety_Usability_Issues_Conisderation\n    end\n    subgraph Design_Specificiation\n        direction TB\n        subgraph Performing_List\n            direction TB\n        end\n        subgraph Design_Specification_Inclusion_List\n            direction TB\n        end\n        subgraph Evaludations_Criteria_of_Design\n            direction TB\n        end\n    Performing_List---Design_Specification_Inclusion_List---Evaludations_Criteria_of_Design \n    end\n    subgraph Design_Activity_and_Task_List\n        direction TB\n        subgraph Final_Design_activity\n            direction TB\n        end\n        subgraph Specific_Design_Tasks\n            direction TB\n        end\n        subgraph Coding_Activity\n            direction TB\n            subgraph traceability_analysis\n                direction TB\n            end\n            subgraph Coding_Tasks\n                direction TB\n            end\n        traceability_analysis-->Coding_Tasks\n        end\n        Final_Design_activity---Specific_Design_Tasks---Coding_Activity\n    end\n    Design_Consideration_List---Design_Specificiation---Design_Activity_and_Task_List\n\n    end\n\n\n\n\n\n\n\n\n\nDesign Consideration\n\n\n\n\nflowchart TB\nsubgraph Design_Consideration_List\n    direction LR\n        subgraph Requirement_Specification\n            direction TB\n            logical_representation---\n            physical_representation\n        end\n    subgraph Description\n            direction TB\n            what_to_do---\n            how_to_do                   \n        end\n    subgraph Human_Factors_Engineering\n      direction TB\n            entire_design_and_development_process---\n            device_design_requirements---\n            analyses---\n            tests\n    end\n    subgraph Safety_Usability_Issues_Conisderation\n        direction TB\n                flowcharts--- \n                state_diagrams--- \n                prototyping_tools---\n                test_plans\n        end\n        Requirement_Specification---Description---Human_Factors_Engineering---Safety_Usability_Issues_Conisderation\n    end\n\n\n\n\n\n\n\n\n\n\nDesign Specification\n\n\n\n\nflowchart TB\nsubgraph Design_Specificiation\n        direction LR\n        subgraph Conceptual_Specification\n            direction TB\n            requirements_specification---\n            predetermined_criteria---\n            Software_risk_analysis---\n            Development_procedures---\n            coding_guidelines\n        end\n        subgraph Performing_List\n            direction TB\n            task---\n            function_analyses---\n            risk_analyses---\n            prototype_tests_and_reviews---\n            full_usability_tests\n        end\n        subgraph Design_Specification_Inclusion_List\n            direction TB\n            SW_requirements_specification---\n            predetermined_criteria_for_SW_acceptance---\n            SW_risk_analysis---\n            Development_procedure_list---\n            coding_guidance---\n            Systems_documentation---\n            Hardware_to_be_used---\n            Parameters_to_be_measured---\n            Logical_structure---\n            Control_logic---\n            logical_processing_steps_aka_algorithms---\n            Data_structures_diagram---\n            data_flow_diagrams---\n            Definitions_of_variables---\n            description_of_where_they_are_used---\n            Error_alarm_and_warning_messages---\n            Supporting_software---\n            internal_modules_Communication_links---\n            supporting_sw_links---\n            link_with_hardware---\n            link_with_user---\n            physical_Security_measures---\n            logical_security_measures\n        end\n        subgraph Evaludations_Criteria_of_Design\n            direction TB\n            complete--- \n            correct---\n            consistent--- \n            unambiguous--- \n            feasible---\n            maintainable---\n            analyses_of_control_flow---\n            data_flow--- \n            complexity--- \n            timing--- \n            sizing--- \n            memory_allocation---\n            module_architecture---\n            traceability_analysis_of_modules--- \n            criticality_analysis\n        end\n    Conceptual_Specification---Performing_List---Design_Specification_Inclusion_List---Evaludations_Criteria_of_Design  \n    end\n\n\n\n\n\n\n\n\n\n\nDesign Activity and Task\n\n\n\n\n\nflowchart TB\nsubgraph Design_Activity_and_Task_List\n        direction LR\n        subgraph Final_Design_activity\n            direction TB\n            Formal_Design_Review_Before_Design_Implementation---\n            correct_consistent_complete_accurate_testable\n        end\n        subgraph Specific_Design_Tasks\n            direction TB\n            Updated_Software_Risk_Analysis---\n            Traceability_Analysis---\n            Software_Design_Evaluation---\n            Design_Communication_Link_Analysis---\n            Module_Test_Plan_Generation---\n            Integration_Test_Plan_Generation---\n            module_Test_Design_Generation---\n            integration_Test_Design_Generation---\n            system_Test_Design_Generation---\n            acceptance_Test_Design_Generation   \n        end\n        subgraph Coding_Activity\n            direction TB\n            subgraph traceability_analysis\n                direction TB\n                each_element_implementation---\n                each_module_implementation_to_element_and_risk_analysis---\n                each_functions_implemented_to_element_and_risk_analysis---\n                Tests_for_modules_to_element_and_risk_analysis--- \n                Tests_for_functions_to_element_and_risk_analysis---\n                Tests_for_modules_to_source_code---\n                Tests_for_functions_to_source_code\n            end\n            subgraph Coding_Tasks\n                direction TB\n                Traceability_Analyses---\n                Source_Code_to_Design_Specification_and_vice_versa---\n                Test_Cases_to_Source_Code_and_to_Design_Specification---\n                Source_Code_and_Source_Code_Documentation_Evaluation---\n                Source_Code_Interface_Analysis---\n                Test_Procedure_and_Test_Case_Generation \n            end\n        traceability_analysis-->Coding_Tasks\n        end\n        Final_Design_activity---Specific_Design_Tasks---Coding_Activity\n    end"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing_task",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing_task",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Testing_Task",
    "text": "Testing_Task\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction TB\n            subgraph Test_Plans\n                direction TB\n            end\n            subgraph Conditions\n                direction TB\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n        subgraph Code_Based_Testing\n            direction TB\n            subgraph white_box_testing\n                direction TB\n            end\n            subgraph Evaluation_of_level_of_white_box_testing\n                direction TB\n            end\n            subgraph Coverage_Metrics_of_White_Box_Testing\n                direction TB\n            end\n        white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n        end\n        subgraph Alternatives_to_White_Box_Testing\n            direction TB\n            subgraph Types_of_Functional_Software_Testing_Increasing_Cost\n                direction TB\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n            end\n            subgraph Change_in_SW\n                direction TB    \n            end\n        Types_of_Functional_Software_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW\n        end\n        \n\n        subgraph Development_Testing\n            direction TB\n            subgraph unit_level_testing\n                direction TB    \n            end\n            subgraph integration_level_testing\n                direction TB\n            end\n            subgraph system_level_testing\n                direction TB\n            end\n            subgraph Error_Detected\n                direction TB        \n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\n\n        subgraph Testing_Tasks\n            direction TB\n        end\n        subgraph User_Site_Testing\n            direction TB\n            subgraph Quality_System_Rregulation\n                direction TB\n            end\n            subgraph Understand_Terminology\n                direction TB\n            end\n            subgraph Testing\n                direction TB\n            end\n            Quality_System_Rregulation---Understand_Terminology---Testing\n        end\nConsideration_Before_Testing_Tasks---Code_Based_Testing---Alternatives_to_White_Box_Testing\nDevelopment_Testing---Testing_Tasks---User_Site_Testing\n    end\n\n\n\n\n\n\n\n\n\n\nConsideration_Before_Testing_Tasks\n\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction LR\n            subgraph Test_Plans\n                direction TB\n                should_identify_control_measures_like_traceability_analysis---\n                ensure_that_intended_coverage_is_achieved---\n                ensure_that_proper_documentation_is_prepared---\n                conduct_tests_not_by_SW_developers_but_in_other_sites\n            end\n            subgraph Conditions\n                direction TB\n                use_defined_inputs---\n                documented_outcomes---\n                gonnabe_time_consuming_activity---\n                gonnabe_difficult_activity---\n                gonnabe_imperfect_activity---\n                testing_all_program_functionality---\n                does_not_mean_100_prcnt_correction_perfection---\n                make_detailed_objective_evaluation---\n                requires_sophisticated_definition_specificiation---\n                all_test_procedures_data_results_are_documented---\n                all_test_procedures_data_results_are_suitable_for_review---\n                all_test_procedures_data_results_are_suitable_for_objective_decision_making---\n                all_test_procedures_data_results_are_suitable_for_subsequent_regression_testing\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n                make_test_plans---\n                make_test_cases---\n                plan_schedules---\n                plan_environments---\n                plan_resources_of_personnel_tools---\n                plan_methodologies---\n                plan_inputs_procedures_outputs_expected_results---\n                plan_documentation---\n                plan_reporting_criteria\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n                expected_test_outcome_is_predefined---\n                good_test_case_has_high_probability_of_exposing_errors---\n                successful_test_is_one_that_finds_errors---\n                There_is_independence_from_coding---\n                Both_application_for_user_and_SW_for_programming_expertise_are_employed---\n                Testers_use_different_tools_from_coders---\n                Examining_only_the_usual_case_is_insufficient---\n                Test_documentation_permits_its_reuse---\n                Test_documentation_permits_independent_confirmation_---\n                of_pass/fail_test_outcome_during_subsequent_review\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n\nend\n\n\n\n\n\n\n\n\n\n\nCode_Based_Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n            subgraph Code_Based_Testing\n                direction LR\n                subgraph white_box_testing\n                    direction TB\n                    identify_dead_code_never_executed---\n                    conduct_unit_test---\n                    conduct_other_level_tests\n                end\n                subgraph Evaluation_of_level_of_white_box_testing\n                    direction TB\n                    use_coverage_metrics---\n                    metrics_of_completeness_of_test_selection_criteria---\n                    coverage_should_be_commensurate_with_level_of_SW_risk---\n                    coverage_means_100_prcnt_coverage\n                end\n                subgraph Coverage_Metrics_of_White_Box_Testing\n                    direction TB\n                    Statement_Coverage---\n                    Decision_or_Branch_Coverage---\n                    Condition_Coverage---\n                    Multi_Condition_Coverage\n                    Loop_Coverage---\n                    Path_Coverage---\n                    Data_Flow_Coverage\n                end\n            white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n            end\nend"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing_task-1",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing_task-1",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Testing_Task",
    "text": "Testing_Task\n\nSolution_to_White_Box_Testing\n\n\n\n\n\n \nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Alternatives_to_White_Box_Testing\n            direction LR\n            subgraph Types_of_Testing_Increasing_Cost\n                direction TB\n                    Normal_Case---\n                    Output_Forcing---\n                    Robustness---\n                    Combinations_of_Inputs\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n                difficulty_in_linking_---\n                tests_completion_criteria_to_SW_reliability\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n                statistical_testing---\n                provide_further_assurance_of_reliability---\n                generate_randomly_test_data_from_defined_distributions---\n                distribution_defined_by_expected_use---\n                distribution_defined_by_hazardous_use---\n                distribution_defined_by_malicious_use---\n                large_test_data_cover_particular_areas_or_concerns---\n                statistical_testing_provides_high_structural_coverage---\n                statistical_testing_requires_stable_system---\n                structural_and_functional_testing_are_prerequisites_for_statistical_testing\n            end\n            subgraph Change_in_SW\n                direction TB\n                conduct_regression_analysis_and_testing---\n                should_demonstrate_correct_implementation---\n                should_demonstrate_no_adverse_impact_on_other_modules   \n            end\n            subgraph Testing_Tasks\n                direction TB\n                Test_Planning---\n                Structural_Test_Case_Identification---\n                Functional_Test_Case_Identification---\n                Traceability_Analysis_Testing---\n                Unit_Tests_to_Detailed_Design---\n                Integration_Tests_to_High_Level_Design---\n                System_Tests_to_Software_Requirements---\n                Unit_Test_Execution---\n                Integration_Test_Execution---\n                Functional_Test_Execution---\n                System_Test_Execution---\n                Acceptance_Test_Execution---\n                Test_Results_Evaluation---\n                Error_Evaluation_Resolution---\n                Final_Test_Report\n            end\n        Types_of_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW---Testing_Tasks\n        end\nend\n\n\n\n\n\n\n\n\n\n\nDevelopment_Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Development_Testing\n            direction LR\n            subgraph unit_level_testing\n                direction TB    \n                focus_on_early_examination_of_sub_program_functionality---\n                ensure_functionality_invisible_at_system_level_examined---\n                ensure_quality_software_units_furnished_for_integration\n            end\n            subgraph integration_level_testing\n                direction TB\n                focuses_on_transfer_of_data---\n                focuses_on_control_across_program's_internal_and_external_interfaces\n            end\n            subgraph system_level_testing\n                direction TB\n                demonstrate_all_specified_functionality_exists---\n                demonstrate_SW_is_trustworthy---\n                verifies_as_built_program's_functionality_and_performance_on_requirements---\n                addresses_functional_concerns_and_intended_uses---\n                like_Performance_issues---\n                like_Responses_to_stress_conditions---\n                like_Operation_of_internal_and_external_security_features---\n                like_Effectiveness_of_recovery_procedures---\n                like_disaster_recovery---\n                like_Usability---\n                like_Compatibility_with_other_SW---\n                like_Behavior_in_each_of_the_defined_hardware_configurations---\n                like_Accuracy_of_documentation\n            end\n            subgraph Error_Detected\n                direction TB        \n                should_be_logged---\n                should_be_classified---\n                should_be_reviewed---\n                should_be_resolved_before_SW_release\n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\nend"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#user_site_testing",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#user_site_testing",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "User_Site_Testing",
    "text": "User_Site_Testing\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph User_Site_Testing\n            direction LR\n            subgraph Quality_System_Rregulation\n                direction TB\n                installation---\n                inspection_procedures---\n                testing_appropriateness---\n                documentation_of_inspection---\n                testing_to_demonstrate_proper_installation\n            end\n            subgraph Understand_Terminology\n                direction TB\n                beta_test---\n                site_validation---\n                user_acceptance_test---\n                installation_verification---\n                installation_testing\n            end\n            subgraph Testing\n                direction TB\n                subgraph Requirements\n                    direction TB\n                    either_actual_or_simulated_use---\n                    verification_of_intended_functionality---\n                    constant_contact_FDA_center\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n    \n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_System_Ability\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_User_Ability\n                        direction TB\n        \n                    end \n                    subgraph Evaluation_of_Operator_Ability\n                        direction TB\n        \n                    end\n                constant_contact_FDA_center-->Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n                end \n                        \n            \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end\n        Quality_System_Rregulation-->    Understand_Terminology-->Testing-->User_Site_Testing_Task\n        end\nend\n\n\n\n\n\n\n\n\n\n\nTesting\n\n\n\n\nflowchart TB\n            subgraph Testing\n                direction LR\n                subgraph Requirements\n                    direction LR\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n                        either_actual_or_simulated_use---\n                        verification_of_intended_functionality---\n                        constant_contact_FDA_center---\n                        formal_summary_of_testing---\n                        record_of_formal_acceptance\n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n                        testing_plan_of_full_range_of_operating_conditions---\n                        testing_plan_to_detect_any_latent_faults---\n                        all_testing_procedures---\n                        test_input_data---\n                        test_results---\n                        hardware_installation_and_configuration---\n                        software_installation_and_configuration---\n                        exercising_measure_of_all_system_components---\n                        versions_of_all_system_components           \n                    end\n                    subgraph Evaluation\n                        direction TB\n                      subgraph Evaluation_of_System_Ability\n                            direction TB\n                            high_volume_of_data---\n                            heavy_loads_or_stresses---\n                            security\n                            subgraph fault_testing\n                                direction TB\n                                avoidance---\n                                detection---\n                                tolerance---\n                                recovery\n                            end\n                        security---fault_testing---\n                        error_message---\n                        implementation_of_safety_requirements\n                        end\n                      subgraph Evaluation_of_User_Ability\n                            direction TB\n                            ability_to_understand_system---\n                            ability_to_interface_with_system\n                        end \n                        subgraph Evaluation_of_Operator_Ability\n                            direction TB\n                            ability_to_perform_intended_functions---\n                            ability_to_respond_in_alarms---\n                            ability_to_respond_in_warnings---\n                            ability_to_respond_in_error_messages\n                        end\n\n                    end\n            Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n            end     \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#maintenance-and-software-changes",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#maintenance-and-software-changes",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Maintenance and Software Changes",
    "text": "Maintenance and Software Changes\n\n\n\n\nflowchart LR\n    subgraph Hardware_VS_Software\n        direction LR\n        subgraph HW_maintenance_Inclusion\n            direction TB\n            preventive_hardware_maintenance_actions--- \n            component_replacement---\n            corrective_changes\n        end\n        subgraph SW_maintenance_Inclusion\n            direction TB\n            corrective---\n            perfective---\n            adaptive_maintenance---\n            not_include_preventive_maintenance_actions---\n            not_include_software_component_replacement\n        end\n    end\n    subgraph Maintenance_Type\n        direction TB\n        Corrective_maintenance---\n        Perfective_maintenance---\n        Adaptive_maintenance---\n        Sufficient_regression_analysis---\n        Sufficient_regression_testing\n    end\n    subgraph Factors_of_Validation_for_SW_change\n        direction TB\n        type_of_change---\n        development_products_affected---\n        impact_of_those_products_on_operation\n    end\n    subgraph Factors_of_Limitting_Validation_Effort\n        direction TB\n        documentation_of_design_structure---\n        documentation_of_interrelationships_of_modules---\n        documentation_of_interrelationships_of_interfaces---\n        test_documentation---\n    test_cases---\n        results_of_previous_verification_and_validation_testing\n    end\n    subgraph Maintenance_tasks\n        direction TB\n        Software_Validation_Plan_Revision---\n        Anomaly_Evaluation---\n        Problem_Identification_and_Resolution_Tracking---\n        Proposed_Change_Assessment---\n        Task_Iteration---\n        Documentation_Updating\n    end\nHardware_VS_Software-->Maintenance_Type-->Factors_of_Validation_for_SW_change-->\nFactors_of_Limitting_Validation_Effort-->Maintenance_tasks"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-of-quality-system-software",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-of-quality-system-software",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation of Quality System Software",
    "text": "Validation of Quality System Software\n\nOverview\n\n\n\n\nflowchart LR\n    subgraph Use_of_Computers_and_automated_equipment\n        direction TB\n        medical_device_design---\n        laboratory_testing_and_analysis---\n        product_inspection_and_acceptance---\n        production_and_process_control---\n        environmental_controls---\n        packaging---\n        labeling---\n        traceability---\n        document_control---\n        complaint_management---\n        programmable_logic_controllers---\n        digital_function_controllers---\n        statistical_process_control---\n        supervisory_control_and_data_acquisition---\n        robotics---\n        human_machine_interfaces---\n        input_output_devices---\n        computer_operating_systems\n    end\n    subgraph Factors_in_Validation\n        direction TB\n        subgraph Validation_Factors_of_Quality_System\n            direction TB\n            subgraph 21_CFR_Part_11_Requirements\n                direction TB\n            end\n        end\n        subgraph Validation_Supporting_Factors\n            direction TB\n        end\n        subgraph Factors_of_Validation_Evidence_Level\n            direction TB\n        end\n        subgraph Factors_of_Easing_Validation_Effort\n            direction TB\n            planning---\n            documented_requirments---\n            risk_analysis   \n        end\n    Validation_Factors_of_Quality_System-->Validation_Supporting_Factors-->Factors_of_Validation_Evidence_Level-->\nFactors_of_Easing_Validation_Effort\n    end\n    subgraph Documented_User_Requirements\n        direction TB\n        intended_use_of_software_or_automated_equipment---\n      level_of_dependency_on_software_or_equipment\n    end\n    subgraph List_That_Must_Be_Defined_by_User\n        direction TB\n        \n    end\n    subgraph Documentation_List\n        direction TB\n        documented_protocol---\n        documented_validation_results\n        subgraph Documented_Test_Cases\n            direction TB\n        \n        end\n        documented_validation_results---Documented_Test_Cases\n    end\n\n    subgraph Manufaturer's_Responsbility\n        direction TB\n        \n    end\nUse_of_Computers_and_automated_equipment---Factors_in_Validation---Documented_User_Requirements---\nList_That_Must_Be_Defined_by_User---Documentation_List---Manufaturer's_Responsbility\n\n\n\n\n\n\n\n\n\n\nFactors in Validation\n\n\n\n\nflowchart LR\n    subgraph Factors_in_Validation\n        direction LR\n        subgraph Validation_Factors_of_Quality_System\n            direction TB\n            subgraph 21_CFR_Part_11_Requirements\n                direction TB\n                electronic_records_regulation---\n                electronic_signatures_regulation---\n                regulations_establishment---\n                security---\n                data_integrity---\n                validation_requirements \n            end\n        end\n        subgraph Validation_Supporting_Factors\n            direction TB\n            verifications_of_outputs_from_each_stage--- \n            verifications_of_outputs_throught_SW_life_cycle---\n            checking_for_proper_operation_in_intended_use_environment\n        end\n        subgraph Factors_of_Validation_Evidence_Level\n            direction TB\n            risk_posed_by_automated_operation---\n            complexity_of_process_software---\n            degree_of_dependence_on_automated_process\n        end\n        subgraph Factors_of_Easing_Validation_Effort\n            direction TB\n            planning---\n            documented_requirments---\n            risk_analysis   \n        end\n    Validation_Factors_of_Quality_System-->Validation_Supporting_Factors-->Factors_of_Validation_Evidence_Level-->\nFactors_of_Easing_Validation_Effort\n    end"
  },
  {
    "objectID": "docs/projects/high_dimension.html",
    "href": "docs/projects/high_dimension.html",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "",
    "text": "Alzheimer Disease (AD) is a most common form of dementia that affects millions of Americans. AD affects memory, thinking and behavior, but its progression is slow, spanning nearly two decades before the symptoms appear. Thus, it is imperative to understand the physiology at the pre-clinical stage. It is estimated that genetic factors contribute nearly 50% to AD. To better understand how genes contribute to the risk of AD by altering cellular milieu, we have examined the metabolome of high risk individuals, the APOE4 carriers. The metabolome represents the products that were generated from the genome and proteome. These biochemical products represent influences of both genetic and environmental factors. In this article, I prepared simulated data to reproduce and demonstrate a rough analysis pipeline due to security concerns.\n\n\n\nThe aim of this simulation study is to identify a set of metabolites that will enable to differentiate bio-markers that are associated with AD vs. non-AD."
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#notice",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#notice",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Notice",
    "text": "Notice\n\nI am so sorry not for providing a compfortab visualization. Although I have tried to use revealjs provided in the guide section in the Quarto website, I am still clumsy at handling it. I will update this article as I get proficient at revealjs using Quarto. (it seems that Quarto system has some issues on mermaid diagrams.)\nThe FDA validation guidance document is a bit difficult to understand because its explanations provide abstract, general, and present broad cocepts. For this reason, I compiled and made a summary of the document with many diagrams. However, some diagrams are too small to see. Please, scroll up your mouse wheel with the ‘Ctrl’ key on your keyboard pressed to zoom in on the small text in the diagrams.\n(Writing in Progress) It is hard to say that this version of summary is suitable for representing and covering the original document. Some of the content of this document has been excluded for personal use (less than 10% of it have been excluded).\n\n\nLast Update\n\n2022-12-28, Summary of Document"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#introduction",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#introduction",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Introduction",
    "text": "Introduction\n\nDefinition of Software Validation\nSoftware Validation is a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997.\n(See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\n\n\nSome Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology: requirements, specification, verification, and validation.\n\n\n\nRationale\nFDA has reported the following analysis:\n\n242 of 3140 (7.7%) medical device recalls between 1992 and 1998 are attributable to software failures.\n192 of the 242 (79.3%) failures were caused by software defects that were introduced when changes were made to the software after its initial production and distribution.\nThe software validation check is a principal means of avoiding such defects and resultant recalls.\n\n\n\nObjective of SW validation is to ensure\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\nWhat to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software.\n\n\nMain Institutions\n\nCenter for Devices and Radiological Health (CDRH)\nU.S. Department Of Health and Human Services\nFood and Drug Administration\nCenter for Biologics Evaluation and Research"
  },
  {
    "objectID": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing-task",
    "href": "docs/blog/posts/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing-task",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Testing Task",
    "text": "Testing Task\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction TB\n            subgraph Test_Plans\n                direction TB\n            end\n            subgraph Conditions\n                direction TB\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n        subgraph Code_Based_Testing\n            direction TB\n            subgraph white_box_testing\n                direction TB\n            end\n            subgraph Evaluation_of_level_of_white_box_testing\n                direction TB\n            end\n            subgraph Coverage_Metrics_of_White_Box_Testing\n                direction TB\n            end\n        white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n        end\n        subgraph Alternatives_to_White_Box_Testing\n            direction TB\n            subgraph Types_of_Functional_Software_Testing_Increasing_Cost\n                direction TB\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n            end\n            subgraph Change_in_SW\n                direction TB    \n            end\n        Types_of_Functional_Software_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW\n        end\n        \n\n        subgraph Development_Testing\n            direction TB\n            subgraph unit_level_testing\n                direction TB    \n            end\n            subgraph integration_level_testing\n                direction TB\n            end\n            subgraph system_level_testing\n                direction TB\n            end\n            subgraph Error_Detected\n                direction TB        \n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\n\n        subgraph Testing_Tasks\n            direction TB\n        end\n        subgraph User_Site_Testing\n            direction TB\n            subgraph Quality_System_Rregulation\n                direction TB\n            end\n            subgraph Understand_Terminology\n                direction TB\n            end\n            subgraph Testing\n                direction TB\n            end\n            Quality_System_Rregulation---Understand_Terminology---Testing\n        end\nConsideration_Before_Testing_Tasks---Code_Based_Testing---Alternatives_to_White_Box_Testing\nDevelopment_Testing---Testing_Tasks---User_Site_Testing\n    end\n\n\n\n\n\n\n\n\n\n\nConsideration Before Testing Tasks\n\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction LR\n            subgraph Test_Plans\n                direction TB\n                should_identify_control_measures_like_traceability_analysis---\n                ensure_that_intended_coverage_is_achieved---\n                ensure_that_proper_documentation_is_prepared---\n                conduct_tests_not_by_SW_developers_but_in_other_sites\n            end\n            subgraph Conditions\n                direction TB\n                use_defined_inputs---\n                documented_outcomes---\n                gonnabe_time_consuming_activity---\n                gonnabe_difficult_activity---\n                gonnabe_imperfect_activity---\n                testing_all_program_functionality---\n                does_not_mean_100_prcnt_correction_perfection---\n                make_detailed_objective_evaluation---\n                requires_sophisticated_definition_specificiation---\n                all_test_procedures_data_results_are_documented---\n                all_test_procedures_data_results_are_suitable_for_review---\n                all_test_procedures_data_results_are_suitable_for_objective_decision_making---\n                all_test_procedures_data_results_are_suitable_for_subsequent_regression_testing\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n                make_test_plans---\n                make_test_cases---\n                plan_schedules---\n                plan_environments---\n                plan_resources_of_personnel_tools---\n                plan_methodologies---\n                plan_inputs_procedures_outputs_expected_results---\n                plan_documentation---\n                plan_reporting_criteria\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n                expected_test_outcome_is_predefined---\n                good_test_case_has_high_probability_of_exposing_errors---\n                successful_test_is_one_that_finds_errors---\n                There_is_independence_from_coding---\n                Both_application_for_user_and_SW_for_programming_expertise_are_employed---\n                Testers_use_different_tools_from_coders---\n                Examining_only_the_usual_case_is_insufficient---\n                Test_documentation_permits_its_reuse---\n                Test_documentation_permits_independent_confirmation_---\n                of_pass/fail_test_outcome_during_subsequent_review\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n\nend\n\n\n\n\n\n\n\n\n\n\nCode Based Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n            subgraph Code_Based_Testing\n                direction LR\n                subgraph white_box_testing\n                    direction TB\n                    identify_dead_code_never_executed---\n                    conduct_unit_test---\n                    conduct_other_level_tests\n                end\n                subgraph Evaluation_of_level_of_white_box_testing\n                    direction TB\n                    use_coverage_metrics---\n                    metrics_of_completeness_of_test_selection_criteria---\n                    coverage_should_be_commensurate_with_level_of_SW_risk---\n                    coverage_means_100_prcnt_coverage\n                end\n                subgraph Coverage_Metrics_of_White_Box_Testing\n                    direction TB\n                    Statement_Coverage---\n                    Decision_or_Branch_Coverage---\n                    Condition_Coverage---\n                    Multi_Condition_Coverage\n                    Loop_Coverage---\n                    Path_Coverage---\n                    Data_Flow_Coverage\n                end\n            white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n            end\nend\n\n\n\n\n\n\n\n\n\n\nSolution to White Box Testing\n\n\n\n\n\n \nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Alternatives_to_White_Box_Testing\n            direction LR\n            subgraph Types_of_Testing_Increasing_Cost\n                direction TB\n                    Normal_Case---\n                    Output_Forcing---\n                    Robustness---\n                    Combinations_of_Inputs\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n                difficulty_in_linking_---\n                tests_completion_criteria_to_SW_reliability\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n                statistical_testing---\n                provide_further_assurance_of_reliability---\n                generate_randomly_test_data_from_defined_distributions---\n                distribution_defined_by_expected_use---\n                distribution_defined_by_hazardous_use---\n                distribution_defined_by_malicious_use---\n                large_test_data_cover_particular_areas_or_concerns---\n                statistical_testing_provides_high_structural_coverage---\n                statistical_testing_requires_stable_system---\n                structural_and_functional_testing_are_prerequisites_for_statistical_testing\n            end\n            subgraph Change_in_SW\n                direction TB\n                conduct_regression_analysis_and_testing---\n                should_demonstrate_correct_implementation---\n                should_demonstrate_no_adverse_impact_on_other_modules   \n            end\n            subgraph Testing_Tasks\n                direction TB\n                Test_Planning---\n                Structural_Test_Case_Identification---\n                Functional_Test_Case_Identification---\n                Traceability_Analysis_Testing---\n                Unit_Tests_to_Detailed_Design---\n                Integration_Tests_to_High_Level_Design---\n                System_Tests_to_Software_Requirements---\n                Unit_Test_Execution---\n                Integration_Test_Execution---\n                Functional_Test_Execution---\n                System_Test_Execution---\n                Acceptance_Test_Execution---\n                Test_Results_Evaluation---\n                Error_Evaluation_Resolution---\n                Final_Test_Report\n            end\n        Types_of_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW---Testing_Tasks\n        end\nend\n\n\n\n\n\n\n\n\n\n\nDevelopment Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Development_Testing\n            direction LR\n            subgraph unit_level_testing\n                direction TB    \n                focus_on_early_examination_of_sub_program_functionality---\n                ensure_functionality_invisible_at_system_level_examined---\n                ensure_quality_software_units_furnished_for_integration\n            end\n            subgraph integration_level_testing\n                direction TB\n                focuses_on_transfer_of_data---\n                focuses_on_control_across_program's_internal_and_external_interfaces\n            end\n            subgraph system_level_testing\n                direction TB\n                demonstrate_all_specified_functionality_exists---\n                demonstrate_SW_is_trustworthy---\n                verifies_as_built_program's_functionality_and_performance_on_requirements---\n                addresses_functional_concerns_and_intended_uses---\n                like_Performance_issues---\n                like_Responses_to_stress_conditions---\n                like_Operation_of_internal_and_external_security_features---\n                like_Effectiveness_of_recovery_procedures---\n                like_disaster_recovery---\n                like_Usability---\n                like_Compatibility_with_other_SW---\n                like_Behavior_in_each_of_the_defined_hardware_configurations---\n                like_Accuracy_of_documentation\n            end\n            subgraph Error_Detected\n                direction TB        \n                should_be_logged---\n                should_be_classified---\n                should_be_reviewed---\n                should_be_resolved_before_SW_release\n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\nend\n\n\n\n\n\n\n\n\n\n\nUser Site Testing\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph User_Site_Testing\n            direction LR\n            subgraph Quality_System_Rregulation\n                direction TB\n                installation---\n                inspection_procedures---\n                testing_appropriateness---\n                documentation_of_inspection---\n                testing_to_demonstrate_proper_installation\n            end\n            subgraph Understand_Terminology\n                direction TB\n                beta_test---\n                site_validation---\n                user_acceptance_test---\n                installation_verification---\n                installation_testing\n            end\n            subgraph Testing\n                direction TB\n                subgraph Requirements\n                    direction TB\n                    either_actual_or_simulated_use---\n                    verification_of_intended_functionality---\n                    constant_contact_FDA_center\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n    \n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_System_Ability\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_User_Ability\n                        direction TB\n        \n                    end \n                    subgraph Evaluation_of_Operator_Ability\n                        direction TB\n        \n                    end\n                constant_contact_FDA_center-->Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n                end \n                        \n            \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end\n        Quality_System_Rregulation-->    Understand_Terminology-->Testing-->User_Site_Testing_Task\n        end\nend\n\n\n\n\n\n\n\n\n\n\nTesting\n\n\n\n\nflowchart TB\n            subgraph Testing\n                direction LR\n                subgraph Requirements\n                    direction LR\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n                        either_actual_or_simulated_use---\n                        verification_of_intended_functionality---\n                        constant_contact_FDA_center---\n                        formal_summary_of_testing---\n                        record_of_formal_acceptance\n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n                        testing_plan_of_full_range_of_operating_conditions---\n                        testing_plan_to_detect_any_latent_faults---\n                        all_testing_procedures---\n                        test_input_data---\n                        test_results---\n                        hardware_installation_and_configuration---\n                        software_installation_and_configuration---\n                        exercising_measure_of_all_system_components---\n                        versions_of_all_system_components           \n                    end\n                    subgraph Evaluation\n                        direction TB\n                      subgraph Evaluation_of_System_Ability\n                            direction TB\n                            high_volume_of_data---\n                            heavy_loads_or_stresses---\n                            security\n                            subgraph fault_testing\n                                direction TB\n                                avoidance---\n                                detection---\n                                tolerance---\n                                recovery\n                            end\n                        security---fault_testing---\n                        error_message---\n                        implementation_of_safety_requirements\n                        end\n                      subgraph Evaluation_of_User_Ability\n                            direction TB\n                            ability_to_understand_system---\n                            ability_to_interface_with_system\n                        end \n                        subgraph Evaluation_of_Operator_Ability\n                            direction TB\n                            ability_to_perform_intended_functions---\n                            ability_to_respond_in_alarms---\n                            ability_to_respond_in_warnings---\n                            ability_to_respond_in_error_messages\n                        end\n\n                    end\n            Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n            end     \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end"
  },
  {
    "objectID": "docs/blog/posts/2023-01-02 statistics/index.html",
    "href": "docs/blog/posts/2023-01-02 statistics/index.html",
    "title": "Statistics Blog Guide Map",
    "section": "",
    "text": "(Draft)"
  },
  {
    "objectID": "docs/blog/posts/2023-01-02 statistics/index.html#basic-statistics",
    "href": "docs/blog/posts/2023-01-02 statistics/index.html#basic-statistics",
    "title": "Statistics Blog Guide Map",
    "section": "Basic Statistics",
    "text": "Basic Statistics\n\n2022-12-28, p-values"
  },
  {
    "objectID": "docs/blog/posts/2023-01-02_statistics/index.html",
    "href": "docs/blog/posts/2023-01-02_statistics/index.html",
    "title": "Statistics Blog Guide Map",
    "section": "",
    "text": "(Draft)"
  },
  {
    "objectID": "docs/blog/posts/2023-01-02_statistics/index.html#basic-statistics",
    "href": "docs/blog/posts/2023-01-02_statistics/index.html#basic-statistics",
    "title": "Statistics Blog Guide Map",
    "section": "Basic Statistics",
    "text": "Basic Statistics\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n1111-11-11, ANCOVA\n1111-11-11, repeated measures ANOVA\n1111-11-11, MANOVA\n1111-11-11, MANCOVA"
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html",
    "href": "docs/projects/high_dimension/high_dimension.html",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "",
    "text": "Alzheimer Disease (AD) is a most common form of dementia that affects millions of Americans. AD affects memory, thinking and behavior, but its progression is slow, spanning nearly two decades before the symptoms appear. Thus, it is imperative to understand the physiology at the pre-clinical stage. It is estimated that genetic factors contribute nearly 50% to AD. To better understand how genes contribute to the risk of AD by altering cellular milieu, we have examined the metabolome of high risk individuals, the APOE4 carriers. The metabolome represents the products that were generated from the genome and proteome. These biochemical products represent influences of both genetic and environmental factors. In this article, I prepared simulated data to reproduce and demonstrate a rough analysis pipeline due to security concerns.\n\n\n\nThe aim of this simulation study is to identify a set of metabolites that will enable to differentiate bio-markers that are associated with AD vs. non-AD."
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html#data-preparation",
    "href": "docs/projects/high_dimension/high_dimension.html#data-preparation",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nPackage Loading and Option Settings\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(glmnet)\nlibrary(MASS)\n#library(mixOmics)\nset.seed(20221213) \nknitr::opts_chunk$set(message=FALSE,warning=FALSE)\n\n\n\n\nData Simulation\n\n\n\n\n\nLoad Data\n\n\nShow the code\n#all_data=read_csv(\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rda\",\n#                  progress = show_progress(),\n#                  show_col_types = FALSE)%>%\n\n all_data=read_rds(\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rds\")%>%\n     dplyr::select(-1,-probabilities)\n all_data=all_data%>%\n     mutate(outcome=factor(outcome,levels=c(0,1)),\n            sex=factor(sex,levels=c(0,1)),\n            country=factor(country,levels=c(0,1)),\n            treatment=factor(treatment,levels=c(0,1)),\n            genotype=factor(genotype,levels=c(3,0,1,2,4,5))\n            )\n \n dim(all_data)\n\n\n[1]  1000 10006"
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html#data-description",
    "href": "docs/projects/high_dimension/high_dimension.html#data-description",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Data Description",
    "text": "Data Description\nThis data include\nMin.   :10.40  , 1st Qu.:15.43  , Median :19.20  , Mean   :20.09  , 3rd Qu.:22.80  , Max.   :33.90  , Min.   :4.000  , 1st Qu.:4.000  , Median :6.000  , Mean   :6.188  , 3rd Qu.:8.000  , Max.   :8.000  , Min.   : 71.1  , 1st Qu.:120.8  , Median :196.3  , Mean   :230.7  , 3rd Qu.:326.0  , Max.   :472.0  , Min.   : 52.0  , 1st Qu.: 96.5  , Median :123.0  , Mean   :146.7  , 3rd Qu.:180.0  , Max.   :335.0  , Min.   :2.760  , 1st Qu.:3.080  , Median :3.695  , Mean   :3.597  , 3rd Qu.:3.920  , Max.   :4.930  , Min.   :1.513  , 1st Qu.:2.581  , Median :3.325  , Mean   :3.217  , 3rd Qu.:3.610  , Max.   :5.424  , Min.   :14.50  , 1st Qu.:16.89  , Median :17.71  , Mean   :17.85  , 3rd Qu.:18.90  , Max.   :22.90  , Min.   :0.0000  , 1st Qu.:0.0000  , Median :0.0000  , Mean   :0.4375  , 3rd Qu.:1.0000  , Max.   :1.0000  , Min.   :0.0000  , 1st Qu.:0.0000  , Median :0.0000  , Mean   :0.4062  , 3rd Qu.:1.0000  , Max.   :1.0000  , Min.   :3.000  , 1st Qu.:3.000  , Median :4.000  , Mean   :3.688  , 3rd Qu.:4.000  , Max.   :5.000  , Min.   :1.000  , 1st Qu.:2.000  , Median :2.000  , Mean   :2.812  , 3rd Qu.:4.000  , Max.   :8.000  \nthis inline code works but it seems to rmd files look more organized and tidier."
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html#architecture-of-analysis-pipeline",
    "href": "docs/projects/high_dimension/high_dimension.html#architecture-of-analysis-pipeline",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Architecture of Analysis Pipeline",
    "text": "Architecture of Analysis Pipeline"
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html#methods",
    "href": "docs/projects/high_dimension/high_dimension.html#methods",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Methods",
    "text": "Methods\n\n\n   alpha      mse fit.name\n1    0.0 2529.146   alpha0\n2    0.1 2529.146 alpha0.1\n3    0.2 2529.146 alpha0.2\n4    0.3 2529.146 alpha0.3\n5    0.4 2529.146 alpha0.4\n6    0.5 2529.146 alpha0.5\n7    0.6 2529.146 alpha0.6\n8    0.7 2529.146 alpha0.7\n9    0.8 2529.146 alpha0.8\n10   0.9 2529.146 alpha0.9\n11   1.0 2529.146   alpha1"
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html#results",
    "href": "docs/projects/high_dimension/high_dimension.html#results",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Results",
    "text": "Results"
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html#conclusion",
    "href": "docs/projects/high_dimension/high_dimension.html#conclusion",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Conclusion",
    "text": "Conclusion"
  },
  {
    "objectID": "docs/projects/high_dimension/high_dimension.html#bibliography",
    "href": "docs/projects/high_dimension/high_dimension.html#bibliography",
    "title": "Comparative Study of Dimension Reduction Methods",
    "section": "Bibliography",
    "text": "Bibliography"
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html",
    "href": "docs/projects/high_dimension/data_preparation.html",
    "title": "Data Preparation",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\nplease, read the English section first.\n\n\n\n\n\n\n\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(glmnet)\nlibrary(MASS)\nlibrary(mixOmics)\nset.seed(20221213) \nknitr::opts_chunk$set(message=FALSE,warning=FALSE)\n\n\n\n\n\n\n\nShow the code\n# the number of samples\nsample_size <- 1000\n# the number of predictors\npredictor_size <- 10000\ngroup_size <- 10\n# the number of predictors truly associated with a response variable\nsignificant_predictors <- floor(predictor_size*sample((50:200)/1000,1)) \n\n## set the predictors associated with an outcome\n### the number of predictors positively associated with an outcome\n### the number of predictors negatively associated with an outcome\npositively_associated_predictors<-floor(significant_predictors*0.4) \nnegatively_associated_predictors<-significant_predictors-positively_associated_predictors \n\n## set correlated predictors within each group\n### randomly sampling proportions of 10 correlated predictor groups \n### to become their sum equal to 1\nproportion_list<-sample(seq(1,1+2*(100-group_size)/group_size,\n                            by=2*(100-group_size)/(group_size*(group_size-1)))/100,\n                        group_size,replace=FALSE)%>%round(3) \nnames(proportion_list)<-paste0(\"group\",1:length(proportion_list))\n### initialize a matrix with a size as sample_size by predictor_size\npredictor_matrix <- matrix(0, ncol = predictor_size, nrow = sample_size)\n### initialize a data frame and assign meta information used to generate simulated data\nmeta_data<-\n    data.frame(group_name=c(names(proportion_list)),\n               proportion=proportion_list)%>%\n    mutate(group_n=(predictor_size*proportion_list)%>%round(0), # the within-group number of predictors\n           first_index=c(1,cumsum(group_n[-length(proportion_list)])+1), # the 1st index of predictors in each group\n           last_index=cumsum(group_n), # the last index of predictors in each group\n           group_correlation=sample((0:700)/1000,length(proportion_list),replace=TRUE), # correlation among the within-group predictors\n           group_effect=sample((-2:2)/10,length(proportion_list),replace=TRUE)); # effect of each group on an outcome variable\n\n\ndata<-matrix(rnorm(sample_size*predictor_size,mean=0,sd=0.01), \n             nrow = sample_size, ncol = predictor_size)\ncovariance_matrix<-matrix(rnorm(predictor_size*predictor_size,0.15,0.05),\n                          nrow=predictor_size, ncol=predictor_size)\nbeta_coefficients <- rnorm(predictor_size,0,0.05)\n\nfor (i in 1:nrow(meta_data)) {\n    \n    group_range <- meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]\n    for (j in group_range){\n        for(k in group_range){\n        covariance_matrix[j, k] <- meta_data[i, \"group_correlation\"]\n        }\n    }\n    #covariance_matrix[group_range, group_range]+meta_data[i, \"group_correlation\"]    \n    diag(covariance_matrix) <- 1\n    data[, group_range] <- \n        mvrnorm(n = sample_size, \n                mu = rep(0,meta_data[i,\"group_n\"]),\n                Sigma = covariance_matrix[group_range, group_range])\n    data=as.data.frame(data)\n    beta_coefficients[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]] <-\n        beta_coefficients[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]]+\n        meta_data[i,\"group_effect\"]\n    predictor_names<-paste0(meta_data[i,\"group_name\"],\"_\",1:meta_data[i,\"group_n\"])\n    names(beta_coefficients)[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]] <- predictor_names\n    names(data)[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]]<-predictor_names\n        \n}\nscore=as.matrix(data)%*%beta_coefficients # score of each sample\n# logistic function to get a probability, intercept = 0, \n# to decrease prevalence, set p-0.2, negative probabilities into 0\nprobabilities <- ((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05))%>%\n    ifelse(.>1,1,.)%>%abs()\nresponse <- rbinom(sample_size, 1, probabilities) \n\nage_distribution=rchisq(sample_size,df=9)\nsex_distribution=sample(c(0,1),sample_size,replace=TRUE,prob = c(0.45,0.55))\ncountry_distribution=sample(c(0:3),sample_size,replace=TRUE,prob = c(0.3,0.2,0.2,0.3))\ntreatment_distribution=sample(c(0:2),sample_size,replace=TRUE,prob = c(0.7,0.2,0.1))\ngenotype_distribution=sample(c(0:5),sample_size,replace=TRUE,\n                             prob = c(0.08,0.15,0.086,0.3,0.25,0.134)) #just random numbers\nphenotype_data<-\n    data.frame(\n        id=1:sample_size,\n        outcome=response,\n        probabilities=probabilities,\n        age=ifelse(probabilities<0.15,age_distribution-4,\n                   ifelse(probabilities<0.3,age_distribution-2,\n                          ifelse(probabilities>0.5,age_distribution+3,\n                                 ifelse(probabilities>0.7,age_distribution+6,age_distribution)))))%>%\n    mutate(age=sapply(age,\n                   function(x)(x-min(age))/(max(age)-min(age))*(105-65)+65)%>%round(0),\n           sex=sex_distribution,\n           country=country_distribution,\n           treatment=treatment_distribution,\n           treatment=ifelse(probabilities>0.7,1,\n                            ifelse(probabilities>0.8,2,treatment)),\n           genotype=genotype_distribution,\n           genotype=ifelse(probabilities<0.1,0,\n                           ifelse(probabilities<0.15,1,\n                                  ifelse(probabilities>0.7,3,\n                                         ifelse(probabilities>0.8,4,\n                                                ifelse(probabilities>0.9,5,genotype))))),\n           age=ifelse(outcome==0&genotype==0,age+10,\n                      ifelse(outcome==0&genotype==1,age+5,\n                             ifelse(genotype==4,age-3,\n                                    ifelse(genotype==5,age-2,age)))),\n           genotype=ifelse(outcome==1&genotype==3&age>83&age<92,4,genotype),\n           genotype=ifelse(outcome==1&genotype==4&age>87,5,genotype))\n\n\nall_data=inner_join(phenotype_data,data%>%mutate(id=1:n()),by=\"id\")\n\n#write_rds(all_data,\"./docs/projects/data/llfs_simulated_data.rds\")\n\n\n\n\n\n\n\nShow the code\ndatapath<-\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rds\"\n#datapath<-\"C:/Users/kkm/Desktop/projects/R/website/docs/projects/data/llfs_simulated_data.rds\"\n simulated_data=read_rds(datapath)%>%\n     dplyr::select(-1,-probabilities)\n all_data=simulated_data%>%\n mutate(\n      outcome=ifelse(outcome==0,\"negative\",\"positive\"),\n      outcome=factor(outcome,levels=c(\"negative\",\"positive\")),\n      sex=ifelse(sex==0,\"man\",\"woman\"),\n      sex=factor(sex,levels=c(\"man\",\"woman\")),\n      country=ifelse(country==0,\"center_a\",ifelse(country==1,\"center_b\",ifelse(country==2,\"center_c\",\"center_d\"))),\n      country=factor(country,levels=c(\"center_a\",\"center_b\",\"center_c\",\"center_d\")),\n      treatment=ifelse(treatment==0,\"trmnt1\",ifelse(treatment==1,\"trmnt2\",\"trmnt3\")),\n      treatment=factor(treatment,levels=c(\"trmnt1\",\"trmnt2\",\"trmnt3\")),\n      genotype=ifelse(genotype==0,\"e2/e2\",\n      ifelse(genotype==1,\"e2/e3\",\n      ifelse(genotype==2,\"e2/e4\",\n      ifelse(genotype==3,\"e3/e3\",\n      ifelse(genotype==4,\"e3/e4\",\"e4/e4\"))))),\n      genotype=factor(genotype,levels=c(\"e2/e2\",\"e2/e3\",\"e2/e4\",\"e3/e3\",\"e3/e4\",\"e4/e4\"))\n      )\n names(all_data)[7:ncol(all_data)]<-paste0(\"meta\",1:10000)\n\n\n\n\n\n\n\n\n\nThis data include 1000 samples and 10006 variables:\n\noutcome: a disease status (positive, negative), positive is an affected status, negative is an unaffected status, and the reference group is negative.\nage: an age\nsex: a sex status (woman, man) and the reference group is man.\ncountry: a country where data were collected (center_d, center_b, center_a, center_c) and the reference group is center_a.\ntreatment: a treatment for the disease (trmnt2, trmnt1, trmnt3) and the reference group is trmnt1.\ngenotype: a genotype of APOE.\n\nthe apolipoprotein \\(\\epsilon\\) (APOE) is a protein produced in the metabolic pathway of fats in mammals, a genotype of which seems to be related to Alzheimer’s disease (AD). APOE is polymorphic and has three major alleles, \\(\\epsilon 2\\) (e2), \\(\\epsilon 3\\)(e3), and \\(\\epsilon 4\\) (e4). The statistics of the polymorphism are 8.4% for e2, 77.9% for e3, and 13.7% for e4 in worldwide allel frequency, respectively. It is known that the e2, e3, and e4 allels are associated with the protective factor, the neutral one, and the risk one with regard to AD. However, this finding has not been replicated in a large population. Therefore, it is known that we do not know their true associations with AD in the true population. (from Wiki)\nThere are 6 combinations of the genotypes:\n\ne2/e2\ne2/e3\ne2/e4\ne3/e3 (reference group)\ne3/e4\ne4/e4\n\n\nmeta1 ~ meta10000: a list of metabolites that were blood-sampled from the APOE carriers."
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html#data-preparation",
    "href": "docs/projects/high_dimension/data_preparation.html#data-preparation",
    "title": "Data Preparation",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nPackage Loading and Option Settings\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(glmnet)\nlibrary(MASS)\n#library(mixOmics)\nset.seed(20221213) \nknitr::opts_chunk$set(message=FALSE,warning=FALSE)\n\n\n\n\nData Simulation\n\n\n\n\n\nLoad Data\n\n\nShow the code\n#all_data=read_csv(\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rda\",\n#                  progress = show_progress(),\n#                  show_col_types = FALSE)%>%\n\n all_data=read_rds(\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rds\")%>%\n     dplyr::select(-1,-probabilities)\n all_data=all_data%>%\n     mutate(outcome=factor(outcome,levels=c(0,1)),\n            sex=factor(sex,levels=c(0,1)),\n            country=factor(country,levels=c(0,1)),\n            treatment=factor(treatment,levels=c(0,1)),\n            genotype=factor(genotype,levels=c(3,0,1,2,4,5))\n            )\n \n dim(all_data)\n\n\n[1]  1000 10006"
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html#data-description",
    "href": "docs/projects/high_dimension/data_preparation.html#data-description",
    "title": "Data Preparation",
    "section": "Data Description",
    "text": "Data Description\nThis data include\nMin.   :10.40  , 1st Qu.:15.43  , Median :19.20  , Mean   :20.09  , 3rd Qu.:22.80  , Max.   :33.90  , Min.   :4.000  , 1st Qu.:4.000  , Median :6.000  , Mean   :6.188  , 3rd Qu.:8.000  , Max.   :8.000  , Min.   : 71.1  , 1st Qu.:120.8  , Median :196.3  , Mean   :230.7  , 3rd Qu.:326.0  , Max.   :472.0  , Min.   : 52.0  , 1st Qu.: 96.5  , Median :123.0  , Mean   :146.7  , 3rd Qu.:180.0  , Max.   :335.0  , Min.   :2.760  , 1st Qu.:3.080  , Median :3.695  , Mean   :3.597  , 3rd Qu.:3.920  , Max.   :4.930  , Min.   :1.513  , 1st Qu.:2.581  , Median :3.325  , Mean   :3.217  , 3rd Qu.:3.610  , Max.   :5.424  , Min.   :14.50  , 1st Qu.:16.89  , Median :17.71  , Mean   :17.85  , 3rd Qu.:18.90  , Max.   :22.90  , Min.   :0.0000  , 1st Qu.:0.0000  , Median :0.0000  , Mean   :0.4375  , 3rd Qu.:1.0000  , Max.   :1.0000  , Min.   :0.0000  , 1st Qu.:0.0000  , Median :0.0000  , Mean   :0.4062  , 3rd Qu.:1.0000  , Max.   :1.0000  , Min.   :3.000  , 1st Qu.:3.000  , Median :4.000  , Mean   :3.688  , 3rd Qu.:4.000  , Max.   :5.000  , Min.   :1.000  , 1st Qu.:2.000  , Median :2.000  , Mean   :2.812  , 3rd Qu.:4.000  , Max.   :8.000  \nthis inline code works but it seems to rmd files look more organized and tidier."
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html#architecture-of-analysis-pipeline",
    "href": "docs/projects/high_dimension/data_preparation.html#architecture-of-analysis-pipeline",
    "title": "Data Preparation",
    "section": "Architecture of Analysis Pipeline",
    "text": "Architecture of Analysis Pipeline"
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html#methods",
    "href": "docs/projects/high_dimension/data_preparation.html#methods",
    "title": "Data Preparation",
    "section": "Methods",
    "text": "Methods\n\n\n   alpha      mse fit.name\n1    0.0 2529.146   alpha0\n2    0.1 2529.146 alpha0.1\n3    0.2 2529.146 alpha0.2\n4    0.3 2529.146 alpha0.3\n5    0.4 2529.146 alpha0.4\n6    0.5 2529.146 alpha0.5\n7    0.6 2529.146 alpha0.6\n8    0.7 2529.146 alpha0.7\n9    0.8 2529.146 alpha0.8\n10   0.9 2529.146 alpha0.9\n11   1.0 2529.146   alpha1"
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html#results",
    "href": "docs/projects/high_dimension/data_preparation.html#results",
    "title": "Data Preparation",
    "section": "Results",
    "text": "Results"
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html#conclusion",
    "href": "docs/projects/high_dimension/data_preparation.html#conclusion",
    "title": "Data Preparation",
    "section": "Conclusion",
    "text": "Conclusion"
  },
  {
    "objectID": "docs/projects/high_dimension/data_preparation.html#bibliography",
    "href": "docs/projects/high_dimension/data_preparation.html#bibliography",
    "title": "Data Preparation",
    "section": "Bibliography",
    "text": "Bibliography"
  },
  {
    "objectID": "docs/projects/high_dimension/description.html",
    "href": "docs/projects/high_dimension/description.html",
    "title": "Description",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n알츠하이머병(AD)은 수백만 명의 미국인에게 영향을 미치는 가장 흔한 형태의 치매이다. 알츠하이머병은 기억력, 사고력 및 행동에 영향을 주지만 증상이 나타나기까지 거의 20년에 걸쳐 진행이 된다. 따라서 전 임상 단계에서 생리학을 이해하는 것이 필수적이다. 유전적 요인이 AD에 거의 50% 기여하는 것으로 추정된다. 유전자가 세포 환경을 변경하여 알츠하이머병 위험에 어떻게 기여하는지 더 잘 이해하기 위해 AD와 연관이 있는 유전자인 APOE를 보유한 사람들의 대사체를 조사했다. 대사체는 게놈과 프로테옴에서 생성된 산물을 나타낸다. 이러한 생화학 부산물은 유전적 요인과 환경적 요인 모두의 영향을 받는다. 모집단은 장수마을에 사는 Caucasian (백인) 참여자들이다.\n\n\n\nLLFS(Long Life Family Study) 프로젝트의 목적은 전사체 및 단백질체 단계를 통해 게놈에서 대사체 단계에 이르는 다단계에서 통계 및 기계 학습을 사용하여 분석 파이프라인을 구축하고 알츠하이머병에 대한 중요한 바이오마커를 식별하기 위함이다.\n\n\n\n이 시뮬레이션 연구에서는 정규분포 하에서 대사 물질 데이터를 생성하여 대사 단계에서 가상의 데이터를 생성하는 데에만 집중할 것이다. (현재, 이산 변수에 대하여 통계적으로 시뮬레이션하는 방법론 연구가 더 필요함.) 이 시뮬레이션 연구의 목표는 알츠하이머병과 비알츠하이머병과 관련된 바이오마커를 구별할 수 있는 일련의 예측인자(또는 대사물질 또는 생화학물질)를 식별하는 것이다.\n\n\n\n\n보안 문제로 인해 이 프로젝트에 사용된 실제 데이터와 전체 분석 파이프라인을 표시하기 어렵다. 따라서 시뮬레이션을 통해 대략적인 분석 파이프라인을 재현하고 시연하기 위해 가짜 데이터를 생성한다.이 글에서는 보안 문제로 인해 대략적인 분석 파이프라인을 재현하고 시연하기 위한 시뮬레이션 데이터를 준비한다. 시뮬레이션 데이터는 실제 연구를 위해 표본으로 쓰이는 데이터의 특성을 전혀 반영하지 않는다.\n이 시뮬레이션 연구에서, 이산 변수 (age 포함)와 종속 변수를 통계적으로 연관시키지 못했기 때문에 이산 변수에 대한 분석 결과가 생물학적인 사실과 많이 다를 수 있다. (참조 문헌을 찾을 예정)\n\n\n\n\n\nOperating System\n\nWindow\nUbuntu 20.04\n\nSoftware\n\nQuarto for dynamic documentation\nVS code\nR studio 2022.07.2+576\nR base 4.2.2 in the English section\nPython 3.11 in the Korean section\n\n\n\n\n\n읽기의 편의를 위해 이 프로젝트를 5개 섹션으로 나누었습니다.\n\nDescription (Current)\nData Preparation\nEDA (Exploratory Data Analysis)\nMethod1: statistical approach\nMethod2: ML Approach\nConclusion\n\n\n\n\n\n\nAlzheimer Disease (AD) is a most common form of dementia that affects millions of Americans. AD affects memory, thinking and behavior, but its progression is slow, spanning nearly two decades before the symptoms appear. Thus, it is imperative to understand the physiology at the pre-clinical stage. It is estimated that genetic factors contribute nearly 50% to AD. To better understand how genes contribute to the risk of AD by altering cellular milieu, we have examined the metabolome of individuals with the AD-related genotype, APOE. The metabolome represents the products that were generated from the genome and proteome. These biochemical products represent influences of both genetic and environmental factors. The population is Caucasian participants living in longevity village.\n\n\n\nThe objective of the Long Life Family Study (LLFS) project was to build an analysis pipeline of identifying significant biomarkers for AD using statistics and machine learning at the multi stages from the genomic to the metabolomic stage through the transcriptomic and proteomic stage.\n\n\n\nIn this simulation study, I will focus only on generating fake data at the metabolomic stage by generating data under multivariate normal distributions. The aim of this simulation study is to identify a set of predictors (or metabolites or bio-chemicals) that will enable to differentiate bio-markers that are associated with AD vs. non-AD.\n\n\n\n\nIn this article, due to security concerns, it is difficult to display the real data and the entire analysis pipeline used in this project. Therefore, I prepared simulated data to reproduce and demonstrate a rough analysis pipeline. The simulated data does not reflect the characteristics of the truely sampled data used in the LLFS at all.\nIn this simulation, since the discrete variables(including age) and the dependent variable could not be statistically associated, the analysis result for the discrete variables could be very different from the biological fact (will find references for simulating discrete variables).\n\n\n\n\n\nOperating System\n\nWindow\nUbuntu 20.04\n\nSoftware\n\nQuarto for dynamic documentation\nVS code\nR studio 2022.07.2+576\nR base 4.2.2 in the English section\nPython 3.11 in the Korean section\n\n\n\n\n\nFor the convenience of reading, I divided this proejcts into 5 sections:\n\nDescription (Current)\nData Preparation\nEDA (Exploratory Data Analysis)\nMethod1: statistical approach\nMethod2: ML Approach\nConclusion"
  },
  {
    "objectID": "docs/projects/high_dimension/description.html#simulation",
    "href": "docs/projects/high_dimension/description.html#simulation",
    "title": "Description",
    "section": "Simulation",
    "text": "Simulation\n\n\n\n\nflowchart LR"
  },
  {
    "objectID": "template.html",
    "href": "template.html",
    "title": "template",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n\n\n\n\nThe radius of the circle is 10.\n\n\n\n\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/2023-01-07-anova/index.html",
    "href": "docs/blog/posts/2023-01-07-anova/index.html",
    "title": "ANOVA",
    "section": "",
    "text": "(draft)\n## CF"
  },
  {
    "objectID": "docs/blog/posts/2023-01-07-anova/index.html#application-to-example",
    "href": "docs/blog/posts/2023-01-07-anova/index.html#application-to-example",
    "title": "ANOVA",
    "section": "2 Application to Example",
    "text": "2 Application to Example\n\n2.1 Data Description\n\n2.1.1 Raw Data\n\n\n     sample Day Run    Ct\n1   patient   1   1 38.33\n2   patient   1   1 36.58\n3   patient   1   1 36.67\n4   patient   1   2 38.41\n5   patient   1   2 37.86\n6   patient   1   2 38.51\n7   patient   2   1 36.51\n8   patient   2   1 37.38\n9   patient   2   1 38.26\n10  patient   2   2 37.31\n11  patient   2   2 38.13\n12  patient   2   2 37.04\n13  patient   3   1 37.88\n14  patient   3   1 37.41\n15  patient   3   1 35.89\n16  patient   3   2 36.95\n17  patient   3   2 37.23\n18  patient   3   2 39.85\n19  patient   4   1 36.34\n20  patient   4   1 37.67\n21  patient   4   1 37.67\n22  patient   4   2 36.88\n23  patient   4   2 36.53\n24  patient   4   2 37.24\n25  patient   5   1 37.82\n26  patient   5   1 37.56\n27  patient   5   1 37.39\n28  patient   5   2 37.01\n29  patient   5   2 37.60\n30  patient   5   2 38.04\n31  patient   6   1 36.50\n32  patient   6   1 38.72\n33  patient   6   1 37.74\n34  patient   6   2 37.78\n35  patient   6   2 36.98\n36  patient   6   2 36.72\n37  patient   7   1 37.12\n38  patient   7   1 37.02\n39  patient   7   1 38.07\n40  patient   7   2 38.68\n41  patient   7   2 37.75\n42  patient   7   2 35.91\n43  patient   8   1 39.70\n44  patient   8   1 37.22\n45  patient   8   1 36.79\n46  patient   8   2 37.22\n47  patient   8   2 37.66\n48  patient   8   2 36.54\n49  patient   9   1 38.39\n50  patient   9   1 38.88\n51  patient   9   1 39.10\n52  patient   9   2 38.99\n53  patient   9   2 37.26\n54  patient   9   2 36.15\n55  patient  10   1 36.94\n56  patient  10   1 36.65\n57  patient  10   1 36.67\n58  patient  10   2 37.63\n59  patient  10   2 37.09\n60  patient  10   2 37.80\n61  patient  11   1 38.31\n62  patient  11   1 40.20\n63  patient  11   1 37.57\n64  patient  11   2 37.04\n65  patient  11   2 36.46\n66  patient  11   2 37.30\n67  patient  12   1 36.65\n68  patient  12   1 36.49\n69  patient  12   1 37.03\n70  patient  12   2 37.44\n71  patient  12   2 36.77\n72  patient  12   2 36.23\n73  patient  13   1 37.95\n74  patient  13   1 36.60\n75  patient  13   1 37.68\n76  patient  13   2 37.82\n77  patient  13   2 38.00\n78  patient  13   2 37.33\n79  patient  14   1 36.63\n80  patient  14   1 36.37\n81  patient  14   1 37.15\n82  patient  14   2 38.11\n83  patient  14   2 37.28\n84  patient  14   2 35.60\n85  patient  15   1 36.29\n86  patient  15   1 36.21\n87  patient  15   1 36.61\n88  patient  15   2 37.62\n89  patient  15   2 38.82\n90  patient  15   2 35.55\n91  patient  16   1 36.27\n92  patient  16   1 37.51\n93  patient  16   1 37.93\n94  patient  16   2 36.79\n95  patient  16   2 36.64\n96  patient  16   2 36.76\n97  patient  17   1 36.86\n98  patient  17   1 37.40\n99  patient  17   1 38.11\n100 patient  17   2 36.09\n101 patient  17   2 36.23\n102 patient  17   2 36.80\n103 patient  18   1 37.61\n104 patient  18   1 37.27\n105 patient  18   1 37.05\n106 patient  18   2 38.17\n107 patient  18   2 36.62\n108 patient  18   2 36.24\n109 patient  19   1 37.20\n110 patient  19   1 37.05\n111 patient  19   1 38.73\n112 patient  19   2 36.52\n113 patient  19   2 36.41\n114 patient  19   2 36.40\n115 patient  20   1 37.62\n116 patient  20   1 37.36\n117 patient  20   1    NA\n118 patient  20   2 38.41\n119 patient  20   2 37.26\n120 patient  20   2 37.28\n\n\n공유해주신 example data는 sample, Day, Run, Ct의 변수들을 포함하고 있습니다. 특히 sample은 여기서 같은 값을 갖고있기 때문에 의미가 없는 변수입니다. 공유해주신 정보에 따르면 아마도 Run은 오전과 오후를 나누는 변수인 것으로 생각 됩니다. 이 data만 보면 아마도 같은 샘플에 대해서 시약 제품이 시간에 따라 얼마나 안정적인 performance (Ct값)를 보여주는지 검사하는 실험으로 추측됩니다. 좀 더 분석하기 용이한 형태로 data structure를 바꾸겠습니다.\n\n\n2.1.2 Processed Data\n\n\n# A tibble: 120 × 5\n      id Day   noon    Run    Ct\n   <int> <fct> <fct> <int> <dbl>\n 1     1 1     AM        1  38.3\n 2     2 1     AM        2  36.6\n 3     3 1     AM        3  36.7\n 4     4 1     PM        1  38.4\n 5     5 1     PM        2  37.9\n 6     6 1     PM        3  38.5\n 7     7 2     AM        1  36.5\n 8     8 2     AM        2  37.4\n 9     9 2     AM        3  38.3\n10    10 2     PM        1  37.3\n# … with 110 more rows\n\n\n재가공된 data는 120개의 샘플과 5개의 변수를 갖고있습니다. 변수 목록은 다음과 같습니다.\n\nsample: 검체이름, 같은 검체 혹은 의미없음\n\nid: 열번호, 총 20일간 하루 2회 구동(AM, PM) 구동, 오전 오후 각 각 3번씩 구동 총 120 \\((=20 \\times 3 \\times 2)\\) 샘플\n\nDay: Day1~20\n\nnoon: AM= before noon, PM= after noon\nRun: 1회 구동당 3번 반복씩1, 2, 3\n\nCt: Ct values\n\nANOVA의 Assumption\n\nresponse variable should follow normal distribution.\n\nhomoscedasticity, equality of variance: 각 집단의 분포는 모두 동일한 분산을 가짐\nANOVA의 가정들을 반드시 충족하지 않아도 되지만 충족하면 Power 가 올라감\n\n\n\n\n2.2 EDA (Explorator Data Analysis)\n이 data는 아래 처럼 1의 결측치를 갖고 있습니다.\n\n\n\n\n\nid\nDay\nnoon\nRun\nCt\n\n\n\n\n117\n20\nAM\n3\nNA\n\n\n\n\n\nCt에 대한 Global Statistics는 다음과 같습니다.\n\n\n\n\n\ncount\nglobal_Ct_mean\nglobal_Ct_sd\nglobal_Ct_CV\n\n\n\n\n119\n37.322\n0.86754\n2.324 %\n\n\n\n\n\nDay groups의 Statistics은 다음과 같습니다.\n\n\n\n\n\nDay\ncount\nDay_group_Ct_mean\nDay_group_Ct_sd\nDay_group_Ct_CV\n\n\n\n\n1\n6\n37.727\n0.88247\n2.339 %\n\n\n2\n6\n37.438\n0.66240\n1.769 %\n\n\n3\n6\n37.535\n1.31417\n3.501 %\n\n\n4\n6\n37.055\n0.56712\n1.53 %\n\n\n5\n6\n37.570\n0.35508\n0.945 %\n\n\n6\n6\n37.407\n0.83077\n2.221 %\n\n\n7\n6\n37.425\n0.96426\n2.577 %\n\n\n8\n6\n37.522\n1.13537\n3.026 %\n\n\n9\n6\n38.128\n1.18219\n3.101 %\n\n\n10\n6\n37.130\n0.48551\n1.308 %\n\n\n11\n6\n37.813\n1.31872\n3.487 %\n\n\n12\n6\n36.768\n0.42447\n1.154 %\n\n\n13\n6\n37.563\n0.52955\n1.41 %\n\n\n14\n6\n36.857\n0.86064\n2.335 %\n\n\n15\n6\n36.850\n1.17852\n3.198 %\n\n\n16\n6\n36.983\n0.61442\n1.661 %\n\n\n17\n6\n36.915\n0.75224\n2.038 %\n\n\n18\n6\n37.160\n0.69062\n1.859 %\n\n\n19\n6\n37.052\n0.88971\n2.401 %\n\n\n20\n5\n37.586\n0.48247\n1.284 %\n\n\n\n\n\nAM/PM groups의 Statistics은 다음과 같습니다.\n\n\n\n\n\nnoon\ncount\nnoon_group_Ct_mean\nnoon_group_Ct_sd\nnoon_group_Ct_CV\n\n\n\n\nAM\n59\n37.400\n0.87839\n2.349 %\n\n\nPM\n60\n37.246\n0.85722\n2.302 %\n\n\n\n\n\nDays와 AM/PM 조합 groups의 Statistics은 다음과 같습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay\nnoon\ncount\ncombi_group_Ct_mean\ncombi_group_Ct_sd\ncombi_group_Ct_CV\n\n\n\n\n1\nAM\n3\n37.193\n0.98541\n2.649 %\n\n\n1\nPM\n3\n38.260\n0.35000\n0.915 %\n\n\n2\nAM\n3\n37.383\n0.87500\n2.341 %\n\n\n2\nPM\n3\n37.493\n0.56766\n1.514 %\n\n\n3\nAM\n3\n37.060\n1.04014\n2.807 %\n\n\n3\nPM\n3\n38.010\n1.59962\n4.208 %\n\n\n4\nAM\n3\n37.227\n0.76788\n2.063 %\n\n\n4\nPM\n3\n36.883\n0.35501\n0.963 %\n\n\n5\nAM\n3\n37.590\n0.21656\n0.576 %\n\n\n5\nPM\n3\n37.550\n0.51682\n1.376 %\n\n\n6\nAM\n3\n37.653\n1.11253\n2.955 %\n\n\n6\nPM\n3\n37.160\n0.55245\n1.487 %\n\n\n7\nAM\n3\n37.403\n0.57951\n1.549 %\n\n\n7\nPM\n3\n37.447\n1.40969\n3.765 %\n\n\n8\nAM\n3\n37.903\n1.57074\n4.144 %\n\n\n8\nPM\n3\n37.140\n0.56427\n1.519 %\n\n\n9\nAM\n3\n38.790\n0.36346\n0.937 %\n\n\n9\nPM\n3\n37.467\n1.43123\n3.82 %\n\n\n10\nAM\n3\n36.753\n0.16197\n0.441 %\n\n\n10\nPM\n3\n37.507\n0.37072\n0.988 %\n\n\n11\nAM\n3\n38.693\n1.35626\n3.505 %\n\n\n11\nPM\n3\n36.933\n0.43004\n1.164 %\n\n\n12\nAM\n3\n36.723\n0.27737\n0.755 %\n\n\n12\nPM\n3\n36.813\n0.60616\n1.647 %\n\n\n13\nAM\n3\n37.410\n0.71435\n1.91 %\n\n\n13\nPM\n3\n37.717\n0.34675\n0.919 %\n\n\n14\nAM\n3\n36.717\n0.39716\n1.082 %\n\n\n14\nPM\n3\n36.997\n1.27876\n3.456 %\n\n\n15\nAM\n3\n36.370\n0.21166\n0.582 %\n\n\n15\nPM\n3\n37.330\n1.65418\n4.431 %\n\n\n16\nAM\n3\n37.237\n0.86310\n2.318 %\n\n\n16\nPM\n3\n36.730\n0.07937\n0.216 %\n\n\n17\nAM\n3\n37.457\n0.62692\n1.674 %\n\n\n17\nPM\n3\n36.373\n0.37608\n1.034 %\n\n\n18\nAM\n3\n37.310\n0.28213\n0.756 %\n\n\n18\nPM\n3\n37.010\n1.02240\n2.762 %\n\n\n19\nAM\n3\n37.660\n0.92968\n2.469 %\n\n\n19\nPM\n3\n36.443\n0.06658\n0.183 %\n\n\n20\nAM\n2\n37.490\n0.18385\n0.49 %\n\n\n20\nPM\n3\n37.650\n0.65826\n1.748 %\n\n\n\n\n\n이제 ANOVA를 수행하기 위한 basic statistics는 모두 구했습니다. ANOVA를 수행하기 위해 집단 간 분산과 집단 내 분산을 계산하도록 하겠습니다.\n\n\n2.3 집단 간 분산\n앞에서 설명 드린바로 유추해보면 예시 data의 집단 간 분산의 범주형 변수는 Day로 설정하는 것이 합리적인 것으로 보입니다.\n\n\\(g=g\\) Day의 sample size = 20, 자유도 = 20-1 = 19 입니다.\n\\(n_g=g\\) group의 sample size, \\(\\overline{X}_g=g\\) 의 sample mean은 다음과 같습니다.\n\\(\\overline{X}\\) = global sample mean = 37.32202\n집단 간 분산: \\(\\frac{집단 간 제곱합}{자유도}=\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n2.3.1 SS_Day (집단간 분산 Day)\nDay sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(Day)간 분산 계산, 집단(Day)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay\ncount\nDay_group_Ct_mean\nDay_group_Ct_sd\nDay_group_Ct_CV\nday_sq\nsum_day_ssq\ndf\nday_mean_ssq\nday_sd\n\n\n\n\n1\n6\n37.727\n0.88247\n2.339 %\n0.98245\n15.5\n19\n0.81581\n0.90322\n\n\n2\n6\n37.438\n0.66240\n1.769 %\n0.08118\n15.5\n19\n0.81581\n0.90322\n\n\n3\n6\n37.535\n1.31417\n3.501 %\n0.27217\n15.5\n19\n0.81581\n0.90322\n\n\n4\n6\n37.055\n0.56712\n1.53 %\n0.42779\n15.5\n19\n0.81581\n0.90322\n\n\n5\n6\n37.570\n0.35508\n0.945 %\n0.36897\n15.5\n19\n0.81581\n0.90322\n\n\n6\n6\n37.407\n0.83077\n2.221 %\n0.04299\n15.5\n19\n0.81581\n0.90322\n\n\n7\n6\n37.425\n0.96426\n2.577 %\n0.06363\n15.5\n19\n0.81581\n0.90322\n\n\n8\n6\n37.522\n1.13537\n3.026 %\n0.23916\n15.5\n19\n0.81581\n0.90322\n\n\n9\n6\n38.128\n1.18219\n3.101 %\n3.90088\n15.5\n19\n0.81581\n0.90322\n\n\n10\n6\n37.130\n0.48551\n1.308 %\n0.22122\n15.5\n19\n0.81581\n0.90322\n\n\n11\n6\n37.813\n1.31872\n3.487 %\n1.44835\n15.5\n19\n0.81581\n0.90322\n\n\n12\n6\n36.768\n0.42447\n1.154 %\n1.83939\n15.5\n19\n0.81581\n0.90322\n\n\n13\n6\n37.563\n0.52955\n1.41 %\n0.34940\n15.5\n19\n0.81581\n0.90322\n\n\n14\n6\n36.857\n0.86064\n2.335 %\n1.29930\n15.5\n19\n0.81581\n0.90322\n\n\n15\n6\n36.850\n1.17852\n3.198 %\n1.33680\n15.5\n19\n0.81581\n0.90322\n\n\n16\n6\n36.983\n0.61442\n1.661 %\n0.68824\n15.5\n19\n0.81581\n0.90322\n\n\n17\n6\n36.915\n0.75224\n2.038 %\n0.99398\n15.5\n19\n0.81581\n0.90322\n\n\n18\n6\n37.160\n0.69062\n1.859 %\n0.15750\n15.5\n19\n0.81581\n0.90322\n\n\n19\n6\n37.052\n0.88971\n2.401 %\n0.43854\n15.5\n19\n0.81581\n0.90322\n\n\n20\n5\n37.586\n0.48247\n1.284 %\n0.34844\n15.5\n19\n0.81581\n0.90322\n\n\n\n\n\nAnalysis-In program의 ANOVA결과값과 일치하는 것을 볼 수 있습니다. $SS_{day}= $ 15.50038 with \\(df=19\\).\n\n\n2.3.2 SS_noon (집단간 분산 noon)\nnoon sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(noon)간 분산 계산, 집단(noon)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnoon\ncount\nnoon_group_Ct_mean\nnoon_group_Ct_sd\nnoon_group_Ct_CV\nnoon_sq\nsum_noon_ssq\ndf\nnoon_mean_ssq\nnoon_sd\n\n\n\n\nAM\n59\n37.400\n0.87839\n2.349 %\n0.35569\n0.70545\n1\n0.70545\n0.83991\n\n\nPM\n60\n37.246\n0.85722\n2.302 %\n0.34976\n0.70545\n1\n0.70545\n0.83991\n\n\n\n\n\nAnalysis-In program의 결과에서 찾아 볼 수 없죠? 이 결과는 숨어 있습니다. 상호 작용에 대한 분산값을 구하고 나면 정체를 알 수 있습니다.\n\\(SS_{noon}\\) = 0.70545 with \\(df=1\\).\n\n\n2.3.3 SS_error (집단내 분산)\n\n집단 내 분산 (within-groups variability)\n\n\n\n# A tibble: 119 × 10\n   Day   noon    Run    Ct count combi_group_Ct_…¹ resid…²    df resid…³ mean_…⁴\n   <fct> <fct> <int> <dbl> <int>             <dbl>   <dbl> <dbl>   <dbl>   <dbl>\n 1 1     AM        1  38.3     3              37.2 1.29e+0    79    54.5   0.690\n 2 1     AM        2  36.6     3              37.2 3.76e-1    79    54.5   0.690\n 3 1     AM        3  36.7     3              37.2 2.74e-1    79    54.5   0.690\n 4 1     PM        1  38.4     3              38.3 2.25e-2    79    54.5   0.690\n 5 1     PM        2  37.9     3              38.3 1.60e-1    79    54.5   0.690\n 6 1     PM        3  38.5     3              38.3 6.25e-2    79    54.5   0.690\n 7 2     AM        1  36.5     3              37.4 7.63e-1    79    54.5   0.690\n 8 2     AM        2  37.4     3              37.4 1.11e-5    79    54.5   0.690\n 9 2     AM        3  38.3     3              37.4 7.69e-1    79    54.5   0.690\n10 2     PM        1  37.3     3              37.5 3.36e-2    79    54.5   0.690\n# … with 109 more rows, and abbreviated variable names ¹​combi_group_Ct_mean,\n#   ²​residual_sq, ³​residual_ssq, ⁴​mean_residual_ssq\n\n\n\\(SS_{error}\\) = 54.50093\nAnalysis-In program의 결과와 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.4 SS_total\n\n\n# A tibble: 119 × 6\n      id Day   noon    Run    Ct total_ssq\n   <int> <fct> <fct> <int> <dbl>     <dbl>\n 1     1 1     AM        1  38.3      88.8\n 2     2 1     AM        2  36.6      88.8\n 3     3 1     AM        3  36.7      88.8\n 4     4 1     PM        1  38.4      88.8\n 5     5 1     PM        2  37.9      88.8\n 6     6 1     PM        3  38.5      88.8\n 7     7 2     AM        1  36.5      88.8\n 8     8 2     AM        2  37.4      88.8\n 9     9 2     AM        3  38.3      88.8\n10    10 2     PM        1  37.3      88.8\n# … with 109 more rows\n\n\n\\(SS_{total}\\) = 88.81032\nAnalysis-In program의 ANOVA 결과 table에 있는 SS들의 합과 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.5 상호 작용 분산\n\n\n\n\\(SS_{interaction}=SS_{DayNoon}= SS_{total}-SS_{Day}-SS_{noon}-SS_{error}\\) = 88.81032-54.50093-0.70545-15.50038 = 18.10355\nAnalysis-In program의 ANOVA 결과 table과 일치하는 것을 확인할 수 있습니다.\n위의 결과들을 종합하면 아래와 같이 요약됩니다.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   15.5   0.816    1.18   0.29\nnoon         1    0.7   0.748    1.08   0.30\nDay:noon    19   18.1   0.951    1.38   0.16\nResiduals   79   54.5   0.690               \n1 observation deleted due to missingness\n\n\n\nRepeatability SD = \\(\\sqrt{V_{error}}=\\sqrt{MS_{error}}\\) = 0.83059\nRepeatability CV = \\(\\frac{repeatability \\space SD}{global \\space mean \\space Ct}\\) = 0.02225\n\n(생략, 다른 통계량들은 ANOVA_A repeat2.xlsx 참조)\n위의 결과를 간단히 해석해 보면\n\n집단간 범주 변수인 Day는 p-value =0.29>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 일별로 평균 Ct값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 일별로 평균 Ct값이 다르지 않습니다.\n\n집단간 범주 변수인 noon은 p-value =0.30>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 오전/오후별 평균 Ct값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 오전/오후별 평균 Ct값이 다르지 않습니다.\n\nDay와 noon두 변수의 상호작용 변수는 p-value =0.16>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 Ct값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 Ct값이 다르지 않습니다.\n\n\n최종 결론, 제품의 Ct값이 Day별 오전/오후별 안정적인 performance를 보인다고 조심스럽게 결론을 내릴 수 있습니다.\n이제 까지는 질문에 대한 답이 되는 ANOVA의 원리 및 통계량의 재현 및 해석법에 대하여 알아봤습니다. 하지만 직관적으로 어떤 의미가 있을 까요? 원래는 시각화를 통해 데이터의 패턴을 짐작하고 통계 검정 결과를 예상하는데 우리는 반대로 가고 있네요 ㅎㅎ 시각화를 통해 ANOVA 결과가 얼마나 합리적인지 알아보겠습니다.\n\n\n\n2.4 Visualization\n\n2.4.1 One-way: Day\n\n\n\n\n\n\n\n\n자세히 보면 일별로 시간의 경과에 따라 전체적으로 평균 Ct값이 약간 하향하는 것으로 보입니다. 하지만 좀 더 세부적으로 관찰하면 1일~8일 평균 Ct의 경향이 constant한 패턴을 보입니다. 9일~13일 평균 Ct가 진동 하향하는 패턴을 보입니다. 14일~20일 평균 Ct가 상향하는 패턴을 보입니다.\n\n\nTables of means\nGrand mean\n       \n37.322 \n\n Day \n        1     2     3     4     5     6     7     8     9    10    11    12\n    37.73 37.44 37.53 37.05 37.57 37.41 37.42 37.52 38.13 37.13 37.81 36.77\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    37.56 36.86 36.85 36.98 36.91 37.16 37.05 37.59\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n\nTables of effects\n\n Day \n         1      2     3      4     5       6     7      8      9     10     11\n    0.4046 0.1163 0.213 -0.267 0.248 0.08465 0.103 0.1996 0.8063 -0.192 0.4913\nrep 6.0000 6.0000 6.000  6.000 6.000 6.00000 6.000 6.0000 6.0000  6.000 6.0000\n         12     13      14     15      16     17     18      19    20\n    -0.5537 0.2413 -0.4654 -0.472 -0.3387 -0.407 -0.162 -0.2704 0.264\nrep  6.0000 6.0000  6.0000  6.000  6.0000  6.000  6.000  6.0000 5.000\n\n\n위에 첫 번째표에서 Global Sample Ct Mean = 37.322 과 각 집단의 평균 Ct를 확인할 수 있습니다. 위에 두 번째표에서 Global Sample Ct Mean = 37.322 과 각 집단의 평균 Ct의 차이를 확인할 수 있습니다.\n\nDay 9에서 차이가 가장 큰 것으로 보아 9일째 실험에서 performance가 가장 낮은 것이 관측됐습니다.\n반대로, 12일에 performance 가장 좋은 것으로 관측됐습니다.\n\n9일과 12일에 Ct값에 영향을 미쳤던 요인이 있었는지 복기 하는것도 도움이 되겠군요.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   15.5   0.816     1.1   0.36\nResiduals   99   73.3   0.741               \n1 observation deleted due to missingness\n\n\nOne-way ANOVA의 결과값입니다. Day별 평균 Ct의 차이는 거의 없는 것으로 보입니다. 따라서 Day 별 평균 Ct의 경향이 일관되지 않고 One-way ANOVA에서 역시 통계적으로 유의하지 않아 Day 변수는 평균 Ct에 영향을 미치지 않는 것 같습니다.\n\n\n2.4.2 One-way: AM/PM\n\n\n\n\n\n\n\n\n오후에 시간의 경과에 따라 전체적으로 평균 Ct값이 약간 하향하는 것으로 보입니다.\n\n\nTables of means\nGrand mean\n       \n37.322 \n\n noon \n      AM    PM\n    37.4 37.25\nrep 59.0 60.00\n\n\nTables of effects\n\n noon \n          AM       PM\n     0.07764 -0.07635\nrep 59.00000 60.00000\n\n\n위 첫 번째 표에서 AM/PM 간의 평균 Ct차이는 0.15 (농도가 약 0.5배) 차이가 나는 것을 확인할 수 있습니다. 생물학적으로 의미가 있는 수치일까요? 위 두 번째 표에서 Global Sample Mean 37.322와 오전/오후 별 약 0.07씩(농도가 약 0.25배) 차이가 납니다.\n\n\n             Df Sum Sq Mean Sq F value Pr(>F)\nnoon          1    0.7   0.705    0.94   0.34\nResiduals   117   88.1   0.753               \n1 observation deleted due to missingness\n\n\n오전 오후별 One way ANOVA를 실행한 결과가 오전/오부 평균 Ct값의 차이가 다르지 않다는 것을 시사하고 있습니다. 아무래도 위의 차이는 우연에 의해 발생한 현상인 것 같습니다.\n\n\n\n\n\n일별로 평균 Ct값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 Day 변수는 유의하다고 볼 수 없습니다.\n\n\n\n\n\n오전/오후별로 평균 Ct값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 오전/오후 변수는 유의하다고 볼 수 없습니다.\n여기 까지 각 변수별 평균 Ct로의 영향도를 통계적으로 시각적으로 관찰했습니다. 하지만 Day별 오전/오후별 영향도가 있는지 확인하겠습니다. (이미 위에서 통계적으로 없다고 검정됐습니다.)\n\n\n\n2.5 Two way Anova\n\n\nTables of means\nGrand mean\n       \n37.322 \n\n Day \n        1     2     3     4     5     6     7     8     9    10    11    12\n    37.73 37.44 37.53 37.05 37.57 37.41 37.42 37.52 38.13 37.13 37.81 36.77\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    37.56 36.86 36.85 36.98 36.91 37.16 37.05 37.59\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n noon \n      AM    PM\n    37.4 37.24\nrep 59.0 60.00\n\n Day:noon \n     noon\nDay   AM    PM   \n  1   37.19 38.26\n  rep  3.00  3.00\n  2   37.38 37.49\n  rep  3.00  3.00\n  3   37.06 38.01\n  rep  3.00  3.00\n  4   37.23 36.88\n  rep  3.00  3.00\n  5   37.59 37.55\n  rep  3.00  3.00\n  6   37.65 37.16\n  rep  3.00  3.00\n  7   37.40 37.45\n  rep  3.00  3.00\n  8   37.90 37.14\n  rep  3.00  3.00\n  9   38.79 37.47\n  rep  3.00  3.00\n  10  36.75 37.51\n  rep  3.00  3.00\n  11  38.69 36.93\n  rep  3.00  3.00\n  12  36.72 36.81\n  rep  3.00  3.00\n  13  37.41 37.72\n  rep  3.00  3.00\n  14  36.72 37.00\n  rep  3.00  3.00\n  15  36.37 37.33\n  rep  3.00  3.00\n  16  37.24 36.73\n  rep  3.00  3.00\n  17  37.46 36.37\n  rep  3.00  3.00\n  18  37.31 37.01\n  rep  3.00  3.00\n  19  37.66 36.44\n  rep  3.00  3.00\n  20  37.49 37.65\n  rep  2.00  3.00\n\n\nTables of effects\n\n Day \n         1      2     3      4     5       6     7      8      9     10     11\n    0.4046 0.1163 0.213 -0.267 0.248 0.08465 0.103 0.1996 0.8063 -0.192 0.4913\nrep 6.0000 6.0000 6.000  6.000 6.000 6.00000 6.000 6.0000 6.0000  6.000 6.0000\n         12     13      14     15      16     17     18      19    20\n    -0.5537 0.2413 -0.4654 -0.472 -0.3387 -0.407 -0.162 -0.2704 0.264\nrep  6.0000 6.0000  6.0000  6.000  6.0000  6.000  6.000  6.0000 5.000\n\n noon \n          AM       PM\n     0.07988 -0.07855\nrep 59.00000 60.00000\n\n Day:noon \n     noon\nDay   AM      PM     \n  1   -0.6127  0.6127\n  rep  3.0000  3.0000\n  2   -0.1343  0.1343\n  rep  3.0000  3.0000\n  3   -0.5543  0.5543\n  rep  3.0000  3.0000\n  4    0.0923 -0.0923\n  rep  3.0000  3.0000\n  5   -0.0593  0.0593\n  rep  3.0000  3.0000\n  6    0.1673 -0.1673\n  rep  3.0000  3.0000\n  7   -0.1010  0.1010\n  rep  3.0000  3.0000\n  8    0.3023 -0.3023\n  rep  3.0000  3.0000\n  9    0.5823 -0.5823\n  rep  3.0000  3.0000\n  10  -0.4560  0.4560\n  rep  3.0000  3.0000\n  11   0.8007 -0.8007\n  rep  3.0000  3.0000\n  12  -0.1243  0.1243\n  rep  3.0000  3.0000\n  13  -0.2327  0.2327\n  rep  3.0000  3.0000\n  14  -0.2193  0.2193\n  rep  3.0000  3.0000\n  15  -0.5593  0.5593\n  rep  3.0000  3.0000\n  16   0.1740 -0.1740\n  rep  3.0000  3.0000\n  17   0.4623 -0.4623\n  rep  3.0000  3.0000\n  18   0.0707 -0.0707\n  rep  3.0000  3.0000\n  19   0.5290 -0.5290\n  rep  3.0000  3.0000\n  20  -0.1912  0.1275\n  rep  2.0000  3.0000\n\n\none way ANOVA와 같이 해석\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   15.5   0.816    1.18   0.29\nnoon         1    0.7   0.748    1.08   0.30\nDay:noon    19   18.1   0.951    1.38   0.16\nResiduals   79   54.5   0.690               \n1 observation deleted due to missingness\n\n\n위 그림을 보듯이 두 변수의 영향도가 없음, ANOVA 역시 유의하지 않음\n\n\n\n\n\n\n Missing rows: 117 \n\n\n\n\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = Ct ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff      lwr     upr   p adj\n2-1   -0.2883333 -2.04672 1.47005 1.00000\n3-1   -0.1916667 -1.95005 1.56672 1.00000\n4-1   -0.6716667 -2.43005 1.08672 0.99700\n5-1   -0.1566667 -1.91505 1.60172 1.00000\n6-1   -0.3200000 -2.07839 1.43839 1.00000\n7-1   -0.3016667 -2.06005 1.45672 1.00000\n8-1   -0.2050000 -1.96339 1.55339 1.00000\n9-1    0.4016667 -1.35672 2.16005 1.00000\n10-1  -0.5966667 -2.35505 1.16172 0.99934\n11-1   0.0866667 -1.67172 1.84505 1.00000\n12-1  -0.9583333 -2.71672 0.80005 0.89330\n13-1  -0.1633333 -1.92172 1.59505 1.00000\n14-1  -0.8700000 -2.62839 0.88839 0.95243\n15-1  -0.8766667 -2.63505 0.88172 0.94905\n16-1  -0.7433333 -2.50172 1.01505 0.99024\n17-1  -0.8116667 -2.57005 0.94672 0.97539\n18-1  -0.5666667 -2.32505 1.19172 0.99968\n19-1  -0.6750000 -2.43339 1.08339 0.99682\n20-1  -0.1406667 -1.98488 1.70355 1.00000\n3-2    0.0966667 -1.66172 1.85505 1.00000\n4-2   -0.3833333 -2.14172 1.37505 1.00000\n5-2    0.1316667 -1.62672 1.89005 1.00000\n6-2   -0.0316667 -1.79005 1.72672 1.00000\n7-2   -0.0133333 -1.77172 1.74505 1.00000\n8-2    0.0833333 -1.67505 1.84172 1.00000\n9-2    0.6900000 -1.06839 2.44839 0.99585\n10-2  -0.3083333 -2.06672 1.45005 1.00000\n11-2   0.3750000 -1.38339 2.13339 1.00000\n12-2  -0.6700000 -2.42839 1.08839 0.99709\n13-2   0.1250000 -1.63339 1.88339 1.00000\n14-2  -0.5816667 -2.34005 1.17672 0.99953\n15-2  -0.5883333 -2.34672 1.17005 0.99946\n16-2  -0.4550000 -2.21339 1.30339 0.99999\n17-2  -0.5233333 -2.28172 1.23505 0.99990\n18-2  -0.2783333 -2.03672 1.48005 1.00000\n19-2  -0.3866667 -2.14505 1.37172 1.00000\n20-2   0.1476667 -1.69655 1.99188 1.00000\n4-3   -0.4800000 -2.23839 1.27839 0.99997\n5-3    0.0350000 -1.72339 1.79339 1.00000\n6-3   -0.1283333 -1.88672 1.63005 1.00000\n7-3   -0.1100000 -1.86839 1.64839 1.00000\n8-3   -0.0133333 -1.77172 1.74505 1.00000\n9-3    0.5933333 -1.16505 2.35172 0.99939\n10-3  -0.4050000 -2.16339 1.35339 1.00000\n11-3   0.2783333 -1.48005 2.03672 1.00000\n12-3  -0.7666667 -2.52505 0.99172 0.98634\n13-3   0.0283333 -1.73005 1.78672 1.00000\n14-3  -0.6783333 -2.43672 1.08005 0.99662\n15-3  -0.6850000 -2.44339 1.07339 0.99620\n16-3  -0.5516667 -2.31005 1.20672 0.99978\n17-3  -0.6200000 -2.37839 1.13839 0.99891\n18-3  -0.3750000 -2.13339 1.38339 1.00000\n19-3  -0.4833333 -2.24172 1.27505 0.99997\n20-3   0.0510000 -1.79321 1.89521 1.00000\n5-4    0.5150000 -1.24339 2.27339 0.99992\n6-4    0.3516667 -1.40672 2.11005 1.00000\n7-4    0.3700000 -1.38839 2.12839 1.00000\n8-4    0.4666667 -1.29172 2.22505 0.99998\n9-4    1.0733333 -0.68505 2.83172 0.76824\n10-4   0.0750000 -1.68339 1.83339 1.00000\n11-4   0.7583333 -1.00005 2.51672 0.98785\n12-4  -0.2866667 -2.04505 1.47172 1.00000\n13-4   0.5083333 -1.25005 2.26672 0.99993\n14-4  -0.1983333 -1.95672 1.56005 1.00000\n15-4  -0.2050000 -1.96339 1.55339 1.00000\n16-4  -0.0716667 -1.83005 1.68672 1.00000\n17-4  -0.1400000 -1.89839 1.61839 1.00000\n18-4   0.1050000 -1.65339 1.86339 1.00000\n19-4  -0.0033333 -1.76172 1.75505 1.00000\n20-4   0.5310000 -1.31321 2.37521 0.99994\n6-5   -0.1633333 -1.92172 1.59505 1.00000\n7-5   -0.1450000 -1.90339 1.61339 1.00000\n8-5   -0.0483333 -1.80672 1.71005 1.00000\n9-5    0.5583333 -1.20005 2.31672 0.99974\n10-5  -0.4400000 -2.19839 1.31839 0.99999\n11-5   0.2433333 -1.51505 2.00172 1.00000\n12-5  -0.8016667 -2.56005 0.95672 0.97827\n13-5  -0.0066667 -1.76505 1.75172 1.00000\n14-5  -0.7133333 -2.47172 1.04505 0.99387\n15-5  -0.7200000 -2.47839 1.03839 0.99318\n16-5  -0.5866667 -2.34505 1.17172 0.99948\n17-5  -0.6550000 -2.41339 1.10339 0.99780\n18-5  -0.4100000 -2.16839 1.34839 1.00000\n19-5  -0.5183333 -2.27672 1.24005 0.99991\n20-5   0.0160000 -1.82821 1.86021 1.00000\n7-6    0.0183333 -1.74005 1.77672 1.00000\n8-6    0.1150000 -1.64339 1.87339 1.00000\n9-6    0.7216667 -1.03672 2.48005 0.99300\n10-6  -0.2766667 -2.03505 1.48172 1.00000\n11-6   0.4066667 -1.35172 2.16505 1.00000\n12-6  -0.6383333 -2.39672 1.12005 0.99841\n13-6   0.1566667 -1.60172 1.91505 1.00000\n14-6  -0.5500000 -2.30839 1.20839 0.99979\n15-6  -0.5566667 -2.31505 1.20172 0.99975\n16-6  -0.4233333 -2.18172 1.33505 1.00000\n17-6  -0.4916667 -2.25005 1.26672 0.99996\n18-6  -0.2466667 -2.00505 1.51172 1.00000\n19-6  -0.3550000 -2.11339 1.40339 1.00000\n20-6   0.1793333 -1.66488 2.02355 1.00000\n8-7    0.0966667 -1.66172 1.85505 1.00000\n9-7    0.7033333 -1.05505 2.46172 0.99480\n10-7  -0.2950000 -2.05339 1.46339 1.00000\n11-7   0.3883333 -1.37005 2.14672 1.00000\n12-7  -0.6566667 -2.41505 1.10172 0.99773\n13-7   0.1383333 -1.62005 1.89672 1.00000\n14-7  -0.5683333 -2.32672 1.19005 0.99966\n15-7  -0.5750000 -2.33339 1.18339 0.99960\n16-7  -0.4416667 -2.20005 1.31672 0.99999\n17-7  -0.5100000 -2.26839 1.24839 0.99993\n18-7  -0.2650000 -2.02339 1.49339 1.00000\n19-7  -0.3733333 -2.13172 1.38505 1.00000\n20-7   0.1610000 -1.68321 2.00521 1.00000\n9-8    0.6066667 -1.15172 2.36505 0.99918\n10-8  -0.3916667 -2.15005 1.36672 1.00000\n11-8   0.2916667 -1.46672 2.05005 1.00000\n12-8  -0.7533333 -2.51172 1.00505 0.98869\n13-8   0.0416667 -1.71672 1.80005 1.00000\n14-8  -0.6650000 -2.42339 1.09339 0.99735\n15-8  -0.6716667 -2.43005 1.08672 0.99700\n16-8  -0.5383333 -2.29672 1.22005 0.99984\n17-8  -0.6066667 -2.36505 1.15172 0.99918\n18-8  -0.3616667 -2.12005 1.39672 1.00000\n19-8  -0.4700000 -2.22839 1.28839 0.99998\n20-8   0.0643333 -1.77988 1.90855 1.00000\n10-9  -0.9983333 -2.75672 0.76005 0.85576\n11-9  -0.3150000 -2.07339 1.44339 1.00000\n12-9  -1.3600000 -3.11839 0.39839 0.35269\n13-9  -0.5650000 -2.32339 1.19339 0.99969\n14-9  -1.2716667 -3.03005 0.48672 0.47719\n15-9  -1.2783333 -3.03672 0.48005 0.46731\n16-9  -1.1450000 -2.90339 0.61339 0.66832\n17-9  -1.2133333 -2.97172 0.54505 0.56535\n18-9  -0.9683333 -2.72672 0.79005 0.88455\n19-9  -1.0766667 -2.83505 0.68172 0.76389\n20-9  -0.5423333 -2.38655 1.30188 0.99991\n11-10  0.6833333 -1.07505 2.44172 0.99631\n12-10 -0.3616667 -2.12005 1.39672 1.00000\n13-10  0.4333333 -1.32505 2.19172 0.99999\n14-10 -0.2733333 -2.03172 1.48505 1.00000\n15-10 -0.2800000 -2.03839 1.47839 1.00000\n16-10 -0.1466667 -1.90505 1.61172 1.00000\n17-10 -0.2150000 -1.97339 1.54339 1.00000\n18-10  0.0300000 -1.72839 1.78839 1.00000\n19-10 -0.0783333 -1.83672 1.68005 1.00000\n20-10  0.4560000 -1.38821 2.30021 0.99999\n12-11 -1.0450000 -2.80339 0.71339 0.80373\n13-11 -0.2500000 -2.00839 1.50839 1.00000\n14-11 -0.9566667 -2.71505 0.80172 0.89472\n15-11 -0.9633333 -2.72172 0.79505 0.88898\n16-11 -0.8300000 -2.58839 0.92839 0.96936\n17-11 -0.8983333 -2.65672 0.86005 0.93692\n18-11 -0.6533333 -2.41172 1.10505 0.99787\n19-11 -0.7616667 -2.52005 0.99672 0.98726\n20-11 -0.2273333 -2.07155 1.61688 1.00000\n13-12  0.7950000 -0.96339 2.55339 0.98004\n14-12  0.0883333 -1.67005 1.84672 1.00000\n15-12  0.0816667 -1.67672 1.84005 1.00000\n16-12  0.2150000 -1.54339 1.97339 1.00000\n17-12  0.1466667 -1.61172 1.90505 1.00000\n18-12  0.3916667 -1.36672 2.15005 1.00000\n19-12  0.2833333 -1.47505 2.04172 1.00000\n20-12  0.8176667 -1.02655 2.66188 0.98369\n14-13 -0.7066667 -2.46505 1.05172 0.99450\n15-13 -0.7133333 -2.47172 1.04505 0.99387\n16-13 -0.5800000 -2.33839 1.17839 0.99955\n17-13 -0.6483333 -2.40672 1.11005 0.99807\n18-13 -0.4033333 -2.16172 1.35505 1.00000\n19-13 -0.5116667 -2.27005 1.24672 0.99992\n20-13  0.0226667 -1.82155 1.86688 1.00000\n15-14 -0.0066667 -1.76505 1.75172 1.00000\n16-14  0.1266667 -1.63172 1.88505 1.00000\n17-14  0.0583333 -1.70005 1.81672 1.00000\n18-14  0.3033333 -1.45505 2.06172 1.00000\n19-14  0.1950000 -1.56339 1.95339 1.00000\n20-14  0.7293333 -1.11488 2.57355 0.99545\n16-15  0.1333333 -1.62505 1.89172 1.00000\n17-15  0.0650000 -1.69339 1.82339 1.00000\n18-15  0.3100000 -1.44839 2.06839 1.00000\n19-15  0.2016667 -1.55672 1.96005 1.00000\n20-15  0.7360000 -1.10821 2.58021 0.99493\n17-16 -0.0683333 -1.82672 1.69005 1.00000\n18-16  0.1766667 -1.58172 1.93505 1.00000\n19-16  0.0683333 -1.69005 1.82672 1.00000\n20-16  0.6026667 -1.24155 2.44688 0.99961\n18-17  0.2450000 -1.51339 2.00339 1.00000\n19-17  0.1366667 -1.62172 1.89505 1.00000\n20-17  0.6710000 -1.17321 2.51521 0.99837\n19-18 -0.1083333 -1.86672 1.65005 1.00000\n20-18  0.4260000 -1.41821 2.27021 1.00000\n20-19  0.5343333 -1.30988 2.37855 0.99993\n\n$noon\n          diff      lwr     upr   p adj\nPM-AM -0.15843 -0.46155 0.14469 0.30135\n\n$`Day:noon`\n                  diff      lwr     upr   p adj\n2:AM-1:AM    0.1900000 -2.55252 2.93252 1.00000\n3:AM-1:AM   -0.1333333 -2.87586 2.60919 1.00000\n4:AM-1:AM    0.0333333 -2.70919 2.77586 1.00000\n5:AM-1:AM    0.3966667 -2.34586 3.13919 1.00000\n6:AM-1:AM    0.4600000 -2.28252 3.20252 1.00000\n7:AM-1:AM    0.2100000 -2.53252 2.95252 1.00000\n8:AM-1:AM    0.7100000 -2.03252 3.45252 1.00000\n9:AM-1:AM    1.5966667 -1.14586 4.33919 0.92887\n10:AM-1:AM  -0.4400000 -3.18252 2.30252 1.00000\n11:AM-1:AM   1.5000000 -1.24252 4.24252 0.96592\n12:AM-1:AM  -0.4700000 -3.21252 2.27252 1.00000\n13:AM-1:AM   0.2166667 -2.52586 2.95919 1.00000\n14:AM-1:AM  -0.4766667 -3.21919 2.26586 1.00000\n15:AM-1:AM  -0.8233333 -3.56586 1.91919 1.00000\n16:AM-1:AM   0.0433333 -2.69919 2.78586 1.00000\n17:AM-1:AM   0.2633333 -2.47919 3.00586 1.00000\n18:AM-1:AM   0.1166667 -2.62586 2.85919 1.00000\n19:AM-1:AM   0.4666667 -2.27586 3.20919 1.00000\n20:AM-1:AM   0.2966667 -2.76957 3.36290 1.00000\n1:PM-1:AM    1.0666667 -1.67586 3.80919 0.99990\n2:PM-1:AM    0.3000000 -2.44252 3.04252 1.00000\n3:PM-1:AM    0.8166667 -1.92586 3.55919 1.00000\n4:PM-1:AM   -0.3100000 -3.05252 2.43252 1.00000\n5:PM-1:AM    0.3566667 -2.38586 3.09919 1.00000\n6:PM-1:AM   -0.0333333 -2.77586 2.70919 1.00000\n7:PM-1:AM    0.2533333 -2.48919 2.99586 1.00000\n8:PM-1:AM   -0.0533333 -2.79586 2.68919 1.00000\n9:PM-1:AM    0.2733333 -2.46919 3.01586 1.00000\n10:PM-1:AM   0.3133333 -2.42919 3.05586 1.00000\n11:PM-1:AM  -0.2600000 -3.00252 2.48252 1.00000\n12:PM-1:AM  -0.3800000 -3.12252 2.36252 1.00000\n13:PM-1:AM   0.5233333 -2.21919 3.26586 1.00000\n14:PM-1:AM  -0.1966667 -2.93919 2.54586 1.00000\n15:PM-1:AM   0.1366667 -2.60586 2.87919 1.00000\n16:PM-1:AM  -0.4633333 -3.20586 2.27919 1.00000\n17:PM-1:AM  -0.8200000 -3.56252 1.92252 1.00000\n18:PM-1:AM  -0.1833333 -2.92586 2.55919 1.00000\n19:PM-1:AM  -0.7500000 -3.49252 1.99252 1.00000\n20:PM-1:AM   0.4566667 -2.28586 3.19919 1.00000\n3:AM-2:AM   -0.3233333 -3.06586 2.41919 1.00000\n4:AM-2:AM   -0.1566667 -2.89919 2.58586 1.00000\n5:AM-2:AM    0.2066667 -2.53586 2.94919 1.00000\n6:AM-2:AM    0.2700000 -2.47252 3.01252 1.00000\n7:AM-2:AM    0.0200000 -2.72252 2.76252 1.00000\n8:AM-2:AM    0.5200000 -2.22252 3.26252 1.00000\n9:AM-2:AM    1.4066667 -1.33586 4.14919 0.98570\n10:AM-2:AM  -0.6300000 -3.37252 2.11252 1.00000\n11:AM-2:AM   1.3100000 -1.43252 4.05252 0.99521\n12:AM-2:AM  -0.6600000 -3.40252 2.08252 1.00000\n13:AM-2:AM   0.0266667 -2.71586 2.76919 1.00000\n14:AM-2:AM  -0.6666667 -3.40919 2.07586 1.00000\n15:AM-2:AM  -1.0133333 -3.75586 1.72919 0.99997\n16:AM-2:AM  -0.1466667 -2.88919 2.59586 1.00000\n17:AM-2:AM   0.0733333 -2.66919 2.81586 1.00000\n18:AM-2:AM  -0.0733333 -2.81586 2.66919 1.00000\n19:AM-2:AM   0.2766667 -2.46586 3.01919 1.00000\n20:AM-2:AM   0.1066667 -2.95957 3.17290 1.00000\n1:PM-2:AM    0.8766667 -1.86586 3.61919 1.00000\n2:PM-2:AM    0.1100000 -2.63252 2.85252 1.00000\n3:PM-2:AM    0.6266667 -2.11586 3.36919 1.00000\n4:PM-2:AM   -0.5000000 -3.24252 2.24252 1.00000\n5:PM-2:AM    0.1666667 -2.57586 2.90919 1.00000\n6:PM-2:AM   -0.2233333 -2.96586 2.51919 1.00000\n7:PM-2:AM    0.0633333 -2.67919 2.80586 1.00000\n8:PM-2:AM   -0.2433333 -2.98586 2.49919 1.00000\n9:PM-2:AM    0.0833333 -2.65919 2.82586 1.00000\n10:PM-2:AM   0.1233333 -2.61919 2.86586 1.00000\n11:PM-2:AM  -0.4500000 -3.19252 2.29252 1.00000\n12:PM-2:AM  -0.5700000 -3.31252 2.17252 1.00000\n13:PM-2:AM   0.3333333 -2.40919 3.07586 1.00000\n14:PM-2:AM  -0.3866667 -3.12919 2.35586 1.00000\n15:PM-2:AM  -0.0533333 -2.79586 2.68919 1.00000\n16:PM-2:AM  -0.6533333 -3.39586 2.08919 1.00000\n17:PM-2:AM  -1.0100000 -3.75252 1.73252 0.99997\n18:PM-2:AM  -0.3733333 -3.11586 2.36919 1.00000\n19:PM-2:AM  -0.9400000 -3.68252 1.80252 0.99999\n20:PM-2:AM   0.2666667 -2.47586 3.00919 1.00000\n4:AM-3:AM    0.1666667 -2.57586 2.90919 1.00000\n5:AM-3:AM    0.5300000 -2.21252 3.27252 1.00000\n6:AM-3:AM    0.5933333 -2.14919 3.33586 1.00000\n7:AM-3:AM    0.3433333 -2.39919 3.08586 1.00000\n8:AM-3:AM    0.8433333 -1.89919 3.58586 1.00000\n9:AM-3:AM    1.7300000 -1.01252 4.47252 0.84321\n10:AM-3:AM  -0.3066667 -3.04919 2.43586 1.00000\n11:AM-3:AM   1.6333333 -1.10919 4.37586 0.90946\n12:AM-3:AM  -0.3366667 -3.07919 2.40586 1.00000\n13:AM-3:AM   0.3500000 -2.39252 3.09252 1.00000\n14:AM-3:AM  -0.3433333 -3.08586 2.39919 1.00000\n15:AM-3:AM  -0.6900000 -3.43252 2.05252 1.00000\n16:AM-3:AM   0.1766667 -2.56586 2.91919 1.00000\n17:AM-3:AM   0.3966667 -2.34586 3.13919 1.00000\n18:AM-3:AM   0.2500000 -2.49252 2.99252 1.00000\n19:AM-3:AM   0.6000000 -2.14252 3.34252 1.00000\n20:AM-3:AM   0.4300000 -2.63623 3.49623 1.00000\n1:PM-3:AM    1.2000000 -1.54252 3.94252 0.99897\n2:PM-3:AM    0.4333333 -2.30919 3.17586 1.00000\n3:PM-3:AM    0.9500000 -1.79252 3.69252 0.99999\n4:PM-3:AM   -0.1766667 -2.91919 2.56586 1.00000\n5:PM-3:AM    0.4900000 -2.25252 3.23252 1.00000\n6:PM-3:AM    0.1000000 -2.64252 2.84252 1.00000\n7:PM-3:AM    0.3866667 -2.35586 3.12919 1.00000\n8:PM-3:AM    0.0800000 -2.66252 2.82252 1.00000\n9:PM-3:AM    0.4066667 -2.33586 3.14919 1.00000\n10:PM-3:AM   0.4466667 -2.29586 3.18919 1.00000\n11:PM-3:AM  -0.1266667 -2.86919 2.61586 1.00000\n12:PM-3:AM  -0.2466667 -2.98919 2.49586 1.00000\n13:PM-3:AM   0.6566667 -2.08586 3.39919 1.00000\n14:PM-3:AM  -0.0633333 -2.80586 2.67919 1.00000\n15:PM-3:AM   0.2700000 -2.47252 3.01252 1.00000\n16:PM-3:AM  -0.3300000 -3.07252 2.41252 1.00000\n17:PM-3:AM  -0.6866667 -3.42919 2.05586 1.00000\n18:PM-3:AM  -0.0500000 -2.79252 2.69252 1.00000\n19:PM-3:AM  -0.6166667 -3.35919 2.12586 1.00000\n20:PM-3:AM   0.5900000 -2.15252 3.33252 1.00000\n5:AM-4:AM    0.3633333 -2.37919 3.10586 1.00000\n6:AM-4:AM    0.4266667 -2.31586 3.16919 1.00000\n7:AM-4:AM    0.1766667 -2.56586 2.91919 1.00000\n8:AM-4:AM    0.6766667 -2.06586 3.41919 1.00000\n9:AM-4:AM    1.5633333 -1.17919 4.30586 0.94386\n10:AM-4:AM  -0.4733333 -3.21586 2.26919 1.00000\n11:AM-4:AM   1.4666667 -1.27586 4.20919 0.97452\n12:AM-4:AM  -0.5033333 -3.24586 2.23919 1.00000\n13:AM-4:AM   0.1833333 -2.55919 2.92586 1.00000\n14:AM-4:AM  -0.5100000 -3.25252 2.23252 1.00000\n15:AM-4:AM  -0.8566667 -3.59919 1.88586 1.00000\n16:AM-4:AM   0.0100000 -2.73252 2.75252 1.00000\n17:AM-4:AM   0.2300000 -2.51252 2.97252 1.00000\n18:AM-4:AM   0.0833333 -2.65919 2.82586 1.00000\n19:AM-4:AM   0.4333333 -2.30919 3.17586 1.00000\n20:AM-4:AM   0.2633333 -2.80290 3.32957 1.00000\n1:PM-4:AM    1.0333333 -1.70919 3.77586 0.99995\n2:PM-4:AM    0.2666667 -2.47586 3.00919 1.00000\n3:PM-4:AM    0.7833333 -1.95919 3.52586 1.00000\n4:PM-4:AM   -0.3433333 -3.08586 2.39919 1.00000\n5:PM-4:AM    0.3233333 -2.41919 3.06586 1.00000\n6:PM-4:AM   -0.0666667 -2.80919 2.67586 1.00000\n7:PM-4:AM    0.2200000 -2.52252 2.96252 1.00000\n8:PM-4:AM   -0.0866667 -2.82919 2.65586 1.00000\n9:PM-4:AM    0.2400000 -2.50252 2.98252 1.00000\n10:PM-4:AM   0.2800000 -2.46252 3.02252 1.00000\n11:PM-4:AM  -0.2933333 -3.03586 2.44919 1.00000\n12:PM-4:AM  -0.4133333 -3.15586 2.32919 1.00000\n13:PM-4:AM   0.4900000 -2.25252 3.23252 1.00000\n14:PM-4:AM  -0.2300000 -2.97252 2.51252 1.00000\n15:PM-4:AM   0.1033333 -2.63919 2.84586 1.00000\n16:PM-4:AM  -0.4966667 -3.23919 2.24586 1.00000\n17:PM-4:AM  -0.8533333 -3.59586 1.88919 1.00000\n18:PM-4:AM  -0.2166667 -2.95919 2.52586 1.00000\n19:PM-4:AM  -0.7833333 -3.52586 1.95919 1.00000\n20:PM-4:AM   0.4233333 -2.31919 3.16586 1.00000\n6:AM-5:AM    0.0633333 -2.67919 2.80586 1.00000\n7:AM-5:AM   -0.1866667 -2.92919 2.55586 1.00000\n8:AM-5:AM    0.3133333 -2.42919 3.05586 1.00000\n9:AM-5:AM    1.2000000 -1.54252 3.94252 0.99897\n10:AM-5:AM  -0.8366667 -3.57919 1.90586 1.00000\n11:AM-5:AM   1.1033333 -1.63919 3.84586 0.99980\n12:AM-5:AM  -0.8666667 -3.60919 1.87586 1.00000\n13:AM-5:AM  -0.1800000 -2.92252 2.56252 1.00000\n14:AM-5:AM  -0.8733333 -3.61586 1.86919 1.00000\n15:AM-5:AM  -1.2200000 -3.96252 1.52252 0.99860\n16:AM-5:AM  -0.3533333 -3.09586 2.38919 1.00000\n17:AM-5:AM  -0.1333333 -2.87586 2.60919 1.00000\n18:AM-5:AM  -0.2800000 -3.02252 2.46252 1.00000\n19:AM-5:AM   0.0700000 -2.67252 2.81252 1.00000\n20:AM-5:AM  -0.1000000 -3.16623 2.96623 1.00000\n1:PM-5:AM    0.6700000 -2.07252 3.41252 1.00000\n2:PM-5:AM   -0.0966667 -2.83919 2.64586 1.00000\n3:PM-5:AM    0.4200000 -2.32252 3.16252 1.00000\n4:PM-5:AM   -0.7066667 -3.44919 2.03586 1.00000\n5:PM-5:AM   -0.0400000 -2.78252 2.70252 1.00000\n6:PM-5:AM   -0.4300000 -3.17252 2.31252 1.00000\n7:PM-5:AM   -0.1433333 -2.88586 2.59919 1.00000\n8:PM-5:AM   -0.4500000 -3.19252 2.29252 1.00000\n9:PM-5:AM   -0.1233333 -2.86586 2.61919 1.00000\n10:PM-5:AM  -0.0833333 -2.82586 2.65919 1.00000\n11:PM-5:AM  -0.6566667 -3.39919 2.08586 1.00000\n12:PM-5:AM  -0.7766667 -3.51919 1.96586 1.00000\n13:PM-5:AM   0.1266667 -2.61586 2.86919 1.00000\n14:PM-5:AM  -0.5933333 -3.33586 2.14919 1.00000\n15:PM-5:AM  -0.2600000 -3.00252 2.48252 1.00000\n16:PM-5:AM  -0.8600000 -3.60252 1.88252 1.00000\n17:PM-5:AM  -1.2166667 -3.95919 1.52586 0.99867\n18:PM-5:AM  -0.5800000 -3.32252 2.16252 1.00000\n19:PM-5:AM  -1.1466667 -3.88919 1.59586 0.99957\n20:PM-5:AM   0.0600000 -2.68252 2.80252 1.00000\n7:AM-6:AM   -0.2500000 -2.99252 2.49252 1.00000\n8:AM-6:AM    0.2500000 -2.49252 2.99252 1.00000\n9:AM-6:AM    1.1366667 -1.60586 3.87919 0.99964\n10:AM-6:AM  -0.9000000 -3.64252 1.84252 1.00000\n11:AM-6:AM   1.0400000 -1.70252 3.78252 0.99994\n12:AM-6:AM  -0.9300000 -3.67252 1.81252 1.00000\n13:AM-6:AM  -0.2433333 -2.98586 2.49919 1.00000\n14:AM-6:AM  -0.9366667 -3.67919 1.80586 1.00000\n15:AM-6:AM  -1.2833333 -4.02586 1.45919 0.99660\n16:AM-6:AM  -0.4166667 -3.15919 2.32586 1.00000\n17:AM-6:AM  -0.1966667 -2.93919 2.54586 1.00000\n18:AM-6:AM  -0.3433333 -3.08586 2.39919 1.00000\n19:AM-6:AM   0.0066667 -2.73586 2.74919 1.00000\n20:AM-6:AM  -0.1633333 -3.22957 2.90290 1.00000\n1:PM-6:AM    0.6066667 -2.13586 3.34919 1.00000\n2:PM-6:AM   -0.1600000 -2.90252 2.58252 1.00000\n3:PM-6:AM    0.3566667 -2.38586 3.09919 1.00000\n4:PM-6:AM   -0.7700000 -3.51252 1.97252 1.00000\n5:PM-6:AM   -0.1033333 -2.84586 2.63919 1.00000\n6:PM-6:AM   -0.4933333 -3.23586 2.24919 1.00000\n7:PM-6:AM   -0.2066667 -2.94919 2.53586 1.00000\n8:PM-6:AM   -0.5133333 -3.25586 2.22919 1.00000\n9:PM-6:AM   -0.1866667 -2.92919 2.55586 1.00000\n10:PM-6:AM  -0.1466667 -2.88919 2.59586 1.00000\n11:PM-6:AM  -0.7200000 -3.46252 2.02252 1.00000\n12:PM-6:AM  -0.8400000 -3.58252 1.90252 1.00000\n13:PM-6:AM   0.0633333 -2.67919 2.80586 1.00000\n14:PM-6:AM  -0.6566667 -3.39919 2.08586 1.00000\n15:PM-6:AM  -0.3233333 -3.06586 2.41919 1.00000\n16:PM-6:AM  -0.9233333 -3.66586 1.81919 1.00000\n17:PM-6:AM  -1.2800000 -4.02252 1.46252 0.99674\n18:PM-6:AM  -0.6433333 -3.38586 2.09919 1.00000\n19:PM-6:AM  -1.2100000 -3.95252 1.53252 0.99880\n20:PM-6:AM  -0.0033333 -2.74586 2.73919 1.00000\n8:AM-7:AM    0.5000000 -2.24252 3.24252 1.00000\n9:AM-7:AM    1.3866667 -1.35586 4.12919 0.98840\n10:AM-7:AM  -0.6500000 -3.39252 2.09252 1.00000\n11:AM-7:AM   1.2900000 -1.45252 4.03252 0.99629\n12:AM-7:AM  -0.6800000 -3.42252 2.06252 1.00000\n13:AM-7:AM   0.0066667 -2.73586 2.74919 1.00000\n14:AM-7:AM  -0.6866667 -3.42919 2.05586 1.00000\n15:AM-7:AM  -1.0333333 -3.77586 1.70919 0.99995\n16:AM-7:AM  -0.1666667 -2.90919 2.57586 1.00000\n17:AM-7:AM   0.0533333 -2.68919 2.79586 1.00000\n18:AM-7:AM  -0.0933333 -2.83586 2.64919 1.00000\n19:AM-7:AM   0.2566667 -2.48586 2.99919 1.00000\n20:AM-7:AM   0.0866667 -2.97957 3.15290 1.00000\n1:PM-7:AM    0.8566667 -1.88586 3.59919 1.00000\n2:PM-7:AM    0.0900000 -2.65252 2.83252 1.00000\n3:PM-7:AM    0.6066667 -2.13586 3.34919 1.00000\n4:PM-7:AM   -0.5200000 -3.26252 2.22252 1.00000\n5:PM-7:AM    0.1466667 -2.59586 2.88919 1.00000\n6:PM-7:AM   -0.2433333 -2.98586 2.49919 1.00000\n7:PM-7:AM    0.0433333 -2.69919 2.78586 1.00000\n8:PM-7:AM   -0.2633333 -3.00586 2.47919 1.00000\n9:PM-7:AM    0.0633333 -2.67919 2.80586 1.00000\n10:PM-7:AM   0.1033333 -2.63919 2.84586 1.00000\n11:PM-7:AM  -0.4700000 -3.21252 2.27252 1.00000\n12:PM-7:AM  -0.5900000 -3.33252 2.15252 1.00000\n13:PM-7:AM   0.3133333 -2.42919 3.05586 1.00000\n14:PM-7:AM  -0.4066667 -3.14919 2.33586 1.00000\n15:PM-7:AM  -0.0733333 -2.81586 2.66919 1.00000\n16:PM-7:AM  -0.6733333 -3.41586 2.06919 1.00000\n17:PM-7:AM  -1.0300000 -3.77252 1.71252 0.99996\n18:PM-7:AM  -0.3933333 -3.13586 2.34919 1.00000\n19:PM-7:AM  -0.9600000 -3.70252 1.78252 0.99999\n20:PM-7:AM   0.2466667 -2.49586 2.98919 1.00000\n9:AM-8:AM    0.8866667 -1.85586 3.62919 1.00000\n10:AM-8:AM  -1.1500000 -3.89252 1.59252 0.99954\n11:AM-8:AM   0.7900000 -1.95252 3.53252 1.00000\n12:AM-8:AM  -1.1800000 -3.92252 1.56252 0.99925\n13:AM-8:AM  -0.4933333 -3.23586 2.24919 1.00000\n14:AM-8:AM  -1.1866667 -3.92919 1.55586 0.99916\n15:AM-8:AM  -1.5333333 -4.27586 1.20919 0.95531\n16:AM-8:AM  -0.6666667 -3.40919 2.07586 1.00000\n17:AM-8:AM  -0.4466667 -3.18919 2.29586 1.00000\n18:AM-8:AM  -0.5933333 -3.33586 2.14919 1.00000\n19:AM-8:AM  -0.2433333 -2.98586 2.49919 1.00000\n20:AM-8:AM  -0.4133333 -3.47957 2.65290 1.00000\n1:PM-8:AM    0.3566667 -2.38586 3.09919 1.00000\n2:PM-8:AM   -0.4100000 -3.15252 2.33252 1.00000\n3:PM-8:AM    0.1066667 -2.63586 2.84919 1.00000\n4:PM-8:AM   -1.0200000 -3.76252 1.72252 0.99996\n5:PM-8:AM   -0.3533333 -3.09586 2.38919 1.00000\n6:PM-8:AM   -0.7433333 -3.48586 1.99919 1.00000\n7:PM-8:AM   -0.4566667 -3.19919 2.28586 1.00000\n8:PM-8:AM   -0.7633333 -3.50586 1.97919 1.00000\n9:PM-8:AM   -0.4366667 -3.17919 2.30586 1.00000\n10:PM-8:AM  -0.3966667 -3.13919 2.34586 1.00000\n11:PM-8:AM  -0.9700000 -3.71252 1.77252 0.99999\n12:PM-8:AM  -1.0900000 -3.83252 1.65252 0.99985\n13:PM-8:AM  -0.1866667 -2.92919 2.55586 1.00000\n14:PM-8:AM  -0.9066667 -3.64919 1.83586 1.00000\n15:PM-8:AM  -0.5733333 -3.31586 2.16919 1.00000\n16:PM-8:AM  -1.1733333 -3.91586 1.56919 0.99933\n17:PM-8:AM  -1.5300000 -4.27252 1.21252 0.95647\n18:PM-8:AM  -0.8933333 -3.63586 1.84919 1.00000\n19:PM-8:AM  -1.4600000 -4.20252 1.28252 0.97602\n20:PM-8:AM  -0.2533333 -2.99586 2.48919 1.00000\n10:AM-9:AM  -2.0366667 -4.77919 0.70586 0.52759\n11:AM-9:AM  -0.0966667 -2.83919 2.64586 1.00000\n12:AM-9:AM  -2.0666667 -4.80919 0.67586 0.49403\n13:AM-9:AM  -1.3800000 -4.12252 1.36252 0.98920\n14:AM-9:AM  -2.0733333 -4.81586 0.66919 0.48663\n15:AM-9:AM  -2.4200000 -5.16252 0.32252 0.17781\n16:AM-9:AM  -1.5533333 -4.29586 1.18919 0.94789\n17:AM-9:AM  -1.3333333 -4.07586 1.40919 0.99364\n18:AM-9:AM  -1.4800000 -4.22252 1.26252 0.97131\n19:AM-9:AM  -1.1300000 -3.87252 1.61252 0.99968\n20:AM-9:AM  -1.3000000 -4.36623 1.76623 0.99943\n1:PM-9:AM   -0.5300000 -3.27252 2.21252 1.00000\n2:PM-9:AM   -1.2966667 -4.03919 1.44586 0.99595\n3:PM-9:AM   -0.7800000 -3.52252 1.96252 1.00000\n4:PM-9:AM   -1.9066667 -4.64919 0.83586 0.67322\n5:PM-9:AM   -1.2400000 -3.98252 1.50252 0.99812\n6:PM-9:AM   -1.6300000 -4.37252 1.11252 0.91136\n7:PM-9:AM   -1.3433333 -4.08586 1.39919 0.99284\n8:PM-9:AM   -1.6500000 -4.39252 1.09252 0.89961\n9:PM-9:AM   -1.3233333 -4.06586 1.41919 0.99436\n10:PM-9:AM  -1.2833333 -4.02586 1.45919 0.99660\n11:PM-9:AM  -1.8566667 -4.59919 0.88586 0.72631\n12:PM-9:AM  -1.9766667 -4.71919 0.76586 0.59536\n13:PM-9:AM  -1.0733333 -3.81586 1.66919 0.99989\n14:PM-9:AM  -1.7933333 -4.53586 0.94919 0.78850\n15:PM-9:AM  -1.4600000 -4.20252 1.28252 0.97602\n16:PM-9:AM  -2.0600000 -4.80252 0.68252 0.50145\n17:PM-9:AM  -2.4166667 -5.15919 0.32586 0.17988\n18:PM-9:AM  -1.7800000 -4.52252 0.96252 0.80070\n19:PM-9:AM  -2.3466667 -5.08919 0.39586 0.22767\n20:PM-9:AM  -1.1400000 -3.88252 1.60252 0.99962\n11:AM-10:AM  1.9400000 -0.80252 4.68252 0.63649\n12:AM-10:AM -0.0300000 -2.77252 2.71252 1.00000\n13:AM-10:AM  0.6566667 -2.08586 3.39919 1.00000\n14:AM-10:AM -0.0366667 -2.77919 2.70586 1.00000\n15:AM-10:AM -0.3833333 -3.12586 2.35919 1.00000\n16:AM-10:AM  0.4833333 -2.25919 3.22586 1.00000\n17:AM-10:AM  0.7033333 -2.03919 3.44586 1.00000\n18:AM-10:AM  0.5566667 -2.18586 3.29919 1.00000\n19:AM-10:AM  0.9066667 -1.83586 3.64919 1.00000\n20:AM-10:AM  0.7366667 -2.32957 3.80290 1.00000\n1:PM-10:AM   1.5066667 -1.23586 4.24919 0.96397\n2:PM-10:AM   0.7400000 -2.00252 3.48252 1.00000\n3:PM-10:AM   1.2566667 -1.48586 3.99919 0.99763\n4:PM-10:AM   0.1300000 -2.61252 2.87252 1.00000\n5:PM-10:AM   0.7966667 -1.94586 3.53919 1.00000\n6:PM-10:AM   0.4066667 -2.33586 3.14919 1.00000\n7:PM-10:AM   0.6933333 -2.04919 3.43586 1.00000\n8:PM-10:AM   0.3866667 -2.35586 3.12919 1.00000\n9:PM-10:AM   0.7133333 -2.02919 3.45586 1.00000\n10:PM-10:AM  0.7533333 -1.98919 3.49586 1.00000\n11:PM-10:AM  0.1800000 -2.56252 2.92252 1.00000\n12:PM-10:AM  0.0600000 -2.68252 2.80252 1.00000\n13:PM-10:AM  0.9633333 -1.77919 3.70586 0.99999\n14:PM-10:AM  0.2433333 -2.49919 2.98586 1.00000\n15:PM-10:AM  0.5766667 -2.16586 3.31919 1.00000\n16:PM-10:AM -0.0233333 -2.76586 2.71919 1.00000\n17:PM-10:AM -0.3800000 -3.12252 2.36252 1.00000\n18:PM-10:AM  0.2566667 -2.48586 2.99919 1.00000\n19:PM-10:AM -0.3100000 -3.05252 2.43252 1.00000\n20:PM-10:AM  0.8966667 -1.84586 3.63919 1.00000\n12:AM-11:AM -1.9700000 -4.71252 0.77252 0.60287\n13:AM-11:AM -1.2833333 -4.02586 1.45919 0.99660\n14:AM-11:AM -1.9766667 -4.71919 0.76586 0.59536\n15:AM-11:AM -2.3233333 -5.06586 0.41919 0.24541\n16:AM-11:AM -1.4566667 -4.19919 1.28586 0.97675\n17:AM-11:AM -1.2366667 -3.97919 1.50586 0.99821\n18:AM-11:AM -1.3833333 -4.12586 1.35919 0.98880\n19:AM-11:AM -1.0333333 -3.77586 1.70919 0.99995\n20:AM-11:AM -1.2033333 -4.26957 1.86290 0.99988\n1:PM-11:AM  -0.4333333 -3.17586 2.30919 1.00000\n2:PM-11:AM  -1.2000000 -3.94252 1.54252 0.99897\n3:PM-11:AM  -0.6833333 -3.42586 2.05919 1.00000\n4:PM-11:AM  -1.8100000 -4.55252 0.93252 0.77279\n5:PM-11:AM  -1.1433333 -3.88586 1.59919 0.99959\n6:PM-11:AM  -1.5333333 -4.27586 1.20919 0.95531\n7:PM-11:AM  -1.2466667 -3.98919 1.49586 0.99794\n8:PM-11:AM  -1.5533333 -4.29586 1.18919 0.94789\n9:PM-11:AM  -1.2266667 -3.96919 1.51586 0.99846\n10:PM-11:AM -1.1866667 -3.92919 1.55586 0.99916\n11:PM-11:AM -1.7600000 -4.50252 0.98252 0.81833\n12:PM-11:AM -1.8800000 -4.62252 0.86252 0.70190\n13:PM-11:AM -0.9766667 -3.71919 1.76586 0.99999\n14:PM-11:AM -1.6966667 -4.43919 1.04586 0.86852\n15:PM-11:AM -1.3633333 -4.10586 1.37919 0.99101\n16:PM-11:AM -1.9633333 -4.70586 0.77919 0.61038\n17:PM-11:AM -2.3200000 -5.06252 0.42252 0.24802\n18:PM-11:AM -1.6833333 -4.42586 1.05919 0.87792\n19:PM-11:AM -2.2500000 -4.99252 0.49252 0.30702\n20:PM-11:AM -1.0433333 -3.78586 1.69919 0.99994\n13:AM-12:AM  0.6866667 -2.05586 3.42919 1.00000\n14:AM-12:AM -0.0066667 -2.74919 2.73586 1.00000\n15:AM-12:AM -0.3533333 -3.09586 2.38919 1.00000\n16:AM-12:AM  0.5133333 -2.22919 3.25586 1.00000\n17:AM-12:AM  0.7333333 -2.00919 3.47586 1.00000\n18:AM-12:AM  0.5866667 -2.15586 3.32919 1.00000\n19:AM-12:AM  0.9366667 -1.80586 3.67919 1.00000\n20:AM-12:AM  0.7666667 -2.29957 3.83290 1.00000\n1:PM-12:AM   1.5366667 -1.20586 4.27919 0.95413\n2:PM-12:AM   0.7700000 -1.97252 3.51252 1.00000\n3:PM-12:AM   1.2866667 -1.45586 4.02919 0.99645\n4:PM-12:AM   0.1600000 -2.58252 2.90252 1.00000\n5:PM-12:AM   0.8266667 -1.91586 3.56919 1.00000\n6:PM-12:AM   0.4366667 -2.30586 3.17919 1.00000\n7:PM-12:AM   0.7233333 -2.01919 3.46586 1.00000\n8:PM-12:AM   0.4166667 -2.32586 3.15919 1.00000\n9:PM-12:AM   0.7433333 -1.99919 3.48586 1.00000\n10:PM-12:AM  0.7833333 -1.95919 3.52586 1.00000\n11:PM-12:AM  0.2100000 -2.53252 2.95252 1.00000\n12:PM-12:AM  0.0900000 -2.65252 2.83252 1.00000\n13:PM-12:AM  0.9933333 -1.74919 3.73586 0.99998\n14:PM-12:AM  0.2733333 -2.46919 3.01586 1.00000\n15:PM-12:AM  0.6066667 -2.13586 3.34919 1.00000\n16:PM-12:AM  0.0066667 -2.73586 2.74919 1.00000\n17:PM-12:AM -0.3500000 -3.09252 2.39252 1.00000\n18:PM-12:AM  0.2866667 -2.45586 3.02919 1.00000\n19:PM-12:AM -0.2800000 -3.02252 2.46252 1.00000\n20:PM-12:AM  0.9266667 -1.81586 3.66919 1.00000\n14:AM-13:AM -0.6933333 -3.43586 2.04919 1.00000\n15:AM-13:AM -1.0400000 -3.78252 1.70252 0.99994\n16:AM-13:AM -0.1733333 -2.91586 2.56919 1.00000\n17:AM-13:AM  0.0466667 -2.69586 2.78919 1.00000\n18:AM-13:AM -0.1000000 -2.84252 2.64252 1.00000\n19:AM-13:AM  0.2500000 -2.49252 2.99252 1.00000\n20:AM-13:AM  0.0800000 -2.98623 3.14623 1.00000\n1:PM-13:AM   0.8500000 -1.89252 3.59252 1.00000\n2:PM-13:AM   0.0833333 -2.65919 2.82586 1.00000\n3:PM-13:AM   0.6000000 -2.14252 3.34252 1.00000\n4:PM-13:AM  -0.5266667 -3.26919 2.21586 1.00000\n5:PM-13:AM   0.1400000 -2.60252 2.88252 1.00000\n6:PM-13:AM  -0.2500000 -2.99252 2.49252 1.00000\n7:PM-13:AM   0.0366667 -2.70586 2.77919 1.00000\n8:PM-13:AM  -0.2700000 -3.01252 2.47252 1.00000\n9:PM-13:AM   0.0566667 -2.68586 2.79919 1.00000\n10:PM-13:AM  0.0966667 -2.64586 2.83919 1.00000\n11:PM-13:AM -0.4766667 -3.21919 2.26586 1.00000\n12:PM-13:AM -0.5966667 -3.33919 2.14586 1.00000\n13:PM-13:AM  0.3066667 -2.43586 3.04919 1.00000\n14:PM-13:AM -0.4133333 -3.15586 2.32919 1.00000\n15:PM-13:AM -0.0800000 -2.82252 2.66252 1.00000\n16:PM-13:AM -0.6800000 -3.42252 2.06252 1.00000\n17:PM-13:AM -1.0366667 -3.77919 1.70586 0.99995\n18:PM-13:AM -0.4000000 -3.14252 2.34252 1.00000\n19:PM-13:AM -0.9666667 -3.70919 1.77586 0.99999\n20:PM-13:AM  0.2400000 -2.50252 2.98252 1.00000\n15:AM-14:AM -0.3466667 -3.08919 2.39586 1.00000\n16:AM-14:AM  0.5200000 -2.22252 3.26252 1.00000\n17:AM-14:AM  0.7400000 -2.00252 3.48252 1.00000\n18:AM-14:AM  0.5933333 -2.14919 3.33586 1.00000\n19:AM-14:AM  0.9433333 -1.79919 3.68586 0.99999\n20:AM-14:AM  0.7733333 -2.29290 3.83957 1.00000\n1:PM-14:AM   1.5433333 -1.19919 4.28586 0.95170\n2:PM-14:AM   0.7766667 -1.96586 3.51919 1.00000\n3:PM-14:AM   1.2933333 -1.44919 4.03586 0.99612\n4:PM-14:AM   0.1666667 -2.57586 2.90919 1.00000\n5:PM-14:AM   0.8333333 -1.90919 3.57586 1.00000\n6:PM-14:AM   0.4433333 -2.29919 3.18586 1.00000\n7:PM-14:AM   0.7300000 -2.01252 3.47252 1.00000\n8:PM-14:AM   0.4233333 -2.31919 3.16586 1.00000\n9:PM-14:AM   0.7500000 -1.99252 3.49252 1.00000\n10:PM-14:AM  0.7900000 -1.95252 3.53252 1.00000\n11:PM-14:AM  0.2166667 -2.52586 2.95919 1.00000\n12:PM-14:AM  0.0966667 -2.64586 2.83919 1.00000\n13:PM-14:AM  1.0000000 -1.74252 3.74252 0.99998\n14:PM-14:AM  0.2800000 -2.46252 3.02252 1.00000\n15:PM-14:AM  0.6133333 -2.12919 3.35586 1.00000\n16:PM-14:AM  0.0133333 -2.72919 2.75586 1.00000\n17:PM-14:AM -0.3433333 -3.08586 2.39919 1.00000\n18:PM-14:AM  0.2933333 -2.44919 3.03586 1.00000\n19:PM-14:AM -0.2733333 -3.01586 2.46919 1.00000\n20:PM-14:AM  0.9333333 -1.80919 3.67586 1.00000\n16:AM-15:AM  0.8666667 -1.87586 3.60919 1.00000\n17:AM-15:AM  1.0866667 -1.65586 3.82919 0.99986\n18:AM-15:AM  0.9400000 -1.80252 3.68252 0.99999\n19:AM-15:AM  1.2900000 -1.45252 4.03252 0.99629\n20:AM-15:AM  1.1200000 -1.94623 4.18623 0.99998\n1:PM-15:AM   1.8900000 -0.85252 4.63252 0.69123\n2:PM-15:AM   1.1233333 -1.61919 3.86586 0.99972\n3:PM-15:AM   1.6400000 -1.10252 4.38252 0.90560\n4:PM-15:AM   0.5133333 -2.22919 3.25586 1.00000\n5:PM-15:AM   1.1800000 -1.56252 3.92252 0.99925\n6:PM-15:AM   0.7900000 -1.95252 3.53252 1.00000\n7:PM-15:AM   1.0766667 -1.66586 3.81919 0.99988\n8:PM-15:AM   0.7700000 -1.97252 3.51252 1.00000\n9:PM-15:AM   1.0966667 -1.64586 3.83919 0.99983\n10:PM-15:AM  1.1366667 -1.60586 3.87919 0.99964\n11:PM-15:AM  0.5633333 -2.17919 3.30586 1.00000\n12:PM-15:AM  0.4433333 -2.29919 3.18586 1.00000\n13:PM-15:AM  1.3466667 -1.39586 4.08919 0.99256\n14:PM-15:AM  0.6266667 -2.11586 3.36919 1.00000\n15:PM-15:AM  0.9600000 -1.78252 3.70252 0.99999\n16:PM-15:AM  0.3600000 -2.38252 3.10252 1.00000\n17:PM-15:AM  0.0033333 -2.73919 2.74586 1.00000\n18:PM-15:AM  0.6400000 -2.10252 3.38252 1.00000\n19:PM-15:AM  0.0733333 -2.66919 2.81586 1.00000\n20:PM-15:AM  1.2800000 -1.46252 4.02252 0.99674\n17:AM-16:AM  0.2200000 -2.52252 2.96252 1.00000\n18:AM-16:AM  0.0733333 -2.66919 2.81586 1.00000\n19:AM-16:AM  0.4233333 -2.31919 3.16586 1.00000\n20:AM-16:AM  0.2533333 -2.81290 3.31957 1.00000\n1:PM-16:AM   1.0233333 -1.71919 3.76586 0.99996\n2:PM-16:AM   0.2566667 -2.48586 2.99919 1.00000\n3:PM-16:AM   0.7733333 -1.96919 3.51586 1.00000\n4:PM-16:AM  -0.3533333 -3.09586 2.38919 1.00000\n5:PM-16:AM   0.3133333 -2.42919 3.05586 1.00000\n6:PM-16:AM  -0.0766667 -2.81919 2.66586 1.00000\n7:PM-16:AM   0.2100000 -2.53252 2.95252 1.00000\n8:PM-16:AM  -0.0966667 -2.83919 2.64586 1.00000\n9:PM-16:AM   0.2300000 -2.51252 2.97252 1.00000\n10:PM-16:AM  0.2700000 -2.47252 3.01252 1.00000\n11:PM-16:AM -0.3033333 -3.04586 2.43919 1.00000\n12:PM-16:AM -0.4233333 -3.16586 2.31919 1.00000\n13:PM-16:AM  0.4800000 -2.26252 3.22252 1.00000\n14:PM-16:AM -0.2400000 -2.98252 2.50252 1.00000\n15:PM-16:AM  0.0933333 -2.64919 2.83586 1.00000\n16:PM-16:AM -0.5066667 -3.24919 2.23586 1.00000\n17:PM-16:AM -0.8633333 -3.60586 1.87919 1.00000\n18:PM-16:AM -0.2266667 -2.96919 2.51586 1.00000\n19:PM-16:AM -0.7933333 -3.53586 1.94919 1.00000\n20:PM-16:AM  0.4133333 -2.32919 3.15586 1.00000\n18:AM-17:AM -0.1466667 -2.88919 2.59586 1.00000\n19:AM-17:AM  0.2033333 -2.53919 2.94586 1.00000\n20:AM-17:AM  0.0333333 -3.03290 3.09957 1.00000\n1:PM-17:AM   0.8033333 -1.93919 3.54586 1.00000\n2:PM-17:AM   0.0366667 -2.70586 2.77919 1.00000\n3:PM-17:AM   0.5533333 -2.18919 3.29586 1.00000\n4:PM-17:AM  -0.5733333 -3.31586 2.16919 1.00000\n5:PM-17:AM   0.0933333 -2.64919 2.83586 1.00000\n6:PM-17:AM  -0.2966667 -3.03919 2.44586 1.00000\n7:PM-17:AM  -0.0100000 -2.75252 2.73252 1.00000\n8:PM-17:AM  -0.3166667 -3.05919 2.42586 1.00000\n9:PM-17:AM   0.0100000 -2.73252 2.75252 1.00000\n10:PM-17:AM  0.0500000 -2.69252 2.79252 1.00000\n11:PM-17:AM -0.5233333 -3.26586 2.21919 1.00000\n12:PM-17:AM -0.6433333 -3.38586 2.09919 1.00000\n13:PM-17:AM  0.2600000 -2.48252 3.00252 1.00000\n14:PM-17:AM -0.4600000 -3.20252 2.28252 1.00000\n15:PM-17:AM -0.1266667 -2.86919 2.61586 1.00000\n16:PM-17:AM -0.7266667 -3.46919 2.01586 1.00000\n17:PM-17:AM -1.0833333 -3.82586 1.65919 0.99987\n18:PM-17:AM -0.4466667 -3.18919 2.29586 1.00000\n19:PM-17:AM -1.0133333 -3.75586 1.72919 0.99997\n20:PM-17:AM  0.1933333 -2.54919 2.93586 1.00000\n19:AM-18:AM  0.3500000 -2.39252 3.09252 1.00000\n20:AM-18:AM  0.1800000 -2.88623 3.24623 1.00000\n1:PM-18:AM   0.9500000 -1.79252 3.69252 0.99999\n2:PM-18:AM   0.1833333 -2.55919 2.92586 1.00000\n3:PM-18:AM   0.7000000 -2.04252 3.44252 1.00000\n4:PM-18:AM  -0.4266667 -3.16919 2.31586 1.00000\n5:PM-18:AM   0.2400000 -2.50252 2.98252 1.00000\n6:PM-18:AM  -0.1500000 -2.89252 2.59252 1.00000\n7:PM-18:AM   0.1366667 -2.60586 2.87919 1.00000\n8:PM-18:AM  -0.1700000 -2.91252 2.57252 1.00000\n9:PM-18:AM   0.1566667 -2.58586 2.89919 1.00000\n10:PM-18:AM  0.1966667 -2.54586 2.93919 1.00000\n11:PM-18:AM -0.3766667 -3.11919 2.36586 1.00000\n12:PM-18:AM -0.4966667 -3.23919 2.24586 1.00000\n13:PM-18:AM  0.4066667 -2.33586 3.14919 1.00000\n14:PM-18:AM -0.3133333 -3.05586 2.42919 1.00000\n15:PM-18:AM  0.0200000 -2.72252 2.76252 1.00000\n16:PM-18:AM -0.5800000 -3.32252 2.16252 1.00000\n17:PM-18:AM -0.9366667 -3.67919 1.80586 1.00000\n18:PM-18:AM -0.3000000 -3.04252 2.44252 1.00000\n19:PM-18:AM -0.8666667 -3.60919 1.87586 1.00000\n20:PM-18:AM  0.3400000 -2.40252 3.08252 1.00000\n20:AM-19:AM -0.1700000 -3.23623 2.89623 1.00000\n1:PM-19:AM   0.6000000 -2.14252 3.34252 1.00000\n2:PM-19:AM  -0.1666667 -2.90919 2.57586 1.00000\n3:PM-19:AM   0.3500000 -2.39252 3.09252 1.00000\n4:PM-19:AM  -0.7766667 -3.51919 1.96586 1.00000\n5:PM-19:AM  -0.1100000 -2.85252 2.63252 1.00000\n6:PM-19:AM  -0.5000000 -3.24252 2.24252 1.00000\n7:PM-19:AM  -0.2133333 -2.95586 2.52919 1.00000\n8:PM-19:AM  -0.5200000 -3.26252 2.22252 1.00000\n9:PM-19:AM  -0.1933333 -2.93586 2.54919 1.00000\n10:PM-19:AM -0.1533333 -2.89586 2.58919 1.00000\n11:PM-19:AM -0.7266667 -3.46919 2.01586 1.00000\n12:PM-19:AM -0.8466667 -3.58919 1.89586 1.00000\n13:PM-19:AM  0.0566667 -2.68586 2.79919 1.00000\n14:PM-19:AM -0.6633333 -3.40586 2.07919 1.00000\n15:PM-19:AM -0.3300000 -3.07252 2.41252 1.00000\n16:PM-19:AM -0.9300000 -3.67252 1.81252 1.00000\n17:PM-19:AM -1.2866667 -4.02919 1.45586 0.99645\n18:PM-19:AM -0.6500000 -3.39252 2.09252 1.00000\n19:PM-19:AM -1.2166667 -3.95919 1.52586 0.99867\n20:PM-19:AM -0.0100000 -2.75252 2.73252 1.00000\n1:PM-20:AM   0.7700000 -2.29623 3.83623 1.00000\n2:PM-20:AM   0.0033333 -3.06290 3.06957 1.00000\n3:PM-20:AM   0.5200000 -2.54623 3.58623 1.00000\n4:PM-20:AM  -0.6066667 -3.67290 2.45957 1.00000\n5:PM-20:AM   0.0600000 -3.00623 3.12623 1.00000\n6:PM-20:AM  -0.3300000 -3.39623 2.73623 1.00000\n7:PM-20:AM  -0.0433333 -3.10957 3.02290 1.00000\n8:PM-20:AM  -0.3500000 -3.41623 2.71623 1.00000\n9:PM-20:AM  -0.0233333 -3.08957 3.04290 1.00000\n10:PM-20:AM  0.0166667 -3.04957 3.08290 1.00000\n11:PM-20:AM -0.5566667 -3.62290 2.50957 1.00000\n12:PM-20:AM -0.6766667 -3.74290 2.38957 1.00000\n13:PM-20:AM  0.2266667 -2.83957 3.29290 1.00000\n14:PM-20:AM -0.4933333 -3.55957 2.57290 1.00000\n15:PM-20:AM -0.1600000 -3.22623 2.90623 1.00000\n16:PM-20:AM -0.7600000 -3.82623 2.30623 1.00000\n17:PM-20:AM -1.1166667 -4.18290 1.94957 0.99998\n18:PM-20:AM -0.4800000 -3.54623 2.58623 1.00000\n19:PM-20:AM -1.0466667 -4.11290 2.01957 1.00000\n20:PM-20:AM  0.1600000 -2.90623 3.22623 1.00000\n2:PM-1:PM   -0.7666667 -3.50919 1.97586 1.00000\n3:PM-1:PM   -0.2500000 -2.99252 2.49252 1.00000\n4:PM-1:PM   -1.3766667 -4.11919 1.36586 0.98958\n5:PM-1:PM   -0.7100000 -3.45252 2.03252 1.00000\n6:PM-1:PM   -1.1000000 -3.84252 1.64252 0.99982\n7:PM-1:PM   -0.8133333 -3.55586 1.92919 1.00000\n8:PM-1:PM   -1.1200000 -3.86252 1.62252 0.99973\n9:PM-1:PM   -0.7933333 -3.53586 1.94919 1.00000\n10:PM-1:PM  -0.7533333 -3.49586 1.98919 1.00000\n11:PM-1:PM  -1.3266667 -4.06919 1.41586 0.99413\n12:PM-1:PM  -1.4466667 -4.18919 1.29586 0.97882\n13:PM-1:PM  -0.5433333 -3.28586 2.19919 1.00000\n14:PM-1:PM  -1.2633333 -4.00586 1.47919 0.99740\n15:PM-1:PM  -0.9300000 -3.67252 1.81252 1.00000\n16:PM-1:PM  -1.5300000 -4.27252 1.21252 0.95647\n17:PM-1:PM  -1.8866667 -4.62919 0.85586 0.69480\n18:PM-1:PM  -1.2500000 -3.99252 1.49252 0.99784\n19:PM-1:PM  -1.8166667 -4.55919 0.92586 0.76637\n20:PM-1:PM  -0.6100000 -3.35252 2.13252 1.00000\n3:PM-2:PM    0.5166667 -2.22586 3.25919 1.00000\n4:PM-2:PM   -0.6100000 -3.35252 2.13252 1.00000\n5:PM-2:PM    0.0566667 -2.68586 2.79919 1.00000\n6:PM-2:PM   -0.3333333 -3.07586 2.40919 1.00000\n7:PM-2:PM   -0.0466667 -2.78919 2.69586 1.00000\n8:PM-2:PM   -0.3533333 -3.09586 2.38919 1.00000\n9:PM-2:PM   -0.0266667 -2.76919 2.71586 1.00000\n10:PM-2:PM   0.0133333 -2.72919 2.75586 1.00000\n11:PM-2:PM  -0.5600000 -3.30252 2.18252 1.00000\n12:PM-2:PM  -0.6800000 -3.42252 2.06252 1.00000\n13:PM-2:PM   0.2233333 -2.51919 2.96586 1.00000\n14:PM-2:PM  -0.4966667 -3.23919 2.24586 1.00000\n15:PM-2:PM  -0.1633333 -2.90586 2.57919 1.00000\n16:PM-2:PM  -0.7633333 -3.50586 1.97919 1.00000\n17:PM-2:PM  -1.1200000 -3.86252 1.62252 0.99973\n18:PM-2:PM  -0.4833333 -3.22586 2.25919 1.00000\n19:PM-2:PM  -1.0500000 -3.79252 1.69252 0.99993\n20:PM-2:PM   0.1566667 -2.58586 2.89919 1.00000\n4:PM-3:PM   -1.1266667 -3.86919 1.61586 0.99970\n5:PM-3:PM   -0.4600000 -3.20252 2.28252 1.00000\n6:PM-3:PM   -0.8500000 -3.59252 1.89252 1.00000\n7:PM-3:PM   -0.5633333 -3.30586 2.17919 1.00000\n8:PM-3:PM   -0.8700000 -3.61252 1.87252 1.00000\n9:PM-3:PM   -0.5433333 -3.28586 2.19919 1.00000\n10:PM-3:PM  -0.5033333 -3.24586 2.23919 1.00000\n11:PM-3:PM  -1.0766667 -3.81919 1.66586 0.99988\n12:PM-3:PM  -1.1966667 -3.93919 1.54586 0.99902\n13:PM-3:PM  -0.2933333 -3.03586 2.44919 1.00000\n14:PM-3:PM  -1.0133333 -3.75586 1.72919 0.99997\n15:PM-3:PM  -0.6800000 -3.42252 2.06252 1.00000\n16:PM-3:PM  -1.2800000 -4.02252 1.46252 0.99674\n17:PM-3:PM  -1.6366667 -4.37919 1.10586 0.90755\n18:PM-3:PM  -1.0000000 -3.74252 1.74252 0.99998\n19:PM-3:PM  -1.5666667 -4.30919 1.17586 0.94247\n20:PM-3:PM  -0.3600000 -3.10252 2.38252 1.00000\n5:PM-4:PM    0.6666667 -2.07586 3.40919 1.00000\n6:PM-4:PM    0.2766667 -2.46586 3.01919 1.00000\n7:PM-4:PM    0.5633333 -2.17919 3.30586 1.00000\n8:PM-4:PM    0.2566667 -2.48586 2.99919 1.00000\n9:PM-4:PM    0.5833333 -2.15919 3.32586 1.00000\n10:PM-4:PM   0.6233333 -2.11919 3.36586 1.00000\n11:PM-4:PM   0.0500000 -2.69252 2.79252 1.00000\n12:PM-4:PM  -0.0700000 -2.81252 2.67252 1.00000\n13:PM-4:PM   0.8333333 -1.90919 3.57586 1.00000\n14:PM-4:PM   0.1133333 -2.62919 2.85586 1.00000\n15:PM-4:PM   0.4466667 -2.29586 3.18919 1.00000\n16:PM-4:PM  -0.1533333 -2.89586 2.58919 1.00000\n17:PM-4:PM  -0.5100000 -3.25252 2.23252 1.00000\n18:PM-4:PM   0.1266667 -2.61586 2.86919 1.00000\n19:PM-4:PM  -0.4400000 -3.18252 2.30252 1.00000\n20:PM-4:PM   0.7666667 -1.97586 3.50919 1.00000\n6:PM-5:PM   -0.3900000 -3.13252 2.35252 1.00000\n7:PM-5:PM   -0.1033333 -2.84586 2.63919 1.00000\n8:PM-5:PM   -0.4100000 -3.15252 2.33252 1.00000\n9:PM-5:PM   -0.0833333 -2.82586 2.65919 1.00000\n10:PM-5:PM  -0.0433333 -2.78586 2.69919 1.00000\n11:PM-5:PM  -0.6166667 -3.35919 2.12586 1.00000\n12:PM-5:PM  -0.7366667 -3.47919 2.00586 1.00000\n13:PM-5:PM   0.1666667 -2.57586 2.90919 1.00000\n14:PM-5:PM  -0.5533333 -3.29586 2.18919 1.00000\n15:PM-5:PM  -0.2200000 -2.96252 2.52252 1.00000\n16:PM-5:PM  -0.8200000 -3.56252 1.92252 1.00000\n17:PM-5:PM  -1.1766667 -3.91919 1.56586 0.99929\n18:PM-5:PM  -0.5400000 -3.28252 2.20252 1.00000\n19:PM-5:PM  -1.1066667 -3.84919 1.63586 0.99979\n20:PM-5:PM   0.1000000 -2.64252 2.84252 1.00000\n7:PM-6:PM    0.2866667 -2.45586 3.02919 1.00000\n8:PM-6:PM   -0.0200000 -2.76252 2.72252 1.00000\n9:PM-6:PM    0.3066667 -2.43586 3.04919 1.00000\n10:PM-6:PM   0.3466667 -2.39586 3.08919 1.00000\n11:PM-6:PM  -0.2266667 -2.96919 2.51586 1.00000\n12:PM-6:PM  -0.3466667 -3.08919 2.39586 1.00000\n13:PM-6:PM   0.5566667 -2.18586 3.29919 1.00000\n14:PM-6:PM  -0.1633333 -2.90586 2.57919 1.00000\n15:PM-6:PM   0.1700000 -2.57252 2.91252 1.00000\n16:PM-6:PM  -0.4300000 -3.17252 2.31252 1.00000\n17:PM-6:PM  -0.7866667 -3.52919 1.95586 1.00000\n18:PM-6:PM  -0.1500000 -2.89252 2.59252 1.00000\n19:PM-6:PM  -0.7166667 -3.45919 2.02586 1.00000\n20:PM-6:PM   0.4900000 -2.25252 3.23252 1.00000\n8:PM-7:PM   -0.3066667 -3.04919 2.43586 1.00000\n9:PM-7:PM    0.0200000 -2.72252 2.76252 1.00000\n10:PM-7:PM   0.0600000 -2.68252 2.80252 1.00000\n11:PM-7:PM  -0.5133333 -3.25586 2.22919 1.00000\n12:PM-7:PM  -0.6333333 -3.37586 2.10919 1.00000\n13:PM-7:PM   0.2700000 -2.47252 3.01252 1.00000\n14:PM-7:PM  -0.4500000 -3.19252 2.29252 1.00000\n15:PM-7:PM  -0.1166667 -2.85919 2.62586 1.00000\n16:PM-7:PM  -0.7166667 -3.45919 2.02586 1.00000\n17:PM-7:PM  -1.0733333 -3.81586 1.66919 0.99989\n18:PM-7:PM  -0.4366667 -3.17919 2.30586 1.00000\n19:PM-7:PM  -1.0033333 -3.74586 1.73919 0.99998\n20:PM-7:PM   0.2033333 -2.53919 2.94586 1.00000\n9:PM-8:PM    0.3266667 -2.41586 3.06919 1.00000\n10:PM-8:PM   0.3666667 -2.37586 3.10919 1.00000\n11:PM-8:PM  -0.2066667 -2.94919 2.53586 1.00000\n12:PM-8:PM  -0.3266667 -3.06919 2.41586 1.00000\n13:PM-8:PM   0.5766667 -2.16586 3.31919 1.00000\n14:PM-8:PM  -0.1433333 -2.88586 2.59919 1.00000\n15:PM-8:PM   0.1900000 -2.55252 2.93252 1.00000\n16:PM-8:PM  -0.4100000 -3.15252 2.33252 1.00000\n17:PM-8:PM  -0.7666667 -3.50919 1.97586 1.00000\n18:PM-8:PM  -0.1300000 -2.87252 2.61252 1.00000\n19:PM-8:PM  -0.6966667 -3.43919 2.04586 1.00000\n20:PM-8:PM   0.5100000 -2.23252 3.25252 1.00000\n10:PM-9:PM   0.0400000 -2.70252 2.78252 1.00000\n11:PM-9:PM  -0.5333333 -3.27586 2.20919 1.00000\n12:PM-9:PM  -0.6533333 -3.39586 2.08919 1.00000\n13:PM-9:PM   0.2500000 -2.49252 2.99252 1.00000\n14:PM-9:PM  -0.4700000 -3.21252 2.27252 1.00000\n15:PM-9:PM  -0.1366667 -2.87919 2.60586 1.00000\n16:PM-9:PM  -0.7366667 -3.47919 2.00586 1.00000\n17:PM-9:PM  -1.0933333 -3.83586 1.64919 0.99984\n18:PM-9:PM  -0.4566667 -3.19919 2.28586 1.00000\n19:PM-9:PM  -1.0233333 -3.76586 1.71919 0.99996\n20:PM-9:PM   0.1833333 -2.55919 2.92586 1.00000\n11:PM-10:PM -0.5733333 -3.31586 2.16919 1.00000\n12:PM-10:PM -0.6933333 -3.43586 2.04919 1.00000\n13:PM-10:PM  0.2100000 -2.53252 2.95252 1.00000\n14:PM-10:PM -0.5100000 -3.25252 2.23252 1.00000\n15:PM-10:PM -0.1766667 -2.91919 2.56586 1.00000\n16:PM-10:PM -0.7766667 -3.51919 1.96586 1.00000\n17:PM-10:PM -1.1333333 -3.87586 1.60919 0.99966\n18:PM-10:PM -0.4966667 -3.23919 2.24586 1.00000\n19:PM-10:PM -1.0633333 -3.80586 1.67919 0.99991\n20:PM-10:PM  0.1433333 -2.59919 2.88586 1.00000\n12:PM-11:PM -0.1200000 -2.86252 2.62252 1.00000\n13:PM-11:PM  0.7833333 -1.95919 3.52586 1.00000\n14:PM-11:PM  0.0633333 -2.67919 2.80586 1.00000\n15:PM-11:PM  0.3966667 -2.34586 3.13919 1.00000\n16:PM-11:PM -0.2033333 -2.94586 2.53919 1.00000\n17:PM-11:PM -0.5600000 -3.30252 2.18252 1.00000\n18:PM-11:PM  0.0766667 -2.66586 2.81919 1.00000\n19:PM-11:PM -0.4900000 -3.23252 2.25252 1.00000\n20:PM-11:PM  0.7166667 -2.02586 3.45919 1.00000\n13:PM-12:PM  0.9033333 -1.83919 3.64586 1.00000\n14:PM-12:PM  0.1833333 -2.55919 2.92586 1.00000\n15:PM-12:PM  0.5166667 -2.22586 3.25919 1.00000\n16:PM-12:PM -0.0833333 -2.82586 2.65919 1.00000\n17:PM-12:PM -0.4400000 -3.18252 2.30252 1.00000\n18:PM-12:PM  0.1966667 -2.54586 2.93919 1.00000\n19:PM-12:PM -0.3700000 -3.11252 2.37252 1.00000\n20:PM-12:PM  0.8366667 -1.90586 3.57919 1.00000\n14:PM-13:PM -0.7200000 -3.46252 2.02252 1.00000\n15:PM-13:PM -0.3866667 -3.12919 2.35586 1.00000\n16:PM-13:PM -0.9866667 -3.72919 1.75586 0.99998\n17:PM-13:PM -1.3433333 -4.08586 1.39919 0.99284\n18:PM-13:PM -0.7066667 -3.44919 2.03586 1.00000\n19:PM-13:PM -1.2733333 -4.01586 1.46919 0.99702\n20:PM-13:PM -0.0666667 -2.80919 2.67586 1.00000\n15:PM-14:PM  0.3333333 -2.40919 3.07586 1.00000\n16:PM-14:PM -0.2666667 -3.00919 2.47586 1.00000\n17:PM-14:PM -0.6233333 -3.36586 2.11919 1.00000\n18:PM-14:PM  0.0133333 -2.72919 2.75586 1.00000\n19:PM-14:PM -0.5533333 -3.29586 2.18919 1.00000\n20:PM-14:PM  0.6533333 -2.08919 3.39586 1.00000\n16:PM-15:PM -0.6000000 -3.34252 2.14252 1.00000\n17:PM-15:PM -0.9566667 -3.69919 1.78586 0.99999\n18:PM-15:PM -0.3200000 -3.06252 2.42252 1.00000\n19:PM-15:PM -0.8866667 -3.62919 1.85586 1.00000\n20:PM-15:PM  0.3200000 -2.42252 3.06252 1.00000\n17:PM-16:PM -0.3566667 -3.09919 2.38586 1.00000\n18:PM-16:PM  0.2800000 -2.46252 3.02252 1.00000\n19:PM-16:PM -0.2866667 -3.02919 2.45586 1.00000\n20:PM-16:PM  0.9200000 -1.82252 3.66252 1.00000\n18:PM-17:PM  0.6366667 -2.10586 3.37919 1.00000\n19:PM-17:PM  0.0700000 -2.67252 2.81252 1.00000\n20:PM-17:PM  1.2766667 -1.46586 4.01919 0.99689\n19:PM-18:PM -0.5666667 -3.30919 2.17586 1.00000\n20:PM-18:PM  0.6400000 -2.10252 3.38252 1.00000\n20:PM-19:PM  1.2066667 -1.53586 3.94919 0.99886\n\n\n  Tukey multiple comparisons of means\n    99% family-wise confidence level\n\nFit: aov(formula = Ct ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff      lwr     upr   p adj\n2-1   -0.2883333 -2.29705 1.72039 1.00000\n3-1   -0.1916667 -2.20039 1.81705 1.00000\n4-1   -0.6716667 -2.68039 1.33705 0.99700\n5-1   -0.1566667 -2.16539 1.85205 1.00000\n6-1   -0.3200000 -2.32872 1.68872 1.00000\n7-1   -0.3016667 -2.31039 1.70705 1.00000\n8-1   -0.2050000 -2.21372 1.80372 1.00000\n9-1    0.4016667 -1.60705 2.41039 1.00000\n10-1  -0.5966667 -2.60539 1.41205 0.99934\n11-1   0.0866667 -1.92205 2.09539 1.00000\n12-1  -0.9583333 -2.96705 1.05039 0.89330\n13-1  -0.1633333 -2.17205 1.84539 1.00000\n14-1  -0.8700000 -2.87872 1.13872 0.95243\n15-1  -0.8766667 -2.88539 1.13205 0.94905\n16-1  -0.7433333 -2.75205 1.26539 0.99024\n17-1  -0.8116667 -2.82039 1.19705 0.97539\n18-1  -0.5666667 -2.57539 1.44205 0.99968\n19-1  -0.6750000 -2.68372 1.33372 0.99682\n20-1  -0.1406667 -2.24743 1.96610 1.00000\n3-2    0.0966667 -1.91205 2.10539 1.00000\n4-2   -0.3833333 -2.39205 1.62539 1.00000\n5-2    0.1316667 -1.87705 2.14039 1.00000\n6-2   -0.0316667 -2.04039 1.97705 1.00000\n7-2   -0.0133333 -2.02205 1.99539 1.00000\n8-2    0.0833333 -1.92539 2.09205 1.00000\n9-2    0.6900000 -1.31872 2.69872 0.99585\n10-2  -0.3083333 -2.31705 1.70039 1.00000\n11-2   0.3750000 -1.63372 2.38372 1.00000\n12-2  -0.6700000 -2.67872 1.33872 0.99709\n13-2   0.1250000 -1.88372 2.13372 1.00000\n14-2  -0.5816667 -2.59039 1.42705 0.99953\n15-2  -0.5883333 -2.59705 1.42039 0.99946\n16-2  -0.4550000 -2.46372 1.55372 0.99999\n17-2  -0.5233333 -2.53205 1.48539 0.99990\n18-2  -0.2783333 -2.28705 1.73039 1.00000\n19-2  -0.3866667 -2.39539 1.62205 1.00000\n20-2   0.1476667 -1.95910 2.25443 1.00000\n4-3   -0.4800000 -2.48872 1.52872 0.99997\n5-3    0.0350000 -1.97372 2.04372 1.00000\n6-3   -0.1283333 -2.13705 1.88039 1.00000\n7-3   -0.1100000 -2.11872 1.89872 1.00000\n8-3   -0.0133333 -2.02205 1.99539 1.00000\n9-3    0.5933333 -1.41539 2.60205 0.99939\n10-3  -0.4050000 -2.41372 1.60372 1.00000\n11-3   0.2783333 -1.73039 2.28705 1.00000\n12-3  -0.7666667 -2.77539 1.24205 0.98634\n13-3   0.0283333 -1.98039 2.03705 1.00000\n14-3  -0.6783333 -2.68705 1.33039 0.99662\n15-3  -0.6850000 -2.69372 1.32372 0.99620\n16-3  -0.5516667 -2.56039 1.45705 0.99978\n17-3  -0.6200000 -2.62872 1.38872 0.99891\n18-3  -0.3750000 -2.38372 1.63372 1.00000\n19-3  -0.4833333 -2.49205 1.52539 0.99997\n20-3   0.0510000 -2.05576 2.15776 1.00000\n5-4    0.5150000 -1.49372 2.52372 0.99992\n6-4    0.3516667 -1.65705 2.36039 1.00000\n7-4    0.3700000 -1.63872 2.37872 1.00000\n8-4    0.4666667 -1.54205 2.47539 0.99998\n9-4    1.0733333 -0.93539 3.08205 0.76824\n10-4   0.0750000 -1.93372 2.08372 1.00000\n11-4   0.7583333 -1.25039 2.76705 0.98785\n12-4  -0.2866667 -2.29539 1.72205 1.00000\n13-4   0.5083333 -1.50039 2.51705 0.99993\n14-4  -0.1983333 -2.20705 1.81039 1.00000\n15-4  -0.2050000 -2.21372 1.80372 1.00000\n16-4  -0.0716667 -2.08039 1.93705 1.00000\n17-4  -0.1400000 -2.14872 1.86872 1.00000\n18-4   0.1050000 -1.90372 2.11372 1.00000\n19-4  -0.0033333 -2.01205 2.00539 1.00000\n20-4   0.5310000 -1.57576 2.63776 0.99994\n6-5   -0.1633333 -2.17205 1.84539 1.00000\n7-5   -0.1450000 -2.15372 1.86372 1.00000\n8-5   -0.0483333 -2.05705 1.96039 1.00000\n9-5    0.5583333 -1.45039 2.56705 0.99974\n10-5  -0.4400000 -2.44872 1.56872 0.99999\n11-5   0.2433333 -1.76539 2.25205 1.00000\n12-5  -0.8016667 -2.81039 1.20705 0.97827\n13-5  -0.0066667 -2.01539 2.00205 1.00000\n14-5  -0.7133333 -2.72205 1.29539 0.99387\n15-5  -0.7200000 -2.72872 1.28872 0.99318\n16-5  -0.5866667 -2.59539 1.42205 0.99948\n17-5  -0.6550000 -2.66372 1.35372 0.99780\n18-5  -0.4100000 -2.41872 1.59872 1.00000\n19-5  -0.5183333 -2.52705 1.49039 0.99991\n20-5   0.0160000 -2.09076 2.12276 1.00000\n7-6    0.0183333 -1.99039 2.02705 1.00000\n8-6    0.1150000 -1.89372 2.12372 1.00000\n9-6    0.7216667 -1.28705 2.73039 0.99300\n10-6  -0.2766667 -2.28539 1.73205 1.00000\n11-6   0.4066667 -1.60205 2.41539 1.00000\n12-6  -0.6383333 -2.64705 1.37039 0.99841\n13-6   0.1566667 -1.85205 2.16539 1.00000\n14-6  -0.5500000 -2.55872 1.45872 0.99979\n15-6  -0.5566667 -2.56539 1.45205 0.99975\n16-6  -0.4233333 -2.43205 1.58539 1.00000\n17-6  -0.4916667 -2.50039 1.51705 0.99996\n18-6  -0.2466667 -2.25539 1.76205 1.00000\n19-6  -0.3550000 -2.36372 1.65372 1.00000\n20-6   0.1793333 -1.92743 2.28610 1.00000\n8-7    0.0966667 -1.91205 2.10539 1.00000\n9-7    0.7033333 -1.30539 2.71205 0.99480\n10-7  -0.2950000 -2.30372 1.71372 1.00000\n11-7   0.3883333 -1.62039 2.39705 1.00000\n12-7  -0.6566667 -2.66539 1.35205 0.99773\n13-7   0.1383333 -1.87039 2.14705 1.00000\n14-7  -0.5683333 -2.57705 1.44039 0.99966\n15-7  -0.5750000 -2.58372 1.43372 0.99960\n16-7  -0.4416667 -2.45039 1.56705 0.99999\n17-7  -0.5100000 -2.51872 1.49872 0.99993\n18-7  -0.2650000 -2.27372 1.74372 1.00000\n19-7  -0.3733333 -2.38205 1.63539 1.00000\n20-7   0.1610000 -1.94576 2.26776 1.00000\n9-8    0.6066667 -1.40205 2.61539 0.99918\n10-8  -0.3916667 -2.40039 1.61705 1.00000\n11-8   0.2916667 -1.71705 2.30039 1.00000\n12-8  -0.7533333 -2.76205 1.25539 0.98869\n13-8   0.0416667 -1.96705 2.05039 1.00000\n14-8  -0.6650000 -2.67372 1.34372 0.99735\n15-8  -0.6716667 -2.68039 1.33705 0.99700\n16-8  -0.5383333 -2.54705 1.47039 0.99984\n17-8  -0.6066667 -2.61539 1.40205 0.99918\n18-8  -0.3616667 -2.37039 1.64705 1.00000\n19-8  -0.4700000 -2.47872 1.53872 0.99998\n20-8   0.0643333 -2.04243 2.17110 1.00000\n10-9  -0.9983333 -3.00705 1.01039 0.85576\n11-9  -0.3150000 -2.32372 1.69372 1.00000\n12-9  -1.3600000 -3.36872 0.64872 0.35269\n13-9  -0.5650000 -2.57372 1.44372 0.99969\n14-9  -1.2716667 -3.28039 0.73705 0.47719\n15-9  -1.2783333 -3.28705 0.73039 0.46731\n16-9  -1.1450000 -3.15372 0.86372 0.66832\n17-9  -1.2133333 -3.22205 0.79539 0.56535\n18-9  -0.9683333 -2.97705 1.04039 0.88455\n19-9  -1.0766667 -3.08539 0.93205 0.76389\n20-9  -0.5423333 -2.64910 1.56443 0.99991\n11-10  0.6833333 -1.32539 2.69205 0.99631\n12-10 -0.3616667 -2.37039 1.64705 1.00000\n13-10  0.4333333 -1.57539 2.44205 0.99999\n14-10 -0.2733333 -2.28205 1.73539 1.00000\n15-10 -0.2800000 -2.28872 1.72872 1.00000\n16-10 -0.1466667 -2.15539 1.86205 1.00000\n17-10 -0.2150000 -2.22372 1.79372 1.00000\n18-10  0.0300000 -1.97872 2.03872 1.00000\n19-10 -0.0783333 -2.08705 1.93039 1.00000\n20-10  0.4560000 -1.65076 2.56276 0.99999\n12-11 -1.0450000 -3.05372 0.96372 0.80373\n13-11 -0.2500000 -2.25872 1.75872 1.00000\n14-11 -0.9566667 -2.96539 1.05205 0.89472\n15-11 -0.9633333 -2.97205 1.04539 0.88898\n16-11 -0.8300000 -2.83872 1.17872 0.96936\n17-11 -0.8983333 -2.90705 1.11039 0.93692\n18-11 -0.6533333 -2.66205 1.35539 0.99787\n19-11 -0.7616667 -2.77039 1.24705 0.98726\n20-11 -0.2273333 -2.33410 1.87943 1.00000\n13-12  0.7950000 -1.21372 2.80372 0.98004\n14-12  0.0883333 -1.92039 2.09705 1.00000\n15-12  0.0816667 -1.92705 2.09039 1.00000\n16-12  0.2150000 -1.79372 2.22372 1.00000\n17-12  0.1466667 -1.86205 2.15539 1.00000\n18-12  0.3916667 -1.61705 2.40039 1.00000\n19-12  0.2833333 -1.72539 2.29205 1.00000\n20-12  0.8176667 -1.28910 2.92443 0.98369\n14-13 -0.7066667 -2.71539 1.30205 0.99450\n15-13 -0.7133333 -2.72205 1.29539 0.99387\n16-13 -0.5800000 -2.58872 1.42872 0.99955\n17-13 -0.6483333 -2.65705 1.36039 0.99807\n18-13 -0.4033333 -2.41205 1.60539 1.00000\n19-13 -0.5116667 -2.52039 1.49705 0.99992\n20-13  0.0226667 -2.08410 2.12943 1.00000\n15-14 -0.0066667 -2.01539 2.00205 1.00000\n16-14  0.1266667 -1.88205 2.13539 1.00000\n17-14  0.0583333 -1.95039 2.06705 1.00000\n18-14  0.3033333 -1.70539 2.31205 1.00000\n19-14  0.1950000 -1.81372 2.20372 1.00000\n20-14  0.7293333 -1.37743 2.83610 0.99545\n16-15  0.1333333 -1.87539 2.14205 1.00000\n17-15  0.0650000 -1.94372 2.07372 1.00000\n18-15  0.3100000 -1.69872 2.31872 1.00000\n19-15  0.2016667 -1.80705 2.21039 1.00000\n20-15  0.7360000 -1.37076 2.84276 0.99493\n17-16 -0.0683333 -2.07705 1.94039 1.00000\n18-16  0.1766667 -1.83205 2.18539 1.00000\n19-16  0.0683333 -1.94039 2.07705 1.00000\n20-16  0.6026667 -1.50410 2.70943 0.99961\n18-17  0.2450000 -1.76372 2.25372 1.00000\n19-17  0.1366667 -1.87205 2.14539 1.00000\n20-17  0.6710000 -1.43576 2.77776 0.99837\n19-18 -0.1083333 -2.11705 1.90039 1.00000\n20-18  0.4260000 -1.68076 2.53276 1.00000\n20-19  0.5343333 -1.57243 2.64110 0.99993\n\n\n유의한 패턴 없음 Tukey 검정 결과 (보통 유의할때 함) 테이블 도 유의한 수치가 없음"
  },
  {
    "objectID": "docs/blog/posts/2023-01-07-anova/index.html#terms",
    "href": "docs/blog/posts/2023-01-07-anova/index.html#terms",
    "title": "ANOVA",
    "section": "1 Terms",
    "text": "1 Terms\n\npairwise comparison: A hypothesis test (e.g., of means) between two groups among multiple groups.\nobmnibus set: A single hypothesis test of the overall variance among multiple group means.\ndecomposition of variance : Separation of components contributing to an individual value (e.g., from the overall average, from a treatment mean, and from a residual error).\nF-test\nF statistic: A standardized statistic that measures the extent to which differences among group means exceed what might be expected in a chance model.\nsum of squares: deviations from some average value\n\n\n1.1 Description\nANOVA는 3개 이상의 모집단 사이의 평균의 동일성을 검정하는 통계 분석 방법이다.\n\n일원 분산 분석 (One-way ANOVA)\n\n그룹을 구분하는 변수가 1개\nBetween-Groups one-way ANOVA(집단간 일원분산분석): 관측치를 grouping하는 범주형 변수가 1개이며 각 관측치는 범주형 변수에 의해 구분되는 그룹들 가운데 반드시 하나에만 할당되어야한다. 즉, 어떠한 경우에도 하나의 관측치 또는 샘플이 여러 groups에 동시에 들어가면 안된다. 이 때 이렇게 그룹을 나누는 범주형 변수를 집단간 요인이라고 한다.\nWithin-groups one-way ANOVA (집단 내 일원분산분석) or repeated measures ANOVA: 시간과 같은 하나의 범주형 변수로 샘플들을 측정한다. 시간의 경과에 따라 측정된 샘플들을 범주형 변수의 여러 기간에 걸쳐 모두 할당시킨다. 즉, 하나의 샘플이 여러 그룹에 다른 측정치로 관찰될 수 있다. 예를들어, sample A가 4주, 8주, 12주, 16주 그룹에 모두 측정 된다. 이때 기간변수는 집단 내 요인이라고 부른다.\n\n이원 분산 분석 (Two-way ANOVA)\n\n집단을 구분하는 변수가 2개이며 각 집단 간 요인과 집단 내 요인을 나타낸다.\n이원 분석 부터는 main effect와 interaction effect가 존재한다.\n범주형 변수 A와 범주형 변수 B의 Main effect 계산\n범주형 변수 A와 범주형 변수 B의 상호 작용 효과 or 교호 작용 효과 (Interaction effect) 계산\ngroup을 구분하는 독립변수가 2개 일때 모집단 간 평균의 동일성 검정\n\n2개의 주효과(main effect) 검정: 각 독립 변수에 의해 만들어지는 집단 간 평균의 차이에 대한 검정\n\n먼저, 두 독립변수가 종속변수에 개별적으로 영향을 미치는지 검정\n\n\n1개의 상호작용효과(interaction effect) 검정: 두 독립 변수의 조합에 의해 만들어지는 집단 간 평균의 차이에 대한 검정\n\n두 독립변수의 조합이 종속변수와 유의한 영향관계를 갖는지 검정\n\n만약에 유의하다면 2개의 독립변수가 합쳐져서 나온 파생효과이기 때문에 1개만 골라서 분석해서 해석 할 수 없음\n\n\n\n\n\n1.2 How to conduct ANOVA?\n\n분산 분석은 F검정(F test)을 통해 수행한다.\nF 검정은 집단 간 분산 (between-groups variability)과 집단 내 분산 (within-groups variability)의 ratio로 계산된 F값 (F value or F statistic)을 토대로 가설검정을 수행한다. 이때 F value or F statistic을 통계 검정을 위한 검정통계량 (test statistic) 라고 부른다.\nF 검정 결과가 통계적으로 유의하면 집단 간 평균의 차이가 존재한다. (즉, 독립 변수가 종속변수에 영향을 미침)\nF 분포 2개의 자유도에 의해 분포의 모양이 결정되며 대체로 오른쪽으로 긴 꼬리를 갖는다\n\n첫 번째 자유도: 집단 간(between-group)의 자유도\n두 번째 자유도: 집단 내(within-group)의 자유도\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(gplots)\nknitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)\noptions(digits = 5)\nset.seed(20230109)\n\n\n\n\n\n\n\n종속 변수의 변동성은 다음과 같이 설명되기 때문에 아래의 식을 만족한다.\n\\[SS_{total}=SS_A+SS_B+SS_{AB}+SS_{error}\\]\n\\(SS_{total}\\)은 쉽게 구할 수 있고 \\(SS_A\\), \\(SS_B\\), \\(SS_{error}\\)를 계산하여 빼준다.\nTwo Way Anova SS 계산 공식 링크\n\\(SS_{AB}\\) 즉,\n\\[ SS_{AB}=SS_{total}-SS_A-SS_B-SS_{error} \\]\n\n\n1.3 Meaning\nANOVA는 집단 간 분산과 집단 내 분산의 비교하는 방식으로, 좀 더 구체적으로는 집단 간 분산과 집단 내 분산의 비를 계산하여, 집단 간 분산이 클수록 그리고 집단 분산이 작을 수록 집단 평균이 다를 가능성이 증가한다는 알고리즘에 기초한다."
  },
  {
    "objectID": "docs/projects/high_dimension/eda.html",
    "href": "docs/projects/high_dimension/eda.html",
    "title": "EDA",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\nplease, read the English section first.\n\n\n\n\n\n\n\n\n\n\n\nmean, sd, normality check with p value\n\n\n\n\n\n\n\n\n\n\nCode\ngroup_variable=\"country\"\nsummary_variable=\"age\"\n\ncolor_function<-function(summary_data){\nreturn(\n    if(nrow(summary_data)==2){\n        c(\"darkblue\",\"darkred\")\n    }else if(nrow(summary_data)==3){\n        c(\"darkblue\",\"darkred\",\"yellow4\")\n    }else if(nrow(summary_data)==4){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\")\n    }else if(nrow(summary_data)==5){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\")\n    }else{\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\",\"darkgreen\")\n    }\n    )\n}\n\ngetNumericSummary=function(data=all_data,group_variable,summary_variable,set_color=color_function){\n    # table\n    temp<-data %>% \n    group_by(get(group_variable)) %>% \n    mutate(count=n())%>%\n    summarise_at(vars(summary_variable,count),\n                 list(mean=mean,\n                 sd=sd,\n                 min=min,\n                 Q1=~quantile(., probs = 0.25),\n                 median=median, \n                 Q3=~quantile(., probs = 0.75),\n                 max=max))%>%\n                 as.data.frame()%>%\n                 rename(\n                 n=count_mean)%>%\n                 dplyr::select(-contains('count'))%>%\n                 as.data.frame()\n    names(temp)<-c(\"group\",\n    sapply(names(temp)[-1],function(x)str_replace(x,paste0(summary_variable,\"_\"),\"\")))\n    temp<-temp%>%\n    mutate(\n        variable=group_variable,\n        summary=summary_variable,\n        mean=mean%>%round(2),\n        sd=sd%>%round(2),\n        min=min%>%round(2),\n        Q1=Q1%>%round(2),\n        Q4=Q3%>%round(2),\n        max=max%>%round(2),\n        IQR_min=Q1-(Q3-Q1)*1.5%>%round(2),\n    IQR_max=Q3+(Q3-Q1)*1.5%>%round(2),\n    proportion=paste0(round(n/nrow(all_data)*100,2),\"%\"))%>%\n    dplyr::select(variable,group,summary,n,proportion,mean,sd,min,IQR_min,Q1,median,Q3,IQR_max,max)\n\n    # plot\n    temp2=temp\n    names(temp2)[2]=group_variable\n    plot<-\n    data%>%\n    dplyr::select(group_variable,summary_variable)%>%\n    inner_join(.,temp2,by=group_variable)%>%\n    ggplot(aes(x=age,fill=get(group_variable),color=get(group_variable)))+\n    geom_histogram(aes(y=..density..),binwidth=1,alpha=0.5, position=\"identity\")+\n    geom_vline(aes(xintercept=mean,color=get(group_variable)), linetype=\"dashed\", size=1.5) + \n    geom_density(aes(y=..density..),alpha=0.3) +\n    scale_color_manual(values=set_color(temp2))+\n    scale_fill_manual(values=set_color(temp2))+\n    theme_bw()+\n    theme(legend.position = c(.95, .95),\n    legend.justification = c(\"right\", \"top\"),\n    legend.margin = margin(6, 6, 6, 6),\n    legend.text = element_text(size = 10))+\n    guides(fill=guide_legend(title=group_variable),\n    color=FALSE)+\n    geom_text(aes(label=round(mean,1),y=0,x=mean),\n                vjust=-1,col='yellow',size=5)+\n    ggtitle(paste0(\"Histogram & Density, \", summary_variable, \" Grouped by \", group_variable))+\n        labs(x=summary_variable, y = \"Density\")\n\n    result<-list(temp,plot)\n    return(result)\n}\n\nad_age_summary=getNumericSummary(data=all_data,group_variable=\"outcome\",summary_variable=\"age\")[[1]]\nsex_age_summary=getNumericSummary(data=all_data,group_variable=\"sex\",summary_variable=\"age\")[[1]]\ncountry_age_summary=getNumericSummary(data=all_data,group_variable=\"country\",summary_variable=\"age\")[[1]]\ntreatment_age_summary=getNumericSummary(data=all_data,group_variable=\"treatment\",summary_variable=\"age\")[[1]]\ngenotype_age_summary=getNumericSummary(data=all_data,group_variable=\"genotype\",summary_variable=\"age\")[[1]]\nage_summary=rbind(\n    ad_age_summary,\n    sex_age_summary,\n    country_age_summary,\n    treatment_age_summary,\n    genotype_age_summary)\n\n\nAge is known as a strong risk factor of AD or dementia. Human nerve system gets damaged as people are aged and the nerve fibrosis symptoms progress gradually (some reference, to be added after figuring out how to add bibliography in quarto). For this reason, we need to look into how the sample data are distributed in terms of age.\n\n\nCode\nage_summary%>%knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvariable\ngroup\nsummary\nn\nproportion\nmean\nsd\nmin\nIQR_min\nQ1\nmedian\nQ3\nIQR_max\nmax\n\n\n\n\noutcome\nnegative\nage\n488\n48.8%\n79.05\n6.36\n65\n63.00\n75\n78.0\n83.0\n95.00\n110\n\n\noutcome\npositive\nage\n512\n51.2%\n81.79\n6.07\n66\n67.50\n78\n81.0\n85.0\n95.50\n104\n\n\nsex\nman\nage\n457\n45.7%\n80.03\n6.58\n66\n64.00\n76\n80.0\n84.0\n96.00\n102\n\n\nsex\nwoman\nage\n543\n54.3%\n80.81\n6.16\n65\n65.75\n77\n80.0\n84.5\n95.75\n110\n\n\ncountry\ncenter_a\nage\n305\n30.5%\n80.40\n6.50\n66\n62.50\n76\n80.0\n85.0\n98.50\n104\n\n\ncountry\ncenter_b\nage\n196\n19.6%\n80.82\n6.17\n67\n66.50\n77\n81.0\n84.0\n94.50\n110\n\n\ncountry\ncenter_c\nage\n193\n19.3%\n80.16\n6.32\n65\n64.00\n76\n80.0\n84.0\n96.00\n99\n\n\ncountry\ncenter_d\nage\n306\n30.6%\n80.46\n6.39\n66\n64.00\n76\n80.0\n84.0\n96.00\n104\n\n\ntreatment\ntrmnt1\nage\n360\n36%\n78.08\n6.25\n66\n62.00\n74\n77.0\n82.0\n94.00\n110\n\n\ntreatment\ntrmnt2\nage\n588\n58.8%\n82.06\n5.82\n66\n67.50\n78\n82.0\n85.0\n95.50\n104\n\n\ntreatment\ntrmnt3\nage\n52\n5.2%\n78.79\n7.52\n65\n56.50\n73\n78.5\n84.0\n100.50\n95\n\n\ngenotype\ne2/e2\nage\n42\n4.2%\n83.95\n5.18\n71\n73.50\n81\n84.0\n86.0\n93.50\n95\n\n\ngenotype\ne2/e3\nage\n148\n14.8%\n79.70\n6.01\n66\n65.50\n76\n79.0\n83.0\n93.50\n110\n\n\ngenotype\ne2/e4\nage\n51\n5.1%\n76.10\n5.46\n69\n64.75\n73\n75.0\n78.5\n86.75\n95\n\n\ngenotype\ne3/e3\nage\n462\n46.2%\n80.92\n5.95\n68\n68.00\n77\n80.0\n83.0\n92.00\n104\n\n\ngenotype\ne3/e4\nage\n214\n21.4%\n79.85\n6.64\n65\n57.50\n74\n84.0\n85.0\n101.50\n95\n\n\ngenotype\ne4/e4\nage\n83\n8.3%\n81.69\n7.81\n68\n54.00\n75\n83.0\n89.0\n110.00\n91\n\n\n\n\n\nThe table above shows the summary statistics of age grouped by the affected status, AD and non AD. The difference of age between the two groups are about 2.74, but their standard deviations are 6.07 and 6.36. Thus, it is hard to say their age in average differ in the affected status because the age variations of the two groups are overlapped. This research has two conflicting characteristics at the population level. First, the participants are the elderly whose age in average is 80.45, which indicates they are likely to develop dementia, an aging disease. Second, the data were collected from the longevity village where people live long and healthy lives and it is expected that where will be some protective factors against dementia. These two conflicting traits may have contributed to this unclear difference.\nThe glaring difference of age is also shown below. As you can see, the people with a negative status a bit younger than those with a positive one.\n\n\nCode\nplot<- ggarrange(\n    getNumericSummary(data=all_data,group_variable=\"outcome\",summary_variable=\"age\")[[2]],\n    getNumericSummary(data=all_data,group_variable=\"sex\",summary_variable=\"age\")[[2]],\n    getNumericSummary(data=all_data,group_variable=\"country\",summary_variable=\"age\")[[2]],\n    getNumericSummary(data=all_data,group_variable=\"treatment\",summary_variable=\"age\")[[2]],\n    getNumericSummary(data=all_data,group_variable=\"genotype\",summary_variable=\"age\")[[2]],\n    ncol=2, nrow=3,legend=\"bottom\")\nplot\n\n\n\n\n\n\n\n\n\n\nt-test\n\n#F-test to test for homogeneity in variances\n#| echo: false\n#| eval: false\nvar.test\n\nfunction (x, ...) \nUseMethod(\"var.test\")\n<bytecode: 0x000002929f983c50>\n<environment: namespace:stats>\n\n\n\n\n\nOne way Anova\n\n\n\nOne way Anova\n\n\n\n\n\n\n\n\n\n\n\n\n\nChisquare test\n\n\n\nchisquare test"
  },
  {
    "objectID": "docs/projects/high_dimension/ml_approach.html",
    "href": "docs/projects/high_dimension/ml_approach.html",
    "title": "ML Approach",
    "section": "",
    "text": "alpha      mse fit.name\n1    0.0 2217.331   alpha0\n2    0.1 2217.331 alpha0.1\n3    0.2 2217.331 alpha0.2\n4    0.3 2217.331 alpha0.3\n5    0.4 2217.331 alpha0.4\n6    0.5 2217.331 alpha0.5\n7    0.6 2217.331 alpha0.6\n8    0.7 2217.331 alpha0.7\n9    0.8 2217.331 alpha0.8\n10   0.9 2217.331 alpha0.9\n11   1.0 2217.331   alpha1"
  },
  {
    "objectID": "docs/projects/high_dimension/description.html#overview-2",
    "href": "docs/projects/high_dimension/description.html#overview-2",
    "title": "Description",
    "section": "Overview",
    "text": "Overview\n\nAs-Is\n\n\n\n\nflowchart TB\n    subgraph Skip_These_Steps_in_This_Article\n        direction LR\n        subgraph data_collection\n            direction LR\n            multi-centered_medical_centers---\n            set_inclusion\\exclusion_criteria---\n            patient_visit---\n            \n            blood_sampling---\n            store_samples_in_labs\n        end\n        subgraph mass_spectrometry\n            direction LR\n            conduct_mass_spectrometry---\n            digitalization---\n            store_in_database_system    \n        end\n        subgraph data_transfer\n            direction TB\n            subgraph data\n                direction LR\n                metabolome_data---\n                clinical_data---\n                demographic_data---\n                dietary_habit_data\n            end\n            data---csv_or_excel_format\n        end\n        subgraph data_quality_control\n            direction TB\n            identify_anomaly_data---\n            identify_missing_values\n            subgraph missing_value_analysis\n                direction LR\n                MCAR---\n                MAR---\n                MNAR\n            end\n            either_imputation_or_omission---\n            communication_with_labs---\n            set_data_inclusion/exclusion_criteria\n        end\n        identify_missing_values---missing_value_analysis---either_imputation_or_omission\n        subgraph data_preprocessing\n            direction LR\n            data_transformation\n        end\n    end\n    subgraph data_analytics\n        direction LR\n        exploratory_data_analysis---\n        statistical_analysis---\n        machine_learning\n    end\n    subgraph report_to_faculty_members\n        direction TB\n        share_with_medical_doctors---\n        share_with_epidemiologists---\n        share_with_neurologists---\n        share_with_biologists---\n        share_with_biostatisticians---\n        share_with_bioinformatician\n    end\n    subgraph write_manuscript\n        direction LR\n    end\n    \ndata_collection-->mass_spectrometry-->data_transfer-->data_quality_control-->data_preprocessing-->data_analytics-->report_to_faculty_members-->write_manuscript\n\n\n\n\n\n\n\n\n\n\nTo-Be\n\n\n\n\nflowchart TB\n    subgraph Simulation\n        direction TB\n        subgraph assign_frequency\n        direction LR\n        Assign_probabilities     \n        end\n        subgraph generate_multivariate_normal_distribution\n            direction LR\n            determine_sample_size ---\n            determine_number_of_columns---\n            create_covariate_correlation_matrix---\n            apply_some_noise_to_the_covariance_matrix\n        end\n        subgraph create_weight_matrix\n            direction LR\n            apply_some_noise_to_the_covariance_matrix\n        end\n        subgraph calculate_score_matrix\n            direction LR\n            matrix_multiplication_covariance_matrix_weight_matrix---\n            used_logistic_function\n        end\n        subgraph create_response_variable\n            direction LR\n            result_of_logistic_function\n        end\n        subgraph creation_some_discrete_variables\n            direction LR       \n        end\n        subgraph join\n            direction LR\n            all_the_matrix_and_vector_created       \n        end\n        assign_frequency-->generate_multivariate_normal_distribution-->create_weight_matrix-->\n        calculate_score_matrix-->create_response_variable-->creation_some_discrete_variables-->\n        join\n    end\n    subgraph data_analytics\n        direction LR\n        exploratory_data_analysis---\n        statistical_analysis---\n        machine_learning\n    end\n    subgraph conclusion\n        direction LR\n    end\n    Simulation-->data_analytics-->conclusion"
  },
  {
    "objectID": "docs/projects/high_dimension/description.html#overview",
    "href": "docs/projects/high_dimension/description.html#overview",
    "title": "Description",
    "section": "Overview",
    "text": "Overview\n\nAs-Is\n\n\n\n\nflowchart TB\n    subgraph Skip_These_Steps_in_This_Article\n        direction LR\n        subgraph data_collection\n            direction TB\n            multi-centered_medical_centers---\n            set_inclusion\\exclusion_criteria---\n            patient_visit---\n            blood_sampling---\n            store_samples_in_labs\n        end\n        subgraph mass_spectrometry\n            direction LR\n            conduct_mass_spectrometry---\n            digitalization---\n            store_in_database_system    \n        end\n        subgraph data_transfer\n            direction TB\n            subgraph data\n                direction LR\n                metabolome_data---\n                clinical_data---\n                demographic_data---\n                dietary_habit_data\n            end\n            data---csv_or_excel_format\n        end\n        subgraph data_quality_control\n            direction TB\n            identify_anomaly_data---\n            identify_missing_values\n            subgraph missing_value_analysis\n                direction LR\n                MCAR---\n                MAR---\n                MNAR\n            end\n            either_imputation_or_omission---\n            communication_with_labs---\n            set_data_inclusion/exclusion_criteria\n        end\n        identify_missing_values---missing_value_analysis---either_imputation_or_omission\n        subgraph data_preprocessing\n            direction LR\n            data_transformation\n        end\n    end\n    subgraph data_analytics\n        direction LR\n        exploratory_data_analysis---\n        statistical_analysis---\n        machine_learning\n    end\n    subgraph report_to_faculty_members\n        direction TB\n        share_with_medical_doctors---\n        share_with_epidemiologists---\n        share_with_neurologists---\n        share_with_biologists---\n        share_with_biostatisticians---\n        share_with_bioinformatician\n    end\n    subgraph write_manuscript\n        direction LR\n    end\n    \ndata_collection-->mass_spectrometry-->data_transfer-->data_quality_control-->data_preprocessing-->data_analytics-->report_to_faculty_members-->write_manuscript\n\n\n\n\n\n\n\n\n\n\nTo-Be\n\n\n\n\nflowchart TB\n    subgraph Simulation\n        direction TB\n        subgraph assign_frequency\n        direction LR\n        Assign_probabilities     \n        end\n        subgraph generate_multivariate_normal_distribution\n            direction TB\n            determine_sample_size ---\n            determine_number_of_columns---\n            create_covariate_correlation_matrix---\n            apply_noise_to_the_covariance_matrix\n        end\n        subgraph create_weight_matrix\n            direction LR\n            apply_some_noise_to_the_covariance_matrix\n        end\n        subgraph calculate_score_matrix\n            direction LR\n            matrix_multiplication_covariance_matrix_weight_matrix---\n            used_logistic_function\n        end\n        subgraph create_response_variable\n            direction LR\n            result_of_logistic_function\n        end\n        subgraph creation_some_discrete_variables\n            direction LR       \n        end\n        subgraph join\n            direction LR\n            all_the_matrix_and_vector_created       \n        end\n        assign_frequency-->generate_multivariate_normal_distribution-->create_weight_matrix-->\n        calculate_score_matrix-->create_response_variable-->creation_some_discrete_variables-->\n        join\n    end\n    subgraph data_analytics\n        direction LR\n        exploratory_data_analysis---\n        statistical_analysis---\n        machine_learning\n    end\n    subgraph conclusion\n        direction LR\n    end\n    Simulation-->data_analytics-->conclusion"
  },
  {
    "objectID": "docs/blog/posts/2023-01-16_normality/index.html",
    "href": "docs/blog/posts/2023-01-16_normality/index.html",
    "title": "Normality Check",
    "section": "",
    "text": "Wiki\n논문\n원래는 표본의 크기가 50이하인 작은 데이터 셋의 정규성 검정을 위해 고안됨. R 에서는 3~5천개 사이의 표본까지 다룰 수 있도록 조정됨\n\n정규 분포 전용 검정: 모든 검정 대비 최고의 검정력을 보임 (Power), 이상치가 있으면 p value가 너무 작아짐\n\\(H_0\\): 데이터가 정규분포를 따른다\n\\(H_a\\): 데이터가 정규분포를 따르지 않는다.\n검정 통계량 \\[\\mathbf W=\\frac{(\\sum_{i=1}^{n}a_ix_{(i)})^2}{\\sum_{i=1}^{n}(x_i-\\overline{x})^2}\\]\n\n\\(a_i\\) : 미리 정해진 숫자들, \\(x\\)의 개수에 의해 정해짐\n\\(x_{(i)}\\) 들은 순위 표본, 즉 i 번째로 큰 표본\n분자는 순서 통계량으로 계산한 정규분포의 분산, 분모는 데이터의 표본 분산 (표본 Sum of Squares)\n이미 이론적으로 세팅된 값과 표본 분산의 비율을 보는 것\n귀무 가설이 참이면 이론적으로 1 이 나와야 함\n\\(\\mathbf W \\in (0,1)\\), 상관계수의 제곱을 측정한 계량 값이라고 생각해도 된다.\n\n$W $ 값이 1에서 멀어질 수록 정규분포와는 다르게 분포되어 있음을 의미\n단점: 너무 민감함, 조그만 달라도 p value가 너무 작게 나와 귀무가설이 기각됨\n해결책 : 시각화 기법과 같이 사용해서 보여준다\n\nqqplot과 density 같이 사용"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html",
    "title": "Data Structure (1) Overview",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n딥러닝은 다양한 알고리즘의 조합으로 수행되기 때문에 다양한 알고리즘을 정확하게 작성하기 위해서는 다수의 다양한 자료(data)를 담기 위해 사용되는 자료 구조를 이해할 필요가 있다. 즉, 자료구조는 정확한 알고리즘을 구현하기 위해 다수의 자료(data)를 담기 위한 구조이다.\n\n딥러닝 유저들간에도 자료구조를 이해하는 것에 대한 의견이 분분하지만\n올바른 자료구조를 사용하는 것은 프로그램을 조직적으로 만들 수 있는 능력을 키울 수 있다.\n데이터의 수가 많아질수록 효율적인 자료구조가 필요하다.\n예시) 학생 수가 1,000,000명 이상인 학생 관리 프로그램\n\n매일 자료 조회가 1억번 이상 발생한다면 더 빠르게 동작하는 자료 구조를 사용해야 프로그램의 효율성을 올릴 수 있다.\n\n\n\n\n\n자료구조의 필요성에 대해서 이해할 필요가 있다.\n성능 비교: 자료구조/알고리즘의 성능 측정 방법에 대해 이해할 필요가 있다.\n\nA: 적당한 속도의 삽입 & 적당한 속도의 추출 (삽입: \\(O (log N)\\) / 추출: \\(O(log N)\\))\nB: 느린 삽입 & 빠른 추출 (삽입: \\(O (N)\\) / 추출: \\(O (1)\\))\nA vs B? 상황에 따라 A를 만들지 B를 만들지 선택해야 한다. 삽입 연산이 많으면 A를, 추출 연산이 많으면 B를 택해야 한다. (속도 비교: \\(O (N) < O (log N)< O (1)\\))\n하지만, 실무적으로 많은 개발자들이 A를 택한다. 왜냐면 log 복잡도는 상수 복잡도와 속도가 비슷하기 때문\n\n\n\n\n\n\n\n이처럼 상황에 맞게 알고리즘의 연산 속도를 결정해야 하므로 데이터를 효과적으로 저장하고, 처리하는 방법에 대해 바르게 이해할 필요가 있다.\n자료구조를 제대로 이해해야 불필요하게 메모리와 계산을 낭비하지 않는다.\nC언어를 기준으로 정수(int) 형식의 데이터가 100만 개가량이 존재한다고 가정하자.\n해당 프로그램을 이용하면, 내부적으로 하루에 데이터 조회가 1억 번 이상 발생한다.\n이때 원하는 데이터를 가장 빠르게 찾도록 해주는 자료구조는 무엇일까?\n\n트리(tree)와 같은 자료구조를 활용할 수 있다.\n\n\n\n\n\n\n선형 자료 구조(linear data structure) 선형 자료구조는 하나의 데이터 뒤에 다른 데이터가 하나 존재하는 자료구조이며 데이터가 일렬로 연속적으로(순차적으로) 연결되어 있다.\n\n배열(array)\n연결 리스트(linked list)\n스택(stack)\n큐(queue)\n\n비선형 자료 구조(non-linear data structure)\n비선형 자료구조는 하나의 데이터 뒤에 다른 데이터가 여러 개 올 수 있는 자료구조이며 데이터가 일직선상으로 연결되어 있지 않아도 된다.\n\n트리(tree)\n그래프(graph)\n\n\n\n\n\n\n효율적인 자료구조 설계를 위해 알고리즘 지식이 필요하다.\n효율적인 알고리즘을 작성하기 위해서 문제 상황에 맞는 적절한 자료구조가 사용되어야 한다.\n프로그램을 작성할 때 자료구조와 알고리즘 모두 고려해야 한다.\n\n\n\n\n\n시간 복잡도(time complexity): 알고리즘에 사용되는 연산 횟수를 측정 (시간 측정)\n공간 복잡도(space complexity): 알고리즘에 사용되는 메모리의 양을 측정 (공간 측정)\n공간을 많이 사용하는 대신 시간을 단축하는 방법이 흔히 사용된다.\n프로그램의 성능 측정 방법: Big-O 표기법\n\n복잡도를 표현할 때는 Big-O 표기법을 사용한다.\n\n특정한 알고리즘이 얼마나 효율적인지 수치적으로 표현할 수 있다.\n가장 빠르게 증가하는 항만을 고려하는 표기법이다.\n\n아래의 알고리즘은 \\(O(n)\\) 의 시간 복잡도를 가진다. 왜냐면, n에 따라 summary += i의 연산 횟수가 정해지기 때문이다.\n\n\n\n\nCode\nn = 10\nsummary = 0\nfor i in range(n):\n    summary += i\nprint(summary)\n\n\n45\n\n\n\n다음 알고리즘은 \\(O (n^2)\\) 의 시간 복잡도를 가진다. 2 중 for loop은 i와 j가 n에 따라 각 각 n 번씩 연산되기때문에 \\(n \\times n\\) 회 만큼 연산된다.\n\n\n\nCode\nn = 3\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        print(f\"{i} X {j} = {i * j}\")\n\n\n1 X 1 = 1\n1 X 2 = 2\n1 X 3 = 3\n2 X 1 = 2\n2 X 2 = 4\n2 X 3 = 6\n3 X 1 = 3\n3 X 2 = 6\n3 X 3 = 9\n\n\n\n일반적으로 연산 횟수가 10억 (\\(1.0 \\times 10^9\\))을 넘어가면 1초 이상의 시간이 소요된다.\n[예시] n이 1,000일 때를 고려해 보자.\n\n\\(O(n)\\): 약 1,000번의 연산\n\\(O(nlogn )\\): 약 10,000번의 연산 (약 \\(log10=10\\))\n\\(O(n^2)\\): 약 1,000,000번의 연산\n\\(O(n^3)\\): 약 1,000,000,000번의 연산\n\n그러므로, 알고리즘 짤 때 코딩 레벨로 연산 횟수를 계산해서 연산 시간을 어림잡아 추정할 수 있다.\n시간 복잡도 속도 비교\n By Cmglee - Own work, CC BY-SA 4.0\nBig-O 표기법으로 시간 복잡도를 표기할 때는 가장 영향력이 큰 항만을 표시한다.\n\n\\(O(3n^2 + n) = O(n^2)\\)\n현실 세계에서는 동작 시간이 1초 이내인 알고리즘을 설계할 필요가 있다.\n실무적으로 프로그램 동작 시간이 1초 이상이면 매우 느린 것으로 간주.\n\n공간 복잡도를 나타낼 때는 MB 단위로 표기한다.\nint a[1000]: 4KB int a[1000000]: 4MB int a[2000][2000]: 16MB\n자료구조를 적절히 활용하기\n\n자료구조의 종류로는 스택, 큐, 트리 등이 있다.\n프로그램을 작성할 때는 자료구조를 적절히 활용하여 시간 복잡도를 최소화하여야 한다."
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#자료-구조의-필요성",
    "href": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#자료-구조의-필요성",
    "title": "Data Structure, Overview",
    "section": "자료 구조의 필요성",
    "text": "자료 구조의 필요성\n\n데이터를 효과적으로 저장하고, 처리하는 방법에 대해 바르게 이해할 필요가 있다.\n자료구조를 제대로 이해하지 못하면 불필요하게 메모리와 계산을 낭비할 여지가 있다.\nC언어를 기준으로 정수(int) 형식의 데이터가 100만 개가량이 존재한다고 가정하자.\n해당 프로그램을 이용하면, 내부적으로 하루에 데이터 조회가 1억 번 이상 발생한다.\n이때 원하는 데이터를 가장 빠르게 찾도록 해주는 자료구조는 무엇일까?\n\n→ 트리(tree)와 같은 자료구조를 활용할 수 있다."
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#자료-구조의-종류",
    "href": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#자료-구조의-종류",
    "title": "Data Structure, Overview",
    "section": "자료 구조의 종류",
    "text": "자료 구조의 종류\n\n선형 자료 구조(linear data structure)\n선형 자료구조는 하나의 데이터 뒤에 다른 데이터가 하나 존재하는 자료구조이며 데이터가 일렬로 연속적으로(순차적으로) 연결되어 있다.\n\n배열(array)\n연결 리스트(linked list)\n스택(stack)\n큐(queue)\n\n비선형 자료 구조(non-linear data structure)\n비선형 자료구조는 하나의 데이터 뒤에 다른 데이터가 여러 개 올 수 있는 자료구조이며 데이터가 일직선상으로 연결되어 있지 않아도 된다.\n\n트리(tree)\n그래프(graph)"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#자료구조와-알고리즘",
    "href": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#자료구조와-알고리즘",
    "title": "Data Structure, Overview",
    "section": "자료구조와 알고리즘",
    "text": "자료구조와 알고리즘\n\n효율적인 자료구조 설계를 위해 알고리즘 지식이 필요하다.\n효율적인 알고리즘을 작성하기 위해서 문제 상황에 맞는 적절한 자료구조가 사용되어야 한다.\n프로그램을 작성할 때 자료구조와 알고리즘 모두 고려해야 한다."
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#프로그램의-성능-측정-방법",
    "href": "docs/blog/posts/Engineering/2023-01-17_data_structure_overview/index.html#프로그램의-성능-측정-방법",
    "title": "Data Structure, Overview",
    "section": "프로그램의 성능 측정 방법",
    "text": "프로그램의 성능 측정 방법\n\n시간 복잡도(time complexity): 알고리즘에 사용되는 연산 횟수를 측정한다.\n공간 복잡도(space complexity): 알고리즘에 사용되는 메모리의 양을 측정한다.\n공간을 많이 사용하는 대신 시간을 단축하는 방법이 흔히 사용된다.\n프로그램의 성능 측정 방법: Big-O 표기법\n\n복잡도를 표현할 때는 Big-O 표기법을 사용한다.\n\n특정한 알고리즘이 얼마나 효율적인지 수치적으로 표현할 수 있다.\n가장 빠르게 증가하는 항만을 고려하는 표기법이다.\n\n다음 알고리즘은 \\(O(n)\\) 의 시간 복잡도를 가진다.\n\n\n\nn = 10\nsummary = 0\nfor i in range(n):\n    summary += i\nprint(summary)\n\n45\n\n\n- 다음 알고리즘은 $O (n^2)$ 의 시간 복잡도를 가진다.\n\nn = 9\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        print(f\"{i} X {j} = {i * j}\")\n\n1 X 1 = 1\n1 X 2 = 2\n1 X 3 = 3\n1 X 4 = 4\n1 X 5 = 5\n1 X 6 = 6\n1 X 7 = 7\n1 X 8 = 8\n1 X 9 = 9\n2 X 1 = 2\n2 X 2 = 4\n2 X 3 = 6\n2 X 4 = 8\n2 X 5 = 10\n2 X 6 = 12\n2 X 7 = 14\n2 X 8 = 16\n2 X 9 = 18\n3 X 1 = 3\n3 X 2 = 6\n3 X 3 = 9\n3 X 4 = 12\n3 X 5 = 15\n3 X 6 = 18\n3 X 7 = 21\n3 X 8 = 24\n3 X 9 = 27\n4 X 1 = 4\n4 X 2 = 8\n4 X 3 = 12\n4 X 4 = 16\n4 X 5 = 20\n4 X 6 = 24\n4 X 7 = 28\n4 X 8 = 32\n4 X 9 = 36\n5 X 1 = 5\n5 X 2 = 10\n5 X 3 = 15\n5 X 4 = 20\n5 X 5 = 25\n5 X 6 = 30\n5 X 7 = 35\n5 X 8 = 40\n5 X 9 = 45\n6 X 1 = 6\n6 X 2 = 12\n6 X 3 = 18\n6 X 4 = 24\n6 X 5 = 30\n6 X 6 = 36\n6 X 7 = 42\n6 X 8 = 48\n6 X 9 = 54\n7 X 1 = 7\n7 X 2 = 14\n7 X 3 = 21\n7 X 4 = 28\n7 X 5 = 35\n7 X 6 = 42\n7 X 7 = 49\n7 X 8 = 56\n7 X 9 = 63\n8 X 1 = 8\n8 X 2 = 16\n8 X 3 = 24\n8 X 4 = 32\n8 X 5 = 40\n8 X 6 = 48\n8 X 7 = 56\n8 X 8 = 64\n8 X 9 = 72\n9 X 1 = 9\n9 X 2 = 18\n9 X 3 = 27\n9 X 4 = 36\n9 X 5 = 45\n9 X 6 = 54\n9 X 7 = 63\n9 X 8 = 72\n9 X 9 = 81\n\n\n- 일반적으로 연산 횟수가 10억을 넘어가면 1초 이상의 시간이 소요된다.\n    \n    [예시] n이 1,000일 때를 고려해 보자.\n    \n    - $O(n)$: 약 1,000번의 연산\n    - $O(nlogn )$: 약 10,000번의 연산\n    - $O(n^2)$: 약 1,000,000번의 연산\n    - $O(n^3)$: 약 1,000,000,000번의 연산\n        \n       \n        \n- 각 시간 복잡도를 비교해보자.\n    \n    \n    \n- Big-O 표기법으로 시간 복잡도를 표기할 때는 가장 영향력이 큰 항만을 표시한다.\n    - $O(3n^2 + n) = O(n^2)$\n    - 현실 세계에서는 동작 시간이 1초 이내인 알고리즘을 설계할 필요가 있다.\n- 공간을 나타낼 때는 MB 단위로 표기한다.\n    \n    int a[1000]: 4KB\n    \n    int a[1000000]: 4MB\n    \n    int a[2000][2000]: 16MB\n    \n\n자료구조를 적절히 활용하기\n\n자료구조의 종류로는 스택, 큐, 트리 등이 있다.\n프로그램을 작성할 때는 자료구조를 적절히 활용하여 시간 복잡도를 최소화하여야 한다."
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html",
    "href": "docs/blog/posts/Engineering/guide_map/index.html",
    "title": "Blog Guide Map, Engineering",
    "section": "",
    "text": "0000-00-00, PoC (Proof of Concept)"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "",
    "text": "Notice\nLast Update\nIntroduction\n\nDefinition of SW Validation\nSome Terminology\nRationale\nObjective of SW Validation\nWhat to validate\nMain Institutions\n\nQuality System Regulation\nVerification\nValidation\nBenefits and Difficulty in SW V&V\nSW Development as Part of System Design\n\nOverview\nDesign Reveiw\n\n\n\n\nValidation Pinciples\n\nOverview\nConditions\nPlanning\nAfter SW Change\nSW Lifecycle\n\nSW Lifecycle Tasks\n\nOverview\nQuality Planning\nConfiguration Management\nTask Requirements\nDesign Overview\n\nDesign Consideration\nDesign Specification\nDesign Activity and Task\n\n\n\n\n\nTesting Tasks\n\nOverview\nConsideration Before Testing Tasks\nCode Based Testing\nSolution to White Box Testing\nDevelopment Testing\nUser Site Testing\n\nOverview\nTesting\n\n\nMaintenance and SW Changes\nValidation of Quality System SW\n\nOverview\nFactors in Validation"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#notice",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#notice",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Notice",
    "text": "Notice\n\nI am so sorry not for providing a compfortab visualization. Although I have tried to use revealjs provided in the guide section in the Quarto website, I am still clumsy at handling it. I will update this article as I get proficient at revealjs using Quarto. (it seems that Quarto system has some issues on mermaid diagrams.)\nThe FDA validation guidance document is a bit difficult to understand because its explanations provide abstract, general, and present broad cocepts. For this reason, I compiled and made a summary of the document with many diagrams. However, some diagrams are too small to see. Please, scroll up your mouse wheel with the ‘Ctrl’ key on your keyboard pressed to zoom in on the small text in the diagrams.\n(Writing in Progress) It is hard to say that this version of summary is suitable for representing and covering the original document. Some of the content of this document has been excluded for personal use (less than 10% of it have been excluded).\n\n\nLast Update\n\n2022-12-28, Summary of Document"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#introduction",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#introduction",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Introduction",
    "text": "Introduction\n\nDefinition of Software Validation\nSoftware Validation is a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997.\n(See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\n\n\nSome Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology: requirements, specification, verification, and validation.\n\n\n\nRationale\nFDA has reported the following analysis:\n\n242 of 3140 (7.7%) medical device recalls between 1992 and 1998 are attributable to software failures.\n192 of the 242 (79.3%) failures were caused by software defects that were introduced when changes were made to the software after its initial production and distribution.\nThe software validation check is a principal means of avoiding such defects and resultant recalls.\n\n\n\nObjective of SW validation is to ensure\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\nWhat to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software.\n\n\nMain Institutions\n\nCenter for Devices and Radiological Health (CDRH)\nU.S. Department Of Health and Human Services\nFood and Drug Administration\nCenter for Biologics Evaluation and Research"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#quality-system-regulation",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#quality-system-regulation",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Quality System Regulation",
    "text": "Quality System Regulation\nThe guidance reflects that the minimum list of the relavant scientific and legal requirements that you must comply with.\n\n\n\n\nflowchart TB\n    subgraph Quality_System_Regulation\n        direction LR\n        subgraph Requirement\n            direction TB\n            user_requirements\n        end\n        subgraph Specification\n           direction TB\n           document_user_requirements \n        end \n        subgraph Verification\n           direction TB\n           verify_spacified_requirements\n        end\n        subgraph Validation\n           direction TB\n           Confirmation_by_Examinations\n           Provision_of_objective_3evidences\n        end\n        Requirement--> Specification --> Verification --> Validation                    \n    end\n    subgraph First_Detail\n        direction TB\n        subgraph User_Requirement\n            direction TB\n            any_need_for_customer---\n            any_need_for_system---\n            any_need_for_software\n        end\n            subgraph Document_User_Requirement\n            direction TB\n            define_means_for_requirements---\n          define_criteria_for_requirements\n        end         \n        subgraph Verify_Spacified_Requirement\n            direction TB\n            Objective_Evidence--->|needs|Software_Testing\n        end\n        subgraph SW_Validation\n            direction TB\n            subgraph Confirmation_by_Examination\n            direction TB\n                subgraph Examination_List_of_SW_LifeCycle\n                    direction TB\n                    comprehensiveness_of_software_testing---\n                    inspection_verification_test---\n                    analysis_verification_test---\n                    other_varification_tests    \n                end \n            end             \n            subgraph Provision_of_Objective_3evidences\n                direction TB\n                Software_specifications_conformity---\n                Consistent_SW_Implementation---\n                Correctness_Completeness_Traceability\n            end\n        end\n        Requirement---User_Requirement\n        Specification---Document_User_Requirement\n        Verification---Verify_Spacified_Requirement\n        Confirmation_by_Examinations---Confirmation_by_Examination\n        Provision_of_objective_3evidences---Provision_of_Objective_3evidences             \n    end"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#verification",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#verification",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Verification",
    "text": "Verification\n\n\n\n\nflowchart LR\n    subgraph Objective_Evidence\n        direction LR\n        subgraph Design_Outputs_of_SW_life_cycle_for_Specified_Requirements\n            direction TB\n            Consistency---\n            Completeness---\n            Correctness---\n            Documentation\n        end       \n        subgraph Software_Testing\n            direction LR\n            subgraph Testing_Environments\n                direction TB\n                satisfaction_for_input_requirements\n                satisfaction_for_input_requirements---Simulated_Use_Environment\n                subgraph User_Site_Testing\n                    direction TB                            \n                    Installation_Qualification---\n                    Operational_Qualification---\n                    Performance_Qualification\n                end\n            end\n            satisfaction_for_input_requirements---User_Site_Testing\n            subgraph Testing_Activities\n                direction TB\n                static_analyses---\n                dynamic_analyses---\n                code_and_document_inspections---\n                walkthroughs\n            end \n        Testing_Environments-->Testing_Activities\n        end\n    Design_Outputs_of_SW_life_cycle_for_Specified_Requirements-->Software_Testing-->Testing_Activities\nend    \n\n\n\n\n\n\n\n\n\n\nInstallation_Qualification (IQ): documentation of correct installations according to requirements, specifications, vendor’s recommendations, and the FDA’s guidance for all hardware, software, equipment and systems.\nOperational_Qualification (OQ): establishment of confidence that the software shows constant performances according to specified requirements.\nPerformance_Qualification (PQ): confirmation of the performance in the intended use according to the specified requirements for functionality and safety throughout the SW life cycle."
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation",
    "text": "Validation\n\n\n\n\nflowchart LR\n    subgraph Validation\n    direction LR\n        subgraph Confirmation_by_Examination\n            direction TB\n            subgraph Examination_List_at_each_stage_of_SW_Life_Cycle\n                direction TB\n                comprehensiveness_of_software_testing---\n                inspection_verification_test---\n                analysis_verification_test---\n                other_varification_tests    \n            end \n        end\n        subgraph Provision_of_objective_3evidences\n            direction TB\n            subgraph Software_specifications_conform_to\n                direction TB\n                user_needs \n                intended_uses\n            end\n            subgraph Consistent_SW_Implementation\n                direction TB\n                particular_requirements\n            end\n            subgraph Correctness_Completeness_Traceability\n                direction TB\n                correct_complete_implementation_by_all_SW_requirements---\n                traceable_to_system_requirements\n            end\n            Software_specifications_conform_to---\n            Consistent_SW_Implementation---\n            Correctness_Completeness_Traceability\n        end\n        Confirmation_by_Examination-->\n        Provision_of_objective_3evidences\n    end\n\n\n\n\n\n\n\n\n\n\n\n\nA conclusion that software is validated is highly dependent upon comprehensive software testing, inspections, analyses, and other verification tasks performed at each stage of the software development life cycle.\nTesting of device software functionality in a simulated* use environment, and user site testing are typically included as components of an overall design validation program for a software automated device."
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#benefits-and-difficulty-of-sw-vv",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#benefits-and-difficulty-of-sw-vv",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Benefits and Difficulty of SW V&V",
    "text": "Benefits and Difficulty of SW V&V\n\nBenefits of SW V&V\n\nIncrease the usability and reliability of the device,\nResulting in decreased failure rates, fewer recalls and corrective actions, less risk to patients and users, and reduced liability to device manufacturers.\nReduce long term costs by making V&V easier and less costly to reliably modify software and revalidate software changes.\n\n\n\nDifficulty in SW V&V\n\na developer cannot test forever, and\n\nit is difficult to know how much evidence is enough.\na matter of developing a level of confidence that the device meets all requirements\n\nConsiderations for an acceptable level of confidence\nmeasures and estimates such as defects found in specifications documents\ntesting coverage, and other techniques are all used before shipping the product.\na level of confidence varies depending upon the safety risk (hazard) of a SW or device"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-development-as-part-of-system-design",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-development-as-part-of-system-design",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "SW Development as Part of System Design",
    "text": "SW Development as Part of System Design\n\nOverview\n\n\n\n\nflowchart LR\n    subgraph Design_Review\n        direction LR\n        purpose_design_review---\n        design_review_types---\n        design_review_requirements---\n        design_review_outputs\n    end\n\n\n\n\n\n\n\n\nSoftware validation must be considered within the context of the overall design validation for the system. A documented requirements specification represents\n\nuser’s needs\nintended uses from which the product is developed.\n\nA primary goal of SW validation is to demonstrate that all completed SW products comply with all documented requirements.\n\n\nDesign Review\n\n\n\n\nflowchart LR\n    subgraph Design_Review\n        direction LR\n        subgraph Purpose_Design_Review\n            direction TB\n            documented_structured_comprehensive_systematic_examinations---\n            adequacy_of_design_requirements---\n            capability_of_design_for_requirements---\n            identification_of_problem   \n        end\n        subgraph Design_Reivew_Types\n            direction TB\n            subgraph Formal_Design_Review\n                direction TB\n                3rd_parties_outside_development_team\n            end\n            subgraph Informal_Design_Review\n                direction TB\n                within_development_team\n            end\n        Formal_Design_Review---Informal_Design_Review    \n        end\n        subgraph Design_Review_Requirements\n            direction TB\n               necessary_at_least_one_formal_design_review---\n               optinal_informal_design_review---\n               recommended_multiple_design_reviews\n        end\n        subgraph Formal_Design_Review_Outputs\n            direction TB\n            more_than_10_outputs\n        end\n        Purpose_Design_Review--> Design_Reivew_Types--> Design_Review_Requirements\n        Design_Review_Requirements-->Formal_Design_Review_Outputs\n    end\n\n\n\n\n\n\n\n\n\n\nDesign review is a primary tool for managing and evaluating development projects.\nAt least one formal design review must be conducted during the device design process.\nIt is recommended that multiple design reviews be conducted.\nProblems found at this point can\n\nbe resolved more easily,\nsave time and money, and\nreduce the likelihood of missing a critical issue."
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-principles",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-principles",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation Principles",
    "text": "Validation Principles\n\nOverview\n\n\n\n\nflowchart LR\n  subgraph Validation_Principles\n        direction LR\n        subgraph Validation_Starting_Point\n            direction TB\n            during_design_planning---\n            during_development_planning---\n            all_results_should_be_supported_by_evidence_collected_from_planning_SW_lifecylce\n        end\n        subgraph Validation_Conditions\n            direction TB\n            Requirements---Estabilishment_Confidence---SW_Lifecycle\n        end\n\n        subgraph Validation_Planning\n            direction TB\n            Specify_Areas\n            subgraph Validation_Coverage\n                direction TB\n            end\n            subgraph Validation_Process_Establishment\n                direction TB\n            end\n        Specify_Areas---Validation_Coverage---Validation_Process_Establishment\n        end\n\n        subgraph After_Self_Validation\n            direction TB\n            subgraph Validation_After_SW_Change\n        direction TB\n        end\n\n        subgraph Independence_of_Review\n        direction TB\n\n        end\n        Validation_After_SW_Change---Independence_of_Review\n        end\n            Validation_Starting_Point-->Validation_Conditions-->Validation_Planning-->\nAfter_Self_Validation\n    end\n\n\n\n\n\n\n\n\n\nPreparation for software validation should begin as early as possible because the final conclusion that the software is validated should be based on evidence collected from planned efforts conducted throughout the software lifecycle.\n\n\n\nConditions\n\n\n\n\nflowchart LR\n\nsubgraph Validation_Conditions\n    direction LR\n    subgraph SW_Requirments\n        direction TB\n        subgraph Documented_SW_Requirments_Specification\n            direction TB\n            Baseline_Provision_for_V&V---\n            establishment_of_software_requirements_specification\n        end\n    end\n    subgraph Estabilishment_Confidence\n        direction TB\n            mixture_of_methods_techinques---\n            preventing_SW_errors---\n            detecting_SW_errors                 \n    end\n    subgraph SW_Lifecycle\n        direction TB\n        validation_must_be_conducted_within_established_environment_across_lifecycle---\n        lifecycle_contains_SW_engineering_tasks_and_documentation---\n        V&V_tasks_must_reflect_intended_use\n    end\nend\nSW_Requirments---Estabilishment_Confidence---SW_Lifecycle\n\n\n\n\n\n\n\n\n\n\nPlanning\n\n\n\n\nflowchart LR\n    subgraph Validation_Planning\n        direction LR\n        define_what_to_accomplish\n        subgraph Specify_Areas\n            direction TB\n            scope---\n            approach---\n            resources---\n            schedules_activities---\n            types_activitieis---\n            extent_of_activities---\n            tasks---\n            work_items\n        end\n            define_what_to_accomplish-->Specify_Areas\n        subgraph Validation_Coverage\n               direction TB\n            depending_on_SW_complexity_of_SW_design---\n            depending_on_safety_risk_for_specified_intended_use---\n            select_activities_tasks_work_items_for_complexity_safety_risk\n        end\n        subgraph Validation_Process_Establishment\n            direction TB\n            establish_how_to_conduct-->\n            identify_sequence_of_specific_actions-->\n            identify_specific_activitieis-->\n            identify_specific_tasks-->\n            identify_specific_work_items\n        end\n    Specify_Areas-->Validation_Coverage-->Validation_Process_Establishment\n    end\n\n\n\n\n\n\n\n\n\n\nAfter SW Change\n\n\n\n\nflowchart LR\n\nsubgraph After_Self_Validation\n    direction LR\n    subgraph Validation_After_SW_Change\n        direction TB\n        determine_extent_of_change_on_entire_SW_system-->\n        determine_impact_of_change_on_entire_SW_system-->\n        conduct_SW_regression_testing_on_unchanged_but_vulnerable_modules\n    end\n    subgraph Independence_of_Review\n        direction TB\n        follow_basic_quality_assurance_precept_of_independence_of_review---\n        avoid_self_validation---\n        should_conduct_contracted_3rd_party_independent_V&V---\n        or_conduct_blind_test_with_internal_staff\n    end\n    Validation_After_SW_Change---Independence_of_Review\nend\n    \n\n\n\n\n\n\n\n\n\n\nSW Lifecycle\n\n\n\n\nflowchart LR\nsubgraph SW_Lifecycle\n    direction TB\n    validation_must_be_conducted_within_the_established_environment_across_lifecycle---\n    lifecycle_contains_SW_engineering_tasks_and_documentation---\n    V&V_tasks_must_reflect_intended_use\nend\n\nsubgraph SW_Lifecycle_Activities\n    direction TB\n    subgraph should_establish_lifecycle_model\n        direction TB\n        subgraph SW_Lifecycle_Model_List_Defined_in_FDA\n            direction TB\n            waterfall---\n            spiral---\n            rapid_prototyping---\n            incremental_development---\n            etc\n        end     \n    end\n    subgraph should_cover_SW_birth_to_retirement\n        direction TB\n        subgraph Lifecycle_Activities\n            direction TB\n            Quality_Plan-->\n            System_Requirements_Definition-->\n            Detailed_Software_Requirements_Specification-->\n            Software_Design_Specification-->\n            Construction_or_Coding-->\n            Testing-->\n            Installation-->\n            Operation_and_Support-->\n            Maintenance-->\n            Retirement\n        end\n    end\n    should_establish_lifecycle_model-->should_cover_SW_birth_to_retirement\n    should_cover_SW_birth_to_retirement-->Lifecycle_Activities\nend\nsubgraph SW_Lifecycle_Tasks\n    direction TB\n    should_define_and_document_risk_related_tasks---\n    should_define_and_document_which_tasks_are_appropriate_in_vice_versa---\n    Quality_Planning---\n    Quality_Planning_Tasks---\n    Inclusion_Task_List_for_Plan---\n    Identification_Task_List_for_Plan---\n    Configuration_Management---\n    Control---\n    Management---\n    Procedures---\n    ensure_proper_communications_and_documentation---\n    Task_Requirements\nend\nSW_Lifecycle-->SW_Lifecycle_Activities-->SW_Lifecycle_Tasks"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-lifecycle-tasks",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#sw-lifecycle-tasks",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "SW Lifecycle Tasks",
    "text": "SW Lifecycle Tasks\n\nOverview\n\n\n\n\n \nflowchart TB\n\nsubgraph SW_Lifecycle_Tasks\n    direction LR\n    subgraph Define_and_Document_List\n        direction TB\n        risk_related_tasks---\n        whether_or_not_tasks_are_appropriate\n    end\n    \n    subgraph Quality_Planning\n        direction TB\n        subgraph Quality_Planning_Tasks\n            direction TB\n        \n        end\n        subgraph Inclusion_List_for_Plan\n            direction TB\n            \n        end\n        subgraph Identification_List_for_Plan\n            direction TB\n            \n        end\n    Quality_Planning_Tasks-->Inclusion_List_for_Plan-->Identification_List_for_Plan\n    end\n    \n    subgraph Configuration_Management\n        direction TB\n        subgraph Control\n            direction TB\n            \n        end\n        subgraph Management\n            direction TB\n        end\n        subgraph Procedures\n            direction TB\n        end\n        ensure_proper_communications_and_documentation\n        Control-->Management-->Procedures-->ensure_proper_communications_and_documentation \n    end\n    subgraph Task_Requirements\n        direction TB\n        identification---\n        analysis---\n        predetermined_documentation_about_device_its_intended_use---\n        Requirements_Specification_List---\n        Verfification_List_by_Evaluation---\n        Requirements_Tasks    \n    end\nDefine_and_Document_List-->Quality_Planning-->Configuration_Management-->Task_Requirements\nend     \n\n\n\n\n\n\n\n\n\n\nQuality Planning\n\n\n\n\nflowchart TB\nsubgraph Quality_Planning\n    direction LR\n    subgraph Quality_Planning_Tasks\n        direction TB\n        Risk_Hazard_Management_Plan---\n        Configuration_Management_Plan---\n        Software_Quality_Assurance_Plan---\n        Software_Verification_and_Validation_Plan---\n        Verification_and_Validation_Tasks---\n        Acceptance_Criteria---\n        Schedule_and_Resource_Allocation_for_V&V_activities---\n        Reporting_Requirements---\n        Formal_Design_Review_Requirements---\n        Other_Technical_Review_Requirements---\n        Problem_Reporting_and_Resolution_Procedures---\n        Other_Support_Activities\n    end\n    subgraph Inclusion_List_for_Plan\n        direction TB\n        specific_tasks_for_each_life_cycle_activity---\n        Enumeration_of_important_quality_factors--- \n        like_reliability_maintainability_usability---\n        Methods_and_procedures_for_each_task---\n        Task_acceptance_criteria---\n        Criteria_for_defining_and_documenting_outputs_for_input_requirements---\n        Inputs_for_each_task---\n        Outputs_from_each_task---\n        Roles_resources_and_responsibilities_for_each_task---\n        Risks_and_assumptions---\n        Documentation_of_user_needs    \n    end\n    subgraph Identification_List_for_Plan\n        direction TB\n        personnel---\n        facility_and_equipment_resources_for_each_task---\n        role_that_risk_hazard_management        \n    end\nQuality_Planning_Tasks-->Inclusion_List_for_Plan-->Identification_List_for_Plan\nend\n\n\n\n\n\n\n\n\n\n\nConfiguration Management\n\n\n\n\nflowchart LR\nsubgraph Configuration_Management\n    direction LR\n    subgraph Control\n        direction TB\n        control_multiple_parallel_development_activities---\n        ensure_positive_and_correct_correspondence_of---\n        specifications_documents---\n        source_code---\n        object_code---\n        test_suites---\n        ensure_accurate_identification_of_approved_versions---\n        ensure_access_to_approved_versions---\n        create_procedures_for_reporting---\n        create_procedures_for_resolving_SW_anomalies                            \n    end\n    subgraph Management\n        direction TB\n        identify_reports---\n        specify_contents---\n        specify_format---\n        specify_responsible_organizational_elements_for_each_report\n    end\n    subgraph Procedures\n        direction TB\n        necessary_for_review_of_SW_development_results---\n        necessary_for_approval_of_SW_development_results\n    end\n    ensure_proper_communications_and_documentation\n    Control-->Management-->Procedures-->ensure_proper_communications_and_documentation \nend\n\n\n\n\n\n\n\n\n\n\nTask Requirements\n\n\n\n\n\nflowchart TB\n    subgraph Task_Requirements\n        direction LR\n        subgraph group\n            direction TB\n            identification---\n            analysis---\n            predetermined_documentation_about_device_its_intended_use\n        end\n        \n        subgraph Requirements_Specification_List\n            direction TB\n            All_software_system_inputs---\n            All_software_system_outputs---\n            All_functions_that_software_system_will_perform---\n            All_performance_requirements_that_software_will_meet---\n            requirement_example_data_throughput_reliability_timing---\n            definition_of_all_external_and_user_interfaces---\n            any_internal_software_to_system_interfaces---\n            How_users_will_interact_with_system---\n            What_constitutes_error---\n            how_errors_should_be_handled---\n            Required_response_times---\n            Intended_operating_environment_for_software---\n            All_acceptable_ranges_limits_defaults_specific_values---\n            All_safety_related_requirements_that_will_be_implemented_in_SW---\n            All_safety_related_specifications_that_will_be_implemented_in_SW---\n            All_safety_related_features_that_will_be_implemented_in_SW---\n            All_safety_related_functions_that_will_be_implemented_in_SW---\n            clearly_identify_potential_hazards---\n            risk_evaluation_for_accuracy---\n            risk_evaluation_for_completeness---\n            risk_evaluation_for_consistency---\n            risk_evaluation_for_testability---\n            risk_evaluation_for_correctness---\n            risk_evaluation_for_clarity\n        end\n        subgraph Verfification_List_by_Evaluation\n            direction TB\n            no_internal_inconsistencies_among_requirements---\n            All_of_performance_requirements_for_system---\n            Complete_correct_Fault_tolerance_safety_security_requirements---\n            Accurate_Complete_Allocation_of_software_functions---\n            Appropriate_Software_requirements_for_system_hazards---\n            mesurable_requirements---\n            objectively_verifiable_requirements---\n            traceable_requirements\n        end\n        subgraph Requirements_Tasks\n            direction TB\n            Preliminary_Risk_Analysis---\n            Traceability_Analysis---\n            ex_Software_Requirements_to_System_Requirements_vice_versa---\n            ex_Software_Requirements_to_Risk_Analysis---\n            Description_of_User_Characteristics---\n            Listing_of_Characteristics_and_Limitations_of_Memory---\n            Software_Requirements_Evaluation---\n            Software_User_Interface_Requirements_Analysis---\n            System_Test_Plan_Generation---\n            Acceptance_Test_Plan_Generation---\n            Ambiguity_Review_or_Analysis\n        end\n    group-->Requirements_Specification_List \n    Verfification_List_by_Evaluation-->Requirements_Tasks\n    end\n\n\n\n\n\n\n\n\n\n\nDesign Overview\n\n\n\n\nflowchart TB\n    subgraph Deign_Task\n        direction LR\n    subgraph Design_Consideration_List\n        direction TB\n        subgraph Description\n                    direction TB\n                end\n        subgraph Human_Factors_Engineering\n          direction TB\n    \n        end\n        subgraph Safety_Usability_Issues_Conisderation\n            direction TB\n\n            end\n        Description---Human_Factors_Engineering---Safety_Usability_Issues_Conisderation\n    end\n    subgraph Design_Specificiation\n        direction TB\n        subgraph Performing_List\n            direction TB\n        end\n        subgraph Design_Specification_Inclusion_List\n            direction TB\n        end\n        subgraph Evaludations_Criteria_of_Design\n            direction TB\n        end\n    Performing_List---Design_Specification_Inclusion_List---Evaludations_Criteria_of_Design \n    end\n    subgraph Design_Activity_and_Task_List\n        direction TB\n        subgraph Final_Design_activity\n            direction TB\n        end\n        subgraph Specific_Design_Tasks\n            direction TB\n        end\n        subgraph Coding_Activity\n            direction TB\n            subgraph traceability_analysis\n                direction TB\n            end\n            subgraph Coding_Tasks\n                direction TB\n            end\n        traceability_analysis-->Coding_Tasks\n        end\n        Final_Design_activity---Specific_Design_Tasks---Coding_Activity\n    end\n    Design_Consideration_List---Design_Specificiation---Design_Activity_and_Task_List\n\n    end\n\n\n\n\n\n\n\n\n\nDesign Consideration\n\n\n\n\nflowchart TB\nsubgraph Design_Consideration_List\n    direction LR\n        subgraph Requirement_Specification\n            direction TB\n            logical_representation---\n            physical_representation\n        end\n    subgraph Description\n            direction TB\n            what_to_do---\n            how_to_do                   \n        end\n    subgraph Human_Factors_Engineering\n      direction TB\n            entire_design_and_development_process---\n            device_design_requirements---\n            analyses---\n            tests\n    end\n    subgraph Safety_Usability_Issues_Conisderation\n        direction TB\n                flowcharts--- \n                state_diagrams--- \n                prototyping_tools---\n                test_plans\n        end\n        Requirement_Specification---Description---Human_Factors_Engineering---Safety_Usability_Issues_Conisderation\n    end\n\n\n\n\n\n\n\n\n\n\nDesign Specification\n\n\n\n\nflowchart TB\nsubgraph Design_Specificiation\n        direction LR\n        subgraph Conceptual_Specification\n            direction TB\n            requirements_specification---\n            predetermined_criteria---\n            Software_risk_analysis---\n            Development_procedures---\n            coding_guidelines\n        end\n        subgraph Performing_List\n            direction TB\n            task---\n            function_analyses---\n            risk_analyses---\n            prototype_tests_and_reviews---\n            full_usability_tests\n        end\n        subgraph Design_Specification_Inclusion_List\n            direction TB\n            SW_requirements_specification---\n            predetermined_criteria_for_SW_acceptance---\n            SW_risk_analysis---\n            Development_procedure_list---\n            coding_guidance---\n            Systems_documentation---\n            Hardware_to_be_used---\n            Parameters_to_be_measured---\n            Logical_structure---\n            Control_logic---\n            logical_processing_steps_aka_algorithms---\n            Data_structures_diagram---\n            data_flow_diagrams---\n            Definitions_of_variables---\n            description_of_where_they_are_used---\n            Error_alarm_and_warning_messages---\n            Supporting_software---\n            internal_modules_Communication_links---\n            supporting_sw_links---\n            link_with_hardware---\n            link_with_user---\n            physical_Security_measures---\n            logical_security_measures\n        end\n        subgraph Evaludations_Criteria_of_Design\n            direction TB\n            complete--- \n            correct---\n            consistent--- \n            unambiguous--- \n            feasible---\n            maintainable---\n            analyses_of_control_flow---\n            data_flow--- \n            complexity--- \n            timing--- \n            sizing--- \n            memory_allocation---\n            module_architecture---\n            traceability_analysis_of_modules--- \n            criticality_analysis\n        end\n    Conceptual_Specification---Performing_List---Design_Specification_Inclusion_List---Evaludations_Criteria_of_Design  \n    end\n\n\n\n\n\n\n\n\n\n\nDesign Activity and Task\n\n\n\n\n\nflowchart TB\nsubgraph Design_Activity_and_Task_List\n        direction LR\n        subgraph Final_Design_activity\n            direction TB\n            Formal_Design_Review_Before_Design_Implementation---\n            correct_consistent_complete_accurate_testable\n        end\n        subgraph Specific_Design_Tasks\n            direction TB\n            Updated_Software_Risk_Analysis---\n            Traceability_Analysis---\n            Software_Design_Evaluation---\n            Design_Communication_Link_Analysis---\n            Module_Test_Plan_Generation---\n            Integration_Test_Plan_Generation---\n            module_Test_Design_Generation---\n            integration_Test_Design_Generation---\n            system_Test_Design_Generation---\n            acceptance_Test_Design_Generation   \n        end\n        subgraph Coding_Activity\n            direction TB\n            subgraph traceability_analysis\n                direction TB\n                each_element_implementation---\n                each_module_implementation_to_element_and_risk_analysis---\n                each_functions_implemented_to_element_and_risk_analysis---\n                Tests_for_modules_to_element_and_risk_analysis--- \n                Tests_for_functions_to_element_and_risk_analysis---\n                Tests_for_modules_to_source_code---\n                Tests_for_functions_to_source_code\n            end\n            subgraph Coding_Tasks\n                direction TB\n                Traceability_Analyses---\n                Source_Code_to_Design_Specification_and_vice_versa---\n                Test_Cases_to_Source_Code_and_to_Design_Specification---\n                Source_Code_and_Source_Code_Documentation_Evaluation---\n                Source_Code_Interface_Analysis---\n                Test_Procedure_and_Test_Case_Generation \n            end\n        traceability_analysis-->Coding_Tasks\n        end\n        Final_Design_activity---Specific_Design_Tasks---Coding_Activity\n    end"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing-task",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#testing-task",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Testing Task",
    "text": "Testing Task\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction TB\n            subgraph Test_Plans\n                direction TB\n            end\n            subgraph Conditions\n                direction TB\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n        subgraph Code_Based_Testing\n            direction TB\n            subgraph white_box_testing\n                direction TB\n            end\n            subgraph Evaluation_of_level_of_white_box_testing\n                direction TB\n            end\n            subgraph Coverage_Metrics_of_White_Box_Testing\n                direction TB\n            end\n        white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n        end\n        subgraph Alternatives_to_White_Box_Testing\n            direction TB\n            subgraph Types_of_Functional_Software_Testing_Increasing_Cost\n                direction TB\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n            end\n            subgraph Change_in_SW\n                direction TB    \n            end\n        Types_of_Functional_Software_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW\n        end\n        \n\n        subgraph Development_Testing\n            direction TB\n            subgraph unit_level_testing\n                direction TB    \n            end\n            subgraph integration_level_testing\n                direction TB\n            end\n            subgraph system_level_testing\n                direction TB\n            end\n            subgraph Error_Detected\n                direction TB        \n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\n\n        subgraph Testing_Tasks\n            direction TB\n        end\n        subgraph User_Site_Testing\n            direction TB\n            subgraph Quality_System_Rregulation\n                direction TB\n            end\n            subgraph Understand_Terminology\n                direction TB\n            end\n            subgraph Testing\n                direction TB\n            end\n            Quality_System_Rregulation---Understand_Terminology---Testing\n        end\nConsideration_Before_Testing_Tasks---Code_Based_Testing---Alternatives_to_White_Box_Testing\nDevelopment_Testing---Testing_Tasks---User_Site_Testing\n    end\n\n\n\n\n\n\n\n\n\n\nConsideration Before Testing Tasks\n\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction LR\n            subgraph Test_Plans\n                direction TB\n                should_identify_control_measures_like_traceability_analysis---\n                ensure_that_intended_coverage_is_achieved---\n                ensure_that_proper_documentation_is_prepared---\n                conduct_tests_not_by_SW_developers_but_in_other_sites\n            end\n            subgraph Conditions\n                direction TB\n                use_defined_inputs---\n                documented_outcomes---\n                gonnabe_time_consuming_activity---\n                gonnabe_difficult_activity---\n                gonnabe_imperfect_activity---\n                testing_all_program_functionality---\n                does_not_mean_100_prcnt_correction_perfection---\n                make_detailed_objective_evaluation---\n                requires_sophisticated_definition_specificiation---\n                all_test_procedures_data_results_are_documented---\n                all_test_procedures_data_results_are_suitable_for_review---\n                all_test_procedures_data_results_are_suitable_for_objective_decision_making---\n                all_test_procedures_data_results_are_suitable_for_subsequent_regression_testing\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n                make_test_plans---\n                make_test_cases---\n                plan_schedules---\n                plan_environments---\n                plan_resources_of_personnel_tools---\n                plan_methodologies---\n                plan_inputs_procedures_outputs_expected_results---\n                plan_documentation---\n                plan_reporting_criteria\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n                expected_test_outcome_is_predefined---\n                good_test_case_has_high_probability_of_exposing_errors---\n                successful_test_is_one_that_finds_errors---\n                There_is_independence_from_coding---\n                Both_application_for_user_and_SW_for_programming_expertise_are_employed---\n                Testers_use_different_tools_from_coders---\n                Examining_only_the_usual_case_is_insufficient---\n                Test_documentation_permits_its_reuse---\n                Test_documentation_permits_independent_confirmation_---\n                of_pass/fail_test_outcome_during_subsequent_review\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n\nend\n\n\n\n\n\n\n\n\n\n\nCode Based Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n            subgraph Code_Based_Testing\n                direction LR\n                subgraph white_box_testing\n                    direction TB\n                    identify_dead_code_never_executed---\n                    conduct_unit_test---\n                    conduct_other_level_tests\n                end\n                subgraph Evaluation_of_level_of_white_box_testing\n                    direction TB\n                    use_coverage_metrics---\n                    metrics_of_completeness_of_test_selection_criteria---\n                    coverage_should_be_commensurate_with_level_of_SW_risk---\n                    coverage_means_100_prcnt_coverage\n                end\n                subgraph Coverage_Metrics_of_White_Box_Testing\n                    direction TB\n                    Statement_Coverage---\n                    Decision_or_Branch_Coverage---\n                    Condition_Coverage---\n                    Multi_Condition_Coverage\n                    Loop_Coverage---\n                    Path_Coverage---\n                    Data_Flow_Coverage\n                end\n            white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n            end\nend\n\n\n\n\n\n\n\n\n\n\nSolution to White Box Testing\n\n\n\n\n\n \nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Alternatives_to_White_Box_Testing\n            direction LR\n            subgraph Types_of_Testing_Increasing_Cost\n                direction TB\n                    Normal_Case---\n                    Output_Forcing---\n                    Robustness---\n                    Combinations_of_Inputs\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n                difficulty_in_linking_---\n                tests_completion_criteria_to_SW_reliability\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n                statistical_testing---\n                provide_further_assurance_of_reliability---\n                generate_randomly_test_data_from_defined_distributions---\n                distribution_defined_by_expected_use---\n                distribution_defined_by_hazardous_use---\n                distribution_defined_by_malicious_use---\n                large_test_data_cover_particular_areas_or_concerns---\n                statistical_testing_provides_high_structural_coverage---\n                statistical_testing_requires_stable_system---\n                structural_and_functional_testing_are_prerequisites_for_statistical_testing\n            end\n            subgraph Change_in_SW\n                direction TB\n                conduct_regression_analysis_and_testing---\n                should_demonstrate_correct_implementation---\n                should_demonstrate_no_adverse_impact_on_other_modules   \n            end\n            subgraph Testing_Tasks\n                direction TB\n                Test_Planning---\n                Structural_Test_Case_Identification---\n                Functional_Test_Case_Identification---\n                Traceability_Analysis_Testing---\n                Unit_Tests_to_Detailed_Design---\n                Integration_Tests_to_High_Level_Design---\n                System_Tests_to_Software_Requirements---\n                Unit_Test_Execution---\n                Integration_Test_Execution---\n                Functional_Test_Execution---\n                System_Test_Execution---\n                Acceptance_Test_Execution---\n                Test_Results_Evaluation---\n                Error_Evaluation_Resolution---\n                Final_Test_Report\n            end\n        Types_of_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW---Testing_Tasks\n        end\nend\n\n\n\n\n\n\n\n\n\n\nDevelopment Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Development_Testing\n            direction LR\n            subgraph unit_level_testing\n                direction TB    \n                focus_on_early_examination_of_sub_program_functionality---\n                ensure_functionality_invisible_at_system_level_examined---\n                ensure_quality_software_units_furnished_for_integration\n            end\n            subgraph integration_level_testing\n                direction TB\n                focuses_on_transfer_of_data---\n                focuses_on_control_across_program's_internal_and_external_interfaces\n            end\n            subgraph system_level_testing\n                direction TB\n                demonstrate_all_specified_functionality_exists---\n                demonstrate_SW_is_trustworthy---\n                verifies_as_built_program's_functionality_and_performance_on_requirements---\n                addresses_functional_concerns_and_intended_uses---\n                like_Performance_issues---\n                like_Responses_to_stress_conditions---\n                like_Operation_of_internal_and_external_security_features---\n                like_Effectiveness_of_recovery_procedures---\n                like_disaster_recovery---\n                like_Usability---\n                like_Compatibility_with_other_SW---\n                like_Behavior_in_each_of_the_defined_hardware_configurations---\n                like_Accuracy_of_documentation\n            end\n            subgraph Error_Detected\n                direction TB        \n                should_be_logged---\n                should_be_classified---\n                should_be_reviewed---\n                should_be_resolved_before_SW_release\n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\nend\n\n\n\n\n\n\n\n\n\n\nUser Site Testing\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph User_Site_Testing\n            direction LR\n            subgraph Quality_System_Rregulation\n                direction TB\n                installation---\n                inspection_procedures---\n                testing_appropriateness---\n                documentation_of_inspection---\n                testing_to_demonstrate_proper_installation\n            end\n            subgraph Understand_Terminology\n                direction TB\n                beta_test---\n                site_validation---\n                user_acceptance_test---\n                installation_verification---\n                installation_testing\n            end\n            subgraph Testing\n                direction TB\n                subgraph Requirements\n                    direction TB\n                    either_actual_or_simulated_use---\n                    verification_of_intended_functionality---\n                    constant_contact_FDA_center\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n    \n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_System_Ability\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_User_Ability\n                        direction TB\n        \n                    end \n                    subgraph Evaluation_of_Operator_Ability\n                        direction TB\n        \n                    end\n                constant_contact_FDA_center-->Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n                end \n                        \n            \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end\n        Quality_System_Rregulation-->    Understand_Terminology-->Testing-->User_Site_Testing_Task\n        end\nend\n\n\n\n\n\n\n\n\n\n\nTesting\n\n\n\n\nflowchart TB\n            subgraph Testing\n                direction LR\n                subgraph Requirements\n                    direction LR\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n                        either_actual_or_simulated_use---\n                        verification_of_intended_functionality---\n                        constant_contact_FDA_center---\n                        formal_summary_of_testing---\n                        record_of_formal_acceptance\n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n                        testing_plan_of_full_range_of_operating_conditions---\n                        testing_plan_to_detect_any_latent_faults---\n                        all_testing_procedures---\n                        test_input_data---\n                        test_results---\n                        hardware_installation_and_configuration---\n                        software_installation_and_configuration---\n                        exercising_measure_of_all_system_components---\n                        versions_of_all_system_components           \n                    end\n                    subgraph Evaluation\n                        direction TB\n                      subgraph Evaluation_of_System_Ability\n                            direction TB\n                            high_volume_of_data---\n                            heavy_loads_or_stresses---\n                            security\n                            subgraph fault_testing\n                                direction TB\n                                avoidance---\n                                detection---\n                                tolerance---\n                                recovery\n                            end\n                        security---fault_testing---\n                        error_message---\n                        implementation_of_safety_requirements\n                        end\n                      subgraph Evaluation_of_User_Ability\n                            direction TB\n                            ability_to_understand_system---\n                            ability_to_interface_with_system\n                        end \n                        subgraph Evaluation_of_Operator_Ability\n                            direction TB\n                            ability_to_perform_intended_functions---\n                            ability_to_respond_in_alarms---\n                            ability_to_respond_in_warnings---\n                            ability_to_respond_in_error_messages\n                        end\n\n                    end\n            Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n            end     \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#maintenance-and-software-changes",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#maintenance-and-software-changes",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Maintenance and Software Changes",
    "text": "Maintenance and Software Changes\n\n\n\n\nflowchart LR\n    subgraph Hardware_VS_Software\n        direction LR\n        subgraph HW_maintenance_Inclusion\n            direction TB\n            preventive_hardware_maintenance_actions--- \n            component_replacement---\n            corrective_changes\n        end\n        subgraph SW_maintenance_Inclusion\n            direction TB\n            corrective---\n            perfective---\n            adaptive_maintenance---\n            not_include_preventive_maintenance_actions---\n            not_include_software_component_replacement\n        end\n    end\n    subgraph Maintenance_Type\n        direction TB\n        Corrective_maintenance---\n        Perfective_maintenance---\n        Adaptive_maintenance---\n        Sufficient_regression_analysis---\n        Sufficient_regression_testing\n    end\n    subgraph Factors_of_Validation_for_SW_change\n        direction TB\n        type_of_change---\n        development_products_affected---\n        impact_of_those_products_on_operation\n    end\n    subgraph Factors_of_Limitting_Validation_Effort\n        direction TB\n        documentation_of_design_structure---\n        documentation_of_interrelationships_of_modules---\n        documentation_of_interrelationships_of_interfaces---\n        test_documentation---\n    test_cases---\n        results_of_previous_verification_and_validation_testing\n    end\n    subgraph Maintenance_tasks\n        direction TB\n        Software_Validation_Plan_Revision---\n        Anomaly_Evaluation---\n        Problem_Identification_and_Resolution_Tracking---\n        Proposed_Change_Assessment---\n        Task_Iteration---\n        Documentation_Updating\n    end\nHardware_VS_Software-->Maintenance_Type-->Factors_of_Validation_for_SW_change-->\nFactors_of_Limitting_Validation_Effort-->Maintenance_tasks"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-of-quality-system-software",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/FDA_SW_validation_diagram.html#validation-of-quality-system-software",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation of Quality System Software",
    "text": "Validation of Quality System Software\n\nOverview\n\n\n\n\nflowchart LR\n    subgraph Use_of_Computers_and_automated_equipment\n        direction TB\n        medical_device_design---\n        laboratory_testing_and_analysis---\n        product_inspection_and_acceptance---\n        production_and_process_control---\n        environmental_controls---\n        packaging---\n        labeling---\n        traceability---\n        document_control---\n        complaint_management---\n        programmable_logic_controllers---\n        digital_function_controllers---\n        statistical_process_control---\n        supervisory_control_and_data_acquisition---\n        robotics---\n        human_machine_interfaces---\n        input_output_devices---\n        computer_operating_systems\n    end\n    subgraph Factors_in_Validation\n        direction TB\n        subgraph Validation_Factors_of_Quality_System\n            direction TB\n            subgraph 21_CFR_Part_11_Requirements\n                direction TB\n            end\n        end\n        subgraph Validation_Supporting_Factors\n            direction TB\n        end\n        subgraph Factors_of_Validation_Evidence_Level\n            direction TB\n        end\n        subgraph Factors_of_Easing_Validation_Effort\n            direction TB\n            planning---\n            documented_requirments---\n            risk_analysis   \n        end\n    Validation_Factors_of_Quality_System-->Validation_Supporting_Factors-->Factors_of_Validation_Evidence_Level-->\nFactors_of_Easing_Validation_Effort\n    end\n    subgraph Documented_User_Requirements\n        direction TB\n        intended_use_of_software_or_automated_equipment---\n      level_of_dependency_on_software_or_equipment\n    end\n    subgraph List_That_Must_Be_Defined_by_User\n        direction TB\n        \n    end\n    subgraph Documentation_List\n        direction TB\n        documented_protocol---\n        documented_validation_results\n        subgraph Documented_Test_Cases\n            direction TB\n        \n        end\n        documented_validation_results---Documented_Test_Cases\n    end\n\n    subgraph Manufaturer's_Responsbility\n        direction TB\n        \n    end\nUse_of_Computers_and_automated_equipment---Factors_in_Validation---Documented_User_Requirements---\nList_That_Must_Be_Defined_by_User---Documentation_List---Manufaturer's_Responsbility\n\n\n\n\n\n\n\n\n\n\nFactors in Validation\n\n\n\n\nflowchart LR\n    subgraph Factors_in_Validation\n        direction LR\n        subgraph Validation_Factors_of_Quality_System\n            direction TB\n            subgraph 21_CFR_Part_11_Requirements\n                direction TB\n                electronic_records_regulation---\n                electronic_signatures_regulation---\n                regulations_establishment---\n                security---\n                data_integrity---\n                validation_requirements \n            end\n        end\n        subgraph Validation_Supporting_Factors\n            direction TB\n            verifications_of_outputs_from_each_stage--- \n            verifications_of_outputs_throught_SW_life_cycle---\n            checking_for_proper_operation_in_intended_use_environment\n        end\n        subgraph Factors_of_Validation_Evidence_Level\n            direction TB\n            risk_posed_by_automated_operation---\n            complexity_of_process_software---\n            degree_of_dependence_on_automated_process\n        end\n        subgraph Factors_of_Easing_Validation_Effort\n            direction TB\n            planning---\n            documented_requirments---\n            risk_analysis   \n        end\n    Validation_Factors_of_Quality_System-->Validation_Supporting_Factors-->Factors_of_Validation_Evidence_Level-->\nFactors_of_Easing_Validation_Effort\n    end"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html",
    "title": "FDA Software Validation Guidance Summary",
    "section": "",
    "text": "I am so sorry not for providing a compfortab visualization. Although I have tried to use revealjs provided in the guide section in the Quarto website, I am still clumsy at handling it. I will update this article as I get proficient at revealjs using Quarto.\nThe FDA validation guidance document is a bit difficult to understand because its explanations provides abstract, general, and present broad cocepts. For this reason, I compiled and made a summary of the document with many diagrams. However, some diagrams are too small to see. Please, scroll up your mouse wheel with the ‘Ctrl’ key on your keyboard pressed to zoom in on the small text in the diagrams.\n(Writing in Progress) It is hard to say that this version of summary is suitable for representing and covering the original document. Some of the content of this document has been excluded for personal use (less than 10% of it have been excluded).\n\n\n\n\n2022-12-28, download this article as PDF\n2022-12-28, summary with diagrams\n\n\n\n\nFDA: General Principles of Software Validation\n\n\n\nFDA has reported the following analysis:\n\n242 of 3140 (7.7%) medical device recalls between 1992 and 1998 are attributable to software failures.\n192 of the 242 (79.3%) failures were caused by software defects that were introduced when changes were made to the software after its initial production and distribution.\nThe software validation check is a principal means of avoiding such defects and resultant recalls.\n\n\n\n\n\nCenter for Devices and Radiological Health (CDRH)\nU.S. Department Of Health and Human Services\nFood and Drug Administration\nCenter for Biologics Evaluation and Research"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#purpose",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#purpose",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.1 Purpose",
    "text": "2.1 Purpose\nThe purpose is to make a sketch of general validation principle of the validation of medical device software or software used to design or develop."
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#scope",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#scope",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.2 Scope",
    "text": "2.2 Scope\nThe scope of this guidance is broad. The important activities for the software validation include at least:\n\nplanning,\nverfication,\ntesting,\ntraceability, and\nconfiguration management.\n\nAll of the activities above should be\n\nintegrated\nbe able to describe software life cycle management and\nbe able to describe software risk management.\n\nThe software validation and verification activities should be focused into the entire software life cycle. (It does not necessarily mean that the activies must follow any technical models.)\nThe guidance is applicable to any software related to a regulated medical device and anyone who is employed in a bio or medical industry.\n\n2.2.1 The Least Burdensome Approach\nThe guidance reflects that the minimum list of the relavant scientific and legal requirements that you must comply with.\n\n\n2.2.2 Regulatory Requirements for Software Validation\n\nSoftware validation: a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997. (See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\nSpecific requirements for validation of device software are found in 21 CFR §820.30(g). Other design controls, such as planning, input, verification, and reviews, are required for medical device software. (See 21 CFR §820.30.)\ncomputer systems used to create, modify, and maintain electronic records and to manage electronic signatures are also subject to the validation requirements. (See 21 CFR §11.10(a).)\n\n\n2.2.2.1 Objective\nThe objective of software validation is to ensure:\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\n2.2.2.2 What to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software.\n\n\n\n2.2.3 Quality System Regulation vs Pre-market Submissions\nThis document does not address any specific requirements but general ones. Specific issues should be addressed to\n\nthe Office of Device Evaluation (ODE),\nCenter for Devices and Radiological Health (CDRH)\nthe Office of Blood Research and Review,\nCenter for Biologics Evaluation and Research (CBER). See the references in Appendix A for applicable FDA guidance documents for pre-market submissions."
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#context-for-software-validation",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#context-for-software-validation",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.3 Context for Software Validation",
    "text": "2.3 Context for Software Validation\n\nValidation elements that FDA expects to do for the Quality System regulation, using the principles and tasks are listed in Sections 4 and 5.\nAdditional specific information is available from many of the references listed in Appendix A\n\n\n2.3.1 Definition and Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology between the medical device Quality System regulation and the software industry:\n\nrequirements,\nspecification,\nverification, and\nvalidation.\n\n\n\n2.3.1.1 Requirements and Specifications\nThe Quality System regulation states\n\nthat design input requirements must be documented and\nthat specified requirements must be verified\n\nBut, the regulation does not further clarify the distinction between the terms “requirement” and “specification.”\n\nRequirement\n\ncan be any need or expectation for a system or for its software.\nreflects the stated or implied needs of the customer: requirements may be\n\nmarket-based,\ncontractual,\nstatutory, or\nan organization’s internal requirements.\n\nvarious examples of requirements\n\ndesign, functional, implementation, interface, performance, or physical requirements\n\nSoftware requirements derived from the system requirements for those aspects of system functionality\nSoftware requirements are typically stated in functional terms and are defined, refined, and updated as a development project progresses.\nSuccess in accurately and completely documenting software requirements is a crucial factor in successful validation of the resulting software.\n\nSpecification\n\ndefined as “a document that states requirements.” (See 21 CFR §820.3(y).)\nIt may refer to or include drawings, patterns, or other relevant documents\nIt usually indicates the means and the criteria whereby conformity with the requirement can be checked.\nVarious examples of written specifications\n\nsystem requirements specification,\nsoftware requirements specification,\nsoftware design specification,\nsoftware test specification,\nsoftware integration specification, etc.\n\nAll of these documents are design outputs for which various forms of verification are necessary.\n\n\n\n\n2.3.1.2 Verifiaction and Validation\nThe Quality System regulation is harmonized with ISO 8402:1994, which treats “verification” and “validation” as separate and distinct terms.\n\nSoftware verification\n\nIt provides objective evidence that the design outputs of a particular phase of the software development life cycle meet all of the specified requirements for that phase.\nIt looks for\n\nconsistency,\ncompleteness, and\ncorrectness of the software and its supporting documentation\n\nSoftware testing\n\nverification activities intended to confirm that software development output meets its input requirements.\n\nTypes of verification activities include\n\nvarious static and dynamic analyses,\ncode and document inspections,\nwalkthroughs, and other techniques.\n\n\nSoftware Validation\n\nConfirmation by examination and provision of the following objective evidence:\nEvidence 1: software specifications conform to user needs and intended uses, and\nEvidnece 2: the particular requirements implemented through software can be consistently fulfilled.\nEvidnece 3: all software requirements have been implemented correctly and completely and are traceable to system requirements.\nA conclusion that software is validated is highly dependent upon comprehensive software testing, inspections, analyses, and other verification tasks performed at each stage of the software development life cycle.\nTesting of device software functionality in a simulated* use environment, and user site testing are typically included as components of an overall design validation program for a software automated device.\n\nDifficulty in Software verification and validation\n\na developer cannot test forever, and\nit is difficult to know how much evidence is enough.\nIn large measure, software validation is a matter of developing a “level of confidence” that the device meets all requirements and user expectations for the software automated functions and features of the device.\nConsiderations for an acceptable level of confidence\n\nmeasures such as defects found in specifications documents,\nestimates of defects remaining,\ntesting coverage, and other techniques are all used to develop before shipping the product.\nHowever, a level of confidence varies depending upon the safety risk (hazard) posed by the automated functions of the device. (Info on safety risk is found in Section 4 and in the international standards ISO/IEC 14971-1 and IEC 60601-1-4 referenced in Appendix A).\n\n\n\n\n\n2.3.1.3 IQ/OQ/PQ\nIQ/OQ/PQ are the terminology related to user site software validation\n\nInstallation qualification (IQ)\nOperational qualification (OQ)\nPerformance qualification (PQ).\n\nDefinitions of these terms may be found in FDA’s Guideline on General Principles of Process Validation, dated May 11, 1987, and in FDA’s Glossary of Computerized System and Software Development Terminology, dated August 1995. Both FDA personnel and device manufacturers need to be aware of these differences in terminology as they ask for and provide information regarding software validation.\n\n\n\n2.3.2 Software Development as Part of System Design\nSoftware validation must be considered within the context of the overall design validation for the system. A documented requirements specification represents\n\nthe user’s needs\nintended uses from which the product is developed.\n\nA primary goal of software validation is to then demonstrate that all completed software products comply with all documented software and system requirements.\n\n\n2.3.3 Software Is Different from Hardware\nSoftware engineering needs an even greater level of managerial scrutiny and control than does hardware engineering.\n\n\n2.3.4 Benefits of Software Validation\n\nIncrease the usability and reliability of the device,\nResulting in decreased failure rates, fewer recalls and corrective actions, less risk to patients and users, and reduced liability to device manufacturers.\nSoftware validation can also reduce long term costs by making it easier and less costly to reliably modify software and revalidate software changes.\n\n\n\n2.3.5 Design Review\nDesign reviews are documented, comprehensive, and systematic examinations of a design to evaluate\n\nthe adequacy of the design requirements,\nthe capability of the design to meet these requirements, and\nto identify problems.\n\nDesign review is a primary tool for managing and evaluating development projects.\n\nIt is strongly recommended that it should be formal design because it is more structured than the informal one.\nIt includes participation from others outside the development team.\nIt may review reference or include results from other formal and informal reviews.\nDesign reviews should include\n\nexamination of development plans,\nrequirements specifications,\ndesign specifications,\ntesting plans and procedures,\nall other documents and activities associated with the project,\nverification results from each stage of the defined life cycle, and\nvalidation results for the overall device.\n\nThe Quality System regulation requires that at least one formal design review be conducted during the device design process. However, it is recommended that multiple design reviews be conducted\n\n(e.g., at the end of each software life cycle activity, in preparation for proceeding to the next activity).\n\nFormal design reviews documented should include:\n\nthe appropriate tasks and expected results, outputs, or products been established for each software life cycle activity\ncorrectness, completeness, consistency, and accuracy\nsatisfaction for the standards, practices, and conventions of that activity\nestablishment of a proper basis for initiating tasks for the next software life cycle activity"
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#principles-of-software-validation",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#principles-of-software-validation",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.4 Principles of Software Validation",
    "text": "2.4 Principles of Software Validation\n\n2.4.1 Requirements\nA documented software requirements specification provides a baseline for both validation and verification. The software validation process must include an established software requirements specification (Ref: 21 CFR 820.3(z) and (aa) and 820.30(f) and (g)).\n\n\n2.4.2 Defect Prevention\nIn order to establish that confidence, software developers should use a mixture of methods and techniques to prevent software errors and to detect software errors that do occur.\n\n\n2.4.3 Time and Effort\nPreparation for software validation should begin early, i.e., during design and development planning and design input. The final conclusion that the software is validated should be based on evidence collected from planned efforts conducted throughout the software lifecycle.\n\n\n2.4.4 Software Life Cycle\n\nSoftware validation takes place within the environment of an established software life cycle.\nThe software life cycle contains software engineering tasks and documentation necessary to support the software validation effort.\nspecific verification and validation tasks need to be appropriate for the intended use of the software\n\n\n\n2.4.5 Plans\n\nThe software validation process is defined and controlled through the use of a plan.\nThe software validation plan defines “what” is to be accomplished through the software validation effort.\nSoftware validation plans specify areas such as\n\nscope,\napproach,\nresources,\nschedules and the types and extent of activities,\ntasks, and\nwork items.\n\n\n\n\n2.4.6 Procedures\nThe software validation process is executed through the use of procedures. These procedures establish “how” to conduct the software validation effort. The procedures should identify the specific actions or sequence of actions that must be taken to complete individual validation activities, tasks, and work items.\n\n\n2.4.7 Software Validation After a Change\n\nDue to the complexity of software, a small local change may have a significant global system impact.\nIf a change exists in the software, the whole validation status of the software needs to be re-established.\nneed to determine the extent and impact of that change on the entire software system.\nthe software developer should then conduct an appropriate level of software regression testing to show that unchanged but vulnerable portions of the system have not been adversely affected.\n\n\n\n2.4.8 Validation Coverage\n\nValidation coverage should be based on the software’s complexity and safety risk.\nThe selection of validation activities, tasks, and work items should be commensurate with the complexity of the software design and the risk associated with the use of the software for the specified intended use.\n\n\n\n2.4.9 Independence of Review\n\nValidation activities should be based on the basic quality assurance precept of “independence of review.”\nSelf-validation is extremely difficult.\nWhen possible, an independent evaluation is always better (like a contracted third-party independent verification and validation)\nAnother approach is to assign internal staff members that are not involved in a particular design or its implementation, but who have sufficient knowledge to evaluate the project and conduct the verification and validation activities.\n\n\n\n2.4.10 Flexibility and Responsibility\nThe device manufacturer has flexibility in choosing how to apply these validation principles, but retains ultimate responsibility for demonstrating that the software has been validated. FDA regulated medical device applications include software that:\n\nIs a component, part, or accessory of a medical device;\n\ncomponents: e.g., application software, operating systems, compilers, debuggers, configuration management tools, and many more\n\nIs itself a medical device; or\nIs used in manufacturing, design and development, or other parts of the quality system.\nNo matter how complex and disperse the software is, the manufacturer is in charge of responsibility for software validation."
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#activities-and-tasks",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#activities-and-tasks",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.5 Activities and Tasks",
    "text": "2.5 Activities and Tasks\nSoftware validation is accomplished through a series of activities and tasks that are planned and executed at various stages of the software development life cycle. These tasks may be\n\none time occurrences\niterated many times\n\n\n2.5.1 Software Life Cycle Activities\n\nSoftware developers should establish a software life cycle model that is appropriate for their product and organization.\nThe selected software life cycle model should cover the software from its birth to its retirement.\nActivities in a typical software life cycle model:\n\nQuality Planning\nSystem Requirements Definition\nDetailed Software Requirements Specification\nSoftware Design Specification\nConstruction or Coding\nTesting\nInstallation\nOperation and Support\nMaintenance\nRetirement\n\nVerification, testing, and other tasks that support software validation occur during each of these activities.\nSeveral software life cycle models defined in FDA’s Glossary of Computerized System and Software Development\n\nTerminology dated August 1995:\n\nwaterfall\nspiral\nrapid prototyping\nincremental development, etc.\n\n\n\n2.5.2 Typical Tasks Supporting Validation\nthe software developer should at least consider each of the risk-related tasks and should define and document which tasks are or are not appropriate for their specific application.\n\n2.5.2.1 Quality Planning\nDesign and development planning should culminate in a plan that identifies\n\nnecessary tasks,\nprocedures for anomaly reporting and resolution,\nnecessary resources, and\nmanagement review requirements including formal design reviews.\n\nThe plan should include:\n\nThe specific tasks for each life cycle activity;\nEnumeration of important quality factors (e.g., reliability, maintainability, and usability);\nMethods and procedures for each task;\nTask acceptance criteria;\nCriteria for defining and documenting outputs in terms that will allow evaluation of their conformance to input requirements;\nInputs for each task;\nOutputs from each task;\nRoles, resources, and responsibilities for each task;\nRisks and assumptions; and\nDocumentation of user needs.\n\nThe plan should identify\n\nthe personnel,\nthe facility and equipment resources for each task, and\nthe role that risk (hazard) management will play.\n\nA configuration management plan should be developed that will guide and control multiple parallel development activities and ensure proper communications and documentation.\nControls are necessary to ensure positive and correct correspondence among all approved versions of the specifications documents, source code, object code, and test suites that comprise a software system. The controls also should ensure accurate identification of, and access to, the currently approved versions.\nProcedures should be created for reporting and resolving software anomalies found through validation or other activities.\nManagement should identify the reports and specify the contents, format, and responsible organizational elements for each report. Procedures also are necessary for the review and approval of software development results, including the responsible organizational elements for such reviews and approvals.\nTypical Tasks – Quality Planning\n\nRisk (Hazard) Management Plan\nConfiguration Management Plan\nSoftware Quality Assurance Plan\n\nSoftware Verification and Validation Plan\n\nVerification and Validation Tasks, and Acceptance Criteria\nSchedule and Resource Allocation (for software verification and validation activities)\nReporting Requirements\n\nFormal Design Review Requirements\nOther Technical Review Requirements\n\nProblem Reporting and Resolution Procedures\nOther Support Activities\n\n\n\n2.5.2.2 Requirements\nRequirements development includes the\n\nidentification,\nanalysis, and\ndocumentation of information about the device and its intended use.\n\nAreas of special importance include allocation of system functions to\n\nhardware/software,\noperating conditions,\nuser characteristics,\npotential hazards, and\nanticipated tasks.\n\nIn addition, the requirements should state clearly the intended use of the software. It is not possible to validate software without predetermined and documented software requirements. Typical software requirements specify the following:\n\nAll software system inputs;\nAll software system outputs;\nAll functions that the software system will perform;\nAll performance requirements that the software will meet, (e.g., data throughput, reliability, and timing);\nThe definition of all external and user interfaces, as well as any internal software-to-system interfaces;\nHow users will interact with the system;\nWhat constitutes an error and how errors should be handled;\nRequired response times;\nThe intended operating environment for the software, if this is a design constraint (e.g., hardware platform, operating system);\nAll ranges, limits, defaults, and specific values that the software will accept; and\nAll safety related requirements, specifications, features, or functions that will be implemented in software.\n\nSoftware requirement specifications should identify clearly the potential hazards that can result from a software failure in the system as well as any safety requirements to be implemented in software.\nThe consequences of software failure should be evaluated, along with means of mitigating such failures (e.g., hardware mitigation, defensive programming, etc.).\nThe Quality System regulation requires a mechanism for addressing incomplete, ambiguous, or conflicting requirements. (See 21 CFR 820.30(c).) Each requirement (e.g., hardware, software, user, operator interface, and safety) identified in the software requirements specification should be evaluated for accuracy, completeness, consistency, testability, correctness, and clarity.\nFor example, software requirements should be evaluated to verify that:\n\nThere are no internal inconsistencies among requirements;\nAll of the performance requirements for the system have been spelled out;\nFault tolerance, safety, and security requirements are complete and correct;\nAllocation of software functions is accurate and complete;\nSoftware requirements are appropriate for the system hazards; and\nAll requirements are expressed in terms that are measurable or objectively verifiable.\n\nA software requirements traceability analysis should be conducted to trace software requirements to (and from) system requirements and to risk analysis results. In addition to any other analyses and documentation used to verify software requirements, a formal design review is recommended to confirm that requirements are fully specified and appropriate before extensive software design efforts begin. Requirements can be approved and released incrementally, but care should be taken that interactions and interfaces among software (and hardware) requirements are properly reviewed, analyzed, and controlled.\nTypical Tasks – Requirements\n\nPreliminary Risk Analysis\nTraceability Analysis\n\nSoftware Requirements to System Requirements (and vice versa)\nSoftware Requirements to Risk Analysis\n\nDescription of User Characteristics\nListing of Characteristics and Limitations of Primary and Secondary Memory\nSoftware Requirements Evaluation\nSoftware User Interface Requirements Analysis\nSystem Test Plan Generation\nAcceptance Test Plan Generation\nAmbiguity Review or Analysis\n\n\n\n2.5.2.3 Design\nIn the design process, the software requirements specification is translated into a logical and physical representation of the software to be implemented. The software design specification is a description of what the software should do and how it should do it. The design specification may contain both a high level summary of the design and detailed design information. Human factors engineering should be woven into\n\nthe entire design and development process,\nthe device design requirements,\nanalyses, and\ntests.\n\nDevice safety and usability issues should be considered when developing\n\nflowcharts,\nstate diagrams,\nprototyping tools, and\ntest plans.\n\nAlso, task and function analyses, risk analyses, prototype tests and reviews, and full usability tests should be performed. Participants from the user population should be included when applying these methodologies.\nThe software design specification should include:\n\nSoftware requirements specification, including predetermined criteria for acceptance of the software;\nSoftware risk analysis;\nDevelopment procedures and coding guidelines (or other programming procedures);\nSystems documentation (e.g., a narrative or a context diagram) that describes the systems context in which the program is intended to function, including the relationship of hardware, software, and the physical environment;\nHardware to be used;\nParameters to be measured or recorded;\nLogical structure (including control logic) and logical processing steps (e.g., algorithms);\nData structures and data flow diagrams;\nDefinitions of variables (control and data) and description of where they are used;\nError, alarm, and warning messages;\nSupporting software (e.g., operating systems, drivers, other application software);\nCommunication links (links among internal modules of the software, links with the supporting software, links with the hardware, and links with the user);\nSecurity measures (both physical and logical security); and\nAny additional constraints not identified in the above elements.\n\nThe first four of the elements noted above usually are separate pre-existing documents that are included by reference in the software design specification. Software requirements specification was discussed in the preceding section, as was software risk analysis.\nSoftware design evaluations criteria:\n\ncomplete,\ncorrect,\nconsistent,\nunambiguous,\nfeasible,\nmaintainable,\nanalyses of control flow,\ndata flow,\ncomplexity,\ntiming,\nsizing,\nmemory allocation,\ncriticality analysis, and many other aspects of the design\n\nAppropriate consideration of software architecture (e.g., modular structure) during design can reduce the magnitude of future validation efforts when software changes are needed.\nA traceability analysis should be conducted to verify that the software design implements all of the software requirements. As a technique for identifying where requirements are not sufficient, the traceability analysis should also verify that all aspects of the design are traceable to software requirements.\nAn analysis of communication links should be conducted to evaluate the proposed design with respect to hardware, user, and related software requirements. At the end of the software design activity, a Formal Design Review should be conducted to verify that the design is correct, consistent, complete, accurate, and testable, before moving to implement the design.\nSeveral versions of both the software requirement specification and the software design specification should be maintained. All approved versions should be archived and controlled in accordance with established configuration management procedures.\nTypical Tasks – Design\n\nUpdated Software Risk Analysis\nTraceability Analysis - Design Specification to Software Requirements (and vice versa)\nSoftware Design Evaluation\nDesign Communication Link Analysis\nModule Test Plan Generation\nIntegration Test Plan Generation\nTest Design Generation (module, integration, system, and acceptance)\n\n\n\n2.5.2.4 Construction or Coding\nSoftware may be constructed either by coding. Coding is the software activity where the detailed design specification is implemented as source code. It is the last stage in decomposition of the software requirements where module specifications are translated into a programming language.\nCoding usually involves the use of a high-level programming language, but may also entail the use of assembly language (or microcode) for time-critical operations.\nA source code traceability analysis is an important tool to verify that all code is linked to established specifications and established test procedures. A source code traceability analysis should be conducted and documented to verify that:\n\nEach element of the software design specification has been implemented in code;\nModules and functions implemented in code can be traced back to an element in the software design specification and to the risk analysis;\nTests for modules and functions can be traced back to an element in the software design specification and to the risk analysis; and\nTests for modules and functions can be traced to source code for the same modules and functions.\n\nTypical Tasks – Construction or Coding\n\nTraceability Analyses\n\nSource Code to Design Specification (and vice versa)\nTest Cases to Source Code and to Design Specification\n\nSource Code and Source Code Documentation Evaluation\nSource Code Interface Analysis\nTest Procedure and Test Case Generation (module, integration, system, and acceptance)\n\n\n\n2.5.2.5 Testing by the Software Developer\nSoftware testing entails running software products under known conditions with defined inputs and documented outcomes that can be compared to their predefined expectations. It is a time consuming, difficult, and imperfect activity.\nAs such, it requires early planning in order to be effective and efficient. Test plans and test cases should be created as early in the software development process as feasible.\nThey should identify\n\nthe schedules,\nenvironments,\nresources (personnel, tools, etc.),\nmethodologies,\ncases (inputs, procedures, outputs, expected results),\ndocumentation, and\nreporting criteria.\n\nDescriptions of categories of software and software testing effort appear in the literature\n\nNIST Special Publication 500-235, Structured Testing: A Testing Methodology Using the Cyclomatic Complexity Metric;\nNUREG/CR-6293, Verification and Validation Guidelines for High Integrity Systems; and\nIEEE Computer Society Press, Handbook of Software Reliability Engineering.\n\nTesting of all program functionality does not mean all of the program has been tested. Testing of all of a program’s code does not mean all necessary functionality is present in the program. Testing of all program functionality and all program code does not mean the program is 100% correct! Software testing that finds no errors should not be interpreted to mean that errors do not exist in the software product; it may mean the testing was superficial.\nAn essential element of a software test case is the expected result. It is the key detail that permits objective evaluation of the actual test result. This necessary testing information is obtained from the corresponding, predefined definition or specification.\nA software testing process should be based on principles that foster effective examinations of a software product. Applicable software testing tenets include:\n\nThe expected test outcome is predefined;\nA good test case has a high probability of exposing an error;\nA successful test is one that finds an error;\nThere is independence from coding;\nBoth application (user) and software (programming) expertise are employed;\nTesters use different tools from coders;\nExamining only the usual case is insufficient;\nTest documentation permits its reuse and an independent confirmation of the pass/fail status of a test outcome during subsequent review.\n\nCode-based testing is also known as structural testing or “white-box” testing. It identifies test cases based on knowledge obtained from the source code, detailed design specification, and other development documents. Structural testing can identify “dead” code that is never executed when the program is run. Structural testing is accomplished primarily with unit (module) level testing, but can be extended to other levels of software testing.\nThe level of structural testing can be evaluated using metrics that are designed to show what percentage of the software structure has been evaluated during structural testing. These metrics are typically referred to as “coverage” and are a measure of completeness with respect to test selection criteria. The amount of structural coverage should be commensurate with the level of risk posed by the software. Use of the term “coverage” usually means 100% coverage. Common structural coverage metrics include:\n\nStatement Coverage – This criteria requires sufficient test cases for each program statement to be executed at least once; however, its achievement is insufficient to provide confidence in a software product’s behavior.\nDecision (Branch) Coverage – This criteria requires sufficient test cases for each program decision or branch to be executed so that each possible outcome occurs at least once. It is considered to be a minimum level of coverage for most software products, but decision coverage alone is insufficient for high-integrity applications.\nCondition Coverage – This criteria requires sufficient test cases for each condition in a program decision to take on all possible outcomes at least once. It differs from branch coverage only when multiple conditions must be evaluated to reach a decision.\nMulti-Condition Coverage – This criteria requires sufficient test cases to exercise all possible combinations of conditions in a program decision.\nLoop Coverage – This criteria requires sufficient test cases for all program loops to be executed for zero, one, two, and many iterations covering initialization, typical running and termination (boundary) conditions.\nPath Coverage – This criteria requires sufficient test cases for each feasible path, basis path, etc., from start to exit of a defined program segment, to be executed at least once. Because of the very large number of possible paths through a software program, path coverage is generally not achievable. The amount of path coverage is normally established based on the risk or criticality of the software under test.\nData Flow Coverage – This criteria requires sufficient test cases for each feasible data flow to be executed at least once. A number of data flow testing strategies are available.\n\nThe following types of functional software testing involve generally increasing levels of effort:\n\nNormal Case – Testing with usual inputs is necessary. However, testing a software product only with expected, valid inputs does not thoroughly test that software product. By itself, normal case testing cannot provide sufficient confidence in the dependability of the software product.\nOutput Forcing – Choosing test inputs to ensure that selected (or all) software outputs are generated by testing.\nRobustness – Software testing should demonstrate that a software product behaves correctly when given unexpected, invalid inputs. Methods for identifying a sufficient set of such test cases include Equivalence Class Partitioning, Boundary Value Analysis, and Special Case Identification (Error Guessing). While important and necessary, these techniques do not ensure that all of the most appropriate challenges to a software product have been identified for testing.\nCombinations of Inputs – The functional testing methods identified above all emphasize individual or single test inputs. Most software products operate with multiple inputs under their conditions of use. Thorough software product testing should consider the combinations of inputs a software unit or system may encounter during operation. Error guessing can be extended to identify combinations of inputs, but it is an ad hoc technique. Cause-effect graphing is one functional software testing technique that systematically identifies combinations of inputs to a software product for inclusion in test cases.\n\nFunctional and structural software test case identification techniques provide specific inputs for testing, rather than random test inputs. One weakness of these techniques is the difficulty in linking structural and functional test completion criteria to a software product’s reliability.\nAdvanced software testing methods, such as statistical testing, can be employed to provide further assurance that a software product is dependable. Statistical testing uses randomly generated test data from defined distributions based on an operational profile (e.g., expected use, hazardous use, or malicious use of the software product). Large amounts of test data are generated and can be targeted to cover particular areas or concerns, providing an increased possibility of identifying individual and multiple rare operating conditions that were not anticipated by either the software product’s designers or its testers. Statistical testing also provides high structural coverage. It does require a stable software product. Thus, structural and functional testing are prerequisites for statistical testing of a software product.\nAnother aspect of software testing is the testing of software changes. Changes occur frequently during software development. These changes are the result of\n\ndebugging that finds an error and it is corrected,\nnew or changed requirements (“requirements creep”), and\nmodified designs as more effective or efficient implementations are found.\n\nOnce a software product has been baselined (approved), any change to that product should have its own “mini life cycle,” including testing. Testing of a changed software product requires additional effort. It should demonstrate\n\nthat the change was implemented correctly, and\nthat the change did not adversely impact other parts of the software product.\n\nRegression analysis is the determination of the impact of a change based on review of the relevant documentation in order to identify the necessary regression tests to be run. Regression testing is the rerunning of test cases that a program has previously executed correctly and comparing the current result to the previous result in order to detect unintended effects of a software change. Regression analysis and regression testing should also be employed when using integration methods to build a software product to ensure that newly integrated modules do not adversely impact the operation of previously integrated modules.\nIn order to provide a thorough and rigorous examination of a software product, development testing is typically organized into levels: unit, integration, and system levels of testing.\n\nUnit (module or component) level testing focuses on the early examination of sub-program functionality and ensures that functionality not visible at the system level is examined by testing. Unit testing ensures that quality software units are furnished for integration into the finished software product.\nIntegration level testing focuses on the transfer of data and control across a program’s internal and external interfaces. External interfaces are those with\n\nother software (including operating system software),\nsystem hardware, and\nthe users and can be described as communications links.\n\nSystem level testing demonstrates that all specified functionality exists and that the software product is trustworthy. This testing verifies the as-built program’s functionality and performance with respect to the requirements for the software product as exhibited on the specified operating platform(s). System level software testing addresses functional concerns and the following elements of a device’s software that are related to the intended use(s):\n\nPerformance issues (e.g., response times, reliability measurements);\nResponses to stress conditions, e.g., behavior under maximum load, continuous use;\nOperation of internal and external security features;\nEffectiveness of recovery procedures, including disaster recovery;\nUsability; (Usability vs Utility??)\nCompatibility with other software products;\nBehavior in each of the defined hardware configurations; and\nAccuracy of documentation.\n\n\nControl measures (e.g., a traceability analysis) should be used to ensure that the intended coverage is achieved.\nSystem level testing also exhibits the software product’s behavior in the intended operating environment. The location of such testing is dependent upon the software developer’s ability to produce the target operating environment(s). Depending upon the circumstances, simulation and/or testing at (potential) customer locations may be utilized.\nTest plans should identify the controls needed to ensure\n\nthat the intended coverage is achieved and\nthat proper documentation is prepared when planned system level testing is conducted at sites not directly controlled by the software developer.\n\nTest procedures, test data, and test results\n\nshould be documented in a manner permitting objective pass/fail decisions to be reached.\nshould also be suitable for review and objective decision making subsequent to running the test,\nshould be suitable for use in any subsequent regression testing.\n\nErrors detected during testing should be\n\nlogged,\nclassified,\nreviewed, and\nresolved prior to release of the software.\n\nSoftware error data that is collected and analyzed during a development life cycle may be used to determine the suitability of the software product for release for commercial distribution. Test reports should comply with the requirements of the corresponding test plans.\nSoftware testing tools are frequently used to ensure consistency, thoroughness, and efficiency in the testing of such software products and to fulfill the requirements of the planned testing activities.\nAppropriate documentation providing evidence of the validation of these software tools for their intended use should be maintained (see section 6 of this guidance).\nTypical Tasks – Testing by the Software Developer\n\nTest Planning\nStructural Test Case Identification\nFunctional Test Case Identification\nTraceability Analysis - Testing\nUnit (Module) Tests to Detailed Design\nIntegration Tests to High Level Design\nSystem Tests to Software Requirements\nUnit (Module) Test Execution\nIntegration Test Execution\nFunctional Test Execution\nSystem Test Execution\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\n2.5.2.6 User Site Testing\nTesting at the user site is an essential part of software validation. The Quality System regulation requires\n\ninstallation and\ninspection procedures (including testing where appropriate) as well as\ndocumentation of inspection and\ntesting to demonstrate proper installation. (See 21 CFR §820.170.)\n\nLikewise, manufacturing equipment must meet specified requirements, and automated systems must be validated for their intended use. (See 21 CFR §820.70(g) and 21 CFR §820.70(i) respectively.)\nTerminology regarding user site testing can be confusing. Terms such as\n\nbeta test,\nsite validation,\nuser acceptance test,\ninstallation verification, and\ninstallation testing have all been used to describe user site testing.\n\nFor the purposes of this guidance, the term “user site testing” encompasses all of these and any other testing that takes place outside of the developer’s controlled environment.\nThis testing should take place at a user’s site with the actual hardware and software that will be part of the installed system configuration. The testing is accomplished through either actual or simulated use of the software being tested within the context in which it is intended to function.\nTest planners should check with the FDA Center(s) with the corresponding product jurisdiction to determine whether there are any additional regulatory requirements for user site testing.\nUser site testing should follow a pre-defined written plan with\n\na formal summary of testing and\na record of formal acceptance.\n\nThe following documented evidence should be retained:\n\nall testing procedures,\ntest input data, and\ntest results\n\nThere should be evidence that hardware and software are installed and configured as specified. Measures should ensure that all system components are exercised during the testing and that the versions of these components are those specified. The testing plan should specify testing throughout the full range of operating conditions and should specify continuation for a sufficient time to allow the system to encounter a wide spectrum of conditions and events in an effort to detect any latent faults that are not apparent during more normal activities.\nSome of the evaluations of the system’s ability that have been performed earlier by the software developer at the developer’s site should be repeated at the site of actual use. These may include tests for:\n\na high volume of data,\nheavy loads or stresses,\nsecurity,\nfault testing (avoidance, detection, tolerance, and recovery),\nerror messages, and\nimplementation of safety requirements.\n\nThere should be an evaluation of the ability of the users of the system to understand and correctly interface with it.\nOperators should be able to perform the intended functions and respond in an appropriate and timely manner to all alarms, warnings, and error messages.\nRecords should be maintained of both proper system performance and any system failures that are encountered.\nThe revision of the system to compensate for faults detected during this user site testing should follow the same procedures and controls as for any other software change.\nThe developers of the software may or may not be involved in the user site testing.\n\nIf the developers are involved, they may seamlessly carry over to the user’s site the last portions of design-level systems testing.\nIf the developers are not involved, it is all the more important that the user have persons who understand the importance of careful test planning, the definition of expected test results, and the recording of all test outputs.\n\nTypical Tasks – User Site Testing\n\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\n2.5.2.7 Maintenance and Software Changes\n\n2.5.2.7.1 Hardware vs Software\nHardware maintenance typically includes\n\npreventive hardware maintenance actions,\ncomponent replacement, and\ncorrective changes.\n\nSoftware maintenance includes\n\ncorrective,\nperfective, and\nadaptive maintenance\nbut does not include preventive maintenance actions or software component replacement.\n\n\n\n2.5.2.7.2 Maintenance Types\n\nCorrective maintenance: Changes made to correct errors and faults in the software.\nPerfective maintenance: Changes made to the software to improve the performance, maintainability, or other attributes of the software system .\nAdaptive maintenance: Changes to make the software system usable in a changed environment.\n\nSufficient regression analysis and testing should be conducted to demonstrate that portions of the software not involved in the change were not adversely impacted. When changes are made to a software system,\n\neither during initial development or\nduring post release maintenance,\n\nThis is in addition to testing that evaluates the correctness of the implemented change(s). The specific validation effort necessary for each software change is determined by\n\nthe type of change,\nthe development products affected, and the\nimpact of those products on the operation of the software.\n\n\n\n2.5.2.7.3 Factors of Limitting Validation Effort Needed When a Change Is Made\n\ncareful and complete documentation of the design structure and\ncareful and complete documentation of interrelationships of various modules,\ninterfaces, etc.\nFor example,\n\ntest documentation,\ntest cases, and\nresults of previous verification and validation testing All of them need to be archived if they are to be available for performing subsequent regression testing.\n\n\nThe following additional maintenance tasks should be addressed:\n\nSoftware Validation Plan Revision - For software that was previously validated, the existing software validation plan should be revised to support the validation of the revised software. If no previous software validation plan exists, such a plan should be established to support the validation of the revised software.\nAnomaly Evaluation – Software organizations frequently maintain documentation, such as software problem reports that describe software anomalies discovered and the specific corrective action taken to fix each anomaly.\n\nToo often, however, mistakes are repeated because software developers do not take the next step to determine the root causes of problems and make the process and procedural changes needed to avoid recurrence of the problem.\nSoftware anomalies should be evaluated in terms of their severity and their effects on system operation and safety,\nbut they should also be treated as symptoms of process deficiencies in the quality system.\nA root cause analysis of anomalies can identify specific quality system deficiencies.\nWhere trends are identified (e.g., recurrence of similar software anomalies), appropriate corrective and preventive actions must be implemented and documented to avoid further recurrence of similar quality problems. (See 21 CFR 820.100.)\n\nProblem Identification and Resolution Tracking - All problems discovered during maintenance of the software should be documented. The resolution of each problem should be tracked to ensure it is fixed, for historical reference, and for trending.\nProposed Change Assessment - All proposed modifications, enhancements, or additions should be assessed to determine the effect each change would have on the system. This information should determine the extent to which verification and/or validation tasks need to be iterated.\nTask Iteration - For approved software changes, all necessary verification and validation tasks should be performed to ensure that planned changes are implemented correctly, all documentation is complete and up to date, and no unacceptable changes have occurred in software performance.\nDocumentation Updating – Documentation should be carefully reviewed to determine which documents have been impacted by a change. All approved documents (e.g., specifications, test procedures, user manuals, etc.) that have been affected should be updated in accordance with configuration management procedures. Specifications should be updated before any maintenance and software changes are made."
  },
  {
    "objectID": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#validation-of-automated-process-equipment-and-quality-system-software",
    "href": "docs/blog/posts/PublicHealth/2022-12-10-FDA/index.html#validation-of-automated-process-equipment-and-quality-system-software",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.6 Validation of Automated Process Equipment and Quality System Software",
    "text": "2.6 Validation of Automated Process Equipment and Quality System Software\nThe Quality System regulation requires that “when computers or automated data processing systems are used as part of production or the quality system, the [device] manufacturer shall validate computer software for its intended use according to an established protocol.” (See 21 CFR §820.70(i)). This has been a regulatory requirement of FDA’s medical device Good Manufacturing Practice (GMP) regulations since 1978.\nComputer systems that implement part of a device manufacturer’s production processes or quality system (or that are used to create and maintain records required by any other FDA regulation) are subject to the Electronic Records; Electronic Signatures regulation. (See 21 CFR Part 11.) This regulation establishes additional security, data integrity, and validation requirements when records are created or maintained electronically. These additional Part 11 requirements should be carefully considered and included in system requirements and software requirements for any automated record keeping systems. System validation and software validation should demonstrate that all Part 11 requirements have been met.\nComputers and automated equipment are used extensively throughout all aspects of\n\nmedical device design,\nlaboratory testing and analysis,\nproduct inspection and acceptance,\nproduction and process control,\nenvironmental controls,\npackaging,\nlabeling,\ntraceability,\ndocument control,\ncomplaint management, and many other aspects of the quality system.\n\nIncreasingly, automated plant floor operations can involve extensive use of embedded systems in:\n\nprogrammable logic controllers;\ndigital function controllers;\nstatistical process control;\nsupervisory control and data acquisition;\nrobotics;\nhuman-machine interfaces;\ninput/output devices; and\ncomputer operating systems.\n\nAll software tools used for software design are subject to the requirement for software validation, but the validation approach used for each application can vary widely.\nValidation is typically supported by:\n\nverifications of the outputs from each stage of that software development life cycle; and\nchecking for proper operation of the finished software in the device manufacturer’s intended use environment.\n\n\n2.6.1 How Much Validation Evidence Is Needed?\nThe level of validation effort should be commensurate with\n\nthe risk posed by the automated operation,\nthe complexity of the process software,\nthe degree to which the device manufacturer is dependent upon that automated process to produce a safe and effective device\n\nDocumented requirements and risk analysis of the automated process help to define the scope of the evidence needed to show that the software is validated for its intended use. Without a plan, extensive testing may be needed for:\n\na plant-wide electronic record and electronic signature system;\nan automated controller for a sterilization cycle; or\nautomated test equipment used for inspection and acceptance of finished circuit boards in a lifesustaining / life-supporting device.\n\nHigh risk applications should not be running in the same operating environment with non-validated software functions, even if those software functions are not used. Risk mitigation techniques such as memory partitioning or other approaches to resource protection may need to be considered when high risk applications and lower risk applications are to be used in the same operating environment.\nWhen software is upgraded or any changes are made to the software, the device manufacturer should consider how those changes may impact the “used portions” of the software and must reconfirm the validation of those portions of the software that are used. (See 21 CFR §820.70(i).)\n\n\n2.6.2 Defined User Equipment\nA very important key to software validation is a documented user requirements specification that defines:\n\nthe “intended use” of the software or automated equipment; and\nthe extent to which the device manufacturer is dependent upon that software or equipment for production of a quality medical device.\n\nThe device manufacturer (user) needs to define the expected operating environment including any required hardware and software configurations, software versions, utilities, etc. The user also needs to:\n\ndocument requirements for system performance, quality, error handling, startup, shutdown, security, etc.;\nidentify any safety related functions or features, such as sensors, alarms, interlocks, logical processing steps, or command sequences; and\ndefine objective criteria for determining acceptable performance.\n\nThe validation must be conducted in accordance with a documented protocol, and the validation results must also be documented. (See 21 CFR §820.70(i).) Test cases should be documented that will exercise the system to challenge its performance against the pre-determined criteria, especially for its most critical parameters.\nTest cases should address\n\nerror and alarm conditions,\nstartup, shutdown,\nall applicable user functions and operator controls,\npotential operator errors,\nmaximum and minimum ranges of allowed values, and\nstress conditions applicable to the intended use of the equipment.\n\nThe test cases should be executed and the results should be recorded and evaluated to determine whether the results support a conclusion that the software is validated for its intended use.\nA device manufacturer may conduct a validation using their own personnel or may depend on a third party such as the equipment/software vendor or a consultant. In any case, the device manufacturer retains the ultimate responsibility for ensuring that the production and quality system software:\n\nis validated according to a written procedure for the particular intended use; and\nwill perform as intended in the chosen application.\n\nThe device manufacturer should have documentation including:\n\ndefined user requirements;\nvalidation protocol used;\nacceptance criteria;\ntest cases and results; and\na validation summary that objectively confirms that the software is validated for its intended use.\n\n\n\n2.6.3 Validation of Off-The-Shelf Software and Automated Equipment\nMost of the automated equipment and systems used by device manufacturers are supplied by thirdparty vendors and are purchased off-the-shelf (OTS). The device manufacturer is responsible for ensuring that the product development methodologies used by the OTS software developer are appropriate and sufficient for the device manufacturer’s intended use of that OTS software.\nWhere possible and depending upon the device risk involved, the device manufacturer should consider auditing the vendor’s design and development methodologies used in the construction of the OTS software and should assess the development and validation documentation generated for the OTS software. Such audits can be conducted by the device manufacturer or by a qualified third party.\nThe audit should demonstrate that the vendor’s procedures for and results of the verification and validation activities performed the OTS software are appropriate and sufficient for the safety and effectiveness requirements of the medical device to be produced using that software."
  },
  {
    "objectID": "docs/blog/posts/statistics/2022-12-08-P-value/index.html",
    "href": "docs/blog/posts/statistics/2022-12-08-P-value/index.html",
    "title": "p-values",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n실험 결과가 우연히 생성된 것보다 더 극단적인 경우를 통계적으로 유의하다고 한다. (결과가 귀무 가설 하의 분포와 다른 분포에서 나올 수 있다고 생각해 보십시오.)\n\n\n\n’p-값’의 p는 ’확률’을 나타냅니다. p-값은 실험에서 관찰된 결과가 귀무 가설 하에서 발생할 수 있는 극단적인 결과를 얻을 확률의 합계입니다. 즉, p-값은 실험 결과가 우연히 얻어질 확률입니다.\n\n\n\n우연한 결과가 통계적으로 유의미하다고 하기 위해 실험의 실제 결과를 넘어서야 하는 극단적이거나 드문 결과의 확률 임계값입니다.\n\n\n\n귀무가설이 참인데 실수로 귀무가설을 기각하는 오류\n\n\n\n대립가설이 참인데 실수로 귀무가설을 기각하지 못하는 오류\n\n\n\n\n\np-값은 테스트 결과의 유의성을 측정할 때 효율적이고 효과적인 통계 지표입니다. 회귀 분석을 수행했다고 가정해 봅시다. 그런 다음 회귀 모델의 결과로 베타 계수와 표준 오차를 얻을 수 있습니다.\n\nNumber of Cases of How You Interpret Regresssion Result\n\n\n\nhigh Standard Error\nlow Standard Error\n\n\n\n\nhigh \\(\\beta\\)\nUnclear Interpretation\nOK\n\n\nlow \\(\\beta\\)\nOK\nUnclear Interpretation\n\n\n\n위의 표는 회귀 모델의 결과를 해석할 수 있는 경우의 수를 보여줍니다. 각 계수 \\(\\beta\\) 에 대해 4개의 경우가 있습니다.\n\nhigh \\(\\beta\\) and high Standard Error mean that 해당 변수가 강한 영향을 미치나 그 영향이 변동될 수 있음을 의미하므로 회귀 모델에서 도출된 \\(\\beta\\) 계수는 유의하지 않을 가능성이 높습니다. 그 효과가 통계적으로 유의미한지 확신할 수 없습니다.\nhigh \\(\\beta\\) and low Standard Error mean that the corresponding variable has a strong effect, and its variation is small, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be significant.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, its effect has a high variation. So, we can clearly interprete the variable with the \\(\\beta\\) as a variable that is not significantly associated with your response variable.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, but its effect has a low variation. So, it is difficult to conclude that the variable is significant.\n\nThe p-value could be used to provide a clearer interpretation of the unclear situation (i.e. (high \\(\\beta\\), high Standard Error), (low \\(\\beta\\), high Standard Error) ) by looking at the ratio of the estimated value of a parameter(= \\(\\beta\\)) to its standard error on the distribution under the null hypothesis. By general convention, the cut-off of p-value indicating statistical signficance is 0.05.\n\n\n\nDespite the goodness of p-value, it is controversial to make a decision based solely on the p-value. As mentioned above, p-value is the probability that the result of your experiment is due to chance. In addition, looking into \\(\\frac{\\beta}{\\frac{s.e}{\\sqrt{n}}}\\), the p-value gets smaller as the sample size becomes larger and larger. It should be avoided that something is proved just because a low p-value is calucated.\nEven if a result is statistically significant, that does not necessarily mean it has real significance. A small difference that has no practical meaning can be statistically significant if the sample size is large enough. It is because large samples ensure that meaningless effects can become big enough to possibly exclude chance due to simple math.\nThe American Statistical Association (ASA) has released a statement of six principles for researchers and journal editors on p-values:\nSource: ASA Statement on Statistical Significance and p-values\n\nP-values can indicate how incompatible the data are with a specified statistical model.\nP-values do not measure the probability that the studied hypothesis is true, or the probability that the data produced by random chance alone.\nScientific conclusions and business or policy decisions should not be based only on whether a p-value passes a specific threshold.\nProper inference requires full reporting and transparency.\nA p-value, or statistical significance, does not measure the size of an effect or the importance of a result.\nBy itself, a p-value does not provide a good measure of evidence regarding a model or hypothesis.\n\n\n\n\n\nPersonally, I make use of p-values as a tool in data science to just check whether a model result or a set of variables that appears interesting and useful is in the range of normal variability by chance in the exploratory data analysis(EDA) or data mining step.\nIf you want to get a statistical significance level through p-values, other methodologies could help increase the accuracy of real significance such as permuted p-values, q-values, and penalization on multiple comparison tests\n\n\n\n\n\nIt is said to be statistically significant if a result of your experiment is more extreme than one that is produced by chance. (Try thinking that your result could have come from a different distribution from the one under the null hypothesis.)\n\n\n\np of ‘p-value’ stands for ‘probability’. The p-value is the summation of the probabilities of obtaining results as extreme as the observed results from your experiments could occur under the null hypothesis. In other words, p-value is the probability that the result of your experiment is obtained by chance.\n\n\n\nThe probability threshold of the extreme or rarer results that chance results must be beyond actual results of your experiments in order to be said to be statistically significant.\n\n\n\nconcluding \\(H_o\\) or the null hypothesis is true by mistake.\n\n\n\nconcluding \\(H_a\\) or the alternative hypothesis is true by mistake.\n\n\n\n\n\np-value is an efficient and effective statistical index when to measure the significance of your test result. Let’s make an assumption that you have conducted a regression analysis. Then, you can get beta coefficients and their standard errors as results of your regression model.\n\nNumber of Cases of How You Interpret Regresssion Result\n\n\n\nhigh Standard Error\nlow Standard Error\n\n\n\n\nhigh \\(\\beta\\)\nUnclear Interpretation\nOK\n\n\nlow \\(\\beta\\)\nOK\nUnclear Interpretation\n\n\n\nThe above table shows the number of cases you can interprete the results of your regression model. There are 4 cases for each coefficient \\(\\beta\\).\n\nhigh \\(\\beta\\) and high Standard Error mean that the corresponding variable has a strong effect but its effect may be fluctuated, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be not significant. We are not sure that its effect is statistically significant.\nhigh \\(\\beta\\) and low Standard Error mean that the corresponding variable has a strong effect, and its variation is small, so the \\(\\beta\\) coefficient resulted from your regression model is likely to be significant.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, its effect has a high variation. So, we can clearly interprete the variable with the \\(\\beta\\) as a variable that is not significantly associated with your response variable.\nlow \\(\\beta\\) and high Standard Error mean that the corresponding variable has a weak effect on your reponse variable, but its effect has a low variation. So, it is difficult to conclude that the variable is significant.\n\nThe p-value could be used to provide a clearer interpretation of the unclear situation (i.e. (high \\(\\beta\\), high Standard Error), (low \\(\\beta\\), high Standard Error) ) by looking at the ratio of the estimated value of a parameter(= \\(\\beta\\)) to its standard error on the distribution under the null hypothesis. By general convention, the cut-off of p-value indicating statistical signficance is 0.05.\n\n\n\nDespite the goodness of p-value, it is controversial to make a decision based solely on the p-value. As mentioned above, p-value is the probability that the result of your experiment is due to chance. In addition, looking into \\(\\frac{\\beta}{\\frac{s.e}{\\sqrt{n}}}\\), the p-value gets smaller as the sample size becomes larger and larger. It should be avoided that something is proved just because a low p-value is calucated.\nEven if a result is statistically significant, that does not necessarily mean it has real significance. A small difference that has no practical meaning can be statistically significant if the sample size is large enough. It is because large samples ensure that meaningless effects can become big enough to possibly exclude chance due to simple math.\nThe American Statistical Association (ASA) has released a statement of six principles for researchers and journal editors on p-values:\nSource: ASA Statement on Statistical Significance and p-values\n\nP-values can indicate how incompatible the data are with a specified statistical model.\nP-values do not measure the probability that the studied hypothesis is true, or the probability that the data produced by random chance alone.\nScientific conclusions and business or policy decisions should not be based only on whether a p-value passes a specific threshold.\nProper inference requires full reporting and transparency.\nA p-value, or statistical significance, does not measure the size of an effect or the importance of a result.\nBy itself, a p-value does not provide a good measure of evidence regarding a model or hypothesis.\n\n\n\n\n\nPersonally, I make use of p-values as a tool in data science to just check whether a model result or a set of variables that appears interesting and useful is in the range of normal variability by chance in the exploratory data analysis(EDA) or data mining step.\nIf you want to get a statistical significance level through p-values, other methodologies could help increase the accuracy of real significance such as permuted p-values, q-values, and penalization on multiple comparison tests\n\n\n\n\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-07-anova/index.html",
    "href": "docs/blog/posts/statistics/2023-01-07-anova/index.html",
    "title": "ANOVA",
    "section": "",
    "text": "(draft)"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-07-anova/index.html#terms",
    "href": "docs/blog/posts/statistics/2023-01-07-anova/index.html#terms",
    "title": "ANOVA",
    "section": "3 Terms",
    "text": "3 Terms\n\npairwise comparison: A hypothesis test (e.g., of means) between two groups among multiple groups.\nobmnibus set: A single hypothesis test of the overall variance among multiple group means.\ndecomposition of variance : Separation of components contributing to an individual value (e.g., from the overall average, from a treatment mean, and from a residual error).\nF-test\nF statistic: A standardized statistic that measures the extent to which differences among group means exceed what might be expected in a chance model.\nsum of squares: deviations from some average value"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-07-anova/index.html#application-to-example",
    "href": "docs/blog/posts/statistics/2023-01-07-anova/index.html#application-to-example",
    "title": "ANOVA",
    "section": "2 Application to Example",
    "text": "2 Application to Example\n\n2.1 Data Description\n\n2.1.1 Raw Data\n(…민감 정보 제거 및 데이터 변환 후 컨설팅 내용 일부 발췌…)\n\n\n\nexample data는 Day, Run, response의 변수들을 포함하고 있습니다. 공유해주신 정보에 따르면 아마도 Run은 오전과 오후를 나누는 변수인 것으로 생각 됩니다. 이 data만 보면 아마도 같은 샘플에 대해서 시약 제품이 시간에 따라 얼마나 안정적인 performance를 보여주는지 검사하는 실험으로 추측됩니다. 좀 더 분석하기 용이한 형태로 data structure를 바꾸겠습니다.\n\n\n2.1.2 Processed Data\n\n\n\n\n  \n\n\n\n재가공된 data는 120개의 샘플과 5개의 변수를 갖고있습니다. 변수 목록은 다음과 같습니다.\n\nid: 열번호, 총 20일간 하루 2회 구동(AM, PM) 구동, 오전 오후 각 각 3번씩 구동 총 120 \\((=20 \\times 3 \\times 2)\\) 샘플\n\nDay: Day1~20\n\nnoon: AM= before noon, PM= after noon\nRun: 1회 구동당 3번 반복씩1, 2, 3\n\nresponse: response variable, 낮을 수록 좋음\n\nANOVA의 Assumption\n\nresponse variable should follow normal distribution.\n\nhomoscedasticity, equality of variance: 각 집단의 분포는 모두 동일한 분산을 가짐\nANOVA의 가정들을 반드시 충족하지 않아도 되지만 충족하면 Power 가 올라감\n\n\n\n\n2.2 EDA (Explorator Data Analysis)\n이 data는 아래 처럼 1의 결측치를 갖고 있습니다.\n\n\n\n\n\nid\nDay\nnoon\nRun\nresponse\n\n\n\n\n117\n20\nAM\n3\nNA\n\n\n\n\n\nCt에 대한 Global Statistics는 다음과 같습니다.\n\n\n\n\n\ncount\nglobal_response_mean\nglobal_response_sd\nglobal_response_CV\n\n\n\n\n119\n38.727\n18.47\n47.694 %\n\n\n\n\n\nDay groups의 Statistics은 다음과 같습니다.\n\n\n\n\n  \n\n\n\nAM/PM groups의 Statistics은 다음과 같습니다.\n\n\n\n\n  \n\n\n\nDays와 AM/PM 조합 groups의 Statistics은 다음과 같습니다.\n\n\n\n\n  \n\n\n\n이제 ANOVA를 수행하기 위한 basic statistics는 모두 구했습니다. ANOVA를 수행하기 위해 집단 간 분산과 집단 내 분산을 계산하도록 하겠습니다.\n\n\n2.3 집단 간 분산\n앞에서 설명 드린바로 유추해보면 예시 data의 집단 간 분산의 범주형 변수는 Day로 설정하는 것이 합리적인 것으로 보입니다.\n\n\\(g=g\\) Day의 sample size = 20, 자유도 = 20-1 = 19 입니다.\n\\(n_g=g\\) group의 sample size, \\(\\overline{X}_g=g\\) 의 sample mean은 다음과 같습니다.\n\\(\\overline{X}\\) = global sample mean = 38.72681\n집단 간 분산: \\(\\frac{집단 간 제곱합}{자유도}=\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n2.3.1 SS_Day (집단간 분산 Day)\nDay sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(Day)간 분산 계산, 집단(Day)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n  \n\n\n\nAnalysis-In program의 ANOVA결과값과 일치하는 것을 볼 수 있습니다. $SS_{day} $= 7025.97838 with \\(df=19\\).\n\n\n2.3.2 SS_noon (집단간 분산 noon)\nnoon sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(noon)간 분산 계산, 집단(noon)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n  \n\n\n\nAnalysis-In program의 결과에서 찾아 볼 수 없죠? 이 결과는 숨어 있습니다. 상호 작용에 대한 분산값을 구하고 나면 정체를 알 수 있습니다.\n\\(SS_{noon}\\) = 319.76458 with \\(df=1\\).\n\n\n2.3.3 SS_error (집단내 분산)\n\n집단 내 분산 (within-groups variability)\n\n\n\n\n\n  \n\n\n\n\\(SS_{error}\\) = 2.47041^{4}\nAnalysis-In program의 결과와 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.4 SS_total\n\n\n\n\n  \n\n\n\n\\(SS_{total}\\) = 4.02557^{4}\nAnalysis-In program의 ANOVA 결과 table에 있는 SS들의 합과 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.5 상호 작용 분산\n\n\n\n\\(SS_{interaction}=SS_{DayNoon}= SS_{total}-SS_{Day}-SS_{noon}-SS_{error}\\)\n= 4.02557{4}-2.47041{4}-319.76458-7025.97838 = 8205.93974\nAnalysis-In program의 ANOVA 결과 table과 일치하는 것을 확인할 수 있습니다.\n위의 결과들을 종합하면 아래와 같이 요약됩니다.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370    1.18   0.29\nnoon         1    339     339    1.08   0.30\nDay:noon    19   8187     431    1.38   0.16\nResiduals   79  24704     313               \n1 observation deleted due to missingness\n\n\n\nRepeatability SD = \\(\\sqrt{V_{error}}=\\sqrt{MS_{error}}\\) = 17.6836\nRepeatability CV = \\(\\frac{repeatability \\space SD}{global \\space mean \\space response}\\) = 0.45662\n\n위의 결과를 간단히 해석해 보면\n\n집단간 범주 변수인 Day는 p-value =0.29>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 일별로 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 일별로 평균 response값이 다르지 않습니다.\n\n집단간 범주 변수인 noon은 p-value =0.30>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 오전/오후별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 오전/오후별 평균 response값이 다르지 않습니다.\n\nDay와 noon두 변수의 상호작용 변수는 p-value =0.16>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 다르지 않습니다.\n\n\n최종 결론, 제품의 response값이 Day별 오전/오후별 안정적인 performance를 보인다고 조심스럽게 결론을 내릴 수 있습니다.\n이제 까지는 질문에 대한 답이 되는 ANOVA의 원리 및 통계량의 재현 및 해석법에 대하여 알아봤습니다. 하지만 직관적으로 어떤 의미가 있을 까요? 원래는 시각화를 통해 데이터의 패턴을 짐작하고 통계 검정 결과를 예상하는데 우리는 반대로 가고 있네요 ㅎㅎ 시각화를 통해 ANOVA 결과가 얼마나 직관적인지 알아보겠습니다.\n\n\n\n2.4 Visualization\n\n2.4.1 One-way: Day\n\n\n\n\n\n\n\n\n자세히 보면 일별로 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다. 하지만 좀 더 세부적으로 관찰하면 1일~8일 평균 response의 경향이 constant한 패턴을 보입니다. 9일~13일 평균 response가 진동 하향하는 패턴을 보입니다. 14일~20일 평균 response가 상향하는 패턴을 보입니다.\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n Day \n        1    2     3     4     5     6     7     8     9    10    11    12\n    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94\nrep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n\nTables of effects\n\n Day \n        1     2     3      4    5     6     7     8     9     10    11     12\n    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79\nrep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00\n       13     14     15     16     17     18     19   20\n    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62\nrep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00\n\n\n위에 첫 번째표에서 Global Sample response Mean = 38.727 과 각 집단의 평균 response를 확인할 수 있습니다. 위에 두 번째표에서 Global Sample response Mean = 37.322 과 각 집단의 평균 response의 차이를 확인할 수 있습니다.\n\nDay 9에서 차이가 가장 큰 것으로 보아 9일째 실험에서 performance가 가장 낮은 것이 관측됐습니다.\n반대로, 12일에 performance 가장 좋은 것으로 관측됐습니다.\n\n9일과 12일에 response값에 영향을 미쳤던 요인이 있었는지 복기 하는것도 도움이 되겠군요.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370     1.1   0.36\nResiduals   99  33230     336               \n1 observation deleted due to missingness\n\n\nOne-way ANOVA의 결과값입니다. Day별 평균 response의 차이는 거의 없는 것으로 보입니다. 따라서 Day 별 평균 response의 경향이 일관되지 않고 One-way ANOVA에서 역시 통계적으로 유의하지 않아 Day 변수는 평균 response에 영향을 미치지 않는 것 같습니다.\n\n\n2.4.2 One-way: AM/PM\n\n\n\n\n\n\n\n\n오후에 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다.\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n noon \n       AM   PM\n    40.38 37.1\nrep 59.00 60.0\n\n\nTables of effects\n\n noon \n        AM     PM\n     1.653 -1.626\nrep 59.000 60.000\n\n\n위 첫 번째 표에서 AM/PM 간의 평균 response차이는 0.15 (농도가 약 0.5배) 차이가 나는 것을 확인할 수 있습니다. 생물학적으로 의미가 있는 수치일까요? 위 두 번째 표에서 Global Sample Mean 37.322와 오전/오후 별 약 0.07씩(농도가 약 0.25배) 차이가 납니다.\n\n\n             Df Sum Sq Mean Sq F value Pr(>F)\nnoon          1    320     320    0.94   0.34\nResiduals   117  39936     341               \n1 observation deleted due to missingness\n\n\n오전 오후별 One way ANOVA를 실행한 결과가 오전/오부 평균 response값의 차이가 다르지 않다는 것을 시사하고 있습니다. 아무래도 위의 차이는 우연에 의해 발생한 현상인 것 같습니다.\n\n\n\n\n\n일별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 Day 변수는 유의하다고 볼 수 없습니다.\n\n\n\n\n\n오전/오후별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 오전/오후 변수는 유의하다고 볼 수 없습니다.\n여기 까지 각 변수별 평균 response로의 영향도를 통계적으로 시각적으로 관찰했습니다. 하지만 Day별 오전/오후별 영향도가 있는지 확인하겠습니다. (이미 위에서 통계적으로 없다고 검정됐습니다.)\n\n\n\n2.5 Two way Anova\n\n\n       AM     PM\n1  35.987 58.697\n2  40.032 42.374\n3  33.148 53.374\n4  36.697 29.387\n5  44.432 43.581\n6  45.781 35.277\n7  40.458 41.381\n8  51.103 34.852\n9  69.981 41.806\n10 26.619 42.658\n11 67.923 30.452\n12 25.981 27.897\n13 40.600 47.129\n14 25.839 31.800\n15 18.458 38.897\n16 36.910 26.123\n17 41.594 18.529\n18 38.471 32.084\n19 45.923 20.019\n20 42.303 45.710\n\n\n        AM      PM\n1  20.9797  7.4516\n2  18.6291 12.0856\n3  22.1450 34.0565\n4  16.3483  7.5583\n5   4.6107 11.0032\n6  23.6862 11.7618\n7  12.3380 30.0128\n8  33.4416 12.0135\n9   7.7381 30.4715\n10  3.4483  7.8927\n11 28.8752  9.1557\n12  5.9053 12.9054\n13 15.2088  7.3824\n14  8.4556 27.2253\n15  4.5063 35.2180\n16 18.3756  1.6899\n17 13.3474  8.0068\n18  6.0067 21.7672\n19 19.7931  1.4176\n20  3.9142 14.0145\n\n\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n Day \n        1    2     3     4     5     6     7     8     9    10    11    12\n    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94\nrep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n noon \n       AM    PM\n    40.43 37.05\nrep 59.00 60.00\n\n Day:noon \n     noon\nDay   AM    PM   \n  1   35.99 58.70\n  rep  3.00  3.00\n  2   40.03 42.37\n  rep  3.00  3.00\n  3   33.15 53.37\n  rep  3.00  3.00\n  4   36.70 29.39\n  rep  3.00  3.00\n  5   44.43 43.58\n  rep  3.00  3.00\n  6   45.78 35.28\n  rep  3.00  3.00\n  7   40.46 41.38\n  rep  3.00  3.00\n  8   51.10 34.85\n  rep  3.00  3.00\n  9   69.98 41.81\n  rep  3.00  3.00\n  10  26.62 42.66\n  rep  3.00  3.00\n  11  67.92 30.45\n  rep  3.00  3.00\n  12  25.98 27.90\n  rep  3.00  3.00\n  13  40.60 47.13\n  rep  3.00  3.00\n  14  25.84 31.80\n  rep  3.00  3.00\n  15  18.46 38.90\n  rep  3.00  3.00\n  16  36.91 26.12\n  rep  3.00  3.00\n  17  41.59 18.53\n  rep  3.00  3.00\n  18  38.47 32.08\n  rep  3.00  3.00\n  19  45.92 20.02\n  rep  3.00  3.00\n  20  42.30 45.71\n  rep  2.00  3.00\n\n\nTables of effects\n\n Day \n        1     2     3      4    5     6     7     8     9     10    11     12\n    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79\nrep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00\n       13     14     15     16     17     18     19   20\n    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62\nrep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00\n\n noon \n        AM     PM\n     1.701 -1.672\nrep 59.000 60.000\n\n Day:noon \n     noon\nDay   AM      PM     \n  1   -13.044  13.044\n  rep   3.000   3.000\n  2    -2.860   2.860\n  rep   3.000   3.000\n  3   -11.802  11.802\n  rep   3.000   3.000\n  4     1.966  -1.966\n  rep   3.000   3.000\n  5    -1.263   1.263\n  rep   3.000   3.000\n  6     3.562  -3.562\n  rep   3.000   3.000\n  7    -2.151   2.151\n  rep   3.000   3.000\n  8     6.437  -6.437\n  rep   3.000   3.000\n  9    12.398 -12.398\n  rep   3.000   3.000\n  10   -9.709   9.709\n  rep   3.000   3.000\n  11   17.046 -17.046\n  rep   3.000   3.000\n  12   -2.647   2.647\n  rep   3.000   3.000\n  13   -4.954   4.954\n  rep   3.000   3.000\n  14   -4.670   4.670\n  rep   3.000   3.000\n  15  -11.909  11.909\n  rep   3.000   3.000\n  16    3.704  -3.704\n  rep   3.000   3.000\n  17    9.843  -9.843\n  rep   3.000   3.000\n  18    1.504  -1.504\n  rep   3.000   3.000\n  19   11.262 -11.262\n  rep   3.000   3.000\n  20   -4.071   2.714\n  rep   2.000   3.000\n\n\none way ANOVA와 같이 해석\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370    1.18   0.29\nnoon         1    339     339    1.08   0.30\nDay:noon    19   8187     431    1.38   0.16\nResiduals   79  24704     313               \n1 observation deleted due to missingness\n\n\n위 그림을 보듯이 두 변수의 영향도가 없음, ANOVA 역시 유의하지 않음\n\n\n\n\n\n\n Missing rows: 117 \n\n\n\n\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = response ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff     lwr     upr   p adj\n2-1    -6.138710 -43.575 31.2979 1.00000\n3-1    -4.080645 -41.517 33.3560 1.00000\n4-1   -14.300000 -51.737 23.1366 0.99700\n5-1    -3.335484 -40.772 34.1011 1.00000\n6-1    -6.812903 -44.250 30.6237 1.00000\n7-1    -6.422581 -43.859 31.0140 1.00000\n8-1    -4.364516 -41.801 33.0721 1.00000\n9-1     8.551613 -28.885 45.9882 1.00000\n10-1  -12.703226 -50.140 24.7334 0.99934\n11-1    1.845161 -35.591 39.2818 1.00000\n12-1  -20.403226 -57.840 17.0334 0.89330\n13-1   -3.477419 -40.914 33.9592 1.00000\n14-1  -18.522581 -55.959 18.9140 0.95243\n15-1  -18.664516 -56.101 18.7721 0.94905\n16-1  -15.825806 -53.262 21.6108 0.99024\n17-1  -17.280645 -54.717 20.1560 0.97539\n18-1  -12.064516 -49.501 25.3721 0.99968\n19-1  -14.370968 -51.808 23.0657 0.99682\n20-1   -2.994839 -42.259 36.2690 1.00000\n3-2     2.058065 -35.379 39.4947 1.00000\n4-2    -8.161290 -45.598 29.2753 1.00000\n5-2     2.803226 -34.633 40.2399 1.00000\n6-2    -0.674194 -38.111 36.7624 1.00000\n7-2    -0.283871 -37.721 37.1528 1.00000\n8-2     1.774194 -35.662 39.2108 1.00000\n9-2    14.690323 -22.746 52.1270 0.99585\n10-2   -6.564516 -44.001 30.8721 1.00000\n11-2    7.983871 -29.453 45.4205 1.00000\n12-2  -14.264516 -51.701 23.1721 0.99709\n13-2    2.661290 -34.775 40.0979 1.00000\n14-2  -12.383871 -49.821 25.0528 0.99953\n15-2  -12.525806 -49.962 24.9108 0.99946\n16-2   -9.687097 -47.124 27.7495 0.99999\n17-2  -11.141935 -48.579 26.2947 0.99990\n18-2   -5.925806 -43.362 31.5108 1.00000\n19-2   -8.232258 -45.669 29.2044 1.00000\n20-2    3.143871 -36.120 42.4077 1.00000\n4-3   -10.219355 -47.656 27.2173 0.99997\n5-3     0.745161 -36.691 38.1818 1.00000\n6-3    -2.732258 -40.169 34.7044 1.00000\n7-3    -2.341935 -39.779 35.0947 1.00000\n8-3    -0.283871 -37.721 37.1528 1.00000\n9-3    12.632258 -24.804 50.0689 0.99939\n10-3   -8.622581 -46.059 28.8140 1.00000\n11-3    5.925806 -31.511 43.3624 1.00000\n12-3  -16.322581 -53.759 21.1140 0.98634\n13-3    0.603226 -36.833 38.0399 1.00000\n14-3  -14.441935 -51.879 22.9947 0.99662\n15-3  -14.583871 -52.021 22.8528 0.99620\n16-3  -11.745161 -49.182 25.6915 0.99978\n17-3  -13.200000 -50.637 24.2366 0.99891\n18-3   -7.983871 -45.421 29.4528 1.00000\n19-3  -10.290323 -47.727 27.1463 0.99997\n20-3    1.085806 -38.178 40.3497 1.00000\n5-4    10.964516 -26.472 48.4011 0.99992\n6-4     7.487097 -29.950 44.9237 1.00000\n7-4     7.877419 -29.559 45.3140 1.00000\n8-4     9.935484 -27.501 47.3721 0.99998\n9-4    22.851613 -14.585 60.2882 0.76824\n10-4    1.596774 -35.840 39.0334 1.00000\n11-4   16.145161 -21.291 53.5818 0.98785\n12-4   -6.103226 -43.540 31.3334 1.00000\n13-4   10.822581 -26.614 48.2592 0.99993\n14-4   -4.222581 -41.659 33.2140 1.00000\n15-4   -4.364516 -41.801 33.0721 1.00000\n16-4   -1.525806 -38.962 35.9108 1.00000\n17-4   -2.980645 -40.417 34.4560 1.00000\n18-4    2.235484 -35.201 39.6721 1.00000\n19-4   -0.070968 -37.508 37.3657 1.00000\n20-4   11.305161 -27.959 50.5690 0.99994\n6-5    -3.477419 -40.914 33.9592 1.00000\n7-5    -3.087097 -40.524 34.3495 1.00000\n8-5    -1.029032 -38.466 36.4076 1.00000\n9-5    11.887097 -25.550 49.3237 0.99974\n10-5   -9.367742 -46.804 28.0689 0.99999\n11-5    5.180645 -32.256 42.6173 1.00000\n12-5  -17.067742 -54.504 20.3689 0.97827\n13-5   -0.141935 -37.579 37.2947 1.00000\n14-5  -15.187097 -52.624 22.2495 0.99387\n15-5  -15.329032 -52.766 22.1076 0.99318\n16-5  -12.490323 -49.927 24.9463 0.99948\n17-5  -13.945161 -51.382 23.4915 0.99780\n18-5   -8.729032 -46.166 28.7076 1.00000\n19-5  -11.035484 -48.472 26.4011 0.99991\n20-5    0.340645 -38.923 39.6045 1.00000\n7-6     0.390323 -37.046 37.8270 1.00000\n8-6     2.448387 -34.988 39.8850 1.00000\n9-6    15.364516 -22.072 52.8011 0.99300\n10-6   -5.890323 -43.327 31.5463 1.00000\n11-6    8.658065 -28.779 46.0947 1.00000\n12-6  -13.590323 -51.027 23.8463 0.99841\n13-6    3.335484 -34.101 40.7721 1.00000\n14-6  -11.709677 -49.146 25.7270 0.99979\n15-6  -11.851613 -49.288 25.5850 0.99975\n16-6   -9.012903 -46.450 28.4237 1.00000\n17-6  -10.467742 -47.904 26.9689 0.99996\n18-6   -5.251613 -42.688 32.1850 1.00000\n19-6   -7.558065 -44.995 29.8786 1.00000\n20-6    3.818065 -35.446 43.0819 1.00000\n8-7     2.058065 -35.379 39.4947 1.00000\n9-7    14.974194 -22.462 52.4108 0.99480\n10-7   -6.280645 -43.717 31.1560 1.00000\n11-7    8.267742 -29.169 45.7044 1.00000\n12-7  -13.980645 -51.417 23.4560 0.99773\n13-7    2.945161 -34.491 40.3818 1.00000\n14-7  -12.100000 -49.537 25.3366 0.99966\n15-7  -12.241935 -49.679 25.1947 0.99960\n16-7   -9.403226 -46.840 28.0334 0.99999\n17-7  -10.858065 -48.295 26.5786 0.99993\n18-7   -5.641935 -43.079 31.7947 1.00000\n19-7   -7.948387 -45.385 29.4882 1.00000\n20-7    3.427742 -35.836 42.6916 1.00000\n9-8    12.916129 -24.521 50.3528 0.99918\n10-8   -8.338710 -45.775 29.0979 1.00000\n11-8    6.209677 -31.227 43.6463 1.00000\n12-8  -16.038710 -53.475 21.3979 0.98869\n13-8    0.887097 -36.550 38.3237 1.00000\n14-8  -14.158065 -51.595 23.2786 0.99735\n15-8  -14.300000 -51.737 23.1366 0.99700\n16-8  -11.461290 -48.898 25.9753 0.99984\n17-8  -12.916129 -50.353 24.5205 0.99918\n18-8   -7.700000 -45.137 29.7366 1.00000\n19-8  -10.006452 -47.443 27.4302 0.99998\n20-8    1.369677 -37.894 40.6335 1.00000\n10-9  -21.254839 -58.691 16.1818 0.85576\n11-9   -6.706452 -44.143 30.7302 1.00000\n12-9  -28.954839 -66.391  8.4818 0.35269\n13-9  -12.029032 -49.466 25.4076 0.99969\n14-9  -27.074194 -64.511 10.3624 0.47719\n15-9  -27.216129 -64.653 10.2205 0.46731\n16-9  -24.377419 -61.814 13.0592 0.66832\n17-9  -25.832258 -63.269 11.6044 0.56535\n18-9  -20.616129 -58.053 16.8205 0.88455\n19-9  -22.922581 -60.359 14.5140 0.76389\n20-9  -11.546452 -50.810 27.7174 0.99991\n11-10  14.548387 -22.888 51.9850 0.99631\n12-10  -7.700000 -45.137 29.7366 1.00000\n13-10   9.225806 -28.211 46.6624 0.99999\n14-10  -5.819355 -43.256 31.6173 1.00000\n15-10  -5.961290 -43.398 31.4753 1.00000\n16-10  -3.122581 -40.559 34.3140 1.00000\n17-10  -4.577419 -42.014 32.8592 1.00000\n18-10   0.638710 -36.798 38.0753 1.00000\n19-10  -1.667742 -39.104 35.7689 1.00000\n20-10   9.708387 -29.555 48.9723 0.99999\n12-11 -22.248387 -59.685 15.1882 0.80373\n13-11  -5.322581 -42.759 32.1140 1.00000\n14-11 -20.367742 -57.804 17.0689 0.89472\n15-11 -20.509677 -57.946 16.9270 0.88898\n16-11 -17.670968 -55.108 19.7657 0.96936\n17-11 -19.125806 -56.562 18.3108 0.93692\n18-11 -13.909677 -51.346 23.5270 0.99787\n19-11 -16.216129 -53.653 21.2205 0.98726\n20-11  -4.840000 -44.104 34.4239 1.00000\n13-12  16.925806 -20.511 54.3624 0.98004\n14-12   1.880645 -35.556 39.3173 1.00000\n15-12   1.738710 -35.698 39.1753 1.00000\n16-12   4.577419 -32.859 42.0140 1.00000\n17-12   3.122581 -34.314 40.5592 1.00000\n18-12   8.338710 -29.098 45.7753 1.00000\n19-12   6.032258 -31.404 43.4689 1.00000\n20-12  17.408387 -21.855 56.6723 0.98369\n14-13 -15.045161 -52.482 22.3915 0.99450\n15-13 -15.187097 -52.624 22.2495 0.99387\n16-13 -12.348387 -49.785 25.0882 0.99955\n17-13 -13.803226 -51.240 23.6334 0.99807\n18-13  -8.587097 -46.024 28.8495 1.00000\n19-13 -10.893548 -48.330 26.5431 0.99992\n20-13   0.482581 -38.781 39.7464 1.00000\n15-14  -0.141935 -37.579 37.2947 1.00000\n16-14   2.696774 -34.740 40.1334 1.00000\n17-14   1.241935 -36.195 38.6786 1.00000\n18-14   6.458065 -30.979 43.8947 1.00000\n19-14   4.151613 -33.285 41.5882 1.00000\n20-14  15.527742 -23.736 54.7916 0.99545\n16-15   2.838710 -34.598 40.2753 1.00000\n17-15   1.383871 -36.053 38.8205 1.00000\n18-15   6.600000 -30.837 44.0366 1.00000\n19-15   4.293548 -33.143 41.7302 1.00000\n20-15  15.669677 -23.594 54.9335 0.99493\n17-16  -1.454839 -38.891 35.9818 1.00000\n18-16   3.761290 -33.675 41.1979 1.00000\n19-16   1.454839 -35.982 38.8915 1.00000\n20-16  12.830968 -26.433 52.0948 0.99961\n18-17   5.216129 -32.221 42.6528 1.00000\n19-17   2.909677 -34.527 40.3463 1.00000\n20-17  14.285806 -24.978 53.5497 0.99837\n19-18  -2.306452 -39.743 35.1302 1.00000\n20-18   9.069677 -30.194 48.3335 1.00000\n20-19  11.376129 -27.888 50.6400 0.99993\n\n$noon\n         diff     lwr    upr   p adj\nPM-AM -3.3731 -9.8265 3.0804 0.30135\n\n$`Day:noon`\n                  diff      lwr     upr   p adj\n2:AM-1:AM     4.045161  -54.344 62.4344 1.00000\n3:AM-1:AM    -2.838710  -61.228 55.5505 1.00000\n4:AM-1:AM     0.709677  -57.680 59.0989 1.00000\n5:AM-1:AM     8.445161  -49.944 66.8344 1.00000\n6:AM-1:AM     9.793548  -48.596 68.1827 1.00000\n7:AM-1:AM     4.470968  -53.918 62.8602 1.00000\n8:AM-1:AM    15.116129  -43.273 73.5053 1.00000\n9:AM-1:AM    33.993548  -24.396 92.3827 0.92887\n10:AM-1:AM   -9.367742  -67.757 49.0215 1.00000\n11:AM-1:AM   31.935484  -26.454 90.3247 0.96592\n12:AM-1:AM  -10.006452  -68.396 48.3827 1.00000\n13:AM-1:AM    4.612903  -53.776 63.0021 1.00000\n14:AM-1:AM  -10.148387  -68.538 48.2408 1.00000\n15:AM-1:AM  -17.529032  -75.918 40.8602 1.00000\n16:AM-1:AM    0.922581  -57.467 59.3118 1.00000\n17:AM-1:AM    5.606452  -52.783 63.9956 1.00000\n18:AM-1:AM    2.483871  -55.905 60.8731 1.00000\n19:AM-1:AM    9.935484  -48.454 68.3247 1.00000\n20:AM-1:AM    6.316129  -58.965 71.5972 1.00000\n1:PM-1:AM    22.709677  -35.680 81.0989 0.99990\n2:PM-1:AM     6.387097  -52.002 64.7763 1.00000\n3:PM-1:AM    17.387097  -41.002 75.7763 1.00000\n4:PM-1:AM    -6.600000  -64.989 51.7892 1.00000\n5:PM-1:AM     7.593548  -50.796 65.9827 1.00000\n6:PM-1:AM    -0.709677  -59.099 57.6795 1.00000\n7:PM-1:AM     5.393548  -52.996 63.7827 1.00000\n8:PM-1:AM    -1.135484  -59.525 57.2537 1.00000\n9:PM-1:AM     5.819355  -52.570 64.2086 1.00000\n10:PM-1:AM    6.670968  -51.718 65.0602 1.00000\n11:PM-1:AM   -5.535484  -63.925 52.8537 1.00000\n12:PM-1:AM   -8.090323  -66.480 50.2989 1.00000\n13:PM-1:AM   11.141935  -47.247 69.5311 1.00000\n14:PM-1:AM   -4.187097  -62.576 54.2021 1.00000\n15:PM-1:AM    2.909677  -55.480 61.2989 1.00000\n16:PM-1:AM   -9.864516  -68.254 48.5247 1.00000\n17:PM-1:AM  -17.458065  -75.847 40.9311 1.00000\n18:PM-1:AM   -3.903226  -62.292 54.4860 1.00000\n19:PM-1:AM  -15.967742  -74.357 42.4215 1.00000\n20:PM-1:AM    9.722581  -48.667 68.1118 1.00000\n3:AM-2:AM    -6.883871  -65.273 51.5053 1.00000\n4:AM-2:AM    -3.335484  -61.725 55.0537 1.00000\n5:AM-2:AM     4.400000  -53.989 62.7892 1.00000\n6:AM-2:AM     5.748387  -52.641 64.1376 1.00000\n7:AM-2:AM     0.425806  -57.963 58.8150 1.00000\n8:AM-2:AM    11.070968  -47.318 69.4602 1.00000\n9:AM-2:AM    29.948387  -28.441 88.3376 0.98570\n10:AM-2:AM  -13.412903  -71.802 44.9763 1.00000\n11:AM-2:AM   27.890323  -30.499 86.2795 0.99521\n12:AM-2:AM  -14.051613  -72.441 44.3376 1.00000\n13:AM-2:AM    0.567742  -57.821 58.9569 1.00000\n14:AM-2:AM  -14.193548  -72.583 44.1956 1.00000\n15:AM-2:AM  -21.574194  -79.963 36.8150 0.99997\n16:AM-2:AM   -3.122581  -61.512 55.2666 1.00000\n17:AM-2:AM    1.561290  -56.828 59.9505 1.00000\n18:AM-2:AM   -1.561290  -59.950 56.8279 1.00000\n19:AM-2:AM    5.890323  -52.499 64.2795 1.00000\n20:AM-2:AM    2.270968  -63.010 67.5521 1.00000\n1:PM-2:AM    18.664516  -39.725 77.0537 1.00000\n2:PM-2:AM     2.341935  -56.047 60.7311 1.00000\n3:PM-2:AM    13.341935  -45.047 71.7311 1.00000\n4:PM-2:AM   -10.645161  -69.034 47.7440 1.00000\n5:PM-2:AM     3.548387  -54.841 61.9376 1.00000\n6:PM-2:AM    -4.754839  -63.144 53.6344 1.00000\n7:PM-2:AM     1.348387  -57.041 59.7376 1.00000\n8:PM-2:AM    -5.180645  -63.570 53.2086 1.00000\n9:PM-2:AM     1.774194  -56.615 60.1634 1.00000\n10:PM-2:AM    2.625806  -55.763 61.0150 1.00000\n11:PM-2:AM   -9.580645  -67.970 48.8086 1.00000\n12:PM-2:AM  -12.135484  -70.525 46.2537 1.00000\n13:PM-2:AM    7.096774  -51.292 65.4860 1.00000\n14:PM-2:AM   -8.232258  -66.621 50.1569 1.00000\n15:PM-2:AM   -1.135484  -59.525 57.2537 1.00000\n16:PM-2:AM  -13.909677  -72.299 44.4795 1.00000\n17:PM-2:AM  -21.503226  -79.892 36.8860 0.99997\n18:PM-2:AM   -7.948387  -66.338 50.4408 1.00000\n19:PM-2:AM  -20.012903  -78.402 38.3763 0.99999\n20:PM-2:AM    5.677419  -52.712 64.0666 1.00000\n4:AM-3:AM     3.548387  -54.841 61.9376 1.00000\n5:AM-3:AM    11.283871  -47.105 69.6731 1.00000\n6:AM-3:AM    12.632258  -45.757 71.0215 1.00000\n7:AM-3:AM     7.309677  -51.080 65.6989 1.00000\n8:AM-3:AM    17.954839  -40.434 76.3440 1.00000\n9:AM-3:AM    36.832258  -21.557 95.2215 0.84321\n10:AM-3:AM   -6.529032  -64.918 51.8602 1.00000\n11:AM-3:AM   34.774194  -23.615 93.1634 0.90946\n12:AM-3:AM   -7.167742  -65.557 51.2215 1.00000\n13:AM-3:AM    7.451613  -50.938 65.8408 1.00000\n14:AM-3:AM   -7.309677  -65.699 51.0795 1.00000\n15:AM-3:AM  -14.690323  -73.080 43.6989 1.00000\n16:AM-3:AM    3.761290  -54.628 62.1505 1.00000\n17:AM-3:AM    8.445161  -49.944 66.8344 1.00000\n18:AM-3:AM    5.322581  -53.067 63.7118 1.00000\n19:AM-3:AM   12.774194  -45.615 71.1634 1.00000\n20:AM-3:AM    9.154839  -56.126 74.4359 1.00000\n1:PM-3:AM    25.548387  -32.841 83.9376 0.99897\n2:PM-3:AM     9.225806  -49.163 67.6150 1.00000\n3:PM-3:AM    20.225806  -38.163 78.6150 0.99999\n4:PM-3:AM    -3.761290  -62.150 54.6279 1.00000\n5:PM-3:AM    10.432258  -47.957 68.8215 1.00000\n6:PM-3:AM     2.129032  -56.260 60.5182 1.00000\n7:PM-3:AM     8.232258  -50.157 66.6215 1.00000\n8:PM-3:AM     1.703226  -56.686 60.0924 1.00000\n9:PM-3:AM     8.658065  -49.731 67.0473 1.00000\n10:PM-3:AM    9.509677  -48.880 67.8989 1.00000\n11:PM-3:AM   -2.696774  -61.086 55.6924 1.00000\n12:PM-3:AM   -5.251613  -63.641 53.1376 1.00000\n13:PM-3:AM   13.980645  -44.409 72.3698 1.00000\n14:PM-3:AM   -1.348387  -59.738 57.0408 1.00000\n15:PM-3:AM    5.748387  -52.641 64.1376 1.00000\n16:PM-3:AM   -7.025806  -65.415 51.3634 1.00000\n17:PM-3:AM  -14.619355  -73.009 43.7698 1.00000\n18:PM-3:AM   -1.064516  -59.454 57.3247 1.00000\n19:PM-3:AM  -13.129032  -71.518 45.2602 1.00000\n20:PM-3:AM   12.561290  -45.828 70.9505 1.00000\n5:AM-4:AM     7.735484  -50.654 66.1247 1.00000\n6:AM-4:AM     9.083871  -49.305 67.4731 1.00000\n7:AM-4:AM     3.761290  -54.628 62.1505 1.00000\n8:AM-4:AM    14.406452  -43.983 72.7956 1.00000\n9:AM-4:AM    33.283871  -25.105 91.6731 0.94386\n10:AM-4:AM  -10.077419  -68.467 48.3118 1.00000\n11:AM-4:AM   31.225806  -27.163 89.6150 0.97452\n12:AM-4:AM  -10.716129  -69.105 47.6731 1.00000\n13:AM-4:AM    3.903226  -54.486 62.2924 1.00000\n14:AM-4:AM  -10.858065  -69.247 47.5311 1.00000\n15:AM-4:AM  -18.238710  -76.628 40.1505 1.00000\n16:AM-4:AM    0.212903  -58.176 58.6021 1.00000\n17:AM-4:AM    4.896774  -53.492 63.2860 1.00000\n18:AM-4:AM    1.774194  -56.615 60.1634 1.00000\n19:AM-4:AM    9.225806  -49.163 67.6150 1.00000\n20:AM-4:AM    5.606452  -59.675 70.8876 1.00000\n1:PM-4:AM    22.000000  -36.389 80.3892 0.99995\n2:PM-4:AM     5.677419  -52.712 64.0666 1.00000\n3:PM-4:AM    16.677419  -41.712 75.0666 1.00000\n4:PM-4:AM    -7.309677  -65.699 51.0795 1.00000\n5:PM-4:AM     6.883871  -51.505 65.2731 1.00000\n6:PM-4:AM    -1.419355  -59.809 56.9698 1.00000\n7:PM-4:AM     4.683871  -53.705 63.0731 1.00000\n8:PM-4:AM    -1.845161  -60.234 56.5440 1.00000\n9:PM-4:AM     5.109677  -53.280 63.4989 1.00000\n10:PM-4:AM    5.961290  -52.428 64.3505 1.00000\n11:PM-4:AM   -6.245161  -64.634 52.1440 1.00000\n12:PM-4:AM   -8.800000  -67.189 49.5892 1.00000\n13:PM-4:AM   10.432258  -47.957 68.8215 1.00000\n14:PM-4:AM   -4.896774  -63.286 53.4924 1.00000\n15:PM-4:AM    2.200000  -56.189 60.5892 1.00000\n16:PM-4:AM  -10.574194  -68.963 47.8150 1.00000\n17:PM-4:AM  -18.167742  -76.557 40.2215 1.00000\n18:PM-4:AM   -4.612903  -63.002 53.7763 1.00000\n19:PM-4:AM  -16.677419  -75.067 41.7118 1.00000\n20:PM-4:AM    9.012903  -49.376 67.4021 1.00000\n6:AM-5:AM     1.348387  -57.041 59.7376 1.00000\n7:AM-5:AM    -3.974194  -62.363 54.4150 1.00000\n8:AM-5:AM     6.670968  -51.718 65.0602 1.00000\n9:AM-5:AM    25.548387  -32.841 83.9376 0.99897\n10:AM-5:AM  -17.812903  -76.202 40.5763 1.00000\n11:AM-5:AM   23.490323  -34.899 81.8795 0.99980\n12:AM-5:AM  -18.451613  -76.841 39.9376 1.00000\n13:AM-5:AM   -3.832258  -62.221 54.5569 1.00000\n14:AM-5:AM  -18.593548  -76.983 39.7956 1.00000\n15:AM-5:AM  -25.974194  -84.363 32.4150 0.99860\n16:AM-5:AM   -7.522581  -65.912 50.8666 1.00000\n17:AM-5:AM   -2.838710  -61.228 55.5505 1.00000\n18:AM-5:AM   -5.961290  -64.350 52.4279 1.00000\n19:AM-5:AM    1.490323  -56.899 59.8795 1.00000\n20:AM-5:AM   -2.129032  -67.410 63.1521 1.00000\n1:PM-5:AM    14.264516  -44.125 72.6537 1.00000\n2:PM-5:AM    -2.058065  -60.447 56.3311 1.00000\n3:PM-5:AM     8.941935  -49.447 67.3311 1.00000\n4:PM-5:AM   -15.045161  -73.434 43.3440 1.00000\n5:PM-5:AM    -0.851613  -59.241 57.5376 1.00000\n6:PM-5:AM    -9.154839  -67.544 49.2344 1.00000\n7:PM-5:AM    -3.051613  -61.441 55.3376 1.00000\n8:PM-5:AM    -9.580645  -67.970 48.8086 1.00000\n9:PM-5:AM    -2.625806  -61.015 55.7634 1.00000\n10:PM-5:AM   -1.774194  -60.163 56.6150 1.00000\n11:PM-5:AM  -13.980645  -72.370 44.4086 1.00000\n12:PM-5:AM  -16.535484  -74.925 41.8537 1.00000\n13:PM-5:AM    2.696774  -55.692 61.0860 1.00000\n14:PM-5:AM  -12.632258  -71.021 45.7569 1.00000\n15:PM-5:AM   -5.535484  -63.925 52.8537 1.00000\n16:PM-5:AM  -18.309677  -76.699 40.0795 1.00000\n17:PM-5:AM  -25.903226  -84.292 32.4860 0.99867\n18:PM-5:AM  -12.348387  -70.738 46.0408 1.00000\n19:PM-5:AM  -24.412903  -82.802 33.9763 0.99957\n20:PM-5:AM    1.277419  -57.112 59.6666 1.00000\n7:AM-6:AM    -5.322581  -63.712 53.0666 1.00000\n8:AM-6:AM     5.322581  -53.067 63.7118 1.00000\n9:AM-6:AM    24.200000  -34.189 82.5892 0.99964\n10:AM-6:AM  -19.161290  -77.550 39.2279 1.00000\n11:AM-6:AM   22.141935  -36.247 80.5311 0.99994\n12:AM-6:AM  -19.800000  -78.189 38.5892 1.00000\n13:AM-6:AM   -5.180645  -63.570 53.2086 1.00000\n14:AM-6:AM  -19.941935  -78.331 38.4473 1.00000\n15:AM-6:AM  -27.322581  -85.712 31.0666 0.99660\n16:AM-6:AM   -8.870968  -67.260 49.5182 1.00000\n17:AM-6:AM   -4.187097  -62.576 54.2021 1.00000\n18:AM-6:AM   -7.309677  -65.699 51.0795 1.00000\n19:AM-6:AM    0.141935  -58.247 58.5311 1.00000\n20:AM-6:AM   -3.477419  -68.759 61.8037 1.00000\n1:PM-6:AM    12.916129  -45.473 71.3053 1.00000\n2:PM-6:AM    -3.406452  -61.796 54.9827 1.00000\n3:PM-6:AM     7.593548  -50.796 65.9827 1.00000\n4:PM-6:AM   -16.393548  -74.783 41.9956 1.00000\n5:PM-6:AM    -2.200000  -60.589 56.1892 1.00000\n6:PM-6:AM   -10.503226  -68.892 47.8860 1.00000\n7:PM-6:AM    -4.400000  -62.789 53.9892 1.00000\n8:PM-6:AM   -10.929032  -69.318 47.4602 1.00000\n9:PM-6:AM    -3.974194  -62.363 54.4150 1.00000\n10:PM-6:AM   -3.122581  -61.512 55.2666 1.00000\n11:PM-6:AM  -15.329032  -73.718 43.0602 1.00000\n12:PM-6:AM  -17.883871  -76.273 40.5053 1.00000\n13:PM-6:AM    1.348387  -57.041 59.7376 1.00000\n14:PM-6:AM  -13.980645  -72.370 44.4086 1.00000\n15:PM-6:AM   -6.883871  -65.273 51.5053 1.00000\n16:PM-6:AM  -19.658065  -78.047 38.7311 1.00000\n17:PM-6:AM  -27.251613  -85.641 31.1376 0.99674\n18:PM-6:AM  -13.696774  -72.086 44.6924 1.00000\n19:PM-6:AM  -25.761290  -84.150 32.6279 0.99880\n20:PM-6:AM   -0.070968  -58.460 58.3182 1.00000\n8:AM-7:AM    10.645161  -47.744 69.0344 1.00000\n9:AM-7:AM    29.522581  -28.867 87.9118 0.98840\n10:AM-7:AM  -13.838710  -72.228 44.5505 1.00000\n11:AM-7:AM   27.464516  -30.925 85.8537 0.99629\n12:AM-7:AM  -14.477419  -72.867 43.9118 1.00000\n13:AM-7:AM    0.141935  -58.247 58.5311 1.00000\n14:AM-7:AM  -14.619355  -73.009 43.7698 1.00000\n15:AM-7:AM  -22.000000  -80.389 36.3892 0.99995\n16:AM-7:AM   -3.548387  -61.938 54.8408 1.00000\n17:AM-7:AM    1.135484  -57.254 59.5247 1.00000\n18:AM-7:AM   -1.987097  -60.376 56.4021 1.00000\n19:AM-7:AM    5.464516  -52.925 63.8537 1.00000\n20:AM-7:AM    1.845161  -63.436 67.1263 1.00000\n1:PM-7:AM    18.238710  -40.150 76.6279 1.00000\n2:PM-7:AM     1.916129  -56.473 60.3053 1.00000\n3:PM-7:AM    12.916129  -45.473 71.3053 1.00000\n4:PM-7:AM   -11.070968  -69.460 47.3182 1.00000\n5:PM-7:AM     3.122581  -55.267 61.5118 1.00000\n6:PM-7:AM    -5.180645  -63.570 53.2086 1.00000\n7:PM-7:AM     0.922581  -57.467 59.3118 1.00000\n8:PM-7:AM    -5.606452  -63.996 52.7827 1.00000\n9:PM-7:AM     1.348387  -57.041 59.7376 1.00000\n10:PM-7:AM    2.200000  -56.189 60.5892 1.00000\n11:PM-7:AM  -10.006452  -68.396 48.3827 1.00000\n12:PM-7:AM  -12.561290  -70.950 45.8279 1.00000\n13:PM-7:AM    6.670968  -51.718 65.0602 1.00000\n14:PM-7:AM   -8.658065  -67.047 49.7311 1.00000\n15:PM-7:AM   -1.561290  -59.950 56.8279 1.00000\n16:PM-7:AM  -14.335484  -72.725 44.0537 1.00000\n17:PM-7:AM  -21.929032  -80.318 36.4602 0.99996\n18:PM-7:AM   -8.374194  -66.763 50.0150 1.00000\n19:PM-7:AM  -20.438710  -78.828 37.9505 0.99999\n20:PM-7:AM    5.251613  -53.138 63.6408 1.00000\n9:AM-8:AM    18.877419  -39.512 77.2666 1.00000\n10:AM-8:AM  -24.483871  -82.873 33.9053 0.99954\n11:AM-8:AM   16.819355  -41.570 75.2086 1.00000\n12:AM-8:AM  -25.122581  -83.512 33.2666 0.99925\n13:AM-8:AM  -10.503226  -68.892 47.8860 1.00000\n14:AM-8:AM  -25.264516  -83.654 33.1247 0.99916\n15:AM-8:AM  -32.645161  -91.034 25.7440 0.95531\n16:AM-8:AM  -14.193548  -72.583 44.1956 1.00000\n17:AM-8:AM   -9.509677  -67.899 48.8795 1.00000\n18:AM-8:AM  -12.632258  -71.021 45.7569 1.00000\n19:AM-8:AM   -5.180645  -63.570 53.2086 1.00000\n20:AM-8:AM   -8.800000  -74.081 56.4811 1.00000\n1:PM-8:AM     7.593548  -50.796 65.9827 1.00000\n2:PM-8:AM    -8.729032  -67.118 49.6602 1.00000\n3:PM-8:AM     2.270968  -56.118 60.6602 1.00000\n4:PM-8:AM   -21.716129  -80.105 36.6731 0.99996\n5:PM-8:AM    -7.522581  -65.912 50.8666 1.00000\n6:PM-8:AM   -15.825806  -74.215 42.5634 1.00000\n7:PM-8:AM    -9.722581  -68.112 48.6666 1.00000\n8:PM-8:AM   -16.251613  -74.641 42.1376 1.00000\n9:PM-8:AM    -9.296774  -67.686 49.0924 1.00000\n10:PM-8:AM   -8.445161  -66.834 49.9440 1.00000\n11:PM-8:AM  -20.651613  -79.041 37.7376 0.99999\n12:PM-8:AM  -23.206452  -81.596 35.1827 0.99985\n13:PM-8:AM   -3.974194  -62.363 54.4150 1.00000\n14:PM-8:AM  -19.303226  -77.692 39.0860 1.00000\n15:PM-8:AM  -12.206452  -70.596 46.1827 1.00000\n16:PM-8:AM  -24.980645  -83.370 33.4086 0.99933\n17:PM-8:AM  -32.574194  -90.963 25.8150 0.95647\n18:PM-8:AM  -19.019355  -77.409 39.3698 1.00000\n19:PM-8:AM  -31.083871  -89.473 27.3053 0.97602\n20:PM-8:AM   -5.393548  -63.783 52.9956 1.00000\n10:AM-9:AM  -43.361290 -101.750 15.0279 0.52759\n11:AM-9:AM   -2.058065  -60.447 56.3311 1.00000\n12:AM-9:AM  -44.000000 -102.389 14.3892 0.49403\n13:AM-9:AM  -29.380645  -87.770 29.0086 0.98920\n14:AM-9:AM  -44.141935 -102.531 14.2473 0.48663\n15:AM-9:AM  -51.522581 -109.912  6.8666 0.17781\n16:AM-9:AM  -33.070968  -91.460 25.3182 0.94789\n17:AM-9:AM  -28.387097  -86.776 30.0021 0.99364\n18:AM-9:AM  -31.509677  -89.899 26.8795 0.97131\n19:AM-9:AM  -24.058065  -82.447 34.3311 0.99968\n20:AM-9:AM  -27.677419  -92.959 37.6037 0.99943\n1:PM-9:AM   -11.283871  -69.673 47.1053 1.00000\n2:PM-9:AM   -27.606452  -85.996 30.7827 0.99595\n3:PM-9:AM   -16.606452  -74.996 41.7827 1.00000\n4:PM-9:AM   -40.593548  -98.983 17.7956 0.67322\n5:PM-9:AM   -26.400000  -84.789 31.9892 0.99812\n6:PM-9:AM   -34.703226  -93.092 23.6860 0.91136\n7:PM-9:AM   -28.600000  -86.989 29.7892 0.99284\n8:PM-9:AM   -35.129032  -93.518 23.2602 0.89961\n9:PM-9:AM   -28.174194  -86.563 30.2150 0.99436\n10:PM-9:AM  -27.322581  -85.712 31.0666 0.99660\n11:PM-9:AM  -39.529032  -97.918 18.8602 0.72631\n12:PM-9:AM  -42.083871 -100.473 16.3053 0.59536\n13:PM-9:AM  -22.851613  -81.241 35.5376 0.99989\n14:PM-9:AM  -38.180645  -96.570 20.2086 0.78850\n15:PM-9:AM  -31.083871  -89.473 27.3053 0.97602\n16:PM-9:AM  -43.858065 -102.247 14.5311 0.50145\n17:PM-9:AM  -51.451613 -109.841  6.9376 0.17988\n18:PM-9:AM  -37.896774  -96.286 20.4924 0.80070\n19:PM-9:AM  -49.961290 -108.350  8.4279 0.22767\n20:PM-9:AM  -24.270968  -82.660 34.1182 0.99962\n11:AM-10:AM  41.303226  -17.086 99.6924 0.63649\n12:AM-10:AM  -0.638710  -59.028 57.7505 1.00000\n13:AM-10:AM  13.980645  -44.409 72.3698 1.00000\n14:AM-10:AM  -0.780645  -59.170 57.6086 1.00000\n15:AM-10:AM  -8.161290  -66.550 50.2279 1.00000\n16:AM-10:AM  10.290323  -48.099 68.6795 1.00000\n17:AM-10:AM  14.974194  -43.415 73.3634 1.00000\n18:AM-10:AM  11.851613  -46.538 70.2408 1.00000\n19:AM-10:AM  19.303226  -39.086 77.6924 1.00000\n20:AM-10:AM  15.683871  -49.597 80.9650 1.00000\n1:PM-10:AM   32.077419  -26.312 90.4666 0.96397\n2:PM-10:AM   15.754839  -42.634 74.1440 1.00000\n3:PM-10:AM   26.754839  -31.634 85.1440 0.99763\n4:PM-10:AM    2.767742  -55.621 61.1569 1.00000\n5:PM-10:AM   16.961290  -41.428 75.3505 1.00000\n6:PM-10:AM    8.658065  -49.731 67.0473 1.00000\n7:PM-10:AM   14.761290  -43.628 73.1505 1.00000\n8:PM-10:AM    8.232258  -50.157 66.6215 1.00000\n9:PM-10:AM   15.187097  -43.202 73.5763 1.00000\n10:PM-10:AM  16.038710  -42.350 74.4279 1.00000\n11:PM-10:AM   3.832258  -54.557 62.2215 1.00000\n12:PM-10:AM   1.277419  -57.112 59.6666 1.00000\n13:PM-10:AM  20.509677  -37.880 78.8989 0.99999\n14:PM-10:AM   5.180645  -53.209 63.5698 1.00000\n15:PM-10:AM  12.277419  -46.112 70.6666 1.00000\n16:PM-10:AM  -0.496774  -58.886 57.8924 1.00000\n17:PM-10:AM  -8.090323  -66.480 50.2989 1.00000\n18:PM-10:AM   5.464516  -52.925 63.8537 1.00000\n19:PM-10:AM  -6.600000  -64.989 51.7892 1.00000\n20:PM-10:AM  19.090323  -39.299 77.4795 1.00000\n12:AM-11:AM -41.941935 -100.331 16.4473 0.60287\n13:AM-11:AM -27.322581  -85.712 31.0666 0.99660\n14:AM-11:AM -42.083871 -100.473 16.3053 0.59536\n15:AM-11:AM -49.464516 -107.854  8.9247 0.24541\n16:AM-11:AM -31.012903  -89.402 27.3763 0.97675\n17:AM-11:AM -26.329032  -84.718 32.0602 0.99821\n18:AM-11:AM -29.451613  -87.841 28.9376 0.98880\n19:AM-11:AM -22.000000  -80.389 36.3892 0.99995\n20:AM-11:AM -25.619355  -90.900 39.6618 0.99988\n1:PM-11:AM   -9.225806  -67.615 49.1634 1.00000\n2:PM-11:AM  -25.548387  -83.938 32.8408 0.99897\n3:PM-11:AM  -14.548387  -72.938 43.8408 1.00000\n4:PM-11:AM  -38.535484  -96.925 19.8537 0.77279\n5:PM-11:AM  -24.341935  -82.731 34.0473 0.99959\n6:PM-11:AM  -32.645161  -91.034 25.7440 0.95531\n7:PM-11:AM  -26.541935  -84.931 31.8473 0.99794\n8:PM-11:AM  -33.070968  -91.460 25.3182 0.94789\n9:PM-11:AM  -26.116129  -84.505 32.2731 0.99846\n10:PM-11:AM -25.264516  -83.654 33.1247 0.99916\n11:PM-11:AM -37.470968  -95.860 20.9182 0.81833\n12:PM-11:AM -40.025806  -98.415 18.3634 0.70190\n13:PM-11:AM -20.793548  -79.183 37.5956 0.99999\n14:PM-11:AM -36.122581  -94.512 22.2666 0.86852\n15:PM-11:AM -29.025806  -87.415 29.3634 0.99101\n16:PM-11:AM -41.800000 -100.189 16.5892 0.61038\n17:PM-11:AM -49.393548 -107.783  8.9956 0.24802\n18:PM-11:AM -35.838710  -94.228 22.5505 0.87792\n19:PM-11:AM -47.903226 -106.292 10.4860 0.30702\n20:PM-11:AM -22.212903  -80.602 36.1763 0.99994\n13:AM-12:AM  14.619355  -43.770 73.0086 1.00000\n14:AM-12:AM  -0.141935  -58.531 58.2473 1.00000\n15:AM-12:AM  -7.522581  -65.912 50.8666 1.00000\n16:AM-12:AM  10.929032  -47.460 69.3182 1.00000\n17:AM-12:AM  15.612903  -42.776 74.0021 1.00000\n18:AM-12:AM  12.490323  -45.899 70.8795 1.00000\n19:AM-12:AM  19.941935  -38.447 78.3311 1.00000\n20:AM-12:AM  16.322581  -48.959 81.6037 1.00000\n1:PM-12:AM   32.716129  -25.673 91.1053 0.95413\n2:PM-12:AM   16.393548  -41.996 74.7827 1.00000\n3:PM-12:AM   27.393548  -30.996 85.7827 0.99645\n4:PM-12:AM    3.406452  -54.983 61.7956 1.00000\n5:PM-12:AM   17.600000  -40.789 75.9892 1.00000\n6:PM-12:AM    9.296774  -49.092 67.6860 1.00000\n7:PM-12:AM   15.400000  -42.989 73.7892 1.00000\n8:PM-12:AM    8.870968  -49.518 67.2602 1.00000\n9:PM-12:AM   15.825806  -42.563 74.2150 1.00000\n10:PM-12:AM  16.677419  -41.712 75.0666 1.00000\n11:PM-12:AM   4.470968  -53.918 62.8602 1.00000\n12:PM-12:AM   1.916129  -56.473 60.3053 1.00000\n13:PM-12:AM  21.148387  -37.241 79.5376 0.99998\n14:PM-12:AM   5.819355  -52.570 64.2086 1.00000\n15:PM-12:AM  12.916129  -45.473 71.3053 1.00000\n16:PM-12:AM   0.141935  -58.247 58.5311 1.00000\n17:PM-12:AM  -7.451613  -65.841 50.9376 1.00000\n18:PM-12:AM   6.103226  -52.286 64.4924 1.00000\n19:PM-12:AM  -5.961290  -64.350 52.4279 1.00000\n20:PM-12:AM  19.729032  -38.660 78.1182 1.00000\n14:AM-13:AM -14.761290  -73.150 43.6279 1.00000\n15:AM-13:AM -22.141935  -80.531 36.2473 0.99994\n16:AM-13:AM  -3.690323  -62.080 54.6989 1.00000\n17:AM-13:AM   0.993548  -57.396 59.3827 1.00000\n18:AM-13:AM  -2.129032  -60.518 56.2602 1.00000\n19:AM-13:AM   5.322581  -53.067 63.7118 1.00000\n20:AM-13:AM   1.703226  -63.578 66.9843 1.00000\n1:PM-13:AM   18.096774  -40.292 76.4860 1.00000\n2:PM-13:AM    1.774194  -56.615 60.1634 1.00000\n3:PM-13:AM   12.774194  -45.615 71.1634 1.00000\n4:PM-13:AM  -11.212903  -69.602 47.1763 1.00000\n5:PM-13:AM    2.980645  -55.409 61.3698 1.00000\n6:PM-13:AM   -5.322581  -63.712 53.0666 1.00000\n7:PM-13:AM    0.780645  -57.609 59.1698 1.00000\n8:PM-13:AM   -5.748387  -64.138 52.6408 1.00000\n9:PM-13:AM    1.206452  -57.183 59.5956 1.00000\n10:PM-13:AM   2.058065  -56.331 60.4473 1.00000\n11:PM-13:AM -10.148387  -68.538 48.2408 1.00000\n12:PM-13:AM -12.703226  -71.092 45.6860 1.00000\n13:PM-13:AM   6.529032  -51.860 64.9182 1.00000\n14:PM-13:AM  -8.800000  -67.189 49.5892 1.00000\n15:PM-13:AM  -1.703226  -60.092 56.6860 1.00000\n16:PM-13:AM -14.477419  -72.867 43.9118 1.00000\n17:PM-13:AM -22.070968  -80.460 36.3182 0.99995\n18:PM-13:AM  -8.516129  -66.905 49.8731 1.00000\n19:PM-13:AM -20.580645  -78.970 37.8086 0.99999\n20:PM-13:AM   5.109677  -53.280 63.4989 1.00000\n15:AM-14:AM  -7.380645  -65.770 51.0086 1.00000\n16:AM-14:AM  11.070968  -47.318 69.4602 1.00000\n17:AM-14:AM  15.754839  -42.634 74.1440 1.00000\n18:AM-14:AM  12.632258  -45.757 71.0215 1.00000\n19:AM-14:AM  20.083871  -38.305 78.4731 0.99999\n20:AM-14:AM  16.464516  -48.817 81.7456 1.00000\n1:PM-14:AM   32.858065  -25.531 91.2473 0.95170\n2:PM-14:AM   16.535484  -41.854 74.9247 1.00000\n3:PM-14:AM   27.535484  -30.854 85.9247 0.99612\n4:PM-14:AM    3.548387  -54.841 61.9376 1.00000\n5:PM-14:AM   17.741935  -40.647 76.1311 1.00000\n6:PM-14:AM    9.438710  -48.950 67.8279 1.00000\n7:PM-14:AM   15.541935  -42.847 73.9311 1.00000\n8:PM-14:AM    9.012903  -49.376 67.4021 1.00000\n9:PM-14:AM   15.967742  -42.421 74.3569 1.00000\n10:PM-14:AM  16.819355  -41.570 75.2086 1.00000\n11:PM-14:AM   4.612903  -53.776 63.0021 1.00000\n12:PM-14:AM   2.058065  -56.331 60.4473 1.00000\n13:PM-14:AM  21.290323  -37.099 79.6795 0.99998\n14:PM-14:AM   5.961290  -52.428 64.3505 1.00000\n15:PM-14:AM  13.058065  -45.331 71.4473 1.00000\n16:PM-14:AM   0.283871  -58.105 58.6731 1.00000\n17:PM-14:AM  -7.309677  -65.699 51.0795 1.00000\n18:PM-14:AM   6.245161  -52.144 64.6344 1.00000\n19:PM-14:AM  -5.819355  -64.209 52.5698 1.00000\n20:PM-14:AM  19.870968  -38.518 78.2602 1.00000\n16:AM-15:AM  18.451613  -39.938 76.8408 1.00000\n17:AM-15:AM  23.135484  -35.254 81.5247 0.99986\n18:AM-15:AM  20.012903  -38.376 78.4021 0.99999\n19:AM-15:AM  27.464516  -30.925 85.8537 0.99629\n20:AM-15:AM  23.845161  -41.436 89.1263 0.99998\n1:PM-15:AM   40.238710  -18.150 98.6279 0.69123\n2:PM-15:AM   23.916129  -34.473 82.3053 0.99972\n3:PM-15:AM   34.916129  -23.473 93.3053 0.90560\n4:PM-15:AM   10.929032  -47.460 69.3182 1.00000\n5:PM-15:AM   25.122581  -33.267 83.5118 0.99925\n6:PM-15:AM   16.819355  -41.570 75.2086 1.00000\n7:PM-15:AM   22.922581  -35.467 81.3118 0.99988\n8:PM-15:AM   16.393548  -41.996 74.7827 1.00000\n9:PM-15:AM   23.348387  -35.041 81.7376 0.99983\n10:PM-15:AM  24.200000  -34.189 82.5892 0.99964\n11:PM-15:AM  11.993548  -46.396 70.3827 1.00000\n12:PM-15:AM   9.438710  -48.950 67.8279 1.00000\n13:PM-15:AM  28.670968  -29.718 87.0602 0.99256\n14:PM-15:AM  13.341935  -45.047 71.7311 1.00000\n15:PM-15:AM  20.438710  -37.950 78.8279 0.99999\n16:PM-15:AM   7.664516  -50.725 66.0537 1.00000\n17:PM-15:AM   0.070968  -58.318 58.4602 1.00000\n18:PM-15:AM  13.625806  -44.763 72.0150 1.00000\n19:PM-15:AM   1.561290  -56.828 59.9505 1.00000\n20:PM-15:AM  27.251613  -31.138 85.6408 0.99674\n17:AM-16:AM   4.683871  -53.705 63.0731 1.00000\n18:AM-16:AM   1.561290  -56.828 59.9505 1.00000\n19:AM-16:AM   9.012903  -49.376 67.4021 1.00000\n20:AM-16:AM   5.393548  -59.888 70.6747 1.00000\n1:PM-16:AM   21.787097  -36.602 80.1763 0.99996\n2:PM-16:AM    5.464516  -52.925 63.8537 1.00000\n3:PM-16:AM   16.464516  -41.925 74.8537 1.00000\n4:PM-16:AM   -7.522581  -65.912 50.8666 1.00000\n5:PM-16:AM    6.670968  -51.718 65.0602 1.00000\n6:PM-16:AM   -1.632258  -60.021 56.7569 1.00000\n7:PM-16:AM    4.470968  -53.918 62.8602 1.00000\n8:PM-16:AM   -2.058065  -60.447 56.3311 1.00000\n9:PM-16:AM    4.896774  -53.492 63.2860 1.00000\n10:PM-16:AM   5.748387  -52.641 64.1376 1.00000\n11:PM-16:AM  -6.458065  -64.847 51.9311 1.00000\n12:PM-16:AM  -9.012903  -67.402 49.3763 1.00000\n13:PM-16:AM  10.219355  -48.170 68.6086 1.00000\n14:PM-16:AM  -5.109677  -63.499 53.2795 1.00000\n15:PM-16:AM   1.987097  -56.402 60.3763 1.00000\n16:PM-16:AM -10.787097  -69.176 47.6021 1.00000\n17:PM-16:AM -18.380645  -76.770 40.0086 1.00000\n18:PM-16:AM  -4.825806  -63.215 53.5634 1.00000\n19:PM-16:AM -16.890323  -75.280 41.4989 1.00000\n20:PM-16:AM   8.800000  -49.589 67.1892 1.00000\n18:AM-17:AM  -3.122581  -61.512 55.2666 1.00000\n19:AM-17:AM   4.329032  -54.060 62.7182 1.00000\n20:AM-17:AM   0.709677  -64.571 65.9908 1.00000\n1:PM-17:AM   17.103226  -41.286 75.4924 1.00000\n2:PM-17:AM    0.780645  -57.609 59.1698 1.00000\n3:PM-17:AM   11.780645  -46.609 70.1698 1.00000\n4:PM-17:AM  -12.206452  -70.596 46.1827 1.00000\n5:PM-17:AM    1.987097  -56.402 60.3763 1.00000\n6:PM-17:AM   -6.316129  -64.705 52.0731 1.00000\n7:PM-17:AM   -0.212903  -58.602 58.1763 1.00000\n8:PM-17:AM   -6.741935  -65.131 51.6473 1.00000\n9:PM-17:AM    0.212903  -58.176 58.6021 1.00000\n10:PM-17:AM   1.064516  -57.325 59.4537 1.00000\n11:PM-17:AM -11.141935  -69.531 47.2473 1.00000\n12:PM-17:AM -13.696774  -72.086 44.6924 1.00000\n13:PM-17:AM   5.535484  -52.854 63.9247 1.00000\n14:PM-17:AM  -9.793548  -68.183 48.5956 1.00000\n15:PM-17:AM  -2.696774  -61.086 55.6924 1.00000\n16:PM-17:AM -15.470968  -73.860 42.9182 1.00000\n17:PM-17:AM -23.064516  -81.454 35.3247 0.99987\n18:PM-17:AM  -9.509677  -67.899 48.8795 1.00000\n19:PM-17:AM -21.574194  -79.963 36.8150 0.99997\n20:PM-17:AM   4.116129  -54.273 62.5053 1.00000\n19:AM-18:AM   7.451613  -50.938 65.8408 1.00000\n20:AM-18:AM   3.832258  -61.449 69.1134 1.00000\n1:PM-18:AM   20.225806  -38.163 78.6150 0.99999\n2:PM-18:AM    3.903226  -54.486 62.2924 1.00000\n3:PM-18:AM   14.903226  -43.486 73.2924 1.00000\n4:PM-18:AM   -9.083871  -67.473 49.3053 1.00000\n5:PM-18:AM    5.109677  -53.280 63.4989 1.00000\n6:PM-18:AM   -3.193548  -61.583 55.1956 1.00000\n7:PM-18:AM    2.909677  -55.480 61.2989 1.00000\n8:PM-18:AM   -3.619355  -62.009 54.7698 1.00000\n9:PM-18:AM    3.335484  -55.054 61.7247 1.00000\n10:PM-18:AM   4.187097  -54.202 62.5763 1.00000\n11:PM-18:AM  -8.019355  -66.409 50.3698 1.00000\n12:PM-18:AM -10.574194  -68.963 47.8150 1.00000\n13:PM-18:AM   8.658065  -49.731 67.0473 1.00000\n14:PM-18:AM  -6.670968  -65.060 51.7182 1.00000\n15:PM-18:AM   0.425806  -57.963 58.8150 1.00000\n16:PM-18:AM -12.348387  -70.738 46.0408 1.00000\n17:PM-18:AM -19.941935  -78.331 38.4473 1.00000\n18:PM-18:AM  -6.387097  -64.776 52.0021 1.00000\n19:PM-18:AM -18.451613  -76.841 39.9376 1.00000\n20:PM-18:AM   7.238710  -51.150 65.6279 1.00000\n20:AM-19:AM  -3.619355  -68.900 61.6618 1.00000\n1:PM-19:AM   12.774194  -45.615 71.1634 1.00000\n2:PM-19:AM   -3.548387  -61.938 54.8408 1.00000\n3:PM-19:AM    7.451613  -50.938 65.8408 1.00000\n4:PM-19:AM  -16.535484  -74.925 41.8537 1.00000\n5:PM-19:AM   -2.341935  -60.731 56.0473 1.00000\n6:PM-19:AM  -10.645161  -69.034 47.7440 1.00000\n7:PM-19:AM   -4.541935  -62.931 53.8473 1.00000\n8:PM-19:AM  -11.070968  -69.460 47.3182 1.00000\n9:PM-19:AM   -4.116129  -62.505 54.2731 1.00000\n10:PM-19:AM  -3.264516  -61.654 55.1247 1.00000\n11:PM-19:AM -15.470968  -73.860 42.9182 1.00000\n12:PM-19:AM -18.025806  -76.415 40.3634 1.00000\n13:PM-19:AM   1.206452  -57.183 59.5956 1.00000\n14:PM-19:AM -14.122581  -72.512 44.2666 1.00000\n15:PM-19:AM  -7.025806  -65.415 51.3634 1.00000\n16:PM-19:AM -19.800000  -78.189 38.5892 1.00000\n17:PM-19:AM -27.393548  -85.783 30.9956 0.99645\n18:PM-19:AM -13.838710  -72.228 44.5505 1.00000\n19:PM-19:AM -25.903226  -84.292 32.4860 0.99867\n20:PM-19:AM  -0.212903  -58.602 58.1763 1.00000\n1:PM-20:AM   16.393548  -48.888 81.6747 1.00000\n2:PM-20:AM    0.070968  -65.210 65.3521 1.00000\n3:PM-20:AM   11.070968  -54.210 76.3521 1.00000\n4:PM-20:AM  -12.916129  -78.197 52.3650 1.00000\n5:PM-20:AM    1.277419  -64.004 66.5585 1.00000\n6:PM-20:AM   -7.025806  -72.307 58.2553 1.00000\n7:PM-20:AM   -0.922581  -66.204 64.3585 1.00000\n8:PM-20:AM   -7.451613  -72.733 57.8295 1.00000\n9:PM-20:AM   -0.496774  -65.778 64.7843 1.00000\n10:PM-20:AM   0.354839  -64.926 65.6359 1.00000\n11:PM-20:AM -11.851613  -77.133 53.4295 1.00000\n12:PM-20:AM -14.406452  -79.688 50.8747 1.00000\n13:PM-20:AM   4.825806  -60.455 70.1069 1.00000\n14:PM-20:AM -10.503226  -75.784 54.7779 1.00000\n15:PM-20:AM  -3.406452  -68.688 61.8747 1.00000\n16:PM-20:AM -16.180645  -81.462 49.1005 1.00000\n17:PM-20:AM -23.774194  -89.055 41.5069 0.99998\n18:PM-20:AM -10.219355  -75.500 55.0618 1.00000\n19:PM-20:AM -22.283871  -87.565 42.9972 1.00000\n20:PM-20:AM   3.406452  -61.875 68.6876 1.00000\n2:PM-1:PM   -16.322581  -74.712 42.0666 1.00000\n3:PM-1:PM    -5.322581  -63.712 53.0666 1.00000\n4:PM-1:PM   -29.309677  -87.699 29.0795 0.98958\n5:PM-1:PM   -15.116129  -73.505 43.2731 1.00000\n6:PM-1:PM   -23.419355  -81.809 34.9698 0.99982\n7:PM-1:PM   -17.316129  -75.705 41.0731 1.00000\n8:PM-1:PM   -23.845161  -82.234 34.5440 0.99973\n9:PM-1:PM   -16.890323  -75.280 41.4989 1.00000\n10:PM-1:PM  -16.038710  -74.428 42.3505 1.00000\n11:PM-1:PM  -28.245161  -86.634 30.1440 0.99413\n12:PM-1:PM  -30.800000  -89.189 27.5892 0.97882\n13:PM-1:PM  -11.567742  -69.957 46.8215 1.00000\n14:PM-1:PM  -26.896774  -85.286 31.4924 0.99740\n15:PM-1:PM  -19.800000  -78.189 38.5892 1.00000\n16:PM-1:PM  -32.574194  -90.963 25.8150 0.95647\n17:PM-1:PM  -40.167742  -98.557 18.2215 0.69480\n18:PM-1:PM  -26.612903  -85.002 31.7763 0.99784\n19:PM-1:PM  -38.677419  -97.067 19.7118 0.76637\n20:PM-1:PM  -12.987097  -71.376 45.4021 1.00000\n3:PM-2:PM    11.000000  -47.389 69.3892 1.00000\n4:PM-2:PM   -12.987097  -71.376 45.4021 1.00000\n5:PM-2:PM     1.206452  -57.183 59.5956 1.00000\n6:PM-2:PM    -7.096774  -65.486 51.2924 1.00000\n7:PM-2:PM    -0.993548  -59.383 57.3956 1.00000\n8:PM-2:PM    -7.522581  -65.912 50.8666 1.00000\n9:PM-2:PM    -0.567742  -58.957 57.8215 1.00000\n10:PM-2:PM    0.283871  -58.105 58.6731 1.00000\n11:PM-2:PM  -11.922581  -70.312 46.4666 1.00000\n12:PM-2:PM  -14.477419  -72.867 43.9118 1.00000\n13:PM-2:PM    4.754839  -53.634 63.1440 1.00000\n14:PM-2:PM  -10.574194  -68.963 47.8150 1.00000\n15:PM-2:PM   -3.477419  -61.867 54.9118 1.00000\n16:PM-2:PM  -16.251613  -74.641 42.1376 1.00000\n17:PM-2:PM  -23.845161  -82.234 34.5440 0.99973\n18:PM-2:PM  -10.290323  -68.680 48.0989 1.00000\n19:PM-2:PM  -22.354839  -80.744 36.0344 0.99993\n20:PM-2:PM    3.335484  -55.054 61.7247 1.00000\n4:PM-3:PM   -23.987097  -82.376 34.4021 0.99970\n5:PM-3:PM    -9.793548  -68.183 48.5956 1.00000\n6:PM-3:PM   -18.096774  -76.486 40.2924 1.00000\n7:PM-3:PM   -11.993548  -70.383 46.3956 1.00000\n8:PM-3:PM   -18.522581  -76.912 39.8666 1.00000\n9:PM-3:PM   -11.567742  -69.957 46.8215 1.00000\n10:PM-3:PM  -10.716129  -69.105 47.6731 1.00000\n11:PM-3:PM  -22.922581  -81.312 35.4666 0.99988\n12:PM-3:PM  -25.477419  -83.867 32.9118 0.99902\n13:PM-3:PM   -6.245161  -64.634 52.1440 1.00000\n14:PM-3:PM  -21.574194  -79.963 36.8150 0.99997\n15:PM-3:PM  -14.477419  -72.867 43.9118 1.00000\n16:PM-3:PM  -27.251613  -85.641 31.1376 0.99674\n17:PM-3:PM  -34.845161  -93.234 23.5440 0.90755\n18:PM-3:PM  -21.290323  -79.680 37.0989 0.99998\n19:PM-3:PM  -33.354839  -91.744 25.0344 0.94247\n20:PM-3:PM   -7.664516  -66.054 50.7247 1.00000\n5:PM-4:PM    14.193548  -44.196 72.5827 1.00000\n6:PM-4:PM     5.890323  -52.499 64.2795 1.00000\n7:PM-4:PM    11.993548  -46.396 70.3827 1.00000\n8:PM-4:PM     5.464516  -52.925 63.8537 1.00000\n9:PM-4:PM    12.419355  -45.970 70.8086 1.00000\n10:PM-4:PM   13.270968  -45.118 71.6602 1.00000\n11:PM-4:PM    1.064516  -57.325 59.4537 1.00000\n12:PM-4:PM   -1.490323  -59.880 56.8989 1.00000\n13:PM-4:PM   17.741935  -40.647 76.1311 1.00000\n14:PM-4:PM    2.412903  -55.976 60.8021 1.00000\n15:PM-4:PM    9.509677  -48.880 67.8989 1.00000\n16:PM-4:PM   -3.264516  -61.654 55.1247 1.00000\n17:PM-4:PM  -10.858065  -69.247 47.5311 1.00000\n18:PM-4:PM    2.696774  -55.692 61.0860 1.00000\n19:PM-4:PM   -9.367742  -67.757 49.0215 1.00000\n20:PM-4:PM   16.322581  -42.067 74.7118 1.00000\n6:PM-5:PM    -8.303226  -66.692 50.0860 1.00000\n7:PM-5:PM    -2.200000  -60.589 56.1892 1.00000\n8:PM-5:PM    -8.729032  -67.118 49.6602 1.00000\n9:PM-5:PM    -1.774194  -60.163 56.6150 1.00000\n10:PM-5:PM   -0.922581  -59.312 57.4666 1.00000\n11:PM-5:PM  -13.129032  -71.518 45.2602 1.00000\n12:PM-5:PM  -15.683871  -74.073 42.7053 1.00000\n13:PM-5:PM    3.548387  -54.841 61.9376 1.00000\n14:PM-5:PM  -11.780645  -70.170 46.6086 1.00000\n15:PM-5:PM   -4.683871  -63.073 53.7053 1.00000\n16:PM-5:PM  -17.458065  -75.847 40.9311 1.00000\n17:PM-5:PM  -25.051613  -83.441 33.3376 0.99929\n18:PM-5:PM  -11.496774  -69.886 46.8924 1.00000\n19:PM-5:PM  -23.561290  -81.950 34.8279 0.99979\n20:PM-5:PM    2.129032  -56.260 60.5182 1.00000\n7:PM-6:PM     6.103226  -52.286 64.4924 1.00000\n8:PM-6:PM    -0.425806  -58.815 57.9634 1.00000\n9:PM-6:PM     6.529032  -51.860 64.9182 1.00000\n10:PM-6:PM    7.380645  -51.009 65.7698 1.00000\n11:PM-6:PM   -4.825806  -63.215 53.5634 1.00000\n12:PM-6:PM   -7.380645  -65.770 51.0086 1.00000\n13:PM-6:PM   11.851613  -46.538 70.2408 1.00000\n14:PM-6:PM   -3.477419  -61.867 54.9118 1.00000\n15:PM-6:PM    3.619355  -54.770 62.0086 1.00000\n16:PM-6:PM   -9.154839  -67.544 49.2344 1.00000\n17:PM-6:PM  -16.748387  -75.138 41.6408 1.00000\n18:PM-6:PM   -3.193548  -61.583 55.1956 1.00000\n19:PM-6:PM  -15.258065  -73.647 43.1311 1.00000\n20:PM-6:PM   10.432258  -47.957 68.8215 1.00000\n8:PM-7:PM    -6.529032  -64.918 51.8602 1.00000\n9:PM-7:PM     0.425806  -57.963 58.8150 1.00000\n10:PM-7:PM    1.277419  -57.112 59.6666 1.00000\n11:PM-7:PM  -10.929032  -69.318 47.4602 1.00000\n12:PM-7:PM  -13.483871  -71.873 44.9053 1.00000\n13:PM-7:PM    5.748387  -52.641 64.1376 1.00000\n14:PM-7:PM   -9.580645  -67.970 48.8086 1.00000\n15:PM-7:PM   -2.483871  -60.873 55.9053 1.00000\n16:PM-7:PM  -15.258065  -73.647 43.1311 1.00000\n17:PM-7:PM  -22.851613  -81.241 35.5376 0.99989\n18:PM-7:PM   -9.296774  -67.686 49.0924 1.00000\n19:PM-7:PM  -21.361290  -79.750 37.0279 0.99998\n20:PM-7:PM    4.329032  -54.060 62.7182 1.00000\n9:PM-8:PM     6.954839  -51.434 65.3440 1.00000\n10:PM-8:PM    7.806452  -50.583 66.1956 1.00000\n11:PM-8:PM   -4.400000  -62.789 53.9892 1.00000\n12:PM-8:PM   -6.954839  -65.344 51.4344 1.00000\n13:PM-8:PM   12.277419  -46.112 70.6666 1.00000\n14:PM-8:PM   -3.051613  -61.441 55.3376 1.00000\n15:PM-8:PM    4.045161  -54.344 62.4344 1.00000\n16:PM-8:PM   -8.729032  -67.118 49.6602 1.00000\n17:PM-8:PM  -16.322581  -74.712 42.0666 1.00000\n18:PM-8:PM   -2.767742  -61.157 55.6215 1.00000\n19:PM-8:PM  -14.832258  -73.221 43.5569 1.00000\n20:PM-8:PM   10.858065  -47.531 69.2473 1.00000\n10:PM-9:PM    0.851613  -57.538 59.2408 1.00000\n11:PM-9:PM  -11.354839  -69.744 47.0344 1.00000\n12:PM-9:PM  -13.909677  -72.299 44.4795 1.00000\n13:PM-9:PM    5.322581  -53.067 63.7118 1.00000\n14:PM-9:PM  -10.006452  -68.396 48.3827 1.00000\n15:PM-9:PM   -2.909677  -61.299 55.4795 1.00000\n16:PM-9:PM  -15.683871  -74.073 42.7053 1.00000\n17:PM-9:PM  -23.277419  -81.667 35.1118 0.99984\n18:PM-9:PM   -9.722581  -68.112 48.6666 1.00000\n19:PM-9:PM  -21.787097  -80.176 36.6021 0.99996\n20:PM-9:PM    3.903226  -54.486 62.2924 1.00000\n11:PM-10:PM -12.206452  -70.596 46.1827 1.00000\n12:PM-10:PM -14.761290  -73.150 43.6279 1.00000\n13:PM-10:PM   4.470968  -53.918 62.8602 1.00000\n14:PM-10:PM -10.858065  -69.247 47.5311 1.00000\n15:PM-10:PM  -3.761290  -62.150 54.6279 1.00000\n16:PM-10:PM -16.535484  -74.925 41.8537 1.00000\n17:PM-10:PM -24.129032  -82.518 34.2602 0.99966\n18:PM-10:PM -10.574194  -68.963 47.8150 1.00000\n19:PM-10:PM -22.638710  -81.028 35.7505 0.99991\n20:PM-10:PM   3.051613  -55.338 61.4408 1.00000\n12:PM-11:PM  -2.554839  -60.944 55.8344 1.00000\n13:PM-11:PM  16.677419  -41.712 75.0666 1.00000\n14:PM-11:PM   1.348387  -57.041 59.7376 1.00000\n15:PM-11:PM   8.445161  -49.944 66.8344 1.00000\n16:PM-11:PM  -4.329032  -62.718 54.0602 1.00000\n17:PM-11:PM -11.922581  -70.312 46.4666 1.00000\n18:PM-11:PM   1.632258  -56.757 60.0215 1.00000\n19:PM-11:PM -10.432258  -68.821 47.9569 1.00000\n20:PM-11:PM  15.258065  -43.131 73.6473 1.00000\n13:PM-12:PM  19.232258  -39.157 77.6215 1.00000\n14:PM-12:PM   3.903226  -54.486 62.2924 1.00000\n15:PM-12:PM  11.000000  -47.389 69.3892 1.00000\n16:PM-12:PM  -1.774194  -60.163 56.6150 1.00000\n17:PM-12:PM  -9.367742  -67.757 49.0215 1.00000\n18:PM-12:PM   4.187097  -54.202 62.5763 1.00000\n19:PM-12:PM  -7.877419  -66.267 50.5118 1.00000\n20:PM-12:PM  17.812903  -40.576 76.2021 1.00000\n14:PM-13:PM -15.329032  -73.718 43.0602 1.00000\n15:PM-13:PM  -8.232258  -66.621 50.1569 1.00000\n16:PM-13:PM -21.006452  -79.396 37.3827 0.99998\n17:PM-13:PM -28.600000  -86.989 29.7892 0.99284\n18:PM-13:PM -15.045161  -73.434 43.3440 1.00000\n19:PM-13:PM -27.109677  -85.499 31.2795 0.99702\n20:PM-13:PM  -1.419355  -59.809 56.9698 1.00000\n15:PM-14:PM   7.096774  -51.292 65.4860 1.00000\n16:PM-14:PM  -5.677419  -64.067 52.7118 1.00000\n17:PM-14:PM -13.270968  -71.660 45.1182 1.00000\n18:PM-14:PM   0.283871  -58.105 58.6731 1.00000\n19:PM-14:PM -11.780645  -70.170 46.6086 1.00000\n20:PM-14:PM  13.909677  -44.480 72.2989 1.00000\n16:PM-15:PM -12.774194  -71.163 45.6150 1.00000\n17:PM-15:PM -20.367742  -78.757 38.0215 0.99999\n18:PM-15:PM  -6.812903  -65.202 51.5763 1.00000\n19:PM-15:PM -18.877419  -77.267 39.5118 1.00000\n20:PM-15:PM   6.812903  -51.576 65.2021 1.00000\n17:PM-16:PM  -7.593548  -65.983 50.7956 1.00000\n18:PM-16:PM   5.961290  -52.428 64.3505 1.00000\n19:PM-16:PM  -6.103226  -64.492 52.2860 1.00000\n20:PM-16:PM  19.587097  -38.802 77.9763 1.00000\n18:PM-17:PM  13.554839  -44.834 71.9440 1.00000\n19:PM-17:PM   1.490323  -56.899 59.8795 1.00000\n20:PM-17:PM  27.180645  -31.209 85.5698 0.99689\n19:PM-18:PM -12.064516  -70.454 46.3247 1.00000\n20:PM-18:PM  13.625806  -44.763 72.0150 1.00000\n20:PM-19:PM  25.690323  -32.699 84.0795 0.99886\n\n\n  Tukey multiple comparisons of means\n    99% family-wise confidence level\n\nFit: aov(formula = response ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff     lwr    upr   p adj\n2-1    -6.138710 -48.905 36.628 1.00000\n3-1    -4.080645 -46.847 38.686 1.00000\n4-1   -14.300000 -57.066 28.466 0.99700\n5-1    -3.335484 -46.102 39.431 1.00000\n6-1    -6.812903 -49.579 35.953 1.00000\n7-1    -6.422581 -49.189 36.344 1.00000\n8-1    -4.364516 -47.131 38.402 1.00000\n9-1     8.551613 -34.215 51.318 1.00000\n10-1  -12.703226 -55.470 30.063 0.99934\n11-1    1.845161 -40.921 44.611 1.00000\n12-1  -20.403226 -63.170 22.363 0.89330\n13-1   -3.477419 -46.244 39.289 1.00000\n14-1  -18.522581 -61.289 24.244 0.95243\n15-1  -18.664516 -61.431 24.102 0.94905\n16-1  -15.825806 -58.592 26.941 0.99024\n17-1  -17.280645 -60.047 25.486 0.97539\n18-1  -12.064516 -54.831 30.702 0.99968\n19-1  -14.370968 -57.137 28.395 0.99682\n20-1   -2.994839 -47.849 41.859 1.00000\n3-2     2.058065 -40.708 44.824 1.00000\n4-2    -8.161290 -50.928 34.605 1.00000\n5-2     2.803226 -39.963 45.570 1.00000\n6-2    -0.674194 -43.441 42.092 1.00000\n7-2    -0.283871 -43.050 42.482 1.00000\n8-2     1.774194 -40.992 44.541 1.00000\n9-2    14.690323 -28.076 57.457 0.99585\n10-2   -6.564516 -49.331 36.202 1.00000\n11-2    7.983871 -34.782 50.750 1.00000\n12-2  -14.264516 -57.031 28.502 0.99709\n13-2    2.661290 -40.105 45.428 1.00000\n14-2  -12.383871 -55.150 30.382 0.99953\n15-2  -12.525806 -55.292 30.241 0.99946\n16-2   -9.687097 -52.453 33.079 0.99999\n17-2  -11.141935 -53.908 31.624 0.99990\n18-2   -5.925806 -48.692 36.841 1.00000\n19-2   -8.232258 -50.999 34.534 1.00000\n20-2    3.143871 -41.710 47.998 1.00000\n4-3   -10.219355 -52.986 32.547 0.99997\n5-3     0.745161 -42.021 43.511 1.00000\n6-3    -2.732258 -45.499 40.034 1.00000\n7-3    -2.341935 -45.108 40.424 1.00000\n8-3    -0.283871 -43.050 42.482 1.00000\n9-3    12.632258 -30.134 55.399 0.99939\n10-3   -8.622581 -51.389 34.144 1.00000\n11-3    5.925806 -36.841 48.692 1.00000\n12-3  -16.322581 -59.089 26.444 0.98634\n13-3    0.603226 -42.163 43.370 1.00000\n14-3  -14.441935 -57.208 28.324 0.99662\n15-3  -14.583871 -57.350 28.182 0.99620\n16-3  -11.745161 -54.511 31.021 0.99978\n17-3  -13.200000 -55.966 29.566 0.99891\n18-3   -7.983871 -50.750 34.782 1.00000\n19-3  -10.290323 -53.057 32.476 0.99997\n20-3    1.085806 -43.768 45.939 1.00000\n5-4    10.964516 -31.802 53.731 0.99992\n6-4     7.487097 -35.279 50.253 1.00000\n7-4     7.877419 -34.889 50.644 1.00000\n8-4     9.935484 -32.831 52.702 0.99998\n9-4    22.851613 -19.915 65.618 0.76824\n10-4    1.596774 -41.170 44.363 1.00000\n11-4   16.145161 -26.621 58.911 0.98785\n12-4   -6.103226 -48.870 36.663 1.00000\n13-4   10.822581 -31.944 53.589 0.99993\n14-4   -4.222581 -46.989 38.544 1.00000\n15-4   -4.364516 -47.131 38.402 1.00000\n16-4   -1.525806 -44.292 41.241 1.00000\n17-4   -2.980645 -45.747 39.786 1.00000\n18-4    2.235484 -40.531 45.002 1.00000\n19-4   -0.070968 -42.837 42.695 1.00000\n20-4   11.305161 -33.549 56.159 0.99994\n6-5    -3.477419 -46.244 39.289 1.00000\n7-5    -3.087097 -45.853 39.679 1.00000\n8-5    -1.029032 -43.795 41.737 1.00000\n9-5    11.887097 -30.879 54.653 0.99974\n10-5   -9.367742 -52.134 33.399 0.99999\n11-5    5.180645 -37.586 47.947 1.00000\n12-5  -17.067742 -59.834 25.699 0.97827\n13-5   -0.141935 -42.908 42.624 1.00000\n14-5  -15.187097 -57.953 27.579 0.99387\n15-5  -15.329032 -58.095 27.437 0.99318\n16-5  -12.490323 -55.257 30.276 0.99948\n17-5  -13.945161 -56.711 28.821 0.99780\n18-5   -8.729032 -51.495 34.037 1.00000\n19-5  -11.035484 -53.802 31.731 0.99991\n20-5    0.340645 -44.513 45.194 1.00000\n7-6     0.390323 -42.376 43.157 1.00000\n8-6     2.448387 -40.318 45.215 1.00000\n9-6    15.364516 -27.402 58.131 0.99300\n10-6   -5.890323 -48.657 36.876 1.00000\n11-6    8.658065 -34.108 51.424 1.00000\n12-6  -13.590323 -56.357 29.176 0.99841\n13-6    3.335484 -39.431 46.102 1.00000\n14-6  -11.709677 -54.476 31.057 0.99979\n15-6  -11.851613 -54.618 30.915 0.99975\n16-6   -9.012903 -51.779 33.753 1.00000\n17-6  -10.467742 -53.234 32.299 0.99996\n18-6   -5.251613 -48.018 37.515 1.00000\n19-6   -7.558065 -50.324 35.208 1.00000\n20-6    3.818065 -41.036 48.672 1.00000\n8-7     2.058065 -40.708 44.824 1.00000\n9-7    14.974194 -27.792 57.741 0.99480\n10-7   -6.280645 -49.047 36.486 1.00000\n11-7    8.267742 -34.499 51.034 1.00000\n12-7  -13.980645 -56.747 28.786 0.99773\n13-7    2.945161 -39.821 45.711 1.00000\n14-7  -12.100000 -54.866 30.666 0.99966\n15-7  -12.241935 -55.008 30.524 0.99960\n16-7   -9.403226 -52.170 33.363 0.99999\n17-7  -10.858065 -53.624 31.908 0.99993\n18-7   -5.641935 -48.408 37.124 1.00000\n19-7   -7.948387 -50.715 34.818 1.00000\n20-7    3.427742 -41.426 48.281 1.00000\n9-8    12.916129 -29.850 55.682 0.99918\n10-8   -8.338710 -51.105 34.428 1.00000\n11-8    6.209677 -36.557 48.976 1.00000\n12-8  -16.038710 -58.805 26.728 0.98869\n13-8    0.887097 -41.879 43.653 1.00000\n14-8  -14.158065 -56.924 28.608 0.99735\n15-8  -14.300000 -57.066 28.466 0.99700\n16-8  -11.461290 -54.228 31.305 0.99984\n17-8  -12.916129 -55.682 29.850 0.99918\n18-8   -7.700000 -50.466 35.066 1.00000\n19-8  -10.006452 -52.773 32.760 0.99998\n20-8    1.369677 -43.484 46.223 1.00000\n10-9  -21.254839 -64.021 21.511 0.85576\n11-9   -6.706452 -49.473 36.060 1.00000\n12-9  -28.954839 -71.721 13.811 0.35269\n13-9  -12.029032 -54.795 30.737 0.99969\n14-9  -27.074194 -69.841 15.692 0.47719\n15-9  -27.216129 -69.982 15.550 0.46731\n16-9  -24.377419 -67.144 18.389 0.66832\n17-9  -25.832258 -68.599 16.934 0.56535\n18-9  -20.616129 -63.382 22.150 0.88455\n19-9  -22.922581 -65.689 19.844 0.76389\n20-9  -11.546452 -56.400 33.307 0.99991\n11-10  14.548387 -28.218 57.315 0.99631\n12-10  -7.700000 -50.466 35.066 1.00000\n13-10   9.225806 -33.541 51.992 0.99999\n14-10  -5.819355 -48.586 36.947 1.00000\n15-10  -5.961290 -48.728 36.805 1.00000\n16-10  -3.122581 -45.889 39.644 1.00000\n17-10  -4.577419 -47.344 38.189 1.00000\n18-10   0.638710 -42.128 43.405 1.00000\n19-10  -1.667742 -44.434 41.099 1.00000\n20-10   9.708387 -35.145 54.562 0.99999\n12-11 -22.248387 -65.015 20.518 0.80373\n13-11  -5.322581 -48.089 37.444 1.00000\n14-11 -20.367742 -63.134 22.399 0.89472\n15-11 -20.509677 -63.276 22.257 0.88898\n16-11 -17.670968 -60.437 25.095 0.96936\n17-11 -19.125806 -61.892 23.641 0.93692\n18-11 -13.909677 -56.676 28.857 0.99787\n19-11 -16.216129 -58.982 26.550 0.98726\n20-11  -4.840000 -49.694 40.014 1.00000\n13-12  16.925806 -25.841 59.692 0.98004\n14-12   1.880645 -40.886 44.647 1.00000\n15-12   1.738710 -41.028 44.505 1.00000\n16-12   4.577419 -38.189 47.344 1.00000\n17-12   3.122581 -39.644 45.889 1.00000\n18-12   8.338710 -34.428 51.105 1.00000\n19-12   6.032258 -36.734 48.799 1.00000\n20-12  17.408387 -27.445 62.262 0.98369\n14-13 -15.045161 -57.811 27.721 0.99450\n15-13 -15.187097 -57.953 27.579 0.99387\n16-13 -12.348387 -55.115 30.418 0.99955\n17-13 -13.803226 -56.570 28.963 0.99807\n18-13  -8.587097 -51.353 34.179 1.00000\n19-13 -10.893548 -53.660 31.873 0.99992\n20-13   0.482581 -44.371 45.336 1.00000\n15-14  -0.141935 -42.908 42.624 1.00000\n16-14   2.696774 -40.070 45.463 1.00000\n17-14   1.241935 -41.524 44.008 1.00000\n18-14   6.458065 -36.308 49.224 1.00000\n19-14   4.151613 -38.615 46.918 1.00000\n20-14  15.527742 -29.326 60.381 0.99545\n16-15   2.838710 -39.928 45.605 1.00000\n17-15   1.383871 -41.382 44.150 1.00000\n18-15   6.600000 -36.166 49.366 1.00000\n19-15   4.293548 -38.473 47.060 1.00000\n20-15  15.669677 -29.184 60.523 0.99493\n17-16  -1.454839 -44.221 41.311 1.00000\n18-16   3.761290 -39.005 46.528 1.00000\n19-16   1.454839 -41.311 44.221 1.00000\n20-16  12.830968 -32.023 57.685 0.99961\n18-17   5.216129 -37.550 47.982 1.00000\n19-17   2.909677 -39.857 45.676 1.00000\n20-17  14.285806 -30.568 59.139 0.99837\n19-18  -2.306452 -45.073 40.460 1.00000\n20-18   9.069677 -35.784 53.923 1.00000\n20-19  11.376129 -33.478 56.230 0.99993\n\n\n유의한 패턴 없음 Tukey 검정 결과 (보통 유의할때 함) 테이블 도 유의한 수치가 없음"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-16_normality/index.html",
    "href": "docs/blog/posts/statistics/2023-01-16_normality/index.html",
    "title": "Normality Check",
    "section": "",
    "text": "Wiki\n논문\n원래는 표본의 크기가 50이하인 작은 데이터 셋의 정규성 검정을 위해 고안됨. R 에서는 3~5천개 사이의 표본까지 다룰 수 있도록 조정됨\n\n정규 분포 전용 검정: 모든 검정 대비 최고의 검정력을 보임 (Power), 이상치가 있으면 p value가 너무 작아짐\n\\(H_0\\): 데이터가 정규분포를 따른다\n\\(H_a\\): 데이터가 정규분포를 따르지 않는다.\n검정 통계량 \\[\n   \\mathbf W=\\frac{(\\sum_{i=1}^{n}a_ix_{(i)})^2}{\\sum_{i=1}^{n}(x_i-\\overline{x})^2}\n   \\]\n\n\\(a_i\\) : 미리 정해진 숫자들, \\(x\\)의 개수에 의해 정해짐\n\\(x_{(i)}\\) 들은 순위 표본, 즉 i 번째로 큰 표본\n분자는 순서 통계량으로 계산한 정규분포의 분산, 분모는 데이터의 표본 분산 (표본 Sum of Squares)\n이미 이론적으로 세팅된 값과 표본 분산의 비율을 보는 것\n귀무 가설이 참이면 이론적으로 1 이 나와야 함\n\\(\\mathbf W \\in (0,1)\\), 상관계수의 제곱을 측정한 계량 값이라고 생각해도 된다.\n\n\\(\\mathbf W\\) 값이 1에서 멀어질 수록 정규분포와는 다르게 분포되어 있음을 의미\n단점: 너무 민감함, 조그만 달라도 p value가 너무 작게 나와 귀무가설이 기각됨\n해결책 : 시각화 기법과 같이 사용해서 보여준다\n\nqqplot과 density 같이 사용"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html",
    "href": "docs/blog/posts/statistics/guide_map/index.html",
    "title": "Blog Guide Map, Statistics",
    "section": "",
    "text": "(Draft)"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html#basic-statistics",
    "href": "docs/blog/posts/statistics/guide_map/index.html#basic-statistics",
    "title": "Blog Guide Map, Statistics",
    "section": "Basic Statistics",
    "text": "Basic Statistics\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n1111-11-11, ANCOVA\n1111-11-11, repeated measures ANOVA\n1111-11-11, MANOVA\n1111-11-11, MANCOVA"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_python_list/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-17_python_list/index.html",
    "title": "Data Structure Python List",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\npython_list"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_array/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-17_array/index.html",
    "title": "Data Structure, Array",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n가장 기본적인 자료구조다.\n여러 개의 변수를 담는 공간으로 이해할 수 있다.\n배열은 인덱스(index)가 존재하며, 인덱스는 0부터 시작한다.\n특정한 인덱스에 직접적으로 접근 가능 → 수행 시간: \\(O (1)\\)\n\n\n\n\n\n컴퓨터의 메인 메모리에서 배열의 공간은 연속적으로 할당된다.\n장점: 캐시(cache) 히트 가능성이 높으며, 조회가 빠르다.\n단점: 배열의 크기를 미리 지정해야 하는 것이 일반적이므로, 데이터의 추가 및 삭제에 한계가 있다.\n\n\n\n\n\n컴퓨터의 메인 메모리상에서 주소가 연속적이지 않다.\n배열과 다르게 크기가 정해져 있지 않고, 리스트의 크기는 동적으로 변경 가능하다.\n\n장점: 포인터(pointer)를 통해 다음 데이터의 위치를 가리킨다는 점에서 삽입과 삭제가 간편하다.\n단점: 원소를 검색할 때는 앞에서부터 원소를 찾아야 하므로, 데이터 검색 속도가 느리다.\n\n\n\n파이썬의 리스트(List) 자료형\n\n파이썬에서는 리스트 자료형을 제공한다.\n\n[알아 둘 점]\n\n컴퓨터 공학에서의 연결 리스트와 다른 의미를 가진다.\n일반적인 프로그래밍 언어에서의 배열로 이해할 수 있다.\n파이썬의 리스트는 배열처럼 임의의 인덱스를 이용해 직접적인 접근이 가능하다.\n파이썬의 리스트 자료형은 동적 배열이다.\n배열의 용량이 가득 차면, 자동으로 크기를 증가시킨다.\n내부적으로 포인터(pointer)를 사용하여, 연결 리스트의 장점도 가지고 있다.\n배열(array) 혹은 스택(stack)의 기능이 필요할 때 리스트 자료형을 그대로 사용할 수 있다.\n큐(queue)의 기능을 제공하지 못한다. (비효율적)\n\n\n\n\n\n파이썬에서는 임의의 크기를 가지는 배열을 만들 수 있다.\n일반적으로 리스트 컴프리헨션(list comprehension)을 사용한다.\n크기가 N인 1차원 배열을 만드는 방법은 다음과 같다.\n\n\n# [0, 0, 0, 0, 0]\nn = 5\narr = [0] * n\nprint(arr)\n\n# [0, 1, 2, 3, 4]\nn = 5\narr = [i for i in range(n)]\nprint(arr)\n\n[0, 0, 0, 0, 0]\n[0, 1, 2, 3, 4]\n\n\n\n크기가 N X M인 2차원 리스트(배열) 만들기 1\n\n2차원 배열이 필요할 때는 다음과 같이 초기화한다.\n\n\n\nn = 3\nm = 5\narr = [[0] * m for i in range(n)]\nprint(arr)\n\n[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\n\n\n\n크기가 N X M인 2차원 리스트(배열) 만들기 2\n\n\nn = 3\nm = 5\narr = [[i * m + j for j in range(m)] for i in range(n)]\nprint(arr)\n\n[[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14]]\n\n\n\n\n\n\n리스트는 기본적으로 메모리 주소를 반환한다.\n따라서 단순히 0 ∗ m ∗ n 형태로 배열을 초기화하면 안 된다.\n\n→ 이렇게 초기화를 하게 되면, n개의 0 ∗ m 리스트는 모두 같은 객체로 인식된다.\n→ 다시 말해, 같은 메모리를(동일한 리스트를) 가리키는 n개의 원소를 담는 리스트가 된다.\n\n2차원 배열을 초기화할 때는 리스트 컴프리헨션을 이용하는 것이 일반적이다.\n\n\nn = 3\nm = 5\narr1 = [[0] * m] * n\narr2 = [[0] * m for i in range(n)]\n\narr1[1][3] = 7\narr2[1][3] = 7\n\nprint(arr1)\nprint(arr2)\n\n[[0, 0, 0, 7, 0], [0, 0, 0, 7, 0], [0, 0, 0, 7, 0]]\n[[0, 0, 0, 0, 0], [0, 0, 0, 7, 0], [0, 0, 0, 0, 0]]\n\n\n\n\n\n\n자신이 원하는 임의의 값을 넣어 곧바로 사용할 수 있다.\n\n\narr = [0, 1, 2, 3, 4, 5, 6, 7, 8]\nprint(arr)\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8]"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-17_linked_list/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-17_linked_list/index.html",
    "title": "Data Structure Linked List",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n연결 리스트는 각 노드가 한 줄로 연결되어 있는 자료 구조다.\n각 노드는 (데이터, 포인터) 형태를 가진다.\n포인터: 다음 노드의 메모리 주소를 가리키는 목적으로 사용된다.\n연결 리스트는 각 노드가 한 줄로 연결되어 있는 자료 구조다.\n각 노드는 (데이터, 포인터) 형태를 가진다.\n연결성: 각 노드의 포인터는 다음 혹은 이전 노드를 가리킨다.\n\n연결 리스트를 이용하면 다양한 자료구조를 구현할 수 있다.\n예시) 스택, 큐 등\nPython은 연결 리스트를 활용하는 자료구조를 제공한다.\n그래서 연결 리스트를 실제 구현해야 하는 경우는 적지만, 그 원리에 대해서 이해해 보자.\n\n\n\n\n\n연결 리스트와 배열(array)을 비교하여 장단점을 이해할 필요가 있다.\n특정 위치의 데이터를 삭제할 때, 일반적인 배열에서는 \\(O(N)\\) 만큼의 시간이 소요된다.\n하지만, 연결 리스트를 이용하면 단순히 연결만 끊어주면 된다.\n따라서 삭제할 위치를 정확히 알고 있는 경우 \\(O(1)\\) 의 시간이 소요된다.\n\n\n\n\n\n배열에 새로운 원소를 삽입할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 아래 배열에서 인덱스 3에 원소 “59”를 삽입할 경우\n배열에 새로운 원소를 삽입할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 아래 배열에서 인덱스 3에 원소 “59”를 삽입할 경우\n배열에 새로운 원소를 삽입할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 아래 배열에서 인덱스 3에 원소 “59”를 삽입할 경우\n\n\n\n\n\n배열에 존재하는 원소를 삭제할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 아래 배열에서 인덱스 3에 해당하는 원소를 삭제하는 경우\n배열에 존재하는 원소를 삭제할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 아래 배열에서 인덱스 3에 해당하는 원소를 삭제하는 경우\n배열에 존재하는 원소를 삭제할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 아래 배열에서 인덱스 3에 해당하는 원소를 삭제하는 경우\n배열에 존재하는 원소를 삭제할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 아래 배열에서 인덱스 3에 해당하는 원소를 삭제하는 경우\n따라서, 최악의 경우 시간 복잡도는 \\(O(N)\\) 이다.\n\n\n\n\n\n삽입할 위치를 알고 있다면, 물리적인 위치를 한 칸씩 옮기지 않아도 삽입할 수 있다.\n인덱스 2의 위치에 원소를 삽입\n\n\n\n\n\n뒤에 붙일 때는 마지막 노드의 다음 위치에 원소를 넣으면 된다.\n\n마지막 위치에 새로운 원소를 추가"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html",
    "href": "docs/projects/LLFS/project_description.html",
    "title": "Description",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n알츠하이머병(AD)은 수백만 명의 미국인에게 영향을 미치는 가장 흔한 형태의 치매이다. 알츠하이머병은 기억력, 사고력 및 행동에 영향을 주지만 증상이 나타나기까지 거의 20년에 걸쳐 진행이 된다. 따라서 전 임상 단계에서 생리학을 이해하는 것이 필수적이다. 유전적 요인이 AD에 거의 50% 기여하는 것으로 추정된다. 유전자가 세포 환경을 변경하여 알츠하이머병 위험에 어떻게 기여하는지 더 잘 이해하기 위해 AD와 연관이 있는 유전자인 APOE를 보유한 사람들의 대사체를 조사했다. 대사체는 게놈과 프로테옴에서 생성된 산물을 나타낸다. 이러한 생화학 부산물은 유전적 요인과 환경적 요인 모두의 영향을 받는다. 모집단은 장수마을에 사는 Caucasian (백인) 참여자들이다.\n\n\n\nLLFS(Long Life Family Study) 프로젝트의 목적은 전사체 및 단백질체 단계를 통해 게놈에서 대사체 단계에 이르는 다단계에서 통계 및 기계 학습을 사용하여 분석 파이프라인을 구축하고 알츠하이머병에 대한 중요한 바이오마커를 식별하기 위함이다.\n\n\n\n이 시뮬레이션 연구에서는 정규분포 하에서 대사 물질 데이터를 생성하여 대사 단계에서 가상의 데이터를 생성하는 데에만 집중할 것이다. (현재, 이산 변수에 대하여 통계적으로 시뮬레이션하는 방법론 연구가 더 필요함.) 이 시뮬레이션 연구의 목표는 알츠하이머병과 비알츠하이머병과 관련된 바이오마커를 구별할 수 있는 일련의 예측인자(또는 대사물질 또는 생화학물질)를 식별하는 것이다.\n\n\n\n\n보안 문제로 인해 이 프로젝트에 사용된 실제 데이터와 전체 분석 파이프라인을 표시하기 어렵다. 따라서 시뮬레이션을 통해 대략적인 분석 파이프라인을 재현하고 시연하기 위해 가짜 데이터를 생성한다.이 글에서는 보안 문제로 인해 대략적인 분석 파이프라인을 재현하고 시연하기 위한 시뮬레이션 데이터를 준비한다. 시뮬레이션 데이터는 실제 연구를 위해 표본으로 쓰이는 데이터의 특성을 전혀 반영하지 않는다.\n이 시뮬레이션 연구에서, 이산 변수 (age 포함)와 종속 변수를 통계적으로 연관시키지 못했기 때문에 이산 변수에 대한 분석 결과가 생물학적인 사실과 많이 다를 수 있다. (참조 문헌을 찾을 예정)\n\n\n\n\n\nOperating System\n\nWindow\nUbuntu 20.04\n\nSoftware\n\nQuarto for dynamic documentation\nVS code\nR studio 2022.07.2+576\nR base 4.2.2 in the English section\nPython 3.11 in the Korean section\n\n\n\n\n\n읽기의 편의를 위해 이 프로젝트를 5개 섹션으로 나누었습니다.\n\nDescription (Current)\nData Preparation\nEDA (Exploratory Data Analysis)\nMethod1: statistical approach\nMethod2: ML Approach\nConclusion\n\n\n\n\n\n\nAlzheimer Disease (AD) is a most common form of dementia that affects millions of Americans. AD affects memory, thinking and behavior, but its progression is slow, spanning nearly two decades before the symptoms appear. Thus, it is imperative to understand the physiology at the pre-clinical stage. It is estimated that genetic factors contribute nearly 50% to AD. To better understand how genes contribute to the risk of AD by altering cellular milieu, we have examined the metabolome of individuals with the AD-related genotype, APOE. The metabolome represents the products that were generated from the genome and proteome. These biochemical products represent influences of both genetic and environmental factors. The population is Caucasian participants living in longevity village.\n\n\n\nThe objective of the Long Life Family Study (LLFS) project was to build an analysis pipeline of identifying significant biomarkers for AD using statistics and machine learning at the multi stages from the genomic to the metabolomic stage through the transcriptomic and proteomic stage.\n\n\n\nIn this simulation study, I will focus only on generating fake data at the metabolomic stage by generating data under multivariate normal distributions. The aim of this simulation study is to identify a set of predictors (or metabolites or bio-chemicals) that will enable to differentiate bio-markers that are associated with AD vs. non-AD.\n\n\n\n\nIn this article, due to security concerns, it is difficult to display the real data and the entire analysis pipeline used in this project. Therefore, I prepared simulated data to reproduce and demonstrate a rough analysis pipeline. The simulated data does not reflect the characteristics of the truely sampled data used in the LLFS at all.\nIn this simulation, since the discrete variables(including age) and the dependent variable could not be statistically associated, the analysis result for the discrete variables could be very different from the biological fact (will find references for simulating discrete variables).\n\n\n\n\n\nOperating System\n\nWindow\nUbuntu 20.04\n\nSoftware\n\nQuarto for dynamic documentation\nVS code\nR studio 2022.07.2+576\nR base 4.2.2 in the English section\nPython 3.11 in the Korean section\n\n\n\n\n\nFor the convenience of reading, I divided this proejcts into 5 sections:\n\nDescription (Current)\nData Preparation\nEDA (Exploratory Data Analysis)\nMethod1: statistical approach\nMethod2: ML Approach\nConclusion"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#data-collection",
    "href": "docs/projects/LLFS/project_description.html#data-collection",
    "title": "Description",
    "section": "Data Collection",
    "text": "Data Collection\n\n\n\n\nflowchart TB\n    subgraph Data_Collection\n        direction TB\n        multi-centered_medical_centers---\n        set_inclusion\\exclusion_criteria---\n        patient_visit---\n        blood_sampling---\n        store_samples_in_labs\n    end\n    subgraph Mass_Spectrometry\n        direction LR\n        conduct_mass_spectrometry---\n        digitalization---\n        store_in_database_system    \n    end\n    subgraph Data_Transfer\n        direction TB\n        subgraph Data\n            direction LR\n            metabolome_data---\n            clinical_data---\n            demographic_data---\n            dietary_habit_data\n        end\n        Data---csv_or_excel_format\n    end\nData_Collection-->Mass_Spectrometry-->Data_Transfer"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#data-qc-quality-control",
    "href": "docs/projects/LLFS/project_description.html#data-qc-quality-control",
    "title": "Description",
    "section": "Data QC (Quality Control)",
    "text": "Data QC (Quality Control)\n\n\n\n\nflowchart LR\n    subgraph Data_Quality_Control\n        direction TB\n        identify_anomaly_data---\n        identify_missing_values\n        subgraph Missing_Value_Analysis\n            direction LR\n            MCAR---\n            MAR---\n            MNAR\n        end\n        either_imputation_or_omission---\n        communication_with_labs---\n        set_data_inclusion/exclusion_criteria\n    end\n    identify_missing_values---Missing_Value_Analysis---either_imputation_or_omission\n    subgraph Data_Preprocessing\n        direction TB\n        data_transformation---\n        log_transformation---\n        min_max_normalization---\n        standardization\n    end\n\nData_Quality_Control-->Data_Preprocessing\n\n\n\n\n\n\n\n\n\normalization is useful when there are no outliers as it cannot cope up with them. Usually, we would scale age and not incomes because only a few people have high incomes but the age is close to uniform. vs Standardization can be helpful in cases where the data follows a Gaussian distribution. However, this does not have to be necessarily true. Geometrically speaking, it translates the data to the mean vector of original data to the origin and squishes or expands the points if std is 1 respectively. We can see that we are just changing mean and standard deviation to a standard normal distribution which is still normal thus the shape of the distribution is not affected.\nStandardization does not get affected by outliers because there is no predefined range of transformed features."
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#data-analytics",
    "href": "docs/projects/LLFS/project_description.html#data-analytics",
    "title": "Description",
    "section": "Data Analytics",
    "text": "Data Analytics\n\n\n\n\nflowchart TB\n    subgraph data_analytics\n        direction LR\n        exploratory_data_analysis---\n        statistical_analysis---\n        machine_learning\n    end"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#eda-exploratory-data-analysis",
    "href": "docs/projects/LLFS/project_description.html#eda-exploratory-data-analysis",
    "title": "Description",
    "section": "EDA (Exploratory Data Analysis)",
    "text": "EDA (Exploratory Data Analysis)"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#data-mining",
    "href": "docs/projects/LLFS/project_description.html#data-mining",
    "title": "Description",
    "section": "Data Mining",
    "text": "Data Mining\n\nStatistical Analysis\n\n\nMachine Learning"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#reporting",
    "href": "docs/projects/LLFS/project_description.html#reporting",
    "title": "Description",
    "section": "Reporting",
    "text": "Reporting\n\n\n\n\nflowchart TB\n    subgraph report_to_faculty_members\n        direction TB\n        share_with_medical_doctors---\n        share_with_epidemiologists---\n        share_with_neurologists---\n        share_with_biologists---\n        share_with_biostatisticians---\n        share_with_bioinformatician\n    end"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#conclusion",
    "href": "docs/projects/LLFS/project_description.html#conclusion",
    "title": "Description",
    "section": "Conclusion",
    "text": "Conclusion"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-18_array/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-18_array/index.html",
    "title": "Data Structure (2) Array",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n가장 기본적인 자료구조다.\n여러 개의 변수를 담는 공간으로 이해할 수 있다.\ndata가 연속적으로 들어가는 형태여서 배열은 인덱스(index)가 존재하며, 인덱스는 0부터 시작한다.\n특정한 인덱스에 직접적으로 접근 가능하여 수행 시간은 빠른 속도인 \\(O(1)\\) 이다.\n\n\n\n\n\n컴퓨터의 메인 메모리에서 배열의 공간은 연속적으로 할당된다.\n장점: Cache memory(속도면에서, \\(RAM<Cache<CPU\\), 공간면에서, \\(CPU<RAM<Cache\\), CPU옆에 위치) 히트(RAM에 있는 data를 Cache에 일부 옮기는 현상) 가능성이 높으며, 조회가 빠르다. 배열 같은 경우는 공간적으로 또는 연속적으로 붙어 있기때문에 cache memory 묶어서 옮길 수 있다.\n\nCache Hit: 원하는 data가 Cache Memory존재하는 것을 의미.\n특정 index에 접근하는 속도가 매우 빠르다, \\(O(1)\\).\n\n단점: 배열의 크기를 미리 지정해야 하는 것이 일반적이므로, 데이터의 추가 및 삭제에 한계가 있다.\n\n\n\n\n\n컴퓨터의 메인 메모리(RAM)상에서 주소가 연속적이지 않다.\n배열과 다르게 크기가 정해져 있지 않고, 리스트의 크기는 동적으로 변경 가능하다.\n장점: 포인터(pointer)를 통해 다음 데이터의 위치를 가리킨다는 점에서 삽입과 삭제가 간편하다.\n단점: 원소를 검색할 때는 포인터가 앞에서부터 원소를 찾아야 하므로, 데이터 검색 속도가 느리다.\n\n\n\n\n파이썬의 리스트(List) 자료형\n\n파이썬에서는 리스트 자료형을 제공한다. (컴퓨터 공학에서의 연결 리스트와는 다른 의미)\n일반적인 프로그래밍 언어에서의 배열로 이해할 수 있다. 그러므로, 파이썬의 리스트는 배열이라고 생각해야한다.\n\n파이썬의 리스트는 배열처럼 임의의 인덱스를 이용해 직접적인 접근이 가능하다.\n\n파이썬의 리스트 자료형은 동적 배열이다.\n\nappend를 이용해 데이터를 삽입할 때 배열의 용량이 가득 차면, 자동으로 크기를 증가시킨다.\n\n내부적으로 포인터(pointer)를 사용하여, 연결 리스트의 장점도 가지고 있다.\n배열(array) 혹은 스택(stack)의 기능이 필요할 때 리스트 자료형을 그대로 사용할 수 있다.\n큐(queue)의 기능을 제공하지 못한다. (비효율적)\n\n\n\n\n\n파이썬에서는 임의의 크기를 가지는 배열을 만들 수 있다.\n일반적으로 리스트를 초기화할 때 리스트 컴프리헨션(list comprehension)이 자주 사용된다. (매우 편리)\n크기가 N인 1차원 배열을 만드는 방법은 다음과 같다.\n\n\n\nCode\n# [0, 0, 0, 0, 0]\nn = 5\narr = [0] * n\nprint(arr)\n\n# [0, 1, 2, 3, 4]\nn = 5\narr = [i for i in range(n)]\nprint(arr)\n\n\n[0, 0, 0, 0, 0]\n[0, 1, 2, 3, 4]\n\n\n\n크기가 \\(N \\times M\\) 인 2차원 리스트(배열) 만들기 1\n\n2차원 배열이 필요할 때는 다음과 같이 초기화한다.\n\n\n\n\nCode\nn = 3\nm = 5\narr = [[0] * m for i in range(n)]\nprint(arr)\n\n\n[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]\n\n\n\n크기가 \\(N \\times M\\) 인 2차원 리스트(배열) 만들기 2\n\n\n\nCode\nn = 3\nm = 5\narr = [[i * m + j for j in range(m)] for i in range(n)]\nprint(arr)\n\n\n[[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14]]\n\n\n\n\n\n\n리스트는 기본적으로 메모리 주소를 반환한다.\n따라서 단순히 [[0]∗m]∗n 형태로 배열을 초기화하면 안 된다.\n이렇게 초기화를 하게 되면, n개의 [0]∗m 리스트는 모두 같은 객체로 인식된다.\n다시 말해, 같은 메모리를(동일한 리스트를) 가리키는 n개의 원소를 담는 리스트가 된다.\n2차원 배열을 초기화할 때는 리스트 컴프리헨션을 이용하는 것이 일반적이다.\n\n\n\nCode\nn = 3\nm = 5\narr1 = [[0] * m] * n # 잘못된 방식\narr2 = [[0] * m for i in range(n)] # 옳은 방식\n\narr1[1][3] = 7\narr2[1][3] = 7\n\nprint(arr1)\nprint(arr2)\n\n\n[[0, 0, 0, 7, 0], [0, 0, 0, 7, 0], [0, 0, 0, 7, 0]]\n[[0, 0, 0, 0, 0], [0, 0, 0, 7, 0], [0, 0, 0, 0, 0]]\n\n\n\n\n위의 결과를 보면, 잘못된 방식으로 초기화된 배열 arr1은 [[0, 0, 0, 7, 0], [0, 0, 0, 7, 0], [0, 0, 0, 7, 0]]와 같이 7의 삽입이 모든 행에 걸쳐서 적용됐다. 반면에, 올바른 방식으로 초기화된 arr2는 [[0, 0, 0, 0, 0], [0, 0, 0, 7, 0], [0, 0, 0, 0, 0]]는 의도된 대로 하나의 element가 [1][3] index에 삽입이 된 것을 볼 수 있다.\n\n\n\n\n\n\n자신이 원하는 임의의 값을 넣어 곧바로 사용할 수 있다.\n\n\n\nCode\narr = [0, 1, 2, 3, 4, 5, 6, 7, 8]\nprint(arr)\n\n\n[0, 1, 2, 3, 4, 5, 6, 7, 8]"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-18_linked_list/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-18_linked_list/index.html",
    "title": "Data Structure (3) Linked List",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n연결 리스트는 각 노드가 한 줄로 연결되어 있는 자료 구조다.\n각 노드는 (데이터, 포인터) 형태를 가진다.\n포인터: 다음 노드의 메모리 주소를 가리키는 목적으로 사용된다.\n연결성: 각 노드의 포인터는 다음 혹은 이전 노드를 가리킨다.\n\n연결 리스트를 이용하면 다양한 자료구조를 구현할 수 있다.\n\n예시) 스택, 큐 등을 구현 가능\n\nPython은 연결 리스트를 활용하는 자료구조를 제공한다.\n연결 리스트를 실제 구현해야 하는 경우는 적지만, 그 원리 이해는 자료 구조와 클래스를 작성하는데 도움이 된다.\n\n\n\n\n\n연결 리스트와 배열(array)을 비교하여 장단점을 이해할 필요가 있다.\n특정 위치의 데이터를 삭제할 때, 일반적인 배열에서는 \\(O(N)\\) 만큼의 시간이 소요된다.\n하지만, 연결 리스트를 이용하면 단순히 연결만 끊어주면 된다.\n따라서 삭제할 위치를 정확히 알고 있는 경우 \\(O(1)\\) 의 시간이 소요된다.\n하지만 삭제할 위치를 정확히 알아내기 위해 앞의 코드를 자세히 보게 되는 소요 시간이 증가할 수 있다.\n\n\n\n\n배열에 새로운 원소를 삽입할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 배열에서 인덱스 3에 원소 “59”를 삽입할 경우, 인덱스 4 이후의 공간에 있는 데이터를 한칸씩 밀어내는 \\(O(n)\\) 만큼 소요\n\n\n\n\n\n배열에 존재하는 원소를 삭제할 때, 최악의 경우 시간 복잡도를 계산하여라.\n예시) 배열에서 인덱스 3에 해당하는 원소를 삭제한 후 데이터를 한칸 씩 당겨 이동 시키는 \\(O(n)\\) 만큼 소요\n따라서, 최악의 경우 시간 복잡도는 \\(O(N)\\) 이다.\n\n\n\n\n\n삽입할 위치를 알고 있다면, 물리적인 위치를 한 칸씩 옮기지 않아도 삽입할 수 있다.\n인덱스 2의 위치에 원소를 삽입할 경우 인덱스 1의 Node에서 인덱스 2에 위치할 데이터를 가리키고 인덱스 2의 node가 인덱스 3의 node를 가리키도록 만들면 된다.\n\n\n\n\n\n삭제할 위치를 알고 을 경우 연결 리스트 사용\n인덱스 2의 위치에 원소를 삭제할 경우 인덱스 1의 Node가 인덱스 3의 node를 가리키게 만들면 됨\n\n\n\n\n\n뒤에 붙일 때는 남는 공간에 마지막 노드의 다음 위치에 원소를 할당 시키면 된다.\n마지막 위치에 새로운 원소를 추가\n\n\n\nCode\nclass Node:\n    def __init__(self, data):\n        self.data = data # 데이터 할당\n        self.next = None # 다음 노드\n\n\nclass LinkedList:\n    def __init__(self):\n        self.head = None # 첫 번째  node\n\n    # 가장 뒤에 노드 삽입\n    def append(self, data):\n        \n        if self.head == None: # 헤드(head)가 비어있는 경우\n            self.head = Node(data)\n            return\n        \n        currrent = self.head # 그렇지 않다면 마지막 노드에 새로운 노드 추가\n\n        while currrent.next is not None: # 다음 노드가 없을 때까지  \n            currrent = currrent.next # 다음 원소로 넘어감\n        currrent.next = Node(data) # 다음 노드가 없으면 새로운 데이터를 추가 \n\n    # 모든 노드를 하나씩 출력\n    def show(self):\n        currrent = self.head\n        while currrent is not None:\n            print(currrent.data, end=\" \")\n            currrent = currrent.next\n\n    # 특정 인덱스(index)의 노드 찾기\n    def search(self, index):\n        node = self.head\n        for _ in range(index):\n            node = node.next\n        return node\n\n    # 특정 인덱스(index)에 노드 삽입\n    def insert(self, index, data):\n        new = Node(data)\n        # 첫 위치에 추가하는 경우\n        if index == 0:\n            new.next = self.head\n            self.head = new\n            return\n        # 삽입할 위치의 앞 노드\n        node = self.search(index - 1)\n        next = node.next\n        node.next = new\n        new.next = next\n\n    # 특정 인덱스(index)의 노드 삭제\n    def remove(self, index):\n        # 첫 위치를 삭제하는 경우\n        if index == 0:\n            self.head = self.head.next\n            return\n        # 삭제할 위치의 앞 노드\n        front = self.search(index - 1)\n        front.next = front.next.next\n\n\nlinked_list = LinkedList()\ndata_list = [3, 5, 9, 8, 5, 6, 1, 7]\n\nfor data in data_list:\n    linked_list.append(data)\n\nprint(\"전체 노드 출력:\", end=\" \")\nlinked_list.show()\n\nlinked_list.insert(4, 4)\nprint(\"\\n전체 노드 출력:\", end=\" \")\nlinked_list.show()\n\nlinked_list.remove(7)\nprint(\"\\n전체 노드 출력:\", end=\" \")\nlinked_list.show()\n\nlinked_list.insert(7, 2)\nprint(\"\\n전체 노드 출력:\", end=\" \")\nlinked_list.show()\n\n\n전체 노드 출력: 3 5 9 8 5 6 1 7 \n전체 노드 출력: 3 5 9 8 4 5 6 1 7 \n전체 노드 출력: 3 5 9 8 4 5 6 7 \n전체 노드 출력: 3 5 9 8 4 5 6 2 7"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-18_python_list/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-18_python_list/index.html",
    "title": "Data Structure (4) Python List",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\nTable 1: a list of the list functions in Python\n\n\n\n\n\n\n\n\n\nNumber\nMethods\nTime Complexity\nExamples\nDescription\n\n\n\n\n1\nIndexing\n\\(O(1)\\)\narr[i]\n특정 i th 인덱스의 값 반환\n\n\n2\nStoring\n\\(O(1)\\)\narr[i] = 1\n특정 i th 인덱스에 값 (=1) 할당\n\n\n3\nAppend\n\\(O(1)\\)\narr.append(5)\n리스트의 가장 뒤에 데이터 추가\n\n\n4\nPop\n\\(O(1)\\)\narr.pop()\n리스트의 가장 뒤에서 원소 꺼내기\n\n\n5\nLength\n\\(O(1)\\)\nlen(arr)\n리스트의 길이 얻기\n\n\n6\nClear\n\\(O(1)\\)\narr.clear()\n리스트 내 모든 원소 제거하기\n\n\n7\nSlicing\n\\(O(b-a)\\)\narr[a:b]\n리스트에서 인덱스 a부터 b-1까지의 원소만 꺼내 새 리스트 만들기\n\n\n8\nExtend\n\\(O(len(other))\\)\narr.extend(list2)\n기존 리스트, list1에 다른 리스트, list2를 이어 붙이기\n\n\n9\nInsertion\n\\(O(N)\\)\narr.insert(index, x)\n특정 인덱스에 데이터 x를 삽입하기, 즉 i th index를 뒤로 밀고 추가\n\n\n10\nDelete\n\\(O(N)\\)\ndel arr[index]\n특정 인덱스의 데이터 삭제하기\n\n\n11\nConstruction\n\\(O(len(other))\\)\narr = list(other)\n다른 자료구조의 원소들을 이용해 리스트로 만들기\n\n\n12\nIn\n\\(O(N)\\)\nx in arr\n데이터 x가 리스트에 존재하는지 확인\n\n\n13\nNot in\n\\(O(N)\\)\nx not in arr\n데이터 x가 리스트에 존재하지 않는지 확인\n\n\n14\nPop\n\\(O(N)\\)\narr.pop(index)\n특정 인덱스의 데이터를 꺼내기 / 단, 가장 뒤 원소를 꺼내는 경우 O(1)\n\n\n15\nRemove\n\\(O(N)\\)\narr.remove(x)\n리스트 내에 존재하는 데이터 x를 삭제\n\n\n16\nCopy\n\\(O(N)\\)\narr.copy()\n리스트를 복제\n\n\n17\nMin\n\\(O(N)\\)\nmin(arr)\n리스트 내에 존재하는 가장 작은 원소\n\n\n18\nMax\n\\(O(N)\\)\nmax(arr)\n리스트 내에 존재하는 가장 큰 원소\n\n\n19\nIteration\n\\(O(N)\\)\nfor x in arr\n리스트 내에 존재하는 모든 원소 순회\n\n\n20\nMultiply\n\\(O(k*N)\\)\narr * k\n리스트를 k번 반복하여 길게 만들기\n\n\n21\nSort\n\\(O(NlogN)\\)\narr.sort()\n리스트 내 존재하는 원소를 정렬\n\n\n\n\nSee Table 1.\n\n1~6: 파이썬의 list는 동적 배열의 특징이 있다. 시간 복잡도는 모두 \\(O(1)\\) 이다.\n\n3~4: 사실상 stack의 기능과 동일\n\n\n\n\nCode\narr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(arr[4]) # 인덱싱(indexing)\n\n# 저장(storing)\narr[7] = 10\n\n# 뒤에 붙이기(append)\narr.append(10)\nprint(arr)\n\n# 뒤에서 꺼내기(pop)\narr.pop()\nprint(arr)\n\n# 길이(length)\nprint(len(arr))\n\n# 배열 비우기(clear)\narr.clear()\nprint(arr)\n\n\n4\n[0, 1, 2, 3, 4, 5, 6, 10, 8, 9, 10]\n[0, 1, 2, 3, 4, 5, 6, 10, 8, 9]\n10\n[]\n\n\n\n7~11\n\n\n\nCode\narr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nnew_arr = arr[2:7] # 슬라이싱(slicing)\nprint(new_arr)\n\narr1 = [0, 1, 2, 3, 4]\narr2 = [5, 6, 7, 8, 9]\narr1.extend(arr2) # 확장(extend)\nprint(arr1)\n\narr = [0, 1, 2, 3, 4]\narr.insert(3, 7) # 삽입(insertion)\nprint(arr)\n\ndel arr[3] # 삭제(delete)\nprint(arr)\n\ndata = {7, 8, 9}\narr = list(data) # 다른 자료구조로 리스트 만들기\nprint(arr)\n\n\n[2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n[0, 1, 2, 7, 3, 4]\n[0, 1, 2, 3, 4]\n[8, 9, 7]\n\n\n\n12~16\n\n\n\nCode\narr = [0, 1, 2, 3, 4]\n\nprint(3 in arr) # 존재 여부(in)\nprint(7 not in arr) # 비존재 여부(not in)\n\narr.pop(1) # 인덱스 1에 해당하는 원소 꺼내기(pop)\nprint(arr)\n\narr.remove(3) # 리스트의 특정 원소 삭제(remove)\nprint(arr)\n\nnew_arr = arr.copy() # 복제(copy)\nprint(new_arr)\n\n\nTrue\nTrue\n[0, 2, 3, 4]\n[0, 2, 4]\n[0, 2, 4]\n\n\n\n17~21\n\n\n\nCode\narr = [3, 5, 4, 1, 2]\n\nprint(min(arr)) # 최소(min)\nprint(max(arr)) # 최대(max)\n\nfor x in arr: # 원소 순회(iteration)\n    print(x, end=\" \")\nprint()\n\nprint(arr * 2) # 리스트 반복하여 곱하기(multiply)\n\narr.sort() # 정렬(sorting)\nprint(arr)\n\n\n1\n5\n3 5 4 1 2 \n[3, 5, 4, 1, 2, 3, 5, 4, 1, 2]\n[1, 2, 3, 4, 5]"
  },
  {
    "objectID": "docs/projects/LLFS/data_preparation.html",
    "href": "docs/projects/LLFS/data_preparation.html",
    "title": "Data Preparation",
    "section": "",
    "text": "flowchart TB\n    subgraph Simulation\n        direction TB\n        subgraph assign_frequency\n        direction LR\n        Assign_probabilities     \n        end\n        subgraph generate_multivariate_normal_distribution\n            direction TB\n            determine_sample_size ---\n            determine_number_of_columns---\n            create_covariate_correlation_matrix---\n            apply_noise_to_the_covariance_matrix\n        end\n        subgraph create_weight_matrix\n            direction LR\n            apply_some_noise_to_the_covariance_matrix\n        end\n        subgraph calculate_score_matrix\n            direction LR\n            matrix_multiplication_covariance_matrix_weight_matrix---\n            used_logistic_function\n        end\n        subgraph create_response_variable\n            direction LR\n            result_of_logistic_function\n        end\n        subgraph creation_some_discrete_variables\n            direction LR       \n        end\n        subgraph join\n            direction LR\n            all_the_matrix_and_vector_created       \n        end\n        assign_frequency-->generate_multivariate_normal_distribution-->create_weight_matrix-->\n        calculate_score_matrix-->create_response_variable-->creation_some_discrete_variables-->\n        join\n    end\n    subgraph data_analytics\n        direction LR\n        exploratory_data_analysis---\n        statistical_analysis---\n        machine_learning\n    end\n    subgraph conclusion\n        direction LR\n    end\n    Simulation-->data_analytics-->conclusion\n\n\n\n\n\n\n\n\n\n\n\nKorean\n\n\n\n\nEnglish"
  },
  {
    "objectID": "docs/projects/LLFS/data_preparation.html#준비중",
    "href": "docs/projects/LLFS/data_preparation.html#준비중",
    "title": "Data Preparation",
    "section": "1 준비중",
    "text": "1 준비중\nplease, read the English section first."
  },
  {
    "objectID": "docs/projects/LLFS/data_preparation.html#data-preparation",
    "href": "docs/projects/LLFS/data_preparation.html#data-preparation",
    "title": "Data Preparation",
    "section": "2 Data Preparation",
    "text": "2 Data Preparation\n\n2.1 Package Loading and Option Settings\n\n\nShow the code\nrm(list=ls())\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(glmnet)\nlibrary(MASS)\nlibrary(mixOmics)\nset.seed(20230121) # the date writing this\nknitr::opts_chunk$set(message=FALSE,warning=FALSE)\n\n\n\n\n2.2 Global Functions & Variables\n\n\nShow the code\n## Function List\n\nscale_function=function(vector=x,min=a,max=b,method=\"customized\"){\n    if(method==\"min-max\"){\n        result=(vector-min(vector))(max(vector)-min(vector))\n    }else if(method==\"customized\"){\n        result=(max-min)*(vector-min(vector))/(max(vector)-min(vector))+min\n    }else{\n        result=(vector-mean(vector))/sd(vector)\n    }\n  return(result)\n}\n\ngenotype_data_generator=function(temp_data,fun=scale_function,start_quantile,end_quantile){\n    temp=temp_data%>%\n    pull%>%\n    fun(vector=.,min=0,max=1,method=\"customized\")\n    return(ifelse(temp>temp%>%quantile(.,probs=start_quantile)&temp<temp%>%quantile(.,probs=end_quantile),1,0))\n}\n\n# the number of samples\nsample_size <- 1000\n# the number of predictors\npredictor_size <- 5000\n# the number of groups\ngroup_size <- sample(6:10,1) # at least more than 6, the number of the genotypes\n# the number of predictors truly associated with a response variable\nsignificant_predictors <- floor(predictor_size*sample((50:100)/1000,1)) \n\n## set the predictors associated with an outcome\n### the number of predictors positively associated with an outcome\n### the number of predictors negatively associated with an outcome\npositively_associated_predictors<-floor(significant_predictors*0.4) \nnegatively_associated_predictors<-significant_predictors-positively_associated_predictors \n\n## set the proportion of the groups in which the predictors are correlated with one another\n### randomly sampling proportions to become their sum equal to 1\ngroup_proportion_list<-sample(seq(1,1+2*(100-group_size)/group_size,\n                            by=2*(100-group_size)/(group_size*(group_size-1)))/100,\n                        group_size,replace=FALSE)%>%round(3) \nnames(group_proportion_list)<-paste0(\"group\",1:length(group_proportion_list))\n### initialize a matrix with a size as sample_size by predictor_size\npredictor_matrix <- matrix(0, ncol = predictor_size, nrow = sample_size)\n### initialize a data frame and assign meta information used to generate simulated data\ngroup_meta_data<-\n    data.frame(\n        group_name=c(names(group_proportion_list)),\n        proportion=group_proportion_list)%>%\n        mutate(\n            group_n=(predictor_size*group_proportion_list)%>%round(0), # the number of predictors within each group \n            first_index=c(1,cumsum(group_n[-length(group_proportion_list)])+1), # the 1st index of predictors in each group\n            last_index=cumsum(group_n), # the last index of predictors in each group\n            group_correlation=sample((0:700)/1000,length(group_proportion_list),replace=TRUE), # within-group correlations among the within-group predictors\n            group_effect=sample((-40:30)/100,length(group_proportion_list),replace=TRUE)) # effect of each group on an outcome variable\n### set a group effect as 0.7 into a group with the smallest group number \ngroup_meta_data[which.min(group_meta_data[,\"group_n\"]),\"group_effect\"]<-0.7\n\n### set a group effect as -0.5 into a group with the second smallest group number \ngroup_meta_data[group_meta_data[,\"group_n\"]==(sort(group_meta_data[,\"group_n\"])[2]),\"group_effect\"]<-(-0.5)\n\n\n\n# initialize a data matrix to assign simulated values\n## add some noise to data\ndata<-matrix(rnorm(sample_size*predictor_size,mean=0,sd=0.01), \n             nrow = sample_size, ncol = predictor_size)\n\n# initialize a covariance matrix to assign simulated values\ncovariance_matrix<-matrix(rnorm(predictor_size*predictor_size,mean=0,sd=0.05),\n                          nrow=predictor_size, ncol=predictor_size)\nbeta_coefficients <- rnorm(predictor_size,0,0.05)\n\n\n\n\n2.3 Data Simulation\n\n\nShow the code\n# generate simulation data using multivariate normal distribution\nfor (i in 1:nrow(meta_data)) {\n    \n    group_range <- meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]\n    for (j in group_range){\n        for(k in group_range){\n        covariance_matrix[j, k] <- meta_data[i, \"group_correlation\"]\n        }\n    }\n    #covariance_matrix[group_range, group_range]+meta_data[i, \"group_correlation\"]    \n    diag(covariance_matrix) <- 1\n    data[, group_range] <- \n        mvrnorm(n = sample_size, \n                mu = rep(0,meta_data[i,\"group_n\"]),\n                Sigma = covariance_matrix[group_range, group_range])\n    data=as.data.frame(data)\n    beta_coefficients[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]] <-\n        beta_coefficients[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]]+\n        meta_data[i,\"group_effect\"]\n    predictor_names<-paste0(meta_data[i,\"group_name\"],\"_\",1:meta_data[i,\"group_n\"])\n    names(beta_coefficients)[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]] <- predictor_names\n    names(data)[meta_data[i, \"first_index\"]:meta_data[i, \"last_index\"]]<-predictor_names\n        \n}\nscore=as.matrix(data)%*%beta_coefficients # score of each sample\n\n# logistic function to get a probability, intercept = 0, \n## set probabilities-0.2 to apply noise and negative probabilities into 0\nprobabilities <- ((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05))%>%\n    ifelse(.>1,1,\n    ifelse(.<0,0,.))\nresponse <- rbinom(sample_size, 1, probabilities) \n\n\nanswer_list<-list(\n    'sample size'=sample_size,\n    'predictor size'=predictor_size,\n    'group size'=group_size,\n    'significant predictors'=significant_predictors,\n    'positively associated predictors'=positively_associated_predictors,\n    'negatively associated predictors'=negatively_associated_predictors,\n    'group proportion list'=group_proportion_list,\n    'group meta data'=group_meta_data,\n    'data noise intensity'=c('distribution'='rnorm','mean'=0,'sd'=0.01),\n    'covariance noise intensity'=c('distribution'='rnorm','mean'=0,'sd'=0.05),\n    'effect noise intensity on response'=c('distribution'='rnorm','mean'=0,'sd'=0.05),\n    'link function' = 'logistic function',\n    'link function noise intensity' = c('distribution'='rnorm','mean'=0.2,'sd'=0.05),\n    'age_distirbution'='used data of a variable with the highest effect on outcome',\n    'sex_distribution'='rbinom(n=sample size,p=0.5)',\n    'genotype_distirbution'=list(\n        'e2/e2'='8%, the bottom 8 % of the percentiles of the outcome probabilities with noises',\n        'e2/e3'='15%, the bottom 23 % of the percentiles of the outcome probabilities with noises',\n        'e2/e4'='8.6%, the bottom 31.6 % of the percentiles of the outcome probabilities with noises',\n        'e3/e3'='30%, the bottom 61.6 % of the percentiles of the outcome probabilities with noises',\n        'e3/e4'='25%, the bottom 86.6 % of the percentiles of the outcome probabilities with noises',\n        'e4/e4'='13.4%, above the bottom 86.6 % of the percentiles of the outcome probabilities with noises'),\n    'treatment_distirbution'=list(\n        'control' = '70%, the bottom 70 % of the percentiles of the outcome probabilities with noises',\n        'treatment1'='15%, the bottom 85 % of the percentiles of the outcome probabilities with noises',\n        'treatment2'='10%, bottom 95 % of the percentiles of the outcome probabilities with noises',\n        'treatment3'='5%, above the bottom 8 % of the percentiles of the outcome probabilities with noises'\n    ));answer_list\n\n# used data of a variable with the highest effect on outcome\nage_distribution=data%>%\ndplyr::select(grep(group_meta_data[,\"group_name\"][group_meta_data[,\"group_effect\"]==0.7],names(data))[1])%>%\npull()%>%\nscale_function(vector=.,min=65,max=105,method=\"customized\")%>%round(0)\n\n#rbinom(n=sample size,p=0.5)\nsex_distribution=rbinom(sample_size,1,0.5)\n\ngenotype_quantile_data<-quantile((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05),\nprobs=cumsum(c(0.08,0.15,0.086,0.30,0.25)))\ntreatment_quantile_data<-quantile((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05),\nprobs=cumsum(c(0.7,0.15,0.1)))\n\ngenotype_distribution<-data.frame(\n    probability=((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05)))%>%\n    mutate(\n        genotype=ifelse(probability<genotype_quantile_data[1],'e2e2',\n        ifelse(probability<genotype_quantile_data[2],'e2e3',\n        ifelse(probability<genotype_quantile_data[3],'e2e4',\n        ifelse(probability<genotype_quantile_data[4],'e3e3',\n        ifelse(probability<genotype_quantile_data[5],'e3e4','e4e4'))))))\ntreatment_distribution<-data.frame(\n    probability=((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05)))%>%\n    mutate(\n        treatment=ifelse(probability<treatment_quantile_data[1],'control',\n        ifelse(probability<treatment_quantile_data[2],'trtmnt1',\n        ifelse(probability<treatment_quantile_data[3],'trtmnt2','trtmnt3'))))\n\nphenotype_data<-\n    data.frame(\n        id=1:sample_size,\n        outcome=response,\n        probabilities=probabilities,\n        age=age_distribution,\n        sex=sex_distribution,\n        genotype=genotype_distribution[,'genotype'],\n        treatment=treatment_distribution[,'treatment'])\n\n\nall_data=inner_join(phenotype_data,data%>%mutate(id=1:n()),by=\"id\")\n\n#write_rds(all_data,\"./docs/projects/data/llfs_simulated_data.rds\")\n\n\n\n\n2.4 Load Data\n\n\nShow the code\ndatapath<-\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rds\"\n#datapath<-\"C:/Users/kkm/Desktop/projects/website/docs/projects/data/llfs_simulated_data.rds\"\n simulated_data=read_rds(datapath)%>%\n     dplyr::select(-1,-probabilities)\n all_data=simulated_data%>%\n mutate(\n      outcome=ifelse(outcome==0,\"negative\",\"positive\"),\n      outcome=factor(outcome,levels=c(\"negative\",\"positive\")),\n      sex=ifelse(sex==0,\"man\",\"woman\"),\n      sex=factor(sex,levels=c(\"man\",\"woman\")),\n      treatment=ifelse(treatment==0,\"trmnt1\",ifelse(treatment==1,\"trmnt2\",\"trmnt3\")),\n      treatment=factor(treatment,levels=c(\"trmnt1\",\"trmnt2\",\"trmnt3\")),\n      genotype=ifelse(genotype==0,\"e2/e2\",\n      ifelse(genotype==1,\"e2/e3\",\n      ifelse(genotype==2,\"e2/e4\",\n      ifelse(genotype==3,\"e3/e3\",\n      ifelse(genotype==4,\"e3/e4\",\"e4/e4\"))))),\n      genotype=factor(genotype,levels=c(\"e2/e2\",\"e2/e3\",\"e2/e4\",\"e3/e3\",\"e3/e4\",\"e4/e4\"))\n      )\n names(all_data)[6:ncol(all_data)]<-paste0(\"meta\",1:predictor_size)"
  },
  {
    "objectID": "docs/projects/LLFS/data_preparation.html#data-description",
    "href": "docs/projects/LLFS/data_preparation.html#data-description",
    "title": "Data Preparation",
    "section": "3 Data Description",
    "text": "3 Data Description\nThis data include 1000 samples and 5005 variables:\n\noutcome: a disease status (negative, positive), negative is an affected status, positive is an unaffected status, and the reference group is negative.\nage: an age\nsex: a sex status (man, woman) and the reference group is man.\ntreatment: a treatment for the disease (control, trtmnt3, trtmnt1, trtmnt2) and the reference group is trtmnt3.\ngenotype: a genotype of APOE.\n\nthe apolipoprotein \\(\\epsilon\\) (APOE) is a protein produced in the metabolic pathway of fats in mammals, a genotype of which seems to be related to Alzheimer’s disease (AD). APOE is polymorphic and has three major alleles, \\(\\epsilon 2\\) (e2), \\(\\epsilon 3\\)(e3), and \\(\\epsilon 4\\) (e4). The statistics of the polymorphism are 8.4% for e2, 77.9% for e3, and 13.7% for e4 in worldwide allel frequency, respectively. It is known that the e2, e3, and e4 allels are associated with the protective factor, the neutral one, and the risk one with regard to AD. However, this finding has not been replicated in a large population. Therefore, it is known that we do not know their true associations with AD in the true population. (from Wiki)\nThere are 6 combinations of the genotypes:\n\ne2/e2\ne2/e3\ne2/e4\ne3/e3 (reference group)\ne3/e4\ne4/e4\n\n\nmeta1 ~ meta5000: a list of metabolites that were blood-sampled from the APOE carriers."
  },
  {
    "objectID": "docs/projects/LLFS/eda.html",
    "href": "docs/projects/LLFS/eda.html",
    "title": "EDA",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\nplease, read the English section first.\n\n\n\n\n\n\n\n\nCode\nscale_function=function(vector=x,min=a,max=b,method=\"customized\"){\n    if(method==\"min-max\"){\n        result=(vector-min(vector))(max(vector)-min(vector))\n    }else if(method==\"customized\"){\n        result=(max-min)*(vector-min(vector))/(max(vector)-min(vector))+min\n    }else{\n        result=(vector-mean(vector))/sd(vector)\n    }\n  return(result)\n}\n\ngenotype_data_generator=function(temp_data,fun=scale_function,start_quantile,end_quantile){\n    temp=temp_data%>%\n    pull%>%\n    fun(vector=.,min=0,max=1,method=\"customized\")\n    return(ifelse(temp>temp%>%quantile(.,probs=start_quantile)&temp<temp%>%quantile(.,probs=end_quantile),1,0))\n}\n\n# the number of samples\nsample_size <- 1000\n# the number of predictors\npredictor_size <- 5000\n# the number of groups\ngroup_size <- sample(6:10,1) # at least more than 6, the number of the genotypes\n# the number of predictors truly associated with a response variable\nsignificant_predictors <- floor(predictor_size*sample((50:100)/1000,1)) \n\n## set the predictors associated with an outcome\n### the number of predictors positively associated with an outcome\n### the number of predictors negatively associated with an outcome\npositively_associated_predictors<-floor(significant_predictors*0.4) \nnegatively_associated_predictors<-significant_predictors-positively_associated_predictors \n\n## set the proportion of the groups in which the predictors are correlated with one another\n### randomly sampling proportions to become their sum equal to 1\ngroup_proportion_list<-sample(seq(1,1+2*(100-group_size)/group_size,\n                            by=2*(100-group_size)/(group_size*(group_size-1)))/100,\n                        group_size,replace=FALSE)%>%round(3) \nnames(group_proportion_list)<-paste0(\"group\",1:length(group_proportion_list))\n### initialize a matrix with a size as sample_size by predictor_size\npredictor_matrix <- matrix(0, ncol = predictor_size, nrow = sample_size)\n### initialize a data frame and assign meta information used to generate simulated data\ngroup_meta_data<-\n    data.frame(\n        group_name=c(names(group_proportion_list)),\n        proportion=group_proportion_list)%>%\n        mutate(\n            group_n=(predictor_size*group_proportion_list)%>%round(0), # the number of predictors within each group \n            first_index=c(1,cumsum(group_n[-length(group_proportion_list)])+1), # the 1st index of predictors in each group\n            last_index=cumsum(group_n), # the last index of predictors in each group\n            group_correlation=sample((0:700)/1000,length(group_proportion_list),replace=TRUE), # within-group correlations among the within-group predictors\n            group_effect=sample((-40:30)/100,length(group_proportion_list),replace=TRUE)) # effect of each group on an outcome variable\n### set a group effect as 0.7 into a group with the smallest group number \ngroup_meta_data[which.min(group_meta_data[,\"group_n\"]),\"group_effect\"]<-0.7\n\n### set a group effect as -0.5 into a group with the second smallest group number \ngroup_meta_data[group_meta_data[,\"group_n\"]==(sort(group_meta_data[,\"group_n\"])[2]),\"group_effect\"]<-(-0.5)\n\n\n\n# initialize a data matrix to assign simulated values\n## add some noise to data\ndata<-matrix(rnorm(sample_size*predictor_size,mean=0,sd=0.01), \n             nrow = sample_size, ncol = predictor_size)\n\n# initialize a covariance matrix to assign simulated values\ncovariance_matrix<-matrix(rnorm(predictor_size*predictor_size,mean=0,sd=0.05),\n                          nrow=predictor_size, ncol=predictor_size)\nbeta_coefficients <- rnorm(predictor_size,0,0.05)\n\nanswer_list<-list(\n    'sample size'=sample_size,\n    'predictor size'=predictor_size,\n    'group size'=group_size,\n    'significant predictors'=significant_predictors,\n    'positively associated predictors'=positively_associated_predictors,\n    'negatively associated predictors'=negatively_associated_predictors,\n    'group proportion list'=group_proportion_list,\n    'group meta data'=group_meta_data,\n    'data noise intensity'=c('distribution'='rnorm','mean'=0,'sd'=0.01),\n    'covariance noise intensity'=c('distribution'='rnorm','mean'=0,'sd'=0.05),\n    'effect noise intensity on response'=c('distribution'='rnorm','mean'=0,'sd'=0.05),\n    'link function' = 'logistic function',\n    'link function noise intensity' = c('distribution'='rnorm','mean'=0.2,'sd'=0.05),\n    'age_distirbution'='used data of a variable with the highest effect on outcome',\n    'sex_distribution'='rbinom(n=sample size,p=0.5)',\n    'genotype_distirbution'=list(\n        'e2/e2'='8%, the bottom 8 % of the percentiles of the outcome probabilities with noises',\n        'e2/e3'='15%, the bottom 23 % of the percentiles of the outcome probabilities with noises',\n        'e2/e4'='8.6%, the bottom 31.6 % of the percentiles of the outcome probabilities with noises',\n        'e3/e3'='30%, the bottom 61.6 % of the percentiles of the outcome probabilities with noises',\n        'e3/e4'='25%, the bottom 86.6 % of the percentiles of the outcome probabilities with noises',\n        'e4/e4'='13.4%, above the bottom 86.6 % of the percentiles of the outcome probabilities with noises'),\n    'treatment_distirbution'=list(\n        'control' = '70%, the bottom 70 % of the percentiles of the outcome probabilities with noises',\n        'treatment1'='15%, the bottom 85 % of the percentiles of the outcome probabilities with noises',\n        'treatment2'='10%, bottom 95 % of the percentiles of the outcome probabilities with noises',\n        'treatment3'='5%, above the bottom 8 % of the percentiles of the outcome probabilities with noises'\n    ))\n\n\ndatapath<-\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rds\"\n#datapath<-\"C:/Users/kkm/Desktop/projects/website/docs/projects/data/llfs_simulated_data.rds\"\nsimulated_data=read_rds(datapath)%>%dplyr::select(-1,-probabilities)\nall_data=simulated_data\n\nall_data=all_data%>%\nmutate(\n      outcome=ifelse(outcome==0,\"negative\",\"positive\"),\n      outcome=factor(outcome,levels=c(\"negative\",\"positive\")),\n      sex=ifelse(sex==0,\"man\",\"woman\"),\n      sex=factor(sex,levels=c(\"man\",\"woman\")),\n      treatment=factor(treatment,levels=c(\"control\",\"trtmnt1\",\"trtmnt2\",\"trtmnt3\")),\n      genotype=factor(genotype,levels=c(\"e3e3\",\"e2e2\",\"e2e3\",\"e2e4\",\"e3e4\",\"e4e4\"))\n      )\n names(all_data)[6:ncol(all_data)]<-paste0(\"meta\",1:predictor_size)\n\n\n\n\nmean, sd, normality check with p value\n\n\n\n\n\n\n\n\n\n\nCode\ncolor_function<-function(summary_data){\nreturn(\n    if(nrow(summary_data)==2){\n        c(\"darkblue\",\"darkred\")\n    }else if(nrow(summary_data)==3){\n        c(\"darkblue\",\"darkred\",\"yellow4\")\n    }else if(nrow(summary_data)==4){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\")\n    }else if(nrow(summary_data)==5){\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\")\n    }else{\n        c(\"darkblue\",\"darkred\",\"yellow4\",\"blueviolet\",\"darkorange\",\"darkgreen\")\n    }\n    )\n}\n\ngroup_variable=\"outcome\"\ngroup_variable2=\"sex\"\nsummary_variable=\"age\"\nstr(group_variable)\n\n\n chr \"outcome\"\n\n\nCode\ngetNumericSummary=function(data=all_data,group_variable,summary_variable,set_color=color_function,...){\n    # table\n    temp<-data %>% \n    #group_by_at(vars(...)) %>% \n    group_by_at(vars(group_variable)) %>% \n    mutate(count=n())%>%\n    summarise_at(vars(summary_variable,count),\n                 list(mean=mean,\n                 sd=sd,\n                 min=min,\n                 Q1=~quantile(., probs = 0.25),\n                 median=median, \n                 Q3=~quantile(., probs = 0.75),\n                 max=max))%>%\n                 as.data.frame()%>%\n                 rename(\n                 n=count_mean)%>%\n                 dplyr::select(-contains('count'))%>%\n                 as.data.frame()\n    names(temp)<-c(\"group\",\n    sapply(names(temp)[-1],function(x)str_replace(x,paste0(summary_variable,\"_\"),\"\")))\n    temp<-temp%>%\n    mutate(\n        variable=group_variable,\n        summary=summary_variable,\n        mean=mean%>%round(2),\n        sd=sd%>%round(2),\n        min=min%>%round(2),\n        Q1=Q1%>%round(2),\n        Q4=Q3%>%round(2),\n        max=max%>%round(2),\n        IQR_min=Q1-(Q3-Q1)*1.5%>%round(2),\n    IQR_max=Q3+(Q3-Q1)*1.5%>%round(2),\n    proportion=paste0(round(n/nrow(all_data)*100,2),\"%\"))%>%\n    dplyr::select(variable,group,summary,n,proportion,mean,sd,min,IQR_min,Q1,median,Q3,IQR_max,max)\n\n    # plot\n    temp2=temp\n    names(temp2)[2]=group_variable\n    plot<-\n    data%>%\n    dplyr::select(group_variable,summary_variable)%>%\n    inner_join(.,temp2,by=group_variable)%>%\n    ggplot(aes(x=age,fill=get(group_variable),color=get(group_variable)))+\n    geom_histogram(aes(y=..density..),binwidth=1,alpha=0.5, position=\"identity\")+\n    geom_vline(aes(xintercept=mean,color=get(group_variable)), linetype=\"dashed\", size=1.5) + \n    geom_density(aes(y=..density..),alpha=0.3) +\n    scale_color_manual(values=set_color(temp2))+\n    scale_fill_manual(values=set_color(temp2))+\n    theme_bw()+\n    theme(legend.position = c(.95, .95),\n    legend.justification = c(\"right\", \"top\"),\n    legend.margin = margin(6, 6, 6, 6),\n    legend.text = element_text(size = 10))+\n    guides(fill=guide_legend(title=group_variable),\n    color=FALSE)+\n    geom_text(aes(label=round(mean,1),y=0,x=mean),\n                vjust=-1,col='yellow',size=5)+\n    ggtitle(paste0(\"Histogram & Density, \", summary_variable, \" Grouped by \", group_variable))+\n        labs(x=summary_variable, y = \"Density\")\n\n    result<-list(temp,plot)\n    return(result)\n}\n\nad_age_summary=getNumericSummary(data=all_data,group_variable=\"outcome\",summary_variable=\"age\")[[1]]\nsex_age_summary=getNumericSummary(data=all_data,group_variable=\"sex\",summary_variable=\"age\")[[1]]\ntreatment_age_summary=getNumericSummary(data=all_data,group_variable=\"treatment\",summary_variable=\"age\")[[1]]\ngenotype_age_summary=getNumericSummary(data=all_data,group_variable=\"genotype\",summary_variable=\"age\")[[1]]\nage_summary=rbind(\n    ad_age_summary,\n    sex_age_summary,\n    treatment_age_summary,\n    genotype_age_summary)\n\n\nAge is known as a strong risk factor of AD or dementia. Human nerve system gets damaged as people are aged and the nerve fibrosis symptoms progress gradually (some reference, to be added after figuring out how to add bibliography in quarto). For this reason, we need to look into how the sample data are distributed in terms of age.\n\n\nCode\nage_summary%>%knitr::kable()\n\n\nThe table above shows the summary statistics of age grouped by the affected status, AD and non AD. The difference of age between the two groups are about 0.09, but their standard deviations are 6.54 and 6.27. Thus, it is hard to say their age in average differ in the affected status because the age variations of the two groups are overlapped. This research has two conflicting characteristics at the population level. First, the participants are the elderly whose age in average is 84.66, which indicates they are likely to develop dementia, an aging disease. Second, the data were collected from the longevity village where people live long and healthy lives and it is expected that where will be some protective factors against dementia. These two conflicting traits may have contributed to this unclear difference.\nThe glaring difference of age is also shown below. As you can see, the people with a negative status a bit younger than those with a positive one.\n\n\nCode\nplot<- ggarrange(\n    getNumericSummary(data=all_data,group_variable=\"outcome\",summary_variable=\"age\")[[2]],\n    getNumericSummary(data=all_data,group_variable=\"sex\",summary_variable=\"age\")[[2]],\n    getNumericSummary(data=all_data,group_variable=\"treatment\",summary_variable=\"age\")[[2]],\n    getNumericSummary(data=all_data,group_variable=\"genotype\",summary_variable=\"age\")[[2]],\n    ncol=2, nrow=2,legend=\"bottom\")\n\nd=lapply(all_data[,sapply(all_data,function(x)is.numeric(x))],function(x)t.test(x~outcome,data=all_data))\n\nstr(d[[1]])\nlapply(d,function(x)\nc('variable'=names(d),\nx$estimate[1],\nx$estimate[2],\n'p'=x$p.value,\n'lower'=x$conf.int[1],\n'upper'=x$conf.int[2]))\nsd=lapply(d,function(x)c('p'=x$p.value))%>%do.call(\"rbind\",.)%>%as.data.frame%>%mutate(variable=rownames(.))\nnames(sd)[1]='p'\n\nsdf=sd%>%mutate(test=ifelse(p<0.05/5000,1,0))\ntable(sdf$test)\n\n\n\n\n\n\n\nt-test\n\n\nCode\n#F-test to test for homogeneity in variances\n#| echo: false\n#| eval: false\nvar.test\n\n\nfunction (x, ...) \nUseMethod(\"var.test\")\n<bytecode: 0x00000172d8ac0dc0>\n<environment: namespace:stats>\n\n\n\n\n\nOne way Anova\n\n\n\nOne way Anova\n\n\n\n\n\n\n\n\n\n\n\n\n\nChisquare test\n\n\n\nchisquare test"
  },
  {
    "objectID": "docs/projects/LLFS/ml_approach.html",
    "href": "docs/projects/LLFS/ml_approach.html",
    "title": "ML Approach",
    "section": "",
    "text": "alpha      mse fit.name\n1    0.0 2217.331   alpha0\n2    0.1 2217.331 alpha0.1\n3    0.2 2217.331 alpha0.2\n4    0.3 2217.331 alpha0.3\n5    0.4 2217.331 alpha0.4\n6    0.5 2217.331 alpha0.5\n7    0.6 2217.331 alpha0.6\n8    0.7 2217.331 alpha0.7\n9    0.8 2217.331 alpha0.8\n10   0.9 2217.331 alpha0.9\n11   1.0 2217.331   alpha1"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#overview",
    "href": "docs/projects/LLFS/project_description.html#overview",
    "title": "Description",
    "section": "Overview",
    "text": "Overview\n\n\n\n\nflowchart LR\n    subgraph Data_Collection\n        direction TB\n        Multi_Centerd_Blood_Sampling---\n        Mass_Spectrometry---\n        Data_Transfer\n    end\n    subgraph Quality_Control\n        direction TB\n        Identify_Anomaly_Data---\n        Identify_Missing_Values\n    end\n    subgraph Analytics\n        direction TB \n        EDA---\n        Data_Mining---\n        Statistical_Analysis---\n        Machine_Learning\n    end\n    subgraph Reporting_and_Conclusion\n        direction TB \n        Share_with_Faculty\n    end\n\nData_Collection-->Quality_Control-->Analytics-->Reporting_and_Conclusion"
  },
  {
    "objectID": "docs/projects/LLFS/project_description.html#analytics",
    "href": "docs/projects/LLFS/project_description.html#analytics",
    "title": "Description",
    "section": "Analytics",
    "text": "Analytics\n\n\n\n\nflowchart TB\n    subgraph Data_Analytics\n        direction TB\n        Exploratory_Data_Analysis---\n        Data_Minig---\n        Statistical_Analysis---\n        Machine_Learning\n    end\n\n\n\n\n\n\n\n\n\nEDA (Exploratory Data Analysis)\n\n\nData Mining\n\n\nStatistical Analysis\n\n\nMachine Learning"
  },
  {
    "objectID": "docs/projects/index.html",
    "href": "docs/projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Projects\n\nSTAT, ML, and DL stands for 'Statistics', 'Machine Learning', and \"Deep Learning\", respectively.\n\n\n\n[STAT][ML] LLFS (Long Life Family Study)\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-07-anova/index.html#anova",
    "href": "docs/blog/posts/statistics/2023-01-07-anova/index.html#anova",
    "title": "ANOVA",
    "section": "4 ANOVA",
    "text": "4 ANOVA\nA basic idea of the ANOVA is to partition variation. It is not concerend with analyzing variances but with analyzing variation in means. To be specific, it is a method of estimating the means of several populations that are often assumed to be normally distributed.\n\n4.1 One Way ANOVA\n\nwe\nAssumptions\n\n\\[ Y_{ij}=\\mu_i + \\epsilon_{ij}, \\space \\space i=1, ..., k, \\space j=1, ...,n_i \\] \\[ EY_{ij}=\\mu_i, \\space \\space , i=1, ..., k, \\space j=1, ...,n_i \\]\nwhere the \\(\\mu_i\\) are unkown parameters and the \\(\\epsilon_{ij}\\) are error random variables.\n\n\\(\\text{E}\\epsilon_{ij}=0\\), \\(\\text{Var}\\epsilon_{ij}=0<\\infty\\), for all \\(i, j\\)\n\\(\\text{Cov}(\\epsilon_{ij},\\epsilon_{i'j'})=0\\), for all \\(i, i', j\\), and \\(j'\\) unless \\(i=i'\\) and \\(j=j'\\).\nThe \\(\\epsilon_{ij}\\) are independent and normally distributed (normal errors).\n\\(\\sigma^2_{i}=\\sigma^2\\) for all \\(i\\) (homoscedasticity)"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-19_stack/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-19_stack/index.html",
    "title": "Data Structure (5) Stack",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n다양한 알고리즘과 프로그램에서 사용됨\n스택: 먼저 들어온 데이터가 나중에 나가는 자료구조\n흔히 박스가 쌓인 형태를 스택(stack)이라고 한다. 예) ‘Deep Learning 알고리즘의 구조가 stacked 되어 있는 구조다’ 라고 표현\n\n우리가 박스를 쌓은 뒤에 꺼낼 때는, 가장 마지막에 올렸던 박스부터 꺼내야 한다.\n\n새로운 원소를 삽입할 때는 마지막 위치에 삽입한다. (가장 최근에 삽입된 원소가 가장 끝에 위치)\n새로운 원소를 삭제할 때는 마지막 원소가 삭제된다. (가장 최근에 삽입된 원소가 제거됨)\nhead = 최상위 원소 = 가장 최근에 삽입이된 원소\n\n\n\n\n\n스택은 굉장히 기본적인 자료구조이다.\n기계 학습 분야뿐 아니라 다양한 프로그램을 개발할 때 빠지지 않고 사용된다.\n\n\n\n\n\n스택은 여러 가지 연산을 제공한다.\n\n\n\nTable 1: a list of the stack functions in Python\n\n\n\n\n\n\n\n\nNumber\nMethods\nTime Complexity\nDescription\n\n\n\n\n1\n삽입(Push)\n\\(O(1)\\)\n스택에 원소를 삽입하는 연산\n\n\n2\n추출(Pop)\n\\(O(1)\\)\n스택에서 원소를 추출하는 연산\n\n\n3\n최상위 원소 (Top)\n\\(O(1)\\)\n스택의 최상위 원소(마지막에 들어온 원소) 를 확인(조회)하는 연산\n\n\n4\nEmpty\n\\(O(1)\\)\n스택이 비어 있는지 확인하는 연산\n\n\n\n\nSee Table 1.\n\n\n\n\n파이썬의 기본적인 리스트 자료형은 다음의 두 가지 메서드를 제공한다.\nappend() 메서드: 마지막 위치에 원소를 삽입하며, 시간 복잡도는 \\(O(1)\\) 이다.\npop() 메서드: 마지막 위치에서 원소를 추출하며, 시간 복잡도는 \\(O(1)\\) 이다.\n따라서 일반적으로 스택을 구현할 때, 파이썬의 리스트(list) 자료형을 사용한다.\n\n\n\nCode\nclass Stack:\n    def __init__(self):\n        self.stack = []\n\n    def push(self, data):\n        # 마지막 위치에 원소 삽입\n        self.stack.append(data)\n\n    def pop(self):\n        if self.is_empty():\n            return None\n        # 마지막 원소 추출\n        return self.stack.pop()\n\n    def top(self):\n        if self.is_empty():\n            return None\n        # 마지막 원소 반환\n        return self.stack[-1]\n\n    def is_empty(self):\n        return len(self.stack) == 0\n\n\nstack = Stack()\narr = [9, 7, 2, 5, 6, 4, 2]\nfor x in arr:\n    stack.push(x)\n\nwhile not stack.is_empty():\n    print(stack.pop())\n\n\n2\n4\n6\n5\n2\n7\n9\n\n\n\n\n\n\n스택을 연결 리스트로 구현하면, 삽입과 삭제에 있어서 \\(O(1)\\) 을 보장한다.\n연결 리스트로 구현할 때는 머리(head)를 가리키는 하나의 포인터만 가진다.\n머리(head): 남아있는 원소 중 가장 마지막에 들어 온 데이터를 가리키는 포인터\n\n\n\n\n삽입할 때는 기존의 머리 뒤에 데이터가 들어가고 포인터가 가장 최근에 삽입된 데이터를 가리키도록 머리(head) 위치를 바꿔준다.\n삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.\n\n즉, 포인터를 삭제할 데이터에 앞에 있는 데이터로 머리 위치를 바꾸는 것만으로 삭제는 이루어진다.\n\n\n\n\n\n\n삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.\n\n\n\nCode\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Stack:\n    def __init__(self):\n        self.head = None\n\n    # 원소 삽입\n    def push(self, data):\n        node = Node(data)\n        node.next = self.head\n        self.head = node\n\n    # 원소 추출하기\n    def pop(self):\n        if self.is_empty():\n            return None\n\n        # 머리(head) 위치에서 노드 꺼내기\n        data = self.head.data\n        self.head = self.head.next\n\n        return data\n\n    # 최상위 원소(top)\n    def top(self):\n        if self.is_empty():\n            return None\n        return self.head.data\n\n    # 먼저 추출할 원소부터 출력\n    def show(self):\n        cur = self.head\n        while cur:\n            print(cur.data, end=\" \")\n            cur = cur.next\n\n    # 스택이 비어있는지 확인\n    def is_empty(self):\n        return self.head is None\n\n\nstack = Stack()\narr = [9, 7, 2, 5, 6, 4, 2]\nfor x in arr:\n    stack.push(x)\nstack.show()\nprint()\n\nwhile not stack.is_empty():\n    print(stack.pop())\n\n\n2 4 6 5 2 7 9 \n2\n4\n6\n5\n2\n7\n9"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-20_graph/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-20_graph/index.html",
    "title": "Data Structure (10) Graph",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n• 그래프(graph)란 사물을 정점(vertex)과 간선(edge)으로 나타내기 위한 도구다.\n• 그래프는 두 가지 방식으로 구현할 수 있다.\n\n인접 행렬(adjacency matrix): 2차원 배열을 사용하는 방식\n인접 리스트(adjacency list): 연결 리스트를 이용하는 방식\n\n\n\n\n• 인접 행렬(adjacency matrix)에서는 그래프를 2차원 배열로 표현한다.\n\n\n• 모든 간선이 방향성을 가지지 않는 그래프를 무방향 그래프라고 한다.\n• 모든 간선에 가중치가 없는 그래프를 무가중치 그래프라고 한다.\n• 무방향 무가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 행렬로 출력할 수 있다.\n\n\n\n• 모든 간선이 방향을 가지는 그래프를 방향 그래프라고 한다.\n• 모든 간선에 가중치가 있는 그래프를 가중치 그래프라고 한다.\n• 방향 가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 행렬로 출력할 수 있다.\n\n\n\n\n• 인접 리스트(adjacency list)에서는 그래프를 리스트로 표현한다.\n\n\n• 모든 간선이 방향성을 가지지 않는 그래프를 무방향 그래프라고 한다.\n• 모든 간선에 가중치가 없는 그래프를 무가중치 그래프라고 한다.\n• 무방향 무가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 리스트로 출력할 수 있다.\n\n\n\n• 모든 간선이 방향을 가지는 그래프를 방향 그래프라고 한다.\n• 모든 간선에 가중치가 있는 그래프를 가중치 그래프라고 한다.\n• 방향 가중치 그래프가 주어졌을 때 연결되어 있는 상황을 인접 리스트로 출력할 수 있다.\n\n\n\n\n\n인접 행렬: 모든 정점들의 연결 여부를 저장해 O V\n\n2 의 공간을 요구한다.\n• 공간 효율성이 떨어지지만, 두 노드의 연결 여부를 O 1 에 확인할 수 있다.\n\n인접 리스트: 연결된 간선의 정보만을 저장하여 O V + E 의 공간을 요구한다.\n\n• 공간 효율성이 우수하지만, 두 노드의 연결 여부를 확인하기 위해 O V 의 시간이 필요하다.\n\n\nTable 1: a list of the stack functions in Python\n\n\n\n\n\n\n\n\nNumber\nCategory\n필요한 메모리\n연결 여부 확인\n\n\n\n\n1\n인접 행렬\n\\(O(V^2)\\)\n\\(O(1)\\)\n\n\n2\n인접 리스트\n\\(O(V+E)\\)\n\\(O(V)\\)\n\n\n\n\nSee Table 1.\n\n\n\n• 최단 경로 알고리즘을 구현할 때, 어떤 자료구조가 유용할까?\n• 각각 근처의 노드와 연결되어 있는 경우가 많으므로, 간선 개수가 적어 인접 리스트가 유리하다."
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-20_binary_search_tree/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-20_binary_search_tree/index.html",
    "title": "Data Structure (8) Binary Search Tree",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n트리는 가계도와 같이 계층적인 구조를 표현할 때 사용할 수 있는 자료구조다.\n나무(tree)의 형태를 뒤집은 것과 같이 생겼다.\n다수의 데이터를 관리하기에 적합한 트리 자료 구조의 가장 기본적인 형태\n\n\n\n\n\n루트 노드(root node): 부모가 없는 최상위 노드\n단말 노드(leaf node): 자식이 없는 노드\n트리(tree)에서는 부모와 자식 관계가 성립한다 (직계).\n형제 관계 (sibling, 방계): 부모 node로 부터 왼쪽 자식과 오른쪽 자식과의 관계\n깊이(depth): 루트 노드에서의 길이(length), 루트 노드로부터 손자까지의 depth=2\n\n이때, 길이란 출발 노드에서 목적지 노드까지 거쳐야 하는 간선의 수를 의미한다.\n\n트리의 높이(height)은 루트 노드에서 가장 깊은 노드까지의 길이를 의미한다.\n\n\n\n\n\n이진 트리는 최대 2개의 자식을 가질 수 있는 트리를 말한다.\n\n\n\n\n\n다수의 데이터를 관리(조회, 저장, 삭제)하기 위한 가장 기본적인 자료구조 중 하나다.\n이진 탐색 트리의 성질: 순서가 있음\n\n왼쪽 자식 노드 < 부모 노드 < 오른쪽 자식 노드\n루트 노드 기준 모든 왼쪽 노드들은 루트 노드보다 작음\n루트 노드 기준 모든 오른쪽 노드들은 루트 노드보다 큼\n2진 탐색을 가능하게 하는 구조\n\n\n\n\n\n특정한 노드의 키(key) 값보다 그 왼쪽 자식 노드의 키(key) 값이 더 작다.\n특정한 노드의 키(key) 값보다 그 오른쪽 자식 노드의 키(key) 값이 더 크다.\n특정한 노드의 왼쪽 서브 트리, 오른쪽 서브 트리 모두 이진 탐색 트리다.\nworst case: 찾는게 없을 때 혹은 찾고자 하는 데이터가 가장 마지막에 있을 때\n\n탐색시 재귀적으로 중앙값을 기준으로 오른쪽만 찾음\n매 실행마다 데이터의 개수가 절반씩 줄어듬\n그러면, 몇 번만에 사이즈가 1이 되는가?\n수식 유도, input size를 N이라고 가정했을때\n\\(N \\times {(\\frac{1}{2})}^{k}=1 \\rightarrow N=2^k \\rightarrow k = log_2N\\)\n위의 수식을 점근적 표기법으로 표현하면 \\(\\Theta(logN)\\)\n\nbest case: 한번에 찾았을 때\n\n\\(\\Theta(1)\\)\n\n그러므로, lower bound = \\(\\Theta(1)\\), upper bound = \\(O(logN)\\)\n\n\n\n\n\n루트 노드에서 출발하여 아래쪽으로 내려오면서, 삽입할 위치를 찾는다.\n\n삽입할 노드의 키(key)가 작으면 왼쪽으로,\n삽입할 노드의 키(key)가 크면 오른쪽으로 삽입\n\n삽입할 노드 목록 예시: [7,4,5,9,6,2,3,2,8]으로 트리 생성해보기\n\n\n\n\nBinary Tree\n\n\nSorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나\n\n\n\n\n루트 노드에서 출발하여 아래쪽으로 내려오면서, 찾고자 하는 원소를 조회한다. 삽입 연산과 같은 로직을 따름\n1 삽입할 노드의 키(key)가 작으면 왼쪽으로, 2 삽입할 노드의 키(key)가 크면 오른쪽으로 조회\n조회할 노드 목록 예시: 5번 노드\n\n\n\n\n\n루트 노드에서 출발하여 아래쪽으로 내려오면서, 삭제할 원소에 접근한다.\n삭제할 노드 목록 예시: 7번 노드\n\nCase #1 왼쪽 자식이 없는 경우 → 오른쪽 자식으로 대체\nCase #2 오른쪽 자식이 없는 경우 → 왼쪽 자식으로 대체\nCase #3 왼쪽, 오른쪽이 모두 있는 경우 → 오른쪽 서브\n\n트리에서 가장 작은 노드로 대체\n삭제할 노드 목록 예시: 4번 노드\n\n\n\n\nBinary Tree Deletion\n\n\nSorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나\n\n\n\n\n\n트리에 포함되어 있는 정보를 모두 출력하고자 할 때, 어떤 방식을 사용할 수 있을까?\n바로 순회(traversal)를 사용할 수 있다.\n트리의 모든 노드를 특정한 순서(조건)에 따라서 방문하는 방법을 순회(traversal)라고 한다.\n\n\n전위 순회(pre-order traverse): 루트 방문 → 왼쪽 자식 방문 → 오른쪽 자식 방문\n중위 순회(in-order traverse): 왼쪽 자식 방문 → 루트 방문 → 오른쪽 자식 방문\n후위 순회(post-order traverse): 왼쪽 자식 방문 → 오른쪽 자식 방문 → 루트 방문\n\n\n\n\n전위 순회(pre-order traverse): A → B → D → E → C → F → G\n중위 순회(in-order traverse): D → B → E → A → F → C → G\n후위 순회(post-order traverse): D → E → B → F → G → C → A\n\n\n\n\nBinary Tree Traverse\n\n\nSorcue: 코딩 테스트를 위한 트리(Tree) 자료구조 10분 핵심 요약 By 동빈나\n\n\n\n• 방문 방법: 현재 노드 → 왼쪽 자식 노드 → 오른쪽 자식 노드\n\n\nCode\ndef _preorder(self, node):\n  if node:\n    print(node.key, end=' ')\n    self._preorder(node.left)\n    self._preorder(node.right)\n\n\n\n\n\n\n방문 방법: 왼쪽 자식 노드 → 현재 노드 → 오른쪽 자식 노드\n\n\n\nCode\ndef _inorder(self, node):\n  if node:\n    self._inorder(node.left)\n    print(node.key, end=' ')\n    self._inorder(node.right)\n\n\n\n\n\n\n방문 방법: 왼쪽 자식 노드 → 오른쪽 자식 노드 → 현재 노드\n\n\n\nCode\ndef _postorder(self, node):\n  if node:\n    self._postorder(node.left)\n    self._postorder(node.right)\n    print(node.key, end=' ')\n\n\n\n\n\n\n낮은 레벨(루트)부터 높은 레벨까지 순차적으로 방문한다.\n단순히 루트 노드에서부터 너비 우선 탐색(BST)를 진행하면 된다.\n레벨 순회 순회(level-order traverse): A → B → C → D → E → F → G\n\n\n\n\n\n\n다른 메서드 안에서 사용되는 메서드는 이름 앞에 언더바(_) 기호를 붙인다.\n\n\n\nCode\ndef search(self, node, key):\n  return self._search(self.root, key) # search: recursively 조회\n\ndef _search(self, node, key):\n  if node is None or node.key == key:\n    return node\n\n  # 현재 노드의 key보다 작은 경우\n  if node.key > key:\n    return self._search(node.left, key)\n\n  # 현재 노드의 key보다 큰 경우\n  elif node.key < key:\n    return self._search(node.right, key)\n\n\n\n\n\n편향 이진 트리는 다음의 두 가지 속성을 가진다.\n\n\n같은 높이의 이진 트리 중 최소 개수의 노드 개수를 가진다.\n왼쪽 혹은 오른쪽으로 한 방향에 대한 서브 트리를 가진다.\n\n\n\n\n\n노드의 개수가 N개일 때, 시간 복잡도는 다음과 같다.\n트리의 높이(height)을 H라고 할 때, 엄밀한 시간 복잡도는 \\(O(H)\\) 다.\n이상적인 경우 H = log2 N로 볼 수 있다.\n하지만 최악의 경우(편향된 경우) H = N로 볼 수 있다.\n\n\n\nTable 1: a list of the time complexity of the binary search trees in Python\n\n\n\n\n\n\n\n\n\n\nNumber\nMethods\n조회\n삽입\n삭제\n수정\n\n\n\n\n1\n균형 잡힌 이진 탐색 트리\n\\(O(logN)\\)\n\\(O(logN)\\)\n\\(O(logN)\\)\n\\(O(logN)\\)\n\n\n2\n편향 이진 탐색 트리\n\\(O(N)\\)\n\\(O(N)\\)\n\\(O(N)\\)\n\\(O(N)\\)\n\n\n\n\nSee Table 1.\n\n\n\n\nAVL stands for Adelson-Velsky and Landis\n이진 탐색 트리는 편향 트리가 될 수 있으므로, 최악의 경우 \\(O(N)\\) 을 요구한다.\n반면에 AVL 트리는 균형이 갖춰진 이진 트리다.\n간단한 구현 과정으로 완전 이진 트리에 가까운 형태를 유지하도록 한다.\n\n\n\nCode\nfrom collections import deque\n\n\nclass Node:\n    def __init__(self, key):\n        self.key = key\n        self.left = None\n        self.right = None\n\n\nclass BinarySearchTree:\n    def __init__(self):\n        self.root = None\n\n    def search(self, node, key):\n        return self._search(self.root, key)\n\n    def _search(self, node, key):\n        if node is None or node.key == key:\n            return node\n\n        # 현재 노드의 key보다 작은 경우\n        if node.key > key:\n            return self._search(node.left, key)\n        # 현재 노드의 key보다 큰 경우\n        elif node.key < key:\n            return self._search(node.right, key)\n\n    def insert(self, key):\n        self.root = self._insert(self.root, key)\n\n    def _insert(self, node, key):\n        if node is None:\n            return Node(key)\n\n        # 현재 노드의 key보다 작은 경우\n        if node.key > key:\n            node.left = self._insert(node.left, key)\n        # 현재 노드의 key보다 큰 경우\n        elif node.key < key:\n            node.right = self._insert(node.right, key)\n\n        return node\n\n    def delete(self, key):\n        self.root = self._delete(self.root, key)\n\n    def _delete(self, node, key):\n        if node is None:\n            return None\n\n        # 현재 노드의 key보다 작은 경우\n        if node.key > key:\n            node.left = self._delete(node.left, key)\n        # 현재 노드의 key보다 큰 경우\n        elif node.key < key:\n            node.right = self._delete(node.right, key)\n        # 삭제할 노드를 찾은 경우\n        else:\n            # 왼쪽 자식이 없는 경우\n            if node.left is None:\n                return node.right\n            # 오른쪽 자식이 없는 경우\n            elif node.right is None:\n                return node.left\n            # 왼쪽과 오른쪽 자식 모두 있는 경우\n            node.key = self._get_min(node.right)\n            node.right = self._delete(node.right, node.key)\n\n        return node\n\n    def _get_min(self, node):\n        key = node.key\n        while node.left:\n            key = node.left.key\n            node = node.left\n        return key\n\n    def preorder(self):\n        self._preorder(self.root)\n\n    def _preorder(self, node):\n        if node:\n            print(node.key, end=' ')\n            self._preorder(node.left)\n            self._preorder(node.right)\n\n    def inorder(self):\n        self._inorder(self.root)\n\n    def _inorder(self, node):\n        if node:\n            self._inorder(node.left)\n            print(node.key, end=' ')\n            self._inorder(node.right)\n\n    def postorder(self):\n        self._postorder(self.root)\n\n    def _postorder(self, node):\n        if node:\n            self._postorder(node.left)\n            self._postorder(node.right)\n            print(node.key, end=' ')\n\n    def levelorder(self):\n        return self._levelorder(self.root)\n\n    def _levelorder(self, node):\n        if node is None:\n            return\n\n        result = []\n\n        queue = deque()\n        queue.append((0, node))  # (level, node)\n\n        while queue:\n            level, node = queue.popleft()\n            if node:\n                result.append((level, node.key))\n                queue.append((level + 1, node.left))\n                queue.append((level + 1, node.right))\n\n        for level, key in result:\n            print(f\"level: {level}, key: {key}\")\n\n    def to_list(self):\n        return self._to_list(self.root)\n\n    def _to_list(self, node):\n        if node is None:\n            return []\n        return self._to_list(node.left) + [node.key] + self._to_list(\n            node.right)\n\n\narr = [7, 4, 5, 9, 6, 3, 2, 8]\nbst = BinarySearchTree()\nfor x in arr:\n    bst.insert(x)\nprint('전위 순회:', end=' ')\nbst.preorder()\nprint('\\n중위 순회:', end=' ')\nbst.inorder()\nprint('\\n후위 순회:', end=' ')\nbst.postorder()\nprint('\\n[레벨 순회]')\nbst.levelorder()\n\nbst.delete(7)\nprint('\\n전위 순회:', end=' ')\nbst.preorder()\nprint('\\n중위 순회:', end=' ')\nbst.inorder()\nprint('\\n후위 순회:', end=' ')\nbst.postorder()\nprint('\\n[레벨 순회]')\nbst.levelorder()\n\nbst.delete(4)\nprint('\\n전위 순회:', end=' ')\nbst.preorder()\nprint('\\n중위 순회:', end=' ')\nbst.inorder()\nprint('\\n후위 순회:', end=' ')\nbst.postorder()\nprint('\\n[레벨 순회]')\nbst.levelorder()\n\nbst.delete(3)\nprint('\\n전위 순회:', end=' ')\nbst.preorder()\nprint('\\n중위 순회:', end=' ')\nbst.inorder()\nprint('\\n후위 순회:', end=' ')\nbst.postorder()\nprint('\\n[레벨 순회]')\nbst.levelorder()\n\nprint(bst.to_list())\n\n\n전위 순회: 7 4 3 2 5 6 9 8 \n중위 순회: 2 3 4 5 6 7 8 9 \n후위 순회: 2 3 6 5 4 8 9 7 \n[레벨 순회]\nlevel: 0, key: 7\nlevel: 1, key: 4\nlevel: 1, key: 9\nlevel: 2, key: 3\nlevel: 2, key: 5\nlevel: 2, key: 8\nlevel: 3, key: 2\nlevel: 3, key: 6\n\n전위 순회: 8 4 3 2 5 6 9 \n중위 순회: 2 3 4 5 6 8 9 \n후위 순회: 2 3 6 5 4 9 8 \n[레벨 순회]\nlevel: 0, key: 8\nlevel: 1, key: 4\nlevel: 1, key: 9\nlevel: 2, key: 3\nlevel: 2, key: 5\nlevel: 3, key: 2\nlevel: 3, key: 6\n\n전위 순회: 8 5 3 2 6 9 \n중위 순회: 2 3 5 6 8 9 \n후위 순회: 2 3 6 5 9 8 \n[레벨 순회]\nlevel: 0, key: 8\nlevel: 1, key: 5\nlevel: 1, key: 9\nlevel: 2, key: 3\nlevel: 2, key: 6\nlevel: 3, key: 2\n\n전위 순회: 8 5 2 6 9 \n중위 순회: 2 5 6 8 9 \n후위 순회: 2 6 5 9 8 \n[레벨 순회]\nlevel: 0, key: 8\nlevel: 1, key: 5\nlevel: 1, key: 9\nlevel: 2, key: 2\nlevel: 2, key: 6\n[2, 5, 6, 8, 9]"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-19_deque/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-19_deque/index.html",
    "title": "Data Structure (7) Deque",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n덱은 스택(stack)과 큐(queue)의 기능을 모두 가지고 있다.\n그래서, 스택과 큐대신 덱을 사용해도 괜찮음\n다만, 포인터 변수가 더 많이 필요하기 때문에, 메모리는 상대적으로 더 많이 필요하다.\nPython에서는 큐(queue)의 기능이 필요할 때 간단히 덱(deque)을 사용한다.\n데이터의 삭제와 삽입 모두에서 \\(O(1)\\) 의 시간 복잡도가 소요된다.\n덱에 여러 개의 데이터를 삽입하고 삭제하는 예시를 확인해 보자.\n\n[12개의 전체 연산]\n\n좌측으로부터 삽입 연산이 가능\n우측으로부터 삽입 연산이 가능\n삭제 연산시 우측/좌측 선택적 삭제가 가능\n\n\n\n\n• 데이터의 삭제와 삽입 모두에서 \\(O(1)\\) 의 시간 복잡도가 소요된다.\n\n\nTable 1: a list of the deque functions in Python\n\n\n\n\n\n\n\n\nNumber\nMethods\nTime Complexity\nDescription\n\n\n\n\n1\nappend left\n\\(O(1)\\)\n덱의 가장 왼쪽에 새 데이터를 삽입\n\n\n2\npop left\n\\(O(1)\\)\n덱의 가장 왼쪽에서 데이터를 추출\n\n\n3\nappend right\n\\(O(1)\\)\n덱의 가장 오른쪽에 새 데이터를 삽입\n\n\n4\npop right\n\\(O(1)\\)\n덱의 가장 오른쪽에서 데이터를 추출\n\n\n\n\nSee Table 1.\n\n\n\n\nPython에서는 덱(deque) 라이브러리를 사용할 수 있다.\n아래의 모든 메서드는 최악의 경우 시간 복잡도 O 1 을 보장한다.\n우측 삽입: append()\n좌측 삽입: appendleft()\n우측 추출: pop()\n좌측 추출: popleft()\n\n\n\nCode\nfrom collections import deque\n\n\nd = deque()\narr = [5, 6, 7, 8] \nfor x in arr:\n    d.append(x) # 오른쪽 삽입\narr = [4, 3, 2, 1]\nfor x in arr:\n    d.appendleft(x) # 좌측 삽입\nprint(d)\n\nwhile d:\n    print(d.popleft()) # 좌측 삭제\n\narr = [1, 2, 3, 4, 5, 6, 7, 8]\nfor x in arr:\n    d.appendleft(x)\nprint(d)\n\nwhile True:\n    print(d.pop())\n    if not d:\n        break\n    print(d.popleft())\n    if not d:\n        break\n\n\ndeque([1, 2, 3, 4, 5, 6, 7, 8])\n1\n2\n3\n4\n5\n6\n7\n8\ndeque([8, 7, 6, 5, 4, 3, 2, 1])\n1\n8\n2\n7\n3\n6\n4\n5\n\n\n\n\n\n기본적인 Python의 리스트 자료형은 큐(queue)의 기능을 제공하지 않는다.\n가능하다면 Python에서 제공하는 덱(deque) 라이브러리를 사용한다.\n큐(queue)의 기능이 필요할 때는 덱 라이브러리를 사용하는 것을 추천한다.\n삽입과 삭제에 대하여 모두 시간 복잡도 \\(O(1)\\) 이 요구된다.\n\n\n\n\n\n\n덱(deque)을 연결 리스트로 구현하면, 삽입과 삭제에 있어서 O 1 을 보장할 수 있다.\n연결 리스트로 구현할 때는 앞(front)과 뒤(rear) 두 개의 포인터를 가진다.\n앞(front): 가장 좌측에 있는 데이터를 가리키는 포인터\n뒤(rear): 가장 우측에 있는 데이터를 가리키는 포인터\n삽입과 삭제의 구현 방법은 스택 및 큐와 유사하다.\n앞(front)과 뒤(rear)에 대하여 대칭적으로 로직이 구현될 수 있다.\n\n\n\n\n좌측 삽입할 때는 앞(front) 위치에 데이터를 넣는다.\n새로운 데이터가 삽입되었을 때 front data와 연결이 먼저 된 후 front data의 이전 노드가 새로운 데이터가 되도록 설정\n\n\n\n\n\n삭제할 때는 앞(front) 위치에서 데이터를 꺼낸다. 즉, 그냥 front를 그 다음 데이터로 설정하면 됨\n\n\n\nCode\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.prev = None\n        self.next = None\n\n\nclass Deque:\n    def __init__(self):\n        self.front = None\n        self.rear = None\n        self.size = 0\n\n    def appendleft(self, data):\n        node = Node(data)\n        if self.front == None:\n            self.front = node\n            self.rear = node\n        else:\n            node.next = self.front\n            self.front.prev = node\n            self.front = node\n        self.size += 1\n\n    def append(self, data):\n        node = Node(data)\n        if self.rear == None:\n            self.front = node\n            self.rear = node\n        else:\n            node.prev = self.rear\n            self.rear.next = node\n            self.rear = node\n        self.size += 1\n\n    def popleft(self):\n        if self.size == 0:\n            return None\n        # 앞에서 노드 꺼내기\n        data = self.front.data\n        self.front = self.front.next\n        # 삭제로 인해 노드가 하나도 없는 경우\n        if self.front == None:\n            self.rear = None\n        else:\n            self.front.prev = None\n        self.size -= 1\n        return data\n\n    def pop(self):\n        if self.size == 0:\n            return None\n        # 뒤에서 노드 꺼내기\n        data = self.rear.data\n        self.rear = self.rear.prev\n        # 삭제로 인해 노드가 하나도 없는 경우\n        if self.rear == None:\n            self.front = None\n        else:\n            self.rear.next = None\n        self.size -= 1\n        return data\n\n    def front(self):\n        if self.size == 0:\n            return None\n        return self.front.data\n\n    def rear(self):\n        if self.size == 0:\n            return None\n        return self.rear.data\n\n    # 앞에서부터 원소 출력\n    def show(self):\n        cur = self.front\n        while cur:\n            print(cur.data, end=\" \")\n            cur = cur.next\n\n\nd = Deque()\narr = [5, 6, 7, 8]\nfor x in arr:\n    d.append(x)\narr = [4, 3, 2, 1]\nfor x in arr:\n    d.appendleft(x)\nd.show()\n\nprint()\nwhile d.size != 0:\n    print(d.popleft())\n\narr = [1, 2, 3, 4, 5, 6, 7, 8]\nfor x in arr:\n    d.appendleft(x)\nd.show()\n\nprint()\nwhile True:\n    print(d.pop())\n    if d.size == 0:\n        break\n    print(d.popleft())\n    if d.size == 0:\n        break\n\n\n1 2 3 4 5 6 7 8 \n1\n2\n3\n4\n5\n6\n7\n8\n8 7 6 5 4 3 2 1 \n1\n8\n2\n7\n3\n6\n4\n5"
  },
  {
    "objectID": "docs/blog/posts/Engineering/2023-01-19_queue/index.html",
    "href": "docs/blog/posts/Engineering/2023-01-19_queue/index.html",
    "title": "Data Structure (6) Queue",
    "section": "",
    "text": "Korean\n\n\n\n\nEnglish\n\n\n\n\n\n\n\n\n큐(queue)는 먼저 삽입된 데이터가 먼저 추출되는 자료구조(data structure)다. (First-In First-Out)\n딥러닝 모델에 들어가는 데이터 순서대로 들어가는데 먼저 들어간 데이터는 먼저 나오게 할때 사용되는 자료 구조이다.\n\n\n\n\n\n큐를 연결 리스트로 구현하면, 삽입과 삭제에 있어서 \\(O(1)\\) 을 보장할 수 있다.\n연결 리스트로 구현할 때는 머리(head)와 꼬리(tail) 두 개의 포인터를 가진다.\n머리(head): 남아있는 원소 중 가장 먼저 들어 온 데이터를 가리키는 포인터\n꼬리(tail): 남아있는 원소 중 가장 마지막에 들어 온 데이터를 가리키는 포인터\n\n\n\n\n삽입할 때는 꼬리(tail) 위치에 데이터를 넣는다.\n값으로 8을 갖는 새로운 데이터가 삽입되었을 때 예시)\n\n\n\n\n\n삭제할 때는 머리(head) 위치에서 데이터를 꺼낸다.\n하나의 데이터를 삭제할 때의 예시)\n\n\n\nCode\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Queue:\n    def __init__(self):\n        self.head = None\n        self.tail = None\n\n    def enqueue(self, data):\n        node = Node(data)\n        if self.head == None:\n            self.head = node\n            self.tail = node\n        # 꼬리(tail) 위치에 새로운 노드 삽입\n        else:\n            self.tail.next = node\n            self.tail = self.tail.next\n\n    def dequeue(self):\n        if self.head == None:\n            return None\n\n        # 머리(head) 위치에서 노드 꺼내기\n        data = self.head.data\n        self.head = self.head.next\n\n        return data\n\n    def show(self):\n        cur = self.head\n        while cur:\n            print(cur.data, end=\" \")\n            cur = cur.next\n\n\nqueue = Queue()\ndata_list = [3, 5, 9, 8, 5, 6, 1, 7]\n\nfor data in data_list:\n    queue.enqueue(data)\n\nprint(\"\\n전체 노드 출력:\", end=\" \")\nqueue.show()\n\nprint(\"\\n[원소 삭제]\")\nprint(queue.dequeue())\nprint(queue.dequeue())\nprint(queue.dequeue())\n\nprint(\"[원소 삽입]\")\nqueue.enqueue(2)\nqueue.enqueue(5)\nqueue.enqueue(3)\n\nprint(\"전체 노드 출력:\", end=\" \")\nqueue.show()\n\n\n\n전체 노드 출력: 3 5 9 8 5 6 1 7 \n[원소 삭제]\n3\n5\n9\n[원소 삽입]\n전체 노드 출력: 8 5 6 1 7 2 5 3 \n\n\n\n\n\n\n다수의 데이터를 삽입 및 삭제할 때에 대하여, 수행 시간을 측정할 수 있다.\n단순히 Python의 리스트 자료형을 이용할 때보다 수행 시간 관점에서 효율적이다.\n\n\n\nCode\nimport time\n\ndata_list = [i for i in range(100000)]\n\nstart_time = time.time()\n\nqueue = []\nfor data in data_list:\n    queue.append(data)\nwhile queue:\n    queue.pop(0)\n\nprint(f\"Elapsed time: {time.time() - start_time} seconds.\")\nprint(queue)\n\nstart_time = time.time()\n\nqueue = Queue()\nfor data in data_list:\n    queue.enqueue(data)\nwhile queue.head != None:\n    queue.dequeue()\n\nprint(f\"Elapsed time: {time.time() - start_time} seconds.\")\nqueue.show()\n\n\nElapsed time: 0.8915739059448242 seconds.\n[]\nElapsed time: 0.10299944877624512 seconds."
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#docker",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#docker",
    "title": "Blog Guide Map, Engineering",
    "section": "4 Docker",
    "text": "4 Docker\n\n2023-01-30, Docker Install\n2023-01-31, Docker Compose\n2023-02-01, Docker Container"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#data-structure",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#data-structure",
    "title": "Blog Guide Map, Engineering",
    "section": "2 Data Structure",
    "text": "2 Data Structure\n\n2023-01-17, Overview\n2023-01-18, Array\n2023-01-18, Linked List\n2023-01-18, Python List\n2023-01-19, Stack\n2023-01-19, Queue\n2023-01-26, Deque\n2023-01-26, Binary Search Tree\n2023-01-20, Priority Queue\n2023-01-20, Graph"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#conda",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#conda",
    "title": "Blog Guide Map, Engineering",
    "section": "3 Conda",
    "text": "3 Conda"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#dynamic-documentation",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#dynamic-documentation",
    "title": "Blog Guide Map, Engineering",
    "section": "5 Dynamic Documentation",
    "text": "5 Dynamic Documentation\n\n2023-01-19, Quarto\n2023-01-19, xaringan[R]\n2023-01-19, Bookdown[R]\n2023-01-19, DISTL\n2023-01-26, Sphinx[Python]"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#aws-cloud",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#aws-cloud",
    "title": "Blog Guide Map, Engineering",
    "section": "6 AWS Cloud",
    "text": "6 AWS Cloud"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#azure-cloud",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#azure-cloud",
    "title": "Blog Guide Map, Engineering",
    "section": "7 Azure Cloud",
    "text": "7 Azure Cloud"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#data-modeling",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#data-modeling",
    "title": "Blog Guide Map, Engineering",
    "section": "8 Data Modeling",
    "text": "8 Data Modeling"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#apache-airflow",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#apache-airflow",
    "title": "Blog Guide Map, Engineering",
    "section": "9 Apache Airflow",
    "text": "9 Apache Airflow"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#apache-spark",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#apache-spark",
    "title": "Blog Guide Map, Engineering",
    "section": "10 Apache Spark",
    "text": "10 Apache Spark"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#front-end",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#front-end",
    "title": "Blog Guide Map, Engineering",
    "section": "11 Front End",
    "text": "11 Front End"
  },
  {
    "objectID": "docs/blog/posts/Engineering/guide_map/index.html#back-end",
    "href": "docs/blog/posts/Engineering/guide_map/index.html#back-end",
    "title": "Blog Guide Map, Engineering",
    "section": "12 Back End",
    "text": "12 Back End"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html#basic",
    "href": "docs/blog/posts/statistics/guide_map/index.html#basic",
    "title": "Blog Guide Map, Statistics",
    "section": "Basic",
    "text": "Basic\n\n1111-11-11, Probability\n1111-11-11, Random Variable\n1111-11-11, Probability Distribution\n1111-11-11, Discrete Random Variable\n1111-11-11, Continuous Random Variable\n1111-11-11, Normal Distribution\n1111-11-11, Dependent Variable and Independent Variable\n1111-11-11, Joint Distribution and Marginal Distribution\n1111-11-11, Conditional Probability\n1111-11-11, Bayes’ Theorem\n1111-11-11, Expected Value vs Realizaed Value\n1111-11-11, Variance\n1111-11-11, Covariance and Correlation\n1111-11-11, Estimation\n1111-11-11, Maximum Likelihood Estimation (MLE)\n1111-11-11, Variance and Bias\n1111-11-11, Exponential Family Distributions\n\n1111-11-11, Bernoulli Distribution\n1111-11-11, Binomial Distribution\n1111-11-11, Poisson Distribution\n1111-11-11, Normal Distribution\n1111-11-11, Exponential Distribution\n1111-11-11, Beta Distribution\n1111-11-11, Chi-squared Distribution\n1111-11-11, Geometric Distribution\n1111-11-11, Hypergeometric Distribution\n1111-11-11,"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html#inferencce",
    "href": "docs/blog/posts/statistics/guide_map/index.html#inferencce",
    "title": "Blog Guide Map, Statistics",
    "section": "Inferencce",
    "text": "Inferencce\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n2023-01-27, ANCOVA\n2023-01-27, repeated measures ANOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html#regression",
    "href": "docs/blog/posts/statistics/guide_map/index.html#regression",
    "title": "Blog Guide Map, Statistics",
    "section": "Regression",
    "text": "Regression\n\n1111-11-11, Least Square and Simple Linear Regression\n1111-11-11, Multiple Linear Regression\n\n\nGeneralized Linear Models\n\n1111-11-11, Logistic Regression\n1111-11-11, Multinomial Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n\n\n\nMixed Models\n\n1111-11-11, Linear Mixed Models"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html#generalized-additive-models",
    "href": "docs/blog/posts/statistics/guide_map/index.html#generalized-additive-models",
    "title": "Blog Guide Map, Statistics",
    "section": "Generalized Additive Models",
    "text": "Generalized Additive Models"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html#survival-analysis",
    "href": "docs/blog/posts/statistics/guide_map/index.html#survival-analysis",
    "title": "Blog Guide Map, Statistics",
    "section": "Survival Analysis",
    "text": "Survival Analysis\n\n1111-11-11, Cox-Hazard Model"
  },
  {
    "objectID": "docs/projects/LLFS/data_preparation.html#simulation",
    "href": "docs/projects/LLFS/data_preparation.html#simulation",
    "title": "Data Preparation",
    "section": "2 Simulation",
    "text": "2 Simulation\n\n2.1 Package Loading and Option Settings\n\n\nShow the code\nrm(list=ls())\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(glmnet)\nlibrary(MASS)\nlibrary(mixOmics)\nset.seed(20230121) # the date writing this\nknitr::opts_chunk$set(message=FALSE,warning=FALSE)\n\n\n\n\n2.2 Global Functions & Variables\n\n\nShow the code\n## Function List\n\nscale_function=function(vector=x,min=a,max=b,method=\"customized\"){\n    if(method==\"min-max\"){\n        result=(vector-min(vector))(max(vector)-min(vector))\n    }else if(method==\"customized\"){\n        result=(max-min)*(vector-min(vector))/(max(vector)-min(vector))+min\n    }else{\n        result=(vector-mean(vector))/sd(vector)\n    }\n  return(result)\n}\n\ngenotype_data_generator=function(temp_data,fun=scale_function,start_quantile,end_quantile){\n    temp=temp_data%>%\n    pull%>%\n    fun(vector=.,min=0,max=1,method=\"customized\")\n    return(ifelse(temp>temp%>%quantile(.,probs=start_quantile)&temp<temp%>%quantile(.,probs=end_quantile),1,0))\n}\n\n# the number of samples\nsample_size <- 1000\n# the number of predictors\npredictor_size <- 5000\n# the number of groups\ngroup_size <- sample(6:10,1) # at least more than 6, the number of the genotypes\n# the number of predictors truly associated with a response variable\nsignificant_predictors <- floor(predictor_size*sample((50:100)/1000,1)) \n\n## set the predictors associated with an outcome\n### the number of predictors positively associated with an outcome\n### the number of predictors negatively associated with an outcome\npositively_associated_predictors<-floor(significant_predictors*0.4) \nnegatively_associated_predictors<-significant_predictors-positively_associated_predictors \n\n## set the proportion of the groups in which the predictors are correlated with one another\n### randomly sampling proportions to become their sum equal to 1\ngroup_proportion_list<-sample(seq(1,1+2*(100-group_size)/group_size,\n                            by=2*(100-group_size)/(group_size*(group_size-1)))/100,\n                        group_size,replace=FALSE)%>%round(3) \nnames(group_proportion_list)<-paste0(\"group\",1:length(group_proportion_list))\n### initialize a matrix with a size as sample_size by predictor_size\npredictor_matrix <- matrix(0, ncol = predictor_size, nrow = sample_size)\n### initialize a data frame and assign meta information used to generate simulated data\ngroup_meta_data<-\n    data.frame(\n        group_name=c(names(group_proportion_list)),\n        proportion=group_proportion_list)%>%\n        mutate(\n            group_n=(predictor_size*group_proportion_list)%>%round(0), # the number of predictors within each group \n            first_index=c(1,cumsum(group_n[-length(group_proportion_list)])+1), # the 1st index of predictors in each group\n            last_index=cumsum(group_n), # the last index of predictors in each group\n            group_correlation=sample((0:700)/1000,length(group_proportion_list),replace=TRUE), # within-group correlations among the within-group predictors\n            group_effect=sample((-40:30)/100,length(group_proportion_list),replace=TRUE)) # effect of each group on an outcome variable\n### set a group effect as 0.7 into a group with the smallest group number \ngroup_meta_data[which.min(group_meta_data[,\"group_n\"]),\"group_effect\"]<-0.7\n\n### set a group effect as -0.5 into a group with the second smallest group number \ngroup_meta_data[group_meta_data[,\"group_n\"]==(sort(group_meta_data[,\"group_n\"])[2]),\"group_effect\"]<-(-0.5)\n\n\n\n# initialize a data matrix to assign simulated values\n## add some noise to data\ndata<-matrix(rnorm(sample_size*predictor_size,mean=0,sd=0.01), \n             nrow = sample_size, ncol = predictor_size)\n\n# initialize a covariance matrix to assign simulated values\ncovariance_matrix<-matrix(rnorm(predictor_size*predictor_size,mean=0,sd=0.05),\n                          nrow=predictor_size, ncol=predictor_size)\nbeta_coefficients <- rnorm(predictor_size,0,0.05)\n\nanswer_list<-list(\n    'sample size'=sample_size,\n    'predictor size'=predictor_size,\n    'group size'=group_size,\n    'significant predictors'=significant_predictors,\n    'positively associated predictors'=positively_associated_predictors,\n    'negatively associated predictors'=negatively_associated_predictors,\n    'group proportion list'=group_proportion_list,\n    'group meta data'=group_meta_data,\n    'data noise intensity'=c('distribution'='rnorm','mean'=0,'sd'=0.01),\n    'covariance noise intensity'=c('distribution'='rnorm','mean'=0,'sd'=0.05),\n    'effect noise intensity on response'=c('distribution'='rnorm','mean'=0,'sd'=0.05),\n    'link function' = 'logistic function',\n    'link function noise intensity' = c('distribution'='rnorm','mean'=0.2,'sd'=0.05),\n    'age_distirbution'='used data of a variable with the highest effect on outcome',\n    'sex_distribution'='rbinom(n=sample size,p=0.5)',\n    'genotype_distirbution'=list(\n        'e2/e2'='8%, the bottom 8 % of the percentiles of the outcome probabilities with noises',\n        'e2/e3'='15%, the bottom 23 % of the percentiles of the outcome probabilities with noises',\n        'e2/e4'='8.6%, the bottom 31.6 % of the percentiles of the outcome probabilities with noises',\n        'e3/e3'='30%, the bottom 61.6 % of the percentiles of the outcome probabilities with noises',\n        'e3/e4'='25%, the bottom 86.6 % of the percentiles of the outcome probabilities with noises',\n        'e4/e4'='13.4%, above the bottom 86.6 % of the percentiles of the outcome probabilities with noises'),\n    'treatment_distirbution'=list(\n        'control' = '70%, the bottom 70 % of the percentiles of the outcome probabilities with noises',\n        'treatment1'='15%, the bottom 85 % of the percentiles of the outcome probabilities with noises',\n        'treatment2'='10%, bottom 95 % of the percentiles of the outcome probabilities with noises',\n        'treatment3'='5%, above the bottom 8 % of the percentiles of the outcome probabilities with noises'\n    ))\n\n\n\n\n2.3 Simulation Algorithm\n\n\nShow the code\n# generate simulation data using multivariate normal distribution\nfor (i in 1:nrow(group_meta_data)) {\n    \n    group_range <- group_meta_data[i, \"first_index\"]:group_meta_data[i, \"last_index\"]\n    for (j in group_range){\n        for(k in group_range){\n        covariance_matrix[j, k] <- group_meta_data[i, \"group_correlation\"]\n        }\n    }\n    #covariance_matrix[group_range, group_range]+group_meta_data[i, \"group_correlation\"]    \n    diag(covariance_matrix) <- 1\n    data[, group_range] <- \n        mvrnorm(n = sample_size, \n                mu = rep(0,group_meta_data[i,\"group_n\"]),\n                Sigma = covariance_matrix[group_range, group_range])\n    data=as.data.frame(data)\n    beta_coefficients[group_meta_data[i, \"first_index\"]:group_meta_data[i, \"last_index\"]] <-\n        beta_coefficients[group_meta_data[i, \"first_index\"]:group_meta_data[i, \"last_index\"]]+\n        group_meta_data[i,\"group_effect\"]\n    predictor_names<-paste0(group_meta_data[i,\"group_name\"],\"_\",1:group_meta_data[i,\"group_n\"])\n    names(beta_coefficients)[group_meta_data[i, \"first_index\"]:group_meta_data[i, \"last_index\"]] <- predictor_names\n    names(data)[group_meta_data[i, \"first_index\"]:group_meta_data[i, \"last_index\"]]<-predictor_names\n        \n}\nscore=as.matrix(data)%*%beta_coefficients # score of each sample\n\n# logistic function to get a probability, intercept = 0, \n## set probabilities-0.2 to apply noise and negative probabilities into 0\nprobabilities <- ((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05))%>%\nifelse(.>1,1,.)%>%ifelse(.<0,0,.)\n\nresponse <-ifelse(rbinom(sample_size, 1, probabilities)==0,'negative','positive')%>%\nfactor(.,levels=c('negative','positive'))\n\n# sex distribution\nsex_distribution=rbinom(sample_size,1,0.5)\n\n# age distribution\n## use data of a variable with the the lowest p.value of the t test result on response\n## find a variable with the largest difference of the means between the response groups\ntemp_df=as.data.frame(matrix(ncol=5))\nfor(i in 1:ncol(data)){\n    temp_df[i,]=c(names(data)[i],\n    t.test(data[,i]~response)$estimate[1],\n    t.test(data[,i]~response)$estimate[2],\n    t.test(data[,i]~response)$estimate[2]-t.test(data[,i]~response)$estimate[1],\n    t.test(data[,i]~response)$p.value)\n}\nnames(temp_df)<-c('metabolite','mean_neg','mean_pos','mean_diff','p.value')\n\nstrong_metabolite=temp_df%>%\n    mutate(\n        mean_neg=as.numeric(mean_neg),\n        mean_pos=as.numeric(mean_pos),\n        mean_diff=as.numeric(mean_diff),\n        p.value=as.numeric(p.value),\n        abs_mean_diff=abs(mean_diff))%>%\n        filter(abs_mean_diff==max(abs_mean_diff))%>%\n    dplyr::select(metabolite)%>%\n    pull\n\nage_distribution=data%>%\ndplyr::select(strong_metabolite)%>%\nscale_function(vector=.,min=65,max=105,method=\"customized\")%>%round(0)\n\n\n\nttt=cbind(response,age_distribution,data[,strong_metabolite])%>%\nas.data.frame()%>%\nrename(age=2,group3_153=3)\nhead(ttt)\nttt%>%group_by(response)%>%summarise(mean(group3_153))%>%knitr::kable()\n\nggplot(data=ttt,aes(x=group3_153,color=response))+geom_histogram(fill='white',position=\"identity\")+\n\nstr(ttt)\n\n# genotype distribution\n\ngenotype_quantile_data<-quantile(data[,strong_metabolite],\n#probs=cumsum(c(0.08,0.15,0.086,0.30,0.25)))\nprobs=cumsum(c(0.25,0.3,0.086,0.15,0.08)))\n\ngenotype_distribution<-data.frame(\n    metabolite=data[,strong_metabolite])%>%\n    mutate(\n        genotype=ifelse(metabolite<genotype_quantile_data[1],'e4e4',\n        ifelse(metabolite<genotype_quantile_data[2],'e3e4',\n        ifelse(metabolite<genotype_quantile_data[3],'e3e3',\n        ifelse(metabolite<genotype_quantile_data[4],'e2e3',\n        ifelse(metabolite<genotype_quantile_data[5],'e2e4','e4e4'))))))\n\ngenotype_distribution%>%group_by(genotype)%>%summarise(n=n())\nggplot(data=genotype_distribution,aes(x=metabolite,fill=genotype))+geom_histogram(position=\"identity\")\n\ntreatment_quantile_data<-quantile((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05),\nprobs=cumsum(c(0.7,0.15,0.1)))\n\ntreatment_distribution<-data.frame(\n    probability=((1/(1+exp(-(0+score))))-rnorm(sample_size,m=0.2,sd=0.05)))%>%\n    mutate(\n        treatment=ifelse(probability<treatment_quantile_data[1],'control',\n        ifelse(probability<treatment_quantile_data[2],'trtmnt1',\n        ifelse(probability<treatment_quantile_data[3],'trtmnt2','trtmnt3'))))\n\nphenotype_data<-\n    data.frame(\n        id=1:sample_size,\n        outcome=response,\n        probabilities=probabilities,\n        age=age_distribution,\n        sex=sex_distribution,\n        genotype=genotype_distribution[,'genotype'],\n        treatment=treatment_distribution[,'treatment'])%>%\n        mutate(\n            age=ifelse(outcome==\"positive\")\n            )\n\nall_data=inner_join(phenotype_data,data%>%mutate(id=1:n()),by=\"id\")\n\n#write_rds(all_data,\"./docs/projects/data/llfs_simulated_data.rds\")\n\n\n\n\n2.4 Load Data\n\n\nShow the code\ndatapath<-\"C:/Users/kmkim/Desktop/my_project/website/docs/projects/data/llfs_simulated_data.rds\"\n#datapath<-\"C:/Users/kkm/Desktop/projects/website/docs/projects/data/llfs_simulated_data.rds\"\nsimulated_data=read_rds(datapath)%>%dplyr::select(-1,-probabilities)\n\nall_data=simulated_data\n\nall_data=all_data%>%\nmutate(\n      outcome=ifelse(outcome==0,\"negative\",\"positive\"),\n      outcome=factor(outcome,levels=c(\"negative\",\"positive\")),\n      sex=ifelse(sex==0,\"man\",\"woman\"),\n      sex=factor(sex,levels=c(\"man\",\"woman\")),\n      treatment=factor(treatment,levels=c(\"control\",\"trtmnt1\",\"trtmnt2\",\"trtmnt3\")),\n      genotype=factor(genotype,levels=c(\"e3e3\",\"e2e2\",\"e2e3\",\"e2e4\",\"e3e4\",\"e4e4\"))\n      )\n names(all_data)[6:ncol(all_data)]<-paste0(\"meta\",1:predictor_size)"
  },
  {
    "objectID": "docs/blog/posts/Validation/guide_map/index.html",
    "href": "docs/blog/posts/Validation/guide_map/index.html",
    "title": "Blog Guide Map, Validation",
    "section": "",
    "text": "0000-00-00, EN62304"
  },
  {
    "objectID": "docs/blog/posts/Validation/guide_map/index.html#fda",
    "href": "docs/blog/posts/Validation/guide_map/index.html#fda",
    "title": "Blog Guide Map, Validation",
    "section": "2 FDA",
    "text": "2 FDA\n\n2023-01-27, General Guidance of SW Validation\n2023-01-27, General Guidance of SW Validation, Diagram Summary"
  },
  {
    "objectID": "docs/blog/posts/Validation/guide_map/index.html#dhf",
    "href": "docs/blog/posts/Validation/guide_map/index.html#dhf",
    "title": "Blog Guide Map, Validation",
    "section": "3 DHF",
    "text": "3 DHF"
  },
  {
    "objectID": "docs/blog/posts/Validation/guide_map/index.html#public-health",
    "href": "docs/blog/posts/Validation/guide_map/index.html#public-health",
    "title": "Blog Guide Map, Validation",
    "section": "4 Public Health",
    "text": "4 Public Health"
  },
  {
    "objectID": "docs/blog/posts/Validation/guide_map/index.html#wet-lab",
    "href": "docs/blog/posts/Validation/guide_map/index.html#wet-lab",
    "title": "Blog Guide Map, Validation",
    "section": "5 Wet Lab",
    "text": "5 Wet Lab\n\n0000-00-00, PCR (Polymerase Chain Reaction) Experiment"
  },
  {
    "objectID": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html",
    "href": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html",
    "title": "FDA Software Validation Guidance Summary",
    "section": "",
    "text": "I am so sorry not for providing a compfortab visualization. Although I have tried to use revealjs provided in the guide section in the Quarto website, I am still clumsy at handling it. I will update this article as I get proficient at revealjs using Quarto.\nThe FDA validation guidance document is a bit difficult to understand because its explanations provides abstract, general, and present broad cocepts. For this reason, I compiled and made a summary of the document with many diagrams. However, some diagrams are too small to see. Please, scroll up your mouse wheel with the ‘Ctrl’ key on your keyboard pressed to zoom in on the small text in the diagrams.\n(Writing in Progress) It is hard to say that this version of summary is suitable for representing and covering the original document. Some of the content of this document has been excluded for personal use (less than 10% of it have been excluded).\n\n\n\n\n2022-12-28, download this article as PDF\n2022-12-28, summary with diagrams\n\n\n\n\nFDA: General Principles of Software Validation\n\n\n\nFDA has reported the following analysis:\n\n242 of 3140 (7.7%) medical device recalls between 1992 and 1998 are attributable to software failures.\n192 of the 242 (79.3%) failures were caused by software defects that were introduced when changes were made to the software after its initial production and distribution.\nThe software validation check is a principal means of avoiding such defects and resultant recalls.\n\n\n\n\n\nCenter for Devices and Radiological Health (CDRH)\nU.S. Department Of Health and Human Services\nFood and Drug Administration\nCenter for Biologics Evaluation and Research"
  },
  {
    "objectID": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#purpose",
    "href": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#purpose",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.1 Purpose",
    "text": "2.1 Purpose\nThe purpose is to make a sketch of general validation principle of the validation of medical device software or software used to design or develop."
  },
  {
    "objectID": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#scope",
    "href": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#scope",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.2 Scope",
    "text": "2.2 Scope\nThe scope of this guidance is broad. The important activities for the software validation include at least:\n\nplanning,\nverfication,\ntesting,\ntraceability, and\nconfiguration management.\n\nAll of the activities above should be\n\nintegrated\nbe able to describe software life cycle management and\nbe able to describe software risk management.\n\nThe software validation and verification activities should be focused into the entire software life cycle. (It does not necessarily mean that the activies must follow any technical models.)\nThe guidance is applicable to any software related to a regulated medical device and anyone who is employed in a bio or medical industry.\n\n2.2.1 The Least Burdensome Approach\nThe guidance reflects that the minimum list of the relavant scientific and legal requirements that you must comply with.\n\n\n2.2.2 Regulatory Requirements for Software Validation\n\nSoftware validation: a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997. (See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\nSpecific requirements for validation of device software are found in 21 CFR §820.30(g). Other design controls, such as planning, input, verification, and reviews, are required for medical device software. (See 21 CFR §820.30.)\ncomputer systems used to create, modify, and maintain electronic records and to manage electronic signatures are also subject to the validation requirements. (See 21 CFR §11.10(a).)\n\n\n2.2.2.1 Objective\nThe objective of software validation is to ensure:\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\n2.2.2.2 What to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software.\n\n\n\n2.2.3 Quality System Regulation vs Pre-market Submissions\nThis document does not address any specific requirements but general ones. Specific issues should be addressed to\n\nthe Office of Device Evaluation (ODE),\nCenter for Devices and Radiological Health (CDRH)\nthe Office of Blood Research and Review,\nCenter for Biologics Evaluation and Research (CBER). See the references in Appendix A for applicable FDA guidance documents for pre-market submissions."
  },
  {
    "objectID": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#context-for-software-validation",
    "href": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#context-for-software-validation",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.3 Context for Software Validation",
    "text": "2.3 Context for Software Validation\n\nValidation elements that FDA expects to do for the Quality System regulation, using the principles and tasks are listed in Sections 4 and 5.\nAdditional specific information is available from many of the references listed in Appendix A\n\n\n2.3.1 Definition and Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology between the medical device Quality System regulation and the software industry:\n\nrequirements,\nspecification,\nverification, and\nvalidation.\n\n\n\n2.3.1.1 Requirements and Specifications\nThe Quality System regulation states\n\nthat design input requirements must be documented and\nthat specified requirements must be verified\n\nBut, the regulation does not further clarify the distinction between the terms “requirement” and “specification.”\n\nRequirement\n\ncan be any need or expectation for a system or for its software.\nreflects the stated or implied needs of the customer: requirements may be\n\nmarket-based,\ncontractual,\nstatutory, or\nan organization’s internal requirements.\n\nvarious examples of requirements\n\ndesign, functional, implementation, interface, performance, or physical requirements\n\nSoftware requirements derived from the system requirements for those aspects of system functionality\nSoftware requirements are typically stated in functional terms and are defined, refined, and updated as a development project progresses.\nSuccess in accurately and completely documenting software requirements is a crucial factor in successful validation of the resulting software.\n\nSpecification\n\ndefined as “a document that states requirements.” (See 21 CFR §820.3(y).)\nIt may refer to or include drawings, patterns, or other relevant documents\nIt usually indicates the means and the criteria whereby conformity with the requirement can be checked.\nVarious examples of written specifications\n\nsystem requirements specification,\nsoftware requirements specification,\nsoftware design specification,\nsoftware test specification,\nsoftware integration specification, etc.\n\nAll of these documents are design outputs for which various forms of verification are necessary.\n\n\n\n\n2.3.1.2 Verifiaction and Validation\nThe Quality System regulation is harmonized with ISO 8402:1994, which treats “verification” and “validation” as separate and distinct terms.\n\nSoftware verification\n\nIt provides objective evidence that the design outputs of a particular phase of the software development life cycle meet all of the specified requirements for that phase.\nIt looks for\n\nconsistency,\ncompleteness, and\ncorrectness of the software and its supporting documentation\n\nSoftware testing\n\nverification activities intended to confirm that software development output meets its input requirements.\n\nTypes of verification activities include\n\nvarious static and dynamic analyses,\ncode and document inspections,\nwalkthroughs, and other techniques.\n\n\nSoftware Validation\n\nConfirmation by examination and provision of the following objective evidence:\nEvidence 1: software specifications conform to user needs and intended uses, and\nEvidnece 2: the particular requirements implemented through software can be consistently fulfilled.\nEvidnece 3: all software requirements have been implemented correctly and completely and are traceable to system requirements.\nA conclusion that software is validated is highly dependent upon comprehensive software testing, inspections, analyses, and other verification tasks performed at each stage of the software development life cycle.\nTesting of device software functionality in a simulated* use environment, and user site testing are typically included as components of an overall design validation program for a software automated device.\n\nDifficulty in Software verification and validation\n\na developer cannot test forever, and\nit is difficult to know how much evidence is enough.\nIn large measure, software validation is a matter of developing a “level of confidence” that the device meets all requirements and user expectations for the software automated functions and features of the device.\nConsiderations for an acceptable level of confidence\n\nmeasures such as defects found in specifications documents,\nestimates of defects remaining,\ntesting coverage, and other techniques are all used to develop before shipping the product.\nHowever, a level of confidence varies depending upon the safety risk (hazard) posed by the automated functions of the device. (Info on safety risk is found in Section 4 and in the international standards ISO/IEC 14971-1 and IEC 60601-1-4 referenced in Appendix A).\n\n\n\n\n\n2.3.1.3 IQ/OQ/PQ\nIQ/OQ/PQ are the terminology related to user site software validation\n\nInstallation qualification (IQ)\nOperational qualification (OQ)\nPerformance qualification (PQ).\n\nDefinitions of these terms may be found in FDA’s Guideline on General Principles of Process Validation, dated May 11, 1987, and in FDA’s Glossary of Computerized System and Software Development Terminology, dated August 1995. Both FDA personnel and device manufacturers need to be aware of these differences in terminology as they ask for and provide information regarding software validation.\n\n\n\n2.3.2 Software Development as Part of System Design\nSoftware validation must be considered within the context of the overall design validation for the system. A documented requirements specification represents\n\nthe user’s needs\nintended uses from which the product is developed.\n\nA primary goal of software validation is to then demonstrate that all completed software products comply with all documented software and system requirements.\n\n\n2.3.3 Software Is Different from Hardware\nSoftware engineering needs an even greater level of managerial scrutiny and control than does hardware engineering.\n\n\n2.3.4 Benefits of Software Validation\n\nIncrease the usability and reliability of the device,\nResulting in decreased failure rates, fewer recalls and corrective actions, less risk to patients and users, and reduced liability to device manufacturers.\nSoftware validation can also reduce long term costs by making it easier and less costly to reliably modify software and revalidate software changes.\n\n\n\n2.3.5 Design Review\nDesign reviews are documented, comprehensive, and systematic examinations of a design to evaluate\n\nthe adequacy of the design requirements,\nthe capability of the design to meet these requirements, and\nto identify problems.\n\nDesign review is a primary tool for managing and evaluating development projects.\n\nIt is strongly recommended that it should be formal design because it is more structured than the informal one.\nIt includes participation from others outside the development team.\nIt may review reference or include results from other formal and informal reviews.\nDesign reviews should include\n\nexamination of development plans,\nrequirements specifications,\ndesign specifications,\ntesting plans and procedures,\nall other documents and activities associated with the project,\nverification results from each stage of the defined life cycle, and\nvalidation results for the overall device.\n\nThe Quality System regulation requires that at least one formal design review be conducted during the device design process. However, it is recommended that multiple design reviews be conducted\n\n(e.g., at the end of each software life cycle activity, in preparation for proceeding to the next activity).\n\nFormal design reviews documented should include:\n\nthe appropriate tasks and expected results, outputs, or products been established for each software life cycle activity\ncorrectness, completeness, consistency, and accuracy\nsatisfaction for the standards, practices, and conventions of that activity\nestablishment of a proper basis for initiating tasks for the next software life cycle activity"
  },
  {
    "objectID": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#principles-of-software-validation",
    "href": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#principles-of-software-validation",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.4 Principles of Software Validation",
    "text": "2.4 Principles of Software Validation\n\n2.4.1 Requirements\nA documented software requirements specification provides a baseline for both validation and verification. The software validation process must include an established software requirements specification (Ref: 21 CFR 820.3(z) and (aa) and 820.30(f) and (g)).\n\n\n2.4.2 Defect Prevention\nIn order to establish that confidence, software developers should use a mixture of methods and techniques to prevent software errors and to detect software errors that do occur.\n\n\n2.4.3 Time and Effort\nPreparation for software validation should begin early, i.e., during design and development planning and design input. The final conclusion that the software is validated should be based on evidence collected from planned efforts conducted throughout the software lifecycle.\n\n\n2.4.4 Software Life Cycle\n\nSoftware validation takes place within the environment of an established software life cycle.\nThe software life cycle contains software engineering tasks and documentation necessary to support the software validation effort.\nspecific verification and validation tasks need to be appropriate for the intended use of the software\n\n\n\n2.4.5 Plans\n\nThe software validation process is defined and controlled through the use of a plan.\nThe software validation plan defines “what” is to be accomplished through the software validation effort.\nSoftware validation plans specify areas such as\n\nscope,\napproach,\nresources,\nschedules and the types and extent of activities,\ntasks, and\nwork items.\n\n\n\n\n2.4.6 Procedures\nThe software validation process is executed through the use of procedures. These procedures establish “how” to conduct the software validation effort. The procedures should identify the specific actions or sequence of actions that must be taken to complete individual validation activities, tasks, and work items.\n\n\n2.4.7 Software Validation After a Change\n\nDue to the complexity of software, a small local change may have a significant global system impact.\nIf a change exists in the software, the whole validation status of the software needs to be re-established.\nneed to determine the extent and impact of that change on the entire software system.\nthe software developer should then conduct an appropriate level of software regression testing to show that unchanged but vulnerable portions of the system have not been adversely affected.\n\n\n\n2.4.8 Validation Coverage\n\nValidation coverage should be based on the software’s complexity and safety risk.\nThe selection of validation activities, tasks, and work items should be commensurate with the complexity of the software design and the risk associated with the use of the software for the specified intended use.\n\n\n\n2.4.9 Independence of Review\n\nValidation activities should be based on the basic quality assurance precept of “independence of review.”\nSelf-validation is extremely difficult.\nWhen possible, an independent evaluation is always better (like a contracted third-party independent verification and validation)\nAnother approach is to assign internal staff members that are not involved in a particular design or its implementation, but who have sufficient knowledge to evaluate the project and conduct the verification and validation activities.\n\n\n\n2.4.10 Flexibility and Responsibility\nThe device manufacturer has flexibility in choosing how to apply these validation principles, but retains ultimate responsibility for demonstrating that the software has been validated. FDA regulated medical device applications include software that:\n\nIs a component, part, or accessory of a medical device;\n\ncomponents: e.g., application software, operating systems, compilers, debuggers, configuration management tools, and many more\n\nIs itself a medical device; or\nIs used in manufacturing, design and development, or other parts of the quality system.\nNo matter how complex and disperse the software is, the manufacturer is in charge of responsibility for software validation."
  },
  {
    "objectID": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#activities-and-tasks",
    "href": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#activities-and-tasks",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.5 Activities and Tasks",
    "text": "2.5 Activities and Tasks\nSoftware validation is accomplished through a series of activities and tasks that are planned and executed at various stages of the software development life cycle. These tasks may be\n\none time occurrences\niterated many times\n\n\n2.5.1 Software Life Cycle Activities\n\nSoftware developers should establish a software life cycle model that is appropriate for their product and organization.\nThe selected software life cycle model should cover the software from its birth to its retirement.\nActivities in a typical software life cycle model:\n\nQuality Planning\nSystem Requirements Definition\nDetailed Software Requirements Specification\nSoftware Design Specification\nConstruction or Coding\nTesting\nInstallation\nOperation and Support\nMaintenance\nRetirement\n\nVerification, testing, and other tasks that support software validation occur during each of these activities.\nSeveral software life cycle models defined in FDA’s Glossary of Computerized System and Software Development\n\nTerminology dated August 1995:\n\nwaterfall\nspiral\nrapid prototyping\nincremental development, etc.\n\n\n\n2.5.2 Typical Tasks Supporting Validation\nthe software developer should at least consider each of the risk-related tasks and should define and document which tasks are or are not appropriate for their specific application.\n\n2.5.2.1 Quality Planning\nDesign and development planning should culminate in a plan that identifies\n\nnecessary tasks,\nprocedures for anomaly reporting and resolution,\nnecessary resources, and\nmanagement review requirements including formal design reviews.\n\nThe plan should include:\n\nThe specific tasks for each life cycle activity;\nEnumeration of important quality factors (e.g., reliability, maintainability, and usability);\nMethods and procedures for each task;\nTask acceptance criteria;\nCriteria for defining and documenting outputs in terms that will allow evaluation of their conformance to input requirements;\nInputs for each task;\nOutputs from each task;\nRoles, resources, and responsibilities for each task;\nRisks and assumptions; and\nDocumentation of user needs.\n\nThe plan should identify\n\nthe personnel,\nthe facility and equipment resources for each task, and\nthe role that risk (hazard) management will play.\n\nA configuration management plan should be developed that will guide and control multiple parallel development activities and ensure proper communications and documentation.\nControls are necessary to ensure positive and correct correspondence among all approved versions of the specifications documents, source code, object code, and test suites that comprise a software system. The controls also should ensure accurate identification of, and access to, the currently approved versions.\nProcedures should be created for reporting and resolving software anomalies found through validation or other activities.\nManagement should identify the reports and specify the contents, format, and responsible organizational elements for each report. Procedures also are necessary for the review and approval of software development results, including the responsible organizational elements for such reviews and approvals.\nTypical Tasks – Quality Planning\n\nRisk (Hazard) Management Plan\nConfiguration Management Plan\nSoftware Quality Assurance Plan\n\nSoftware Verification and Validation Plan\n\nVerification and Validation Tasks, and Acceptance Criteria\nSchedule and Resource Allocation (for software verification and validation activities)\nReporting Requirements\n\nFormal Design Review Requirements\nOther Technical Review Requirements\n\nProblem Reporting and Resolution Procedures\nOther Support Activities\n\n\n\n2.5.2.2 Requirements\nRequirements development includes the\n\nidentification,\nanalysis, and\ndocumentation of information about the device and its intended use.\n\nAreas of special importance include allocation of system functions to\n\nhardware/software,\noperating conditions,\nuser characteristics,\npotential hazards, and\nanticipated tasks.\n\nIn addition, the requirements should state clearly the intended use of the software. It is not possible to validate software without predetermined and documented software requirements. Typical software requirements specify the following:\n\nAll software system inputs;\nAll software system outputs;\nAll functions that the software system will perform;\nAll performance requirements that the software will meet, (e.g., data throughput, reliability, and timing);\nThe definition of all external and user interfaces, as well as any internal software-to-system interfaces;\nHow users will interact with the system;\nWhat constitutes an error and how errors should be handled;\nRequired response times;\nThe intended operating environment for the software, if this is a design constraint (e.g., hardware platform, operating system);\nAll ranges, limits, defaults, and specific values that the software will accept; and\nAll safety related requirements, specifications, features, or functions that will be implemented in software.\n\nSoftware requirement specifications should identify clearly the potential hazards that can result from a software failure in the system as well as any safety requirements to be implemented in software.\nThe consequences of software failure should be evaluated, along with means of mitigating such failures (e.g., hardware mitigation, defensive programming, etc.).\nThe Quality System regulation requires a mechanism for addressing incomplete, ambiguous, or conflicting requirements. (See 21 CFR 820.30(c).) Each requirement (e.g., hardware, software, user, operator interface, and safety) identified in the software requirements specification should be evaluated for accuracy, completeness, consistency, testability, correctness, and clarity.\nFor example, software requirements should be evaluated to verify that:\n\nThere are no internal inconsistencies among requirements;\nAll of the performance requirements for the system have been spelled out;\nFault tolerance, safety, and security requirements are complete and correct;\nAllocation of software functions is accurate and complete;\nSoftware requirements are appropriate for the system hazards; and\nAll requirements are expressed in terms that are measurable or objectively verifiable.\n\nA software requirements traceability analysis should be conducted to trace software requirements to (and from) system requirements and to risk analysis results. In addition to any other analyses and documentation used to verify software requirements, a formal design review is recommended to confirm that requirements are fully specified and appropriate before extensive software design efforts begin. Requirements can be approved and released incrementally, but care should be taken that interactions and interfaces among software (and hardware) requirements are properly reviewed, analyzed, and controlled.\nTypical Tasks – Requirements\n\nPreliminary Risk Analysis\nTraceability Analysis\n\nSoftware Requirements to System Requirements (and vice versa)\nSoftware Requirements to Risk Analysis\n\nDescription of User Characteristics\nListing of Characteristics and Limitations of Primary and Secondary Memory\nSoftware Requirements Evaluation\nSoftware User Interface Requirements Analysis\nSystem Test Plan Generation\nAcceptance Test Plan Generation\nAmbiguity Review or Analysis\n\n\n\n2.5.2.3 Design\nIn the design process, the software requirements specification is translated into a logical and physical representation of the software to be implemented. The software design specification is a description of what the software should do and how it should do it. The design specification may contain both a high level summary of the design and detailed design information. Human factors engineering should be woven into\n\nthe entire design and development process,\nthe device design requirements,\nanalyses, and\ntests.\n\nDevice safety and usability issues should be considered when developing\n\nflowcharts,\nstate diagrams,\nprototyping tools, and\ntest plans.\n\nAlso, task and function analyses, risk analyses, prototype tests and reviews, and full usability tests should be performed. Participants from the user population should be included when applying these methodologies.\nThe software design specification should include:\n\nSoftware requirements specification, including predetermined criteria for acceptance of the software;\nSoftware risk analysis;\nDevelopment procedures and coding guidelines (or other programming procedures);\nSystems documentation (e.g., a narrative or a context diagram) that describes the systems context in which the program is intended to function, including the relationship of hardware, software, and the physical environment;\nHardware to be used;\nParameters to be measured or recorded;\nLogical structure (including control logic) and logical processing steps (e.g., algorithms);\nData structures and data flow diagrams;\nDefinitions of variables (control and data) and description of where they are used;\nError, alarm, and warning messages;\nSupporting software (e.g., operating systems, drivers, other application software);\nCommunication links (links among internal modules of the software, links with the supporting software, links with the hardware, and links with the user);\nSecurity measures (both physical and logical security); and\nAny additional constraints not identified in the above elements.\n\nThe first four of the elements noted above usually are separate pre-existing documents that are included by reference in the software design specification. Software requirements specification was discussed in the preceding section, as was software risk analysis.\nSoftware design evaluations criteria:\n\ncomplete,\ncorrect,\nconsistent,\nunambiguous,\nfeasible,\nmaintainable,\nanalyses of control flow,\ndata flow,\ncomplexity,\ntiming,\nsizing,\nmemory allocation,\ncriticality analysis, and many other aspects of the design\n\nAppropriate consideration of software architecture (e.g., modular structure) during design can reduce the magnitude of future validation efforts when software changes are needed.\nA traceability analysis should be conducted to verify that the software design implements all of the software requirements. As a technique for identifying where requirements are not sufficient, the traceability analysis should also verify that all aspects of the design are traceable to software requirements.\nAn analysis of communication links should be conducted to evaluate the proposed design with respect to hardware, user, and related software requirements. At the end of the software design activity, a Formal Design Review should be conducted to verify that the design is correct, consistent, complete, accurate, and testable, before moving to implement the design.\nSeveral versions of both the software requirement specification and the software design specification should be maintained. All approved versions should be archived and controlled in accordance with established configuration management procedures.\nTypical Tasks – Design\n\nUpdated Software Risk Analysis\nTraceability Analysis - Design Specification to Software Requirements (and vice versa)\nSoftware Design Evaluation\nDesign Communication Link Analysis\nModule Test Plan Generation\nIntegration Test Plan Generation\nTest Design Generation (module, integration, system, and acceptance)\n\n\n\n2.5.2.4 Construction or Coding\nSoftware may be constructed either by coding. Coding is the software activity where the detailed design specification is implemented as source code. It is the last stage in decomposition of the software requirements where module specifications are translated into a programming language.\nCoding usually involves the use of a high-level programming language, but may also entail the use of assembly language (or microcode) for time-critical operations.\nA source code traceability analysis is an important tool to verify that all code is linked to established specifications and established test procedures. A source code traceability analysis should be conducted and documented to verify that:\n\nEach element of the software design specification has been implemented in code;\nModules and functions implemented in code can be traced back to an element in the software design specification and to the risk analysis;\nTests for modules and functions can be traced back to an element in the software design specification and to the risk analysis; and\nTests for modules and functions can be traced to source code for the same modules and functions.\n\nTypical Tasks – Construction or Coding\n\nTraceability Analyses\n\nSource Code to Design Specification (and vice versa)\nTest Cases to Source Code and to Design Specification\n\nSource Code and Source Code Documentation Evaluation\nSource Code Interface Analysis\nTest Procedure and Test Case Generation (module, integration, system, and acceptance)\n\n\n\n2.5.2.5 Testing by the Software Developer\nSoftware testing entails running software products under known conditions with defined inputs and documented outcomes that can be compared to their predefined expectations. It is a time consuming, difficult, and imperfect activity.\nAs such, it requires early planning in order to be effective and efficient. Test plans and test cases should be created as early in the software development process as feasible.\nThey should identify\n\nthe schedules,\nenvironments,\nresources (personnel, tools, etc.),\nmethodologies,\ncases (inputs, procedures, outputs, expected results),\ndocumentation, and\nreporting criteria.\n\nDescriptions of categories of software and software testing effort appear in the literature\n\nNIST Special Publication 500-235, Structured Testing: A Testing Methodology Using the Cyclomatic Complexity Metric;\nNUREG/CR-6293, Verification and Validation Guidelines for High Integrity Systems; and\nIEEE Computer Society Press, Handbook of Software Reliability Engineering.\n\nTesting of all program functionality does not mean all of the program has been tested. Testing of all of a program’s code does not mean all necessary functionality is present in the program. Testing of all program functionality and all program code does not mean the program is 100% correct! Software testing that finds no errors should not be interpreted to mean that errors do not exist in the software product; it may mean the testing was superficial.\nAn essential element of a software test case is the expected result. It is the key detail that permits objective evaluation of the actual test result. This necessary testing information is obtained from the corresponding, predefined definition or specification.\nA software testing process should be based on principles that foster effective examinations of a software product. Applicable software testing tenets include:\n\nThe expected test outcome is predefined;\nA good test case has a high probability of exposing an error;\nA successful test is one that finds an error;\nThere is independence from coding;\nBoth application (user) and software (programming) expertise are employed;\nTesters use different tools from coders;\nExamining only the usual case is insufficient;\nTest documentation permits its reuse and an independent confirmation of the pass/fail status of a test outcome during subsequent review.\n\nCode-based testing is also known as structural testing or “white-box” testing. It identifies test cases based on knowledge obtained from the source code, detailed design specification, and other development documents. Structural testing can identify “dead” code that is never executed when the program is run. Structural testing is accomplished primarily with unit (module) level testing, but can be extended to other levels of software testing.\nThe level of structural testing can be evaluated using metrics that are designed to show what percentage of the software structure has been evaluated during structural testing. These metrics are typically referred to as “coverage” and are a measure of completeness with respect to test selection criteria. The amount of structural coverage should be commensurate with the level of risk posed by the software. Use of the term “coverage” usually means 100% coverage. Common structural coverage metrics include:\n\nStatement Coverage – This criteria requires sufficient test cases for each program statement to be executed at least once; however, its achievement is insufficient to provide confidence in a software product’s behavior.\nDecision (Branch) Coverage – This criteria requires sufficient test cases for each program decision or branch to be executed so that each possible outcome occurs at least once. It is considered to be a minimum level of coverage for most software products, but decision coverage alone is insufficient for high-integrity applications.\nCondition Coverage – This criteria requires sufficient test cases for each condition in a program decision to take on all possible outcomes at least once. It differs from branch coverage only when multiple conditions must be evaluated to reach a decision.\nMulti-Condition Coverage – This criteria requires sufficient test cases to exercise all possible combinations of conditions in a program decision.\nLoop Coverage – This criteria requires sufficient test cases for all program loops to be executed for zero, one, two, and many iterations covering initialization, typical running and termination (boundary) conditions.\nPath Coverage – This criteria requires sufficient test cases for each feasible path, basis path, etc., from start to exit of a defined program segment, to be executed at least once. Because of the very large number of possible paths through a software program, path coverage is generally not achievable. The amount of path coverage is normally established based on the risk or criticality of the software under test.\nData Flow Coverage – This criteria requires sufficient test cases for each feasible data flow to be executed at least once. A number of data flow testing strategies are available.\n\nThe following types of functional software testing involve generally increasing levels of effort:\n\nNormal Case – Testing with usual inputs is necessary. However, testing a software product only with expected, valid inputs does not thoroughly test that software product. By itself, normal case testing cannot provide sufficient confidence in the dependability of the software product.\nOutput Forcing – Choosing test inputs to ensure that selected (or all) software outputs are generated by testing.\nRobustness – Software testing should demonstrate that a software product behaves correctly when given unexpected, invalid inputs. Methods for identifying a sufficient set of such test cases include Equivalence Class Partitioning, Boundary Value Analysis, and Special Case Identification (Error Guessing). While important and necessary, these techniques do not ensure that all of the most appropriate challenges to a software product have been identified for testing.\nCombinations of Inputs – The functional testing methods identified above all emphasize individual or single test inputs. Most software products operate with multiple inputs under their conditions of use. Thorough software product testing should consider the combinations of inputs a software unit or system may encounter during operation. Error guessing can be extended to identify combinations of inputs, but it is an ad hoc technique. Cause-effect graphing is one functional software testing technique that systematically identifies combinations of inputs to a software product for inclusion in test cases.\n\nFunctional and structural software test case identification techniques provide specific inputs for testing, rather than random test inputs. One weakness of these techniques is the difficulty in linking structural and functional test completion criteria to a software product’s reliability.\nAdvanced software testing methods, such as statistical testing, can be employed to provide further assurance that a software product is dependable. Statistical testing uses randomly generated test data from defined distributions based on an operational profile (e.g., expected use, hazardous use, or malicious use of the software product). Large amounts of test data are generated and can be targeted to cover particular areas or concerns, providing an increased possibility of identifying individual and multiple rare operating conditions that were not anticipated by either the software product’s designers or its testers. Statistical testing also provides high structural coverage. It does require a stable software product. Thus, structural and functional testing are prerequisites for statistical testing of a software product.\nAnother aspect of software testing is the testing of software changes. Changes occur frequently during software development. These changes are the result of\n\ndebugging that finds an error and it is corrected,\nnew or changed requirements (“requirements creep”), and\nmodified designs as more effective or efficient implementations are found.\n\nOnce a software product has been baselined (approved), any change to that product should have its own “mini life cycle,” including testing. Testing of a changed software product requires additional effort. It should demonstrate\n\nthat the change was implemented correctly, and\nthat the change did not adversely impact other parts of the software product.\n\nRegression analysis is the determination of the impact of a change based on review of the relevant documentation in order to identify the necessary regression tests to be run. Regression testing is the rerunning of test cases that a program has previously executed correctly and comparing the current result to the previous result in order to detect unintended effects of a software change. Regression analysis and regression testing should also be employed when using integration methods to build a software product to ensure that newly integrated modules do not adversely impact the operation of previously integrated modules.\nIn order to provide a thorough and rigorous examination of a software product, development testing is typically organized into levels: unit, integration, and system levels of testing.\n\nUnit (module or component) level testing focuses on the early examination of sub-program functionality and ensures that functionality not visible at the system level is examined by testing. Unit testing ensures that quality software units are furnished for integration into the finished software product.\nIntegration level testing focuses on the transfer of data and control across a program’s internal and external interfaces. External interfaces are those with\n\nother software (including operating system software),\nsystem hardware, and\nthe users and can be described as communications links.\n\nSystem level testing demonstrates that all specified functionality exists and that the software product is trustworthy. This testing verifies the as-built program’s functionality and performance with respect to the requirements for the software product as exhibited on the specified operating platform(s). System level software testing addresses functional concerns and the following elements of a device’s software that are related to the intended use(s):\n\nPerformance issues (e.g., response times, reliability measurements);\nResponses to stress conditions, e.g., behavior under maximum load, continuous use;\nOperation of internal and external security features;\nEffectiveness of recovery procedures, including disaster recovery;\nUsability; (Usability vs Utility??)\nCompatibility with other software products;\nBehavior in each of the defined hardware configurations; and\nAccuracy of documentation.\n\n\nControl measures (e.g., a traceability analysis) should be used to ensure that the intended coverage is achieved.\nSystem level testing also exhibits the software product’s behavior in the intended operating environment. The location of such testing is dependent upon the software developer’s ability to produce the target operating environment(s). Depending upon the circumstances, simulation and/or testing at (potential) customer locations may be utilized.\nTest plans should identify the controls needed to ensure\n\nthat the intended coverage is achieved and\nthat proper documentation is prepared when planned system level testing is conducted at sites not directly controlled by the software developer.\n\nTest procedures, test data, and test results\n\nshould be documented in a manner permitting objective pass/fail decisions to be reached.\nshould also be suitable for review and objective decision making subsequent to running the test,\nshould be suitable for use in any subsequent regression testing.\n\nErrors detected during testing should be\n\nlogged,\nclassified,\nreviewed, and\nresolved prior to release of the software.\n\nSoftware error data that is collected and analyzed during a development life cycle may be used to determine the suitability of the software product for release for commercial distribution. Test reports should comply with the requirements of the corresponding test plans.\nSoftware testing tools are frequently used to ensure consistency, thoroughness, and efficiency in the testing of such software products and to fulfill the requirements of the planned testing activities.\nAppropriate documentation providing evidence of the validation of these software tools for their intended use should be maintained (see section 6 of this guidance).\nTypical Tasks – Testing by the Software Developer\n\nTest Planning\nStructural Test Case Identification\nFunctional Test Case Identification\nTraceability Analysis - Testing\nUnit (Module) Tests to Detailed Design\nIntegration Tests to High Level Design\nSystem Tests to Software Requirements\nUnit (Module) Test Execution\nIntegration Test Execution\nFunctional Test Execution\nSystem Test Execution\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\n2.5.2.6 User Site Testing\nTesting at the user site is an essential part of software validation. The Quality System regulation requires\n\ninstallation and\ninspection procedures (including testing where appropriate) as well as\ndocumentation of inspection and\ntesting to demonstrate proper installation. (See 21 CFR §820.170.)\n\nLikewise, manufacturing equipment must meet specified requirements, and automated systems must be validated for their intended use. (See 21 CFR §820.70(g) and 21 CFR §820.70(i) respectively.)\nTerminology regarding user site testing can be confusing. Terms such as\n\nbeta test,\nsite validation,\nuser acceptance test,\ninstallation verification, and\ninstallation testing have all been used to describe user site testing.\n\nFor the purposes of this guidance, the term “user site testing” encompasses all of these and any other testing that takes place outside of the developer’s controlled environment.\nThis testing should take place at a user’s site with the actual hardware and software that will be part of the installed system configuration. The testing is accomplished through either actual or simulated use of the software being tested within the context in which it is intended to function.\nTest planners should check with the FDA Center(s) with the corresponding product jurisdiction to determine whether there are any additional regulatory requirements for user site testing.\nUser site testing should follow a pre-defined written plan with\n\na formal summary of testing and\na record of formal acceptance.\n\nThe following documented evidence should be retained:\n\nall testing procedures,\ntest input data, and\ntest results\n\nThere should be evidence that hardware and software are installed and configured as specified. Measures should ensure that all system components are exercised during the testing and that the versions of these components are those specified. The testing plan should specify testing throughout the full range of operating conditions and should specify continuation for a sufficient time to allow the system to encounter a wide spectrum of conditions and events in an effort to detect any latent faults that are not apparent during more normal activities.\nSome of the evaluations of the system’s ability that have been performed earlier by the software developer at the developer’s site should be repeated at the site of actual use. These may include tests for:\n\na high volume of data,\nheavy loads or stresses,\nsecurity,\nfault testing (avoidance, detection, tolerance, and recovery),\nerror messages, and\nimplementation of safety requirements.\n\nThere should be an evaluation of the ability of the users of the system to understand and correctly interface with it.\nOperators should be able to perform the intended functions and respond in an appropriate and timely manner to all alarms, warnings, and error messages.\nRecords should be maintained of both proper system performance and any system failures that are encountered.\nThe revision of the system to compensate for faults detected during this user site testing should follow the same procedures and controls as for any other software change.\nThe developers of the software may or may not be involved in the user site testing.\n\nIf the developers are involved, they may seamlessly carry over to the user’s site the last portions of design-level systems testing.\nIf the developers are not involved, it is all the more important that the user have persons who understand the importance of careful test planning, the definition of expected test results, and the recording of all test outputs.\n\nTypical Tasks – User Site Testing\n\nAcceptance Test Execution\nTest Results Evaluation\nError Evaluation/Resolution\nFinal Test Report\n\n\n\n2.5.2.7 Maintenance and Software Changes\n\n2.5.2.7.1 Hardware vs Software\nHardware maintenance typically includes\n\npreventive hardware maintenance actions,\ncomponent replacement, and\ncorrective changes.\n\nSoftware maintenance includes\n\ncorrective,\nperfective, and\nadaptive maintenance\nbut does not include preventive maintenance actions or software component replacement.\n\n\n\n2.5.2.7.2 Maintenance Types\n\nCorrective maintenance: Changes made to correct errors and faults in the software.\nPerfective maintenance: Changes made to the software to improve the performance, maintainability, or other attributes of the software system .\nAdaptive maintenance: Changes to make the software system usable in a changed environment.\n\nSufficient regression analysis and testing should be conducted to demonstrate that portions of the software not involved in the change were not adversely impacted. When changes are made to a software system,\n\neither during initial development or\nduring post release maintenance,\n\nThis is in addition to testing that evaluates the correctness of the implemented change(s). The specific validation effort necessary for each software change is determined by\n\nthe type of change,\nthe development products affected, and the\nimpact of those products on the operation of the software.\n\n\n\n2.5.2.7.3 Factors of Limitting Validation Effort Needed When a Change Is Made\n\ncareful and complete documentation of the design structure and\ncareful and complete documentation of interrelationships of various modules,\ninterfaces, etc.\nFor example,\n\ntest documentation,\ntest cases, and\nresults of previous verification and validation testing All of them need to be archived if they are to be available for performing subsequent regression testing.\n\n\nThe following additional maintenance tasks should be addressed:\n\nSoftware Validation Plan Revision - For software that was previously validated, the existing software validation plan should be revised to support the validation of the revised software. If no previous software validation plan exists, such a plan should be established to support the validation of the revised software.\nAnomaly Evaluation – Software organizations frequently maintain documentation, such as software problem reports that describe software anomalies discovered and the specific corrective action taken to fix each anomaly.\n\nToo often, however, mistakes are repeated because software developers do not take the next step to determine the root causes of problems and make the process and procedural changes needed to avoid recurrence of the problem.\nSoftware anomalies should be evaluated in terms of their severity and their effects on system operation and safety,\nbut they should also be treated as symptoms of process deficiencies in the quality system.\nA root cause analysis of anomalies can identify specific quality system deficiencies.\nWhere trends are identified (e.g., recurrence of similar software anomalies), appropriate corrective and preventive actions must be implemented and documented to avoid further recurrence of similar quality problems. (See 21 CFR 820.100.)\n\nProblem Identification and Resolution Tracking - All problems discovered during maintenance of the software should be documented. The resolution of each problem should be tracked to ensure it is fixed, for historical reference, and for trending.\nProposed Change Assessment - All proposed modifications, enhancements, or additions should be assessed to determine the effect each change would have on the system. This information should determine the extent to which verification and/or validation tasks need to be iterated.\nTask Iteration - For approved software changes, all necessary verification and validation tasks should be performed to ensure that planned changes are implemented correctly, all documentation is complete and up to date, and no unacceptable changes have occurred in software performance.\nDocumentation Updating – Documentation should be carefully reviewed to determine which documents have been impacted by a change. All approved documents (e.g., specifications, test procedures, user manuals, etc.) that have been affected should be updated in accordance with configuration management procedures. Specifications should be updated before any maintenance and software changes are made."
  },
  {
    "objectID": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#validation-of-automated-process-equipment-and-quality-system-software",
    "href": "docs/blog/posts/Validation/2022-12-10_FDA_sw_general_guidance/index.html#validation-of-automated-process-equipment-and-quality-system-software",
    "title": "FDA Software Validation Guidance Summary",
    "section": "2.6 Validation of Automated Process Equipment and Quality System Software",
    "text": "2.6 Validation of Automated Process Equipment and Quality System Software\nThe Quality System regulation requires that “when computers or automated data processing systems are used as part of production or the quality system, the [device] manufacturer shall validate computer software for its intended use according to an established protocol.” (See 21 CFR §820.70(i)). This has been a regulatory requirement of FDA’s medical device Good Manufacturing Practice (GMP) regulations since 1978.\nComputer systems that implement part of a device manufacturer’s production processes or quality system (or that are used to create and maintain records required by any other FDA regulation) are subject to the Electronic Records; Electronic Signatures regulation. (See 21 CFR Part 11.) This regulation establishes additional security, data integrity, and validation requirements when records are created or maintained electronically. These additional Part 11 requirements should be carefully considered and included in system requirements and software requirements for any automated record keeping systems. System validation and software validation should demonstrate that all Part 11 requirements have been met.\nComputers and automated equipment are used extensively throughout all aspects of\n\nmedical device design,\nlaboratory testing and analysis,\nproduct inspection and acceptance,\nproduction and process control,\nenvironmental controls,\npackaging,\nlabeling,\ntraceability,\ndocument control,\ncomplaint management, and many other aspects of the quality system.\n\nIncreasingly, automated plant floor operations can involve extensive use of embedded systems in:\n\nprogrammable logic controllers;\ndigital function controllers;\nstatistical process control;\nsupervisory control and data acquisition;\nrobotics;\nhuman-machine interfaces;\ninput/output devices; and\ncomputer operating systems.\n\nAll software tools used for software design are subject to the requirement for software validation, but the validation approach used for each application can vary widely.\nValidation is typically supported by:\n\nverifications of the outputs from each stage of that software development life cycle; and\nchecking for proper operation of the finished software in the device manufacturer’s intended use environment.\n\n\n2.6.1 How Much Validation Evidence Is Needed?\nThe level of validation effort should be commensurate with\n\nthe risk posed by the automated operation,\nthe complexity of the process software,\nthe degree to which the device manufacturer is dependent upon that automated process to produce a safe and effective device\n\nDocumented requirements and risk analysis of the automated process help to define the scope of the evidence needed to show that the software is validated for its intended use. Without a plan, extensive testing may be needed for:\n\na plant-wide electronic record and electronic signature system;\nan automated controller for a sterilization cycle; or\nautomated test equipment used for inspection and acceptance of finished circuit boards in a lifesustaining / life-supporting device.\n\nHigh risk applications should not be running in the same operating environment with non-validated software functions, even if those software functions are not used. Risk mitigation techniques such as memory partitioning or other approaches to resource protection may need to be considered when high risk applications and lower risk applications are to be used in the same operating environment.\nWhen software is upgraded or any changes are made to the software, the device manufacturer should consider how those changes may impact the “used portions” of the software and must reconfirm the validation of those portions of the software that are used. (See 21 CFR §820.70(i).)\n\n\n2.6.2 Defined User Equipment\nA very important key to software validation is a documented user requirements specification that defines:\n\nthe “intended use” of the software or automated equipment; and\nthe extent to which the device manufacturer is dependent upon that software or equipment for production of a quality medical device.\n\nThe device manufacturer (user) needs to define the expected operating environment including any required hardware and software configurations, software versions, utilities, etc. The user also needs to:\n\ndocument requirements for system performance, quality, error handling, startup, shutdown, security, etc.;\nidentify any safety related functions or features, such as sensors, alarms, interlocks, logical processing steps, or command sequences; and\ndefine objective criteria for determining acceptable performance.\n\nThe validation must be conducted in accordance with a documented protocol, and the validation results must also be documented. (See 21 CFR §820.70(i).) Test cases should be documented that will exercise the system to challenge its performance against the pre-determined criteria, especially for its most critical parameters.\nTest cases should address\n\nerror and alarm conditions,\nstartup, shutdown,\nall applicable user functions and operator controls,\npotential operator errors,\nmaximum and minimum ranges of allowed values, and\nstress conditions applicable to the intended use of the equipment.\n\nThe test cases should be executed and the results should be recorded and evaluated to determine whether the results support a conclusion that the software is validated for its intended use.\nA device manufacturer may conduct a validation using their own personnel or may depend on a third party such as the equipment/software vendor or a consultant. In any case, the device manufacturer retains the ultimate responsibility for ensuring that the production and quality system software:\n\nis validated according to a written procedure for the particular intended use; and\nwill perform as intended in the chosen application.\n\nThe device manufacturer should have documentation including:\n\ndefined user requirements;\nvalidation protocol used;\nacceptance criteria;\ntest cases and results; and\na validation summary that objectively confirms that the software is validated for its intended use.\n\n\n\n2.6.3 Validation of Off-The-Shelf Software and Automated Equipment\nMost of the automated equipment and systems used by device manufacturers are supplied by thirdparty vendors and are purchased off-the-shelf (OTS). The device manufacturer is responsible for ensuring that the product development methodologies used by the OTS software developer are appropriate and sufficient for the device manufacturer’s intended use of that OTS software.\nWhere possible and depending upon the device risk involved, the device manufacturer should consider auditing the vendor’s design and development methodologies used in the construction of the OTS software and should assess the development and validation documentation generated for the OTS software. Such audits can be conducted by the device manufacturer or by a qualified third party.\nThe audit should demonstrate that the vendor’s procedures for and results of the verification and validation activities performed the OTS software are appropriate and sufficient for the safety and effectiveness requirements of the medical device to be produced using that software."
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "",
    "text": "Notice\nLast Update\nIntroduction\n\nDefinition of SW Validation\nSome Terminology\nRationale\nObjective of SW Validation\nWhat to validate\nMain Institutions\n\nQuality System Regulation\nVerification\nValidation\nBenefits and Difficulty in SW V&V\nSW Development as Part of System Design\n\nOverview\nDesign Reveiw\n\n\n\n\nValidation Pinciples\n\nOverview\nConditions\nPlanning\nAfter SW Change\nSW Lifecycle\n\nSW Lifecycle Tasks\n\nOverview\nQuality Planning\nConfiguration Management\nTask Requirements\nDesign Overview\n\nDesign Consideration\nDesign Specification\nDesign Activity and Task\n\n\n\n\n\nTesting Tasks\n\nOverview\nConsideration Before Testing Tasks\nCode Based Testing\nSolution to White Box Testing\nDevelopment Testing\nUser Site Testing\n\nOverview\nTesting\n\n\nMaintenance and SW Changes\nValidation of Quality System SW\n\nOverview\nFactors in Validation"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#notice",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#notice",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Notice",
    "text": "Notice\n\nI am so sorry not for providing a compfortab visualization. Although I have tried to use revealjs provided in the guide section in the Quarto website, I am still clumsy at handling it. I will update this article as I get proficient at revealjs using Quarto. (it seems that Quarto system has some issues on mermaid diagrams.)\nThe FDA validation guidance document is a bit difficult to understand because its explanations provide abstract, general, and present broad cocepts. For this reason, I compiled and made a summary of the document with many diagrams. However, some diagrams are too small to see. Please, scroll up your mouse wheel with the ‘Ctrl’ key on your keyboard pressed to zoom in on the small text in the diagrams.\n(Writing in Progress) It is hard to say that this version of summary is suitable for representing and covering the original document. Some of the content of this document has been excluded for personal use (less than 10% of it have been excluded).\n\n\nLast Update\n\n2022-12-28, Summary of Document"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#introduction",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#introduction",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Introduction",
    "text": "Introduction\n\nDefinition of Software Validation\nSoftware Validation is a requirement of the Quality System regulation, which was published in the Federal Register on October 7, 1996 and took effect on June 1, 1997.\n(See Title 21 Code of Federal Regulations (CFR) Part 820, and 61 Federal Register (FR) 52602, respectively.)\n\n\nSome Terminology\nThe medical device Quality System regulation (21 CFR 820.3(k)) defines\n\n“establish” = “define, document, and implement”\n“establish” = “established”\nConfusing terminology: requirements, specification, verification, and validation.\n\n\n\nRationale\nFDA has reported the following analysis:\n\n242 of 3140 (7.7%) medical device recalls between 1992 and 1998 are attributable to software failures.\n192 of the 242 (79.3%) failures were caused by software defects that were introduced when changes were made to the software after its initial production and distribution.\nThe software validation check is a principal means of avoiding such defects and resultant recalls.\n\n\n\nObjective of SW validation is to ensure\n\naccuracy\nreliability\nconsistent intended performance, and\nthe ability to discern invalid or altered records.\n\n\n\nWhat to validate\nAny software used to automate device design, testing, component acceptance, manufacturing, labeling, packaging, distribution, complaint handling, or to automate any other aspect of the quality system, including any off-the-shelf software.\n\n\nMain Institutions\n\nCenter for Devices and Radiological Health (CDRH)\nU.S. Department Of Health and Human Services\nFood and Drug Administration\nCenter for Biologics Evaluation and Research"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#quality-system-regulation",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#quality-system-regulation",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Quality System Regulation",
    "text": "Quality System Regulation\nThe guidance reflects that the minimum list of the relavant scientific and legal requirements that you must comply with.\n\n\n\n\nflowchart TB\n    subgraph Quality_System_Regulation\n        direction LR\n        subgraph Requirement\n            direction TB\n            user_requirements\n        end\n        subgraph Specification\n           direction TB\n           document_user_requirements \n        end \n        subgraph Verification\n           direction TB\n           verify_spacified_requirements\n        end\n        subgraph Validation\n           direction TB\n           Confirmation_by_Examinations\n           Provision_of_objective_3evidences\n        end\n        Requirement--> Specification --> Verification --> Validation                    \n    end\n    subgraph First_Detail\n        direction TB\n        subgraph User_Requirement\n            direction TB\n            any_need_for_customer---\n            any_need_for_system---\n            any_need_for_software\n        end\n            subgraph Document_User_Requirement\n            direction TB\n            define_means_for_requirements---\n          define_criteria_for_requirements\n        end         \n        subgraph Verify_Spacified_Requirement\n            direction TB\n            Objective_Evidence--->|needs|Software_Testing\n        end\n        subgraph SW_Validation\n            direction TB\n            subgraph Confirmation_by_Examination\n            direction TB\n                subgraph Examination_List_of_SW_LifeCycle\n                    direction TB\n                    comprehensiveness_of_software_testing---\n                    inspection_verification_test---\n                    analysis_verification_test---\n                    other_varification_tests    \n                end \n            end             \n            subgraph Provision_of_Objective_3evidences\n                direction TB\n                Software_specifications_conformity---\n                Consistent_SW_Implementation---\n                Correctness_Completeness_Traceability\n            end\n        end\n        Requirement---User_Requirement\n        Specification---Document_User_Requirement\n        Verification---Verify_Spacified_Requirement\n        Confirmation_by_Examinations---Confirmation_by_Examination\n        Provision_of_objective_3evidences---Provision_of_Objective_3evidences             \n    end"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#verification",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#verification",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Verification",
    "text": "Verification\n\n\n\n\nflowchart LR\n    subgraph Objective_Evidence\n        direction LR\n        subgraph Design_Outputs_of_SW_life_cycle_for_Specified_Requirements\n            direction TB\n            Consistency---\n            Completeness---\n            Correctness---\n            Documentation\n        end       \n        subgraph Software_Testing\n            direction LR\n            subgraph Testing_Environments\n                direction TB\n                satisfaction_for_input_requirements\n                satisfaction_for_input_requirements---Simulated_Use_Environment\n                subgraph User_Site_Testing\n                    direction TB                            \n                    Installation_Qualification---\n                    Operational_Qualification---\n                    Performance_Qualification\n                end\n            end\n            satisfaction_for_input_requirements---User_Site_Testing\n            subgraph Testing_Activities\n                direction TB\n                static_analyses---\n                dynamic_analyses---\n                code_and_document_inspections---\n                walkthroughs\n            end \n        Testing_Environments-->Testing_Activities\n        end\n    Design_Outputs_of_SW_life_cycle_for_Specified_Requirements-->Software_Testing-->Testing_Activities\nend    \n\n\n\n\n\n\n\n\n\n\nInstallation_Qualification (IQ): documentation of correct installations according to requirements, specifications, vendor’s recommendations, and the FDA’s guidance for all hardware, software, equipment and systems.\nOperational_Qualification (OQ): establishment of confidence that the software shows constant performances according to specified requirements.\nPerformance_Qualification (PQ): confirmation of the performance in the intended use according to the specified requirements for functionality and safety throughout the SW life cycle."
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#validation",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#validation",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation",
    "text": "Validation\n\n\n\n\nflowchart LR\n    subgraph Validation\n    direction LR\n        subgraph Confirmation_by_Examination\n            direction TB\n            subgraph Examination_List_at_each_stage_of_SW_Life_Cycle\n                direction TB\n                comprehensiveness_of_software_testing---\n                inspection_verification_test---\n                analysis_verification_test---\n                other_varification_tests    \n            end \n        end\n        subgraph Provision_of_objective_3evidences\n            direction TB\n            subgraph Software_specifications_conform_to\n                direction TB\n                user_needs \n                intended_uses\n            end\n            subgraph Consistent_SW_Implementation\n                direction TB\n                particular_requirements\n            end\n            subgraph Correctness_Completeness_Traceability\n                direction TB\n                correct_complete_implementation_by_all_SW_requirements---\n                traceable_to_system_requirements\n            end\n            Software_specifications_conform_to---\n            Consistent_SW_Implementation---\n            Correctness_Completeness_Traceability\n        end\n        Confirmation_by_Examination-->\n        Provision_of_objective_3evidences\n    end\n\n\n\n\n\n\n\n\n\n\n\n\nA conclusion that software is validated is highly dependent upon comprehensive software testing, inspections, analyses, and other verification tasks performed at each stage of the software development life cycle.\nTesting of device software functionality in a simulated* use environment, and user site testing are typically included as components of an overall design validation program for a software automated device."
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#benefits-and-difficulty-of-sw-vv",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#benefits-and-difficulty-of-sw-vv",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Benefits and Difficulty of SW V&V",
    "text": "Benefits and Difficulty of SW V&V\n\nBenefits of SW V&V\n\nIncrease the usability and reliability of the device,\nResulting in decreased failure rates, fewer recalls and corrective actions, less risk to patients and users, and reduced liability to device manufacturers.\nReduce long term costs by making V&V easier and less costly to reliably modify software and revalidate software changes.\n\n\n\nDifficulty in SW V&V\n\na developer cannot test forever, and\n\nit is difficult to know how much evidence is enough.\na matter of developing a level of confidence that the device meets all requirements\n\nConsiderations for an acceptable level of confidence\nmeasures and estimates such as defects found in specifications documents\ntesting coverage, and other techniques are all used before shipping the product.\na level of confidence varies depending upon the safety risk (hazard) of a SW or device"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#sw-development-as-part-of-system-design",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#sw-development-as-part-of-system-design",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "SW Development as Part of System Design",
    "text": "SW Development as Part of System Design\n\nOverview\n\n\n\n\nflowchart LR\n    subgraph Design_Review\n        direction LR\n        purpose_design_review---\n        design_review_types---\n        design_review_requirements---\n        design_review_outputs\n    end\n\n\n\n\n\n\n\n\nSoftware validation must be considered within the context of the overall design validation for the system. A documented requirements specification represents\n\nuser’s needs\nintended uses from which the product is developed.\n\nA primary goal of SW validation is to demonstrate that all completed SW products comply with all documented requirements.\n\n\nDesign Review\n\n\n\n\nflowchart LR\n    subgraph Design_Review\n        direction LR\n        subgraph Purpose_Design_Review\n            direction TB\n            documented_structured_comprehensive_systematic_examinations---\n            adequacy_of_design_requirements---\n            capability_of_design_for_requirements---\n            identification_of_problem   \n        end\n        subgraph Design_Reivew_Types\n            direction TB\n            subgraph Formal_Design_Review\n                direction TB\n                3rd_parties_outside_development_team\n            end\n            subgraph Informal_Design_Review\n                direction TB\n                within_development_team\n            end\n        Formal_Design_Review---Informal_Design_Review    \n        end\n        subgraph Design_Review_Requirements\n            direction TB\n               necessary_at_least_one_formal_design_review---\n               optinal_informal_design_review---\n               recommended_multiple_design_reviews\n        end\n        subgraph Formal_Design_Review_Outputs\n            direction TB\n            more_than_10_outputs\n        end\n        Purpose_Design_Review--> Design_Reivew_Types--> Design_Review_Requirements\n        Design_Review_Requirements-->Formal_Design_Review_Outputs\n    end\n\n\n\n\n\n\n\n\n\n\nDesign review is a primary tool for managing and evaluating development projects.\nAt least one formal design review must be conducted during the device design process.\nIt is recommended that multiple design reviews be conducted.\nProblems found at this point can\n\nbe resolved more easily,\nsave time and money, and\nreduce the likelihood of missing a critical issue."
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#validation-principles",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#validation-principles",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation Principles",
    "text": "Validation Principles\n\nOverview\n\n\n\n\nflowchart LR\n  subgraph Validation_Principles\n        direction LR\n        subgraph Validation_Starting_Point\n            direction TB\n            during_design_planning---\n            during_development_planning---\n            all_results_should_be_supported_by_evidence_collected_from_planning_SW_lifecylce\n        end\n        subgraph Validation_Conditions\n            direction TB\n            Requirements---Estabilishment_Confidence---SW_Lifecycle\n        end\n\n        subgraph Validation_Planning\n            direction TB\n            Specify_Areas\n            subgraph Validation_Coverage\n                direction TB\n            end\n            subgraph Validation_Process_Establishment\n                direction TB\n            end\n        Specify_Areas---Validation_Coverage---Validation_Process_Establishment\n        end\n\n        subgraph After_Self_Validation\n            direction TB\n            subgraph Validation_After_SW_Change\n        direction TB\n        end\n\n        subgraph Independence_of_Review\n        direction TB\n\n        end\n        Validation_After_SW_Change---Independence_of_Review\n        end\n            Validation_Starting_Point-->Validation_Conditions-->Validation_Planning-->\nAfter_Self_Validation\n    end\n\n\n\n\n\n\n\n\n\nPreparation for software validation should begin as early as possible because the final conclusion that the software is validated should be based on evidence collected from planned efforts conducted throughout the software lifecycle.\n\n\n\nConditions\n\n\n\n\nflowchart LR\n\nsubgraph Validation_Conditions\n    direction LR\n    subgraph SW_Requirments\n        direction TB\n        subgraph Documented_SW_Requirments_Specification\n            direction TB\n            Baseline_Provision_for_V&V---\n            establishment_of_software_requirements_specification\n        end\n    end\n    subgraph Estabilishment_Confidence\n        direction TB\n            mixture_of_methods_techinques---\n            preventing_SW_errors---\n            detecting_SW_errors                 \n    end\n    subgraph SW_Lifecycle\n        direction TB\n        validation_must_be_conducted_within_established_environment_across_lifecycle---\n        lifecycle_contains_SW_engineering_tasks_and_documentation---\n        V&V_tasks_must_reflect_intended_use\n    end\nend\nSW_Requirments---Estabilishment_Confidence---SW_Lifecycle\n\n\n\n\n\n\n\n\n\n\nPlanning\n\n\n\n\nflowchart LR\n    subgraph Validation_Planning\n        direction LR\n        define_what_to_accomplish\n        subgraph Specify_Areas\n            direction TB\n            scope---\n            approach---\n            resources---\n            schedules_activities---\n            types_activitieis---\n            extent_of_activities---\n            tasks---\n            work_items\n        end\n            define_what_to_accomplish-->Specify_Areas\n        subgraph Validation_Coverage\n               direction TB\n            depending_on_SW_complexity_of_SW_design---\n            depending_on_safety_risk_for_specified_intended_use---\n            select_activities_tasks_work_items_for_complexity_safety_risk\n        end\n        subgraph Validation_Process_Establishment\n            direction TB\n            establish_how_to_conduct-->\n            identify_sequence_of_specific_actions-->\n            identify_specific_activitieis-->\n            identify_specific_tasks-->\n            identify_specific_work_items\n        end\n    Specify_Areas-->Validation_Coverage-->Validation_Process_Establishment\n    end\n\n\n\n\n\n\n\n\n\n\nAfter SW Change\n\n\n\n\nflowchart LR\n\nsubgraph After_Self_Validation\n    direction LR\n    subgraph Validation_After_SW_Change\n        direction TB\n        determine_extent_of_change_on_entire_SW_system-->\n        determine_impact_of_change_on_entire_SW_system-->\n        conduct_SW_regression_testing_on_unchanged_but_vulnerable_modules\n    end\n    subgraph Independence_of_Review\n        direction TB\n        follow_basic_quality_assurance_precept_of_independence_of_review---\n        avoid_self_validation---\n        should_conduct_contracted_3rd_party_independent_V&V---\n        or_conduct_blind_test_with_internal_staff\n    end\n    Validation_After_SW_Change---Independence_of_Review\nend\n    \n\n\n\n\n\n\n\n\n\n\nSW Lifecycle\n\n\n\n\nflowchart LR\nsubgraph SW_Lifecycle\n    direction TB\n    validation_must_be_conducted_within_the_established_environment_across_lifecycle---\n    lifecycle_contains_SW_engineering_tasks_and_documentation---\n    V&V_tasks_must_reflect_intended_use\nend\n\nsubgraph SW_Lifecycle_Activities\n    direction TB\n    subgraph should_establish_lifecycle_model\n        direction TB\n        subgraph SW_Lifecycle_Model_List_Defined_in_FDA\n            direction TB\n            waterfall---\n            spiral---\n            rapid_prototyping---\n            incremental_development---\n            etc\n        end     \n    end\n    subgraph should_cover_SW_birth_to_retirement\n        direction TB\n        subgraph Lifecycle_Activities\n            direction TB\n            Quality_Plan-->\n            System_Requirements_Definition-->\n            Detailed_Software_Requirements_Specification-->\n            Software_Design_Specification-->\n            Construction_or_Coding-->\n            Testing-->\n            Installation-->\n            Operation_and_Support-->\n            Maintenance-->\n            Retirement\n        end\n    end\n    should_establish_lifecycle_model-->should_cover_SW_birth_to_retirement\n    should_cover_SW_birth_to_retirement-->Lifecycle_Activities\nend\nsubgraph SW_Lifecycle_Tasks\n    direction TB\n    should_define_and_document_risk_related_tasks---\n    should_define_and_document_which_tasks_are_appropriate_in_vice_versa---\n    Quality_Planning---\n    Quality_Planning_Tasks---\n    Inclusion_Task_List_for_Plan---\n    Identification_Task_List_for_Plan---\n    Configuration_Management---\n    Control---\n    Management---\n    Procedures---\n    ensure_proper_communications_and_documentation---\n    Task_Requirements\nend\nSW_Lifecycle-->SW_Lifecycle_Activities-->SW_Lifecycle_Tasks"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#sw-lifecycle-tasks",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#sw-lifecycle-tasks",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "SW Lifecycle Tasks",
    "text": "SW Lifecycle Tasks\n\nOverview\n\n\n\n\n \nflowchart TB\n\nsubgraph SW_Lifecycle_Tasks\n    direction LR\n    subgraph Define_and_Document_List\n        direction TB\n        risk_related_tasks---\n        whether_or_not_tasks_are_appropriate\n    end\n    \n    subgraph Quality_Planning\n        direction TB\n        subgraph Quality_Planning_Tasks\n            direction TB\n        \n        end\n        subgraph Inclusion_List_for_Plan\n            direction TB\n            \n        end\n        subgraph Identification_List_for_Plan\n            direction TB\n            \n        end\n    Quality_Planning_Tasks-->Inclusion_List_for_Plan-->Identification_List_for_Plan\n    end\n    \n    subgraph Configuration_Management\n        direction TB\n        subgraph Control\n            direction TB\n            \n        end\n        subgraph Management\n            direction TB\n        end\n        subgraph Procedures\n            direction TB\n        end\n        ensure_proper_communications_and_documentation\n        Control-->Management-->Procedures-->ensure_proper_communications_and_documentation \n    end\n    subgraph Task_Requirements\n        direction TB\n        identification---\n        analysis---\n        predetermined_documentation_about_device_its_intended_use---\n        Requirements_Specification_List---\n        Verfification_List_by_Evaluation---\n        Requirements_Tasks    \n    end\nDefine_and_Document_List-->Quality_Planning-->Configuration_Management-->Task_Requirements\nend     \n\n\n\n\n\n\n\n\n\n\nQuality Planning\n\n\n\n\nflowchart TB\nsubgraph Quality_Planning\n    direction LR\n    subgraph Quality_Planning_Tasks\n        direction TB\n        Risk_Hazard_Management_Plan---\n        Configuration_Management_Plan---\n        Software_Quality_Assurance_Plan---\n        Software_Verification_and_Validation_Plan---\n        Verification_and_Validation_Tasks---\n        Acceptance_Criteria---\n        Schedule_and_Resource_Allocation_for_V&V_activities---\n        Reporting_Requirements---\n        Formal_Design_Review_Requirements---\n        Other_Technical_Review_Requirements---\n        Problem_Reporting_and_Resolution_Procedures---\n        Other_Support_Activities\n    end\n    subgraph Inclusion_List_for_Plan\n        direction TB\n        specific_tasks_for_each_life_cycle_activity---\n        Enumeration_of_important_quality_factors--- \n        like_reliability_maintainability_usability---\n        Methods_and_procedures_for_each_task---\n        Task_acceptance_criteria---\n        Criteria_for_defining_and_documenting_outputs_for_input_requirements---\n        Inputs_for_each_task---\n        Outputs_from_each_task---\n        Roles_resources_and_responsibilities_for_each_task---\n        Risks_and_assumptions---\n        Documentation_of_user_needs    \n    end\n    subgraph Identification_List_for_Plan\n        direction TB\n        personnel---\n        facility_and_equipment_resources_for_each_task---\n        role_that_risk_hazard_management        \n    end\nQuality_Planning_Tasks-->Inclusion_List_for_Plan-->Identification_List_for_Plan\nend\n\n\n\n\n\n\n\n\n\n\nConfiguration Management\n\n\n\n\nflowchart LR\nsubgraph Configuration_Management\n    direction LR\n    subgraph Control\n        direction TB\n        control_multiple_parallel_development_activities---\n        ensure_positive_and_correct_correspondence_of---\n        specifications_documents---\n        source_code---\n        object_code---\n        test_suites---\n        ensure_accurate_identification_of_approved_versions---\n        ensure_access_to_approved_versions---\n        create_procedures_for_reporting---\n        create_procedures_for_resolving_SW_anomalies                            \n    end\n    subgraph Management\n        direction TB\n        identify_reports---\n        specify_contents---\n        specify_format---\n        specify_responsible_organizational_elements_for_each_report\n    end\n    subgraph Procedures\n        direction TB\n        necessary_for_review_of_SW_development_results---\n        necessary_for_approval_of_SW_development_results\n    end\n    ensure_proper_communications_and_documentation\n    Control-->Management-->Procedures-->ensure_proper_communications_and_documentation \nend\n\n\n\n\n\n\n\n\n\n\nTask Requirements\n\n\n\n\n\nflowchart TB\n    subgraph Task_Requirements\n        direction LR\n        subgraph group\n            direction TB\n            identification---\n            analysis---\n            predetermined_documentation_about_device_its_intended_use\n        end\n        \n        subgraph Requirements_Specification_List\n            direction TB\n            All_software_system_inputs---\n            All_software_system_outputs---\n            All_functions_that_software_system_will_perform---\n            All_performance_requirements_that_software_will_meet---\n            requirement_example_data_throughput_reliability_timing---\n            definition_of_all_external_and_user_interfaces---\n            any_internal_software_to_system_interfaces---\n            How_users_will_interact_with_system---\n            What_constitutes_error---\n            how_errors_should_be_handled---\n            Required_response_times---\n            Intended_operating_environment_for_software---\n            All_acceptable_ranges_limits_defaults_specific_values---\n            All_safety_related_requirements_that_will_be_implemented_in_SW---\n            All_safety_related_specifications_that_will_be_implemented_in_SW---\n            All_safety_related_features_that_will_be_implemented_in_SW---\n            All_safety_related_functions_that_will_be_implemented_in_SW---\n            clearly_identify_potential_hazards---\n            risk_evaluation_for_accuracy---\n            risk_evaluation_for_completeness---\n            risk_evaluation_for_consistency---\n            risk_evaluation_for_testability---\n            risk_evaluation_for_correctness---\n            risk_evaluation_for_clarity\n        end\n        subgraph Verfification_List_by_Evaluation\n            direction TB\n            no_internal_inconsistencies_among_requirements---\n            All_of_performance_requirements_for_system---\n            Complete_correct_Fault_tolerance_safety_security_requirements---\n            Accurate_Complete_Allocation_of_software_functions---\n            Appropriate_Software_requirements_for_system_hazards---\n            mesurable_requirements---\n            objectively_verifiable_requirements---\n            traceable_requirements\n        end\n        subgraph Requirements_Tasks\n            direction TB\n            Preliminary_Risk_Analysis---\n            Traceability_Analysis---\n            ex_Software_Requirements_to_System_Requirements_vice_versa---\n            ex_Software_Requirements_to_Risk_Analysis---\n            Description_of_User_Characteristics---\n            Listing_of_Characteristics_and_Limitations_of_Memory---\n            Software_Requirements_Evaluation---\n            Software_User_Interface_Requirements_Analysis---\n            System_Test_Plan_Generation---\n            Acceptance_Test_Plan_Generation---\n            Ambiguity_Review_or_Analysis\n        end\n    group-->Requirements_Specification_List \n    Verfification_List_by_Evaluation-->Requirements_Tasks\n    end\n\n\n\n\n\n\n\n\n\n\nDesign Overview\n\n\n\n\nflowchart TB\n    subgraph Deign_Task\n        direction LR\n    subgraph Design_Consideration_List\n        direction TB\n        subgraph Description\n                    direction TB\n                end\n        subgraph Human_Factors_Engineering\n          direction TB\n    \n        end\n        subgraph Safety_Usability_Issues_Conisderation\n            direction TB\n\n            end\n        Description---Human_Factors_Engineering---Safety_Usability_Issues_Conisderation\n    end\n    subgraph Design_Specificiation\n        direction TB\n        subgraph Performing_List\n            direction TB\n        end\n        subgraph Design_Specification_Inclusion_List\n            direction TB\n        end\n        subgraph Evaludations_Criteria_of_Design\n            direction TB\n        end\n    Performing_List---Design_Specification_Inclusion_List---Evaludations_Criteria_of_Design \n    end\n    subgraph Design_Activity_and_Task_List\n        direction TB\n        subgraph Final_Design_activity\n            direction TB\n        end\n        subgraph Specific_Design_Tasks\n            direction TB\n        end\n        subgraph Coding_Activity\n            direction TB\n            subgraph traceability_analysis\n                direction TB\n            end\n            subgraph Coding_Tasks\n                direction TB\n            end\n        traceability_analysis-->Coding_Tasks\n        end\n        Final_Design_activity---Specific_Design_Tasks---Coding_Activity\n    end\n    Design_Consideration_List---Design_Specificiation---Design_Activity_and_Task_List\n\n    end\n\n\n\n\n\n\n\n\n\nDesign Consideration\n\n\n\n\nflowchart TB\nsubgraph Design_Consideration_List\n    direction LR\n        subgraph Requirement_Specification\n            direction TB\n            logical_representation---\n            physical_representation\n        end\n    subgraph Description\n            direction TB\n            what_to_do---\n            how_to_do                   \n        end\n    subgraph Human_Factors_Engineering\n      direction TB\n            entire_design_and_development_process---\n            device_design_requirements---\n            analyses---\n            tests\n    end\n    subgraph Safety_Usability_Issues_Conisderation\n        direction TB\n                flowcharts--- \n                state_diagrams--- \n                prototyping_tools---\n                test_plans\n        end\n        Requirement_Specification---Description---Human_Factors_Engineering---Safety_Usability_Issues_Conisderation\n    end\n\n\n\n\n\n\n\n\n\n\nDesign Specification\n\n\n\n\nflowchart TB\nsubgraph Design_Specificiation\n        direction LR\n        subgraph Conceptual_Specification\n            direction TB\n            requirements_specification---\n            predetermined_criteria---\n            Software_risk_analysis---\n            Development_procedures---\n            coding_guidelines\n        end\n        subgraph Performing_List\n            direction TB\n            task---\n            function_analyses---\n            risk_analyses---\n            prototype_tests_and_reviews---\n            full_usability_tests\n        end\n        subgraph Design_Specification_Inclusion_List\n            direction TB\n            SW_requirements_specification---\n            predetermined_criteria_for_SW_acceptance---\n            SW_risk_analysis---\n            Development_procedure_list---\n            coding_guidance---\n            Systems_documentation---\n            Hardware_to_be_used---\n            Parameters_to_be_measured---\n            Logical_structure---\n            Control_logic---\n            logical_processing_steps_aka_algorithms---\n            Data_structures_diagram---\n            data_flow_diagrams---\n            Definitions_of_variables---\n            description_of_where_they_are_used---\n            Error_alarm_and_warning_messages---\n            Supporting_software---\n            internal_modules_Communication_links---\n            supporting_sw_links---\n            link_with_hardware---\n            link_with_user---\n            physical_Security_measures---\n            logical_security_measures\n        end\n        subgraph Evaludations_Criteria_of_Design\n            direction TB\n            complete--- \n            correct---\n            consistent--- \n            unambiguous--- \n            feasible---\n            maintainable---\n            analyses_of_control_flow---\n            data_flow--- \n            complexity--- \n            timing--- \n            sizing--- \n            memory_allocation---\n            module_architecture---\n            traceability_analysis_of_modules--- \n            criticality_analysis\n        end\n    Conceptual_Specification---Performing_List---Design_Specification_Inclusion_List---Evaludations_Criteria_of_Design  \n    end\n\n\n\n\n\n\n\n\n\n\nDesign Activity and Task\n\n\n\n\n\nflowchart TB\nsubgraph Design_Activity_and_Task_List\n        direction LR\n        subgraph Final_Design_activity\n            direction TB\n            Formal_Design_Review_Before_Design_Implementation---\n            correct_consistent_complete_accurate_testable\n        end\n        subgraph Specific_Design_Tasks\n            direction TB\n            Updated_Software_Risk_Analysis---\n            Traceability_Analysis---\n            Software_Design_Evaluation---\n            Design_Communication_Link_Analysis---\n            Module_Test_Plan_Generation---\n            Integration_Test_Plan_Generation---\n            module_Test_Design_Generation---\n            integration_Test_Design_Generation---\n            system_Test_Design_Generation---\n            acceptance_Test_Design_Generation   \n        end\n        subgraph Coding_Activity\n            direction TB\n            subgraph traceability_analysis\n                direction TB\n                each_element_implementation---\n                each_module_implementation_to_element_and_risk_analysis---\n                each_functions_implemented_to_element_and_risk_analysis---\n                Tests_for_modules_to_element_and_risk_analysis--- \n                Tests_for_functions_to_element_and_risk_analysis---\n                Tests_for_modules_to_source_code---\n                Tests_for_functions_to_source_code\n            end\n            subgraph Coding_Tasks\n                direction TB\n                Traceability_Analyses---\n                Source_Code_to_Design_Specification_and_vice_versa---\n                Test_Cases_to_Source_Code_and_to_Design_Specification---\n                Source_Code_and_Source_Code_Documentation_Evaluation---\n                Source_Code_Interface_Analysis---\n                Test_Procedure_and_Test_Case_Generation \n            end\n        traceability_analysis-->Coding_Tasks\n        end\n        Final_Design_activity---Specific_Design_Tasks---Coding_Activity\n    end"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#testing-task",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#testing-task",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Testing Task",
    "text": "Testing Task\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction TB\n            subgraph Test_Plans\n                direction TB\n            end\n            subgraph Conditions\n                direction TB\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n        subgraph Code_Based_Testing\n            direction TB\n            subgraph white_box_testing\n                direction TB\n            end\n            subgraph Evaluation_of_level_of_white_box_testing\n                direction TB\n            end\n            subgraph Coverage_Metrics_of_White_Box_Testing\n                direction TB\n            end\n        white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n        end\n        subgraph Alternatives_to_White_Box_Testing\n            direction TB\n            subgraph Types_of_Functional_Software_Testing_Increasing_Cost\n                direction TB\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n            end\n            subgraph Change_in_SW\n                direction TB    \n            end\n        Types_of_Functional_Software_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW\n        end\n        \n\n        subgraph Development_Testing\n            direction TB\n            subgraph unit_level_testing\n                direction TB    \n            end\n            subgraph integration_level_testing\n                direction TB\n            end\n            subgraph system_level_testing\n                direction TB\n            end\n            subgraph Error_Detected\n                direction TB        \n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\n\n        subgraph Testing_Tasks\n            direction TB\n        end\n        subgraph User_Site_Testing\n            direction TB\n            subgraph Quality_System_Rregulation\n                direction TB\n            end\n            subgraph Understand_Terminology\n                direction TB\n            end\n            subgraph Testing\n                direction TB\n            end\n            Quality_System_Rregulation---Understand_Terminology---Testing\n        end\nConsideration_Before_Testing_Tasks---Code_Based_Testing---Alternatives_to_White_Box_Testing\nDevelopment_Testing---Testing_Tasks---User_Site_Testing\n    end\n\n\n\n\n\n\n\n\n\n\nConsideration Before Testing Tasks\n\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Consideration_Before_Testing_Tasks\n            direction LR\n            subgraph Test_Plans\n                direction TB\n                should_identify_control_measures_like_traceability_analysis---\n                ensure_that_intended_coverage_is_achieved---\n                ensure_that_proper_documentation_is_prepared---\n                conduct_tests_not_by_SW_developers_but_in_other_sites\n            end\n            subgraph Conditions\n                direction TB\n                use_defined_inputs---\n                documented_outcomes---\n                gonnabe_time_consuming_activity---\n                gonnabe_difficult_activity---\n                gonnabe_imperfect_activity---\n                testing_all_program_functionality---\n                does_not_mean_100_prcnt_correction_perfection---\n                make_detailed_objective_evaluation---\n                requires_sophisticated_definition_specificiation---\n                all_test_procedures_data_results_are_documented---\n                all_test_procedures_data_results_are_suitable_for_review---\n                all_test_procedures_data_results_are_suitable_for_objective_decision_making---\n                all_test_procedures_data_results_are_suitable_for_subsequent_regression_testing\n            end\n            subgraph Start_test_planning_as_early_as_possible\n                direction TB\n                make_test_plans---\n                make_test_cases---\n                plan_schedules---\n                plan_environments---\n                plan_resources_of_personnel_tools---\n                plan_methodologies---\n                plan_inputs_procedures_outputs_expected_results---\n                plan_documentation---\n                plan_reporting_criteria\n            end\n            subgraph Testing_Tenets_Inclusion_List\n                direction TB\n                expected_test_outcome_is_predefined---\n                good_test_case_has_high_probability_of_exposing_errors---\n                successful_test_is_one_that_finds_errors---\n                There_is_independence_from_coding---\n                Both_application_for_user_and_SW_for_programming_expertise_are_employed---\n                Testers_use_different_tools_from_coders---\n                Examining_only_the_usual_case_is_insufficient---\n                Test_documentation_permits_its_reuse---\n                Test_documentation_permits_independent_confirmation_---\n                of_pass/fail_test_outcome_during_subsequent_review\n            end\n        Test_Plans---Conditions---Start_test_planning_as_early_as_possible---Testing_Tenets_Inclusion_List\n        end\n\nend\n\n\n\n\n\n\n\n\n\n\nCode Based Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n            subgraph Code_Based_Testing\n                direction LR\n                subgraph white_box_testing\n                    direction TB\n                    identify_dead_code_never_executed---\n                    conduct_unit_test---\n                    conduct_other_level_tests\n                end\n                subgraph Evaluation_of_level_of_white_box_testing\n                    direction TB\n                    use_coverage_metrics---\n                    metrics_of_completeness_of_test_selection_criteria---\n                    coverage_should_be_commensurate_with_level_of_SW_risk---\n                    coverage_means_100_prcnt_coverage\n                end\n                subgraph Coverage_Metrics_of_White_Box_Testing\n                    direction TB\n                    Statement_Coverage---\n                    Decision_or_Branch_Coverage---\n                    Condition_Coverage---\n                    Multi_Condition_Coverage\n                    Loop_Coverage---\n                    Path_Coverage---\n                    Data_Flow_Coverage\n                end\n            white_box_testing---Evaluation_of_level_of_white_box_testing---Coverage_Metrics_of_White_Box_Testing\n            end\nend\n\n\n\n\n\n\n\n\n\n\nSolution to White Box Testing\n\n\n\n\n\n \nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Alternatives_to_White_Box_Testing\n            direction LR\n            subgraph Types_of_Testing_Increasing_Cost\n                direction TB\n                    Normal_Case---\n                    Output_Forcing---\n                    Robustness---\n                    Combinations_of_Inputs\n            end\n            subgraph Weakness_of_functional_and_white_box_testings\n                direction TB\n                difficulty_in_linking_---\n                tests_completion_criteria_to_SW_reliability\n            end\n            subgraph Advanced_software_testing_methods\n                direction TB\n                statistical_testing---\n                provide_further_assurance_of_reliability---\n                generate_randomly_test_data_from_defined_distributions---\n                distribution_defined_by_expected_use---\n                distribution_defined_by_hazardous_use---\n                distribution_defined_by_malicious_use---\n                large_test_data_cover_particular_areas_or_concerns---\n                statistical_testing_provides_high_structural_coverage---\n                statistical_testing_requires_stable_system---\n                structural_and_functional_testing_are_prerequisites_for_statistical_testing\n            end\n            subgraph Change_in_SW\n                direction TB\n                conduct_regression_analysis_and_testing---\n                should_demonstrate_correct_implementation---\n                should_demonstrate_no_adverse_impact_on_other_modules   \n            end\n            subgraph Testing_Tasks\n                direction TB\n                Test_Planning---\n                Structural_Test_Case_Identification---\n                Functional_Test_Case_Identification---\n                Traceability_Analysis_Testing---\n                Unit_Tests_to_Detailed_Design---\n                Integration_Tests_to_High_Level_Design---\n                System_Tests_to_Software_Requirements---\n                Unit_Test_Execution---\n                Integration_Test_Execution---\n                Functional_Test_Execution---\n                System_Test_Execution---\n                Acceptance_Test_Execution---\n                Test_Results_Evaluation---\n                Error_Evaluation_Resolution---\n                Final_Test_Report\n            end\n        Types_of_Testing_Increasing_Cost---Weakness_of_functional_and_white_box_testings---\n        Advanced_software_testing_methods---Change_in_SW---Testing_Tasks\n        end\nend\n\n\n\n\n\n\n\n\n\n\nDevelopment Testing\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph Development_Testing\n            direction LR\n            subgraph unit_level_testing\n                direction TB    \n                focus_on_early_examination_of_sub_program_functionality---\n                ensure_functionality_invisible_at_system_level_examined---\n                ensure_quality_software_units_furnished_for_integration\n            end\n            subgraph integration_level_testing\n                direction TB\n                focuses_on_transfer_of_data---\n                focuses_on_control_across_program's_internal_and_external_interfaces\n            end\n            subgraph system_level_testing\n                direction TB\n                demonstrate_all_specified_functionality_exists---\n                demonstrate_SW_is_trustworthy---\n                verifies_as_built_program's_functionality_and_performance_on_requirements---\n                addresses_functional_concerns_and_intended_uses---\n                like_Performance_issues---\n                like_Responses_to_stress_conditions---\n                like_Operation_of_internal_and_external_security_features---\n                like_Effectiveness_of_recovery_procedures---\n                like_disaster_recovery---\n                like_Usability---\n                like_Compatibility_with_other_SW---\n                like_Behavior_in_each_of_the_defined_hardware_configurations---\n                like_Accuracy_of_documentation\n            end\n            subgraph Error_Detected\n                direction TB        \n                should_be_logged---\n                should_be_classified---\n                should_be_reviewed---\n                should_be_resolved_before_SW_release\n            end\n        unit_level_testing-->integration_level_testing-->system_level_testing-->Error_Detected\n        end\nend\n\n\n\n\n\n\n\n\n\n\nUser Site Testing\n\nOverview\n\n\n\n\nflowchart TB\n    subgraph Testing_Task\n        direction LR\n        subgraph User_Site_Testing\n            direction LR\n            subgraph Quality_System_Rregulation\n                direction TB\n                installation---\n                inspection_procedures---\n                testing_appropriateness---\n                documentation_of_inspection---\n                testing_to_demonstrate_proper_installation\n            end\n            subgraph Understand_Terminology\n                direction TB\n                beta_test---\n                site_validation---\n                user_acceptance_test---\n                installation_verification---\n                installation_testing\n            end\n            subgraph Testing\n                direction TB\n                subgraph Requirements\n                    direction TB\n                    either_actual_or_simulated_use---\n                    verification_of_intended_functionality---\n                    constant_contact_FDA_center\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n    \n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_System_Ability\n                        direction TB\n        \n                    end\n                  subgraph Evaluation_of_User_Ability\n                        direction TB\n        \n                    end \n                    subgraph Evaluation_of_Operator_Ability\n                        direction TB\n        \n                    end\n                constant_contact_FDA_center-->Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n                end \n                        \n            \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end\n        Quality_System_Rregulation-->    Understand_Terminology-->Testing-->User_Site_Testing_Task\n        end\nend\n\n\n\n\n\n\n\n\n\n\nTesting\n\n\n\n\nflowchart TB\n            subgraph Testing\n                direction LR\n                subgraph Requirements\n                    direction LR\n                    subgraph Follow_Predefiened_Plan\n                        direction TB\n                        either_actual_or_simulated_use---\n                        verification_of_intended_functionality---\n                        constant_contact_FDA_center---\n                        formal_summary_of_testing---\n                        record_of_formal_acceptance\n                    end\n                    subgraph Documented_Evidence\n                        direction TB\n                        testing_plan_of_full_range_of_operating_conditions---\n                        testing_plan_to_detect_any_latent_faults---\n                        all_testing_procedures---\n                        test_input_data---\n                        test_results---\n                        hardware_installation_and_configuration---\n                        software_installation_and_configuration---\n                        exercising_measure_of_all_system_components---\n                        versions_of_all_system_components           \n                    end\n                    subgraph Evaluation\n                        direction TB\n                      subgraph Evaluation_of_System_Ability\n                            direction TB\n                            high_volume_of_data---\n                            heavy_loads_or_stresses---\n                            security\n                            subgraph fault_testing\n                                direction TB\n                                avoidance---\n                                detection---\n                                tolerance---\n                                recovery\n                            end\n                        security---fault_testing---\n                        error_message---\n                        implementation_of_safety_requirements\n                        end\n                      subgraph Evaluation_of_User_Ability\n                            direction TB\n                            ability_to_understand_system---\n                            ability_to_interface_with_system\n                        end \n                        subgraph Evaluation_of_Operator_Ability\n                            direction TB\n                            ability_to_perform_intended_functions---\n                            ability_to_respond_in_alarms---\n                            ability_to_respond_in_warnings---\n                            ability_to_respond_in_error_messages\n                        end\n\n                    end\n            Follow_Predefiened_Plan-->Documented_Evidence-->\n            Evaluation_of_System_Ability-->Evaluation_of_User_Ability-->Evaluation_of_Operator_Ability    \n            end     \n            subgraph User_Site_Testing_Task\n                direction TB\n                Acceptance_Test_Execution2---\n                Test_Results_Evaluation2---\n                Error_Evaluation_Resolution2---\n                Final_Test_Report2  \n            end\n        Requirements-->User_Site_Testing_Task\n        end"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#maintenance-and-software-changes",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#maintenance-and-software-changes",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Maintenance and Software Changes",
    "text": "Maintenance and Software Changes\n\n\n\n\nflowchart LR\n    subgraph Hardware_VS_Software\n        direction LR\n        subgraph HW_maintenance_Inclusion\n            direction TB\n            preventive_hardware_maintenance_actions--- \n            component_replacement---\n            corrective_changes\n        end\n        subgraph SW_maintenance_Inclusion\n            direction TB\n            corrective---\n            perfective---\n            adaptive_maintenance---\n            not_include_preventive_maintenance_actions---\n            not_include_software_component_replacement\n        end\n    end\n    subgraph Maintenance_Type\n        direction TB\n        Corrective_maintenance---\n        Perfective_maintenance---\n        Adaptive_maintenance---\n        Sufficient_regression_analysis---\n        Sufficient_regression_testing\n    end\n    subgraph Factors_of_Validation_for_SW_change\n        direction TB\n        type_of_change---\n        development_products_affected---\n        impact_of_those_products_on_operation\n    end\n    subgraph Factors_of_Limitting_Validation_Effort\n        direction TB\n        documentation_of_design_structure---\n        documentation_of_interrelationships_of_modules---\n        documentation_of_interrelationships_of_interfaces---\n        test_documentation---\n    test_cases---\n        results_of_previous_verification_and_validation_testing\n    end\n    subgraph Maintenance_tasks\n        direction TB\n        Software_Validation_Plan_Revision---\n        Anomaly_Evaluation---\n        Problem_Identification_and_Resolution_Tracking---\n        Proposed_Change_Assessment---\n        Task_Iteration---\n        Documentation_Updating\n    end\nHardware_VS_Software-->Maintenance_Type-->Factors_of_Validation_for_SW_change-->\nFactors_of_Limitting_Validation_Effort-->Maintenance_tasks"
  },
  {
    "objectID": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#validation-of-quality-system-software",
    "href": "docs/blog/posts/Validation/2023-01-27_FDA_sw_general_guidance_presentation/index.html#validation-of-quality-system-software",
    "title": "FDA Software Validation Guidance Presentation",
    "section": "Validation of Quality System Software",
    "text": "Validation of Quality System Software\n\nOverview\n\n\n\n\nflowchart LR\n    subgraph Use_of_Computers_and_automated_equipment\n        direction TB\n        medical_device_design---\n        laboratory_testing_and_analysis---\n        product_inspection_and_acceptance---\n        production_and_process_control---\n        environmental_controls---\n        packaging---\n        labeling---\n        traceability---\n        document_control---\n        complaint_management---\n        programmable_logic_controllers---\n        digital_function_controllers---\n        statistical_process_control---\n        supervisory_control_and_data_acquisition---\n        robotics---\n        human_machine_interfaces---\n        input_output_devices---\n        computer_operating_systems\n    end\n    subgraph Factors_in_Validation\n        direction TB\n        subgraph Validation_Factors_of_Quality_System\n            direction TB\n            subgraph 21_CFR_Part_11_Requirements\n                direction TB\n            end\n        end\n        subgraph Validation_Supporting_Factors\n            direction TB\n        end\n        subgraph Factors_of_Validation_Evidence_Level\n            direction TB\n        end\n        subgraph Factors_of_Easing_Validation_Effort\n            direction TB\n            planning---\n            documented_requirments---\n            risk_analysis   \n        end\n    Validation_Factors_of_Quality_System-->Validation_Supporting_Factors-->Factors_of_Validation_Evidence_Level-->\nFactors_of_Easing_Validation_Effort\n    end\n    subgraph Documented_User_Requirements\n        direction TB\n        intended_use_of_software_or_automated_equipment---\n      level_of_dependency_on_software_or_equipment\n    end\n    subgraph List_That_Must_Be_Defined_by_User\n        direction TB\n        \n    end\n    subgraph Documentation_List\n        direction TB\n        documented_protocol---\n        documented_validation_results\n        subgraph Documented_Test_Cases\n            direction TB\n        \n        end\n        documented_validation_results---Documented_Test_Cases\n    end\n\n    subgraph Manufaturer's_Responsbility\n        direction TB\n        \n    end\nUse_of_Computers_and_automated_equipment---Factors_in_Validation---Documented_User_Requirements---\nList_That_Must_Be_Defined_by_User---Documentation_List---Manufaturer's_Responsbility\n\n\n\n\n\n\n\n\n\n\nFactors in Validation\n\n\n\n\nflowchart LR\n    subgraph Factors_in_Validation\n        direction LR\n        subgraph Validation_Factors_of_Quality_System\n            direction TB\n            subgraph 21_CFR_Part_11_Requirements\n                direction TB\n                electronic_records_regulation---\n                electronic_signatures_regulation---\n                regulations_establishment---\n                security---\n                data_integrity---\n                validation_requirements \n            end\n        end\n        subgraph Validation_Supporting_Factors\n            direction TB\n            verifications_of_outputs_from_each_stage--- \n            verifications_of_outputs_throught_SW_life_cycle---\n            checking_for_proper_operation_in_intended_use_environment\n        end\n        subgraph Factors_of_Validation_Evidence_Level\n            direction TB\n            risk_posed_by_automated_operation---\n            complexity_of_process_software---\n            degree_of_dependence_on_automated_process\n        end\n        subgraph Factors_of_Easing_Validation_Effort\n            direction TB\n            planning---\n            documented_requirments---\n            risk_analysis   \n        end\n    Validation_Factors_of_Quality_System-->Validation_Supporting_Factors-->Factors_of_Validation_Evidence_Level-->\nFactors_of_Easing_Validation_Effort\n    end"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-07-anova/index.html#similar-statistical-methods",
    "href": "docs/blog/posts/statistics/2023-01-07-anova/index.html#similar-statistical-methods",
    "title": "ANOVA",
    "section": "1 Similar Statistical Methods",
    "text": "1 Similar Statistical Methods\n\n2023-01-27, ANCOVA\n2023-01-27, repeated measures ANOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA\n\n\n\n\nKorean\n\n\n\n\nEnglish\n\n\n\n\n\n\n1.1 Description\nANOVA는 3개 이상의 모집단 사이의 평균의 동일성을 검정하는 통계 분석 방법이다.\n\n일원 분산 분석 (One-way ANOVA)\n\n그룹을 구분하는 변수가 1개\nBetween-Groups one-way ANOVA(집단간 일원분산분석): 관측치를 grouping하는 범주형 변수가 1개이며 각 관측치는 범주형 변수에 의해 구분되는 그룹들 가운데 반드시 하나에만 할당되어야한다. 즉, 어떠한 경우에도 하나의 관측치 또는 샘플이 여러 groups에 동시에 들어가면 안된다. 이 때 이렇게 그룹을 나누는 범주형 변수를 집단간 요인이라고 한다.\nWithin-groups one-way ANOVA (집단 내 일원분산분석) or repeated measures ANOVA: 시간과 같은 하나의 범주형 변수로 샘플들을 측정한다. 시간의 경과에 따라 측정된 샘플들을 범주형 변수의 여러 기간에 걸쳐 모두 할당시킨다. 즉, 하나의 샘플이 여러 그룹에 다른 측정치로 관찰될 수 있다. 예를들어, sample A가 4주, 8주, 12주, 16주 그룹에 모두 측정 된다. 이때 기간변수는 집단 내 요인이라고 부른다.\n\n이원 분산 분석 (Two-way ANOVA)\n\n집단을 구분하는 변수가 2개이며 각 집단 간 요인과 집단 내 요인을 나타낸다.\n이원 분석 부터는 main effect와 interaction effect가 존재한다.\n범주형 변수 A와 범주형 변수 B의 Main effect 계산\n범주형 변수 A와 범주형 변수 B의 상호 작용 효과 or 교호 작용 효과 (Interaction effect) 계산\ngroup을 구분하는 독립변수가 2개 일때 모집단 간 평균의 동일성 검정\n\n2개의 주효과(main effect) 검정: 각 독립 변수에 의해 만들어지는 집단 간 평균의 차이에 대한 검정\n\n먼저, 두 독립변수가 종속변수에 개별적으로 영향을 미치는지 검정\n\n\n1개의 상호작용효과(interaction effect) 검정: 두 독립 변수의 조합에 의해 만들어지는 집단 간 평균의 차이에 대한 검정\n\n두 독립변수의 조합이 종속변수와 유의한 영향관계를 갖는지 검정\n\n만약에 유의하다면 2개의 독립변수가 합쳐져서 나온 파생효과이기 때문에 1개만 골라서 분석해서 해석 할 수 없음\n\n\n\n\n\n1.2 How to conduct ANOVA?\n\n분산 분석은 F검정(F test)을 통해 수행한다.\nF 검정은 집단 간 분산 (between-groups variability)과 집단 내 분산 (within-groups variability)의 ratio로 계산된 F값 (F value or F statistic)을 토대로 가설검정을 수행한다. 이때 F value or F statistic을 통계 검정을 위한 검정통계량 (test statistic) 라고 부른다.\nF 검정 결과가 통계적으로 유의하면 집단 간 평균의 차이가 존재한다. (즉, 독립 변수가 종속변수에 영향을 미침)\nF 분포 2개의 자유도에 의해 분포의 모양이 결정되며 대체로 오른쪽으로 긴 꼬리를 갖는다\n\n첫 번째 자유도: 집단 간(between-group)의 자유도\n두 번째 자유도: 집단 내(within-group)의 자유도\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(gplots)\nlibrary(rmarkdown)\nknitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)\noptions(digits = 5)\nset.seed(20230109)\n\n\n\n\n\n\n\n종속 변수의 변동성은 다음과 같이 설명되기 때문에 아래의 식을 만족한다.\n\\[SS_{total}=SS_A+SS_B+SS_{AB}+SS_{error}\\]\n\\(SS_{total}\\)은 쉽게 구할 수 있고 \\(SS_A\\), \\(SS_B\\), \\(SS_{error}\\)를 계산하여 빼준다.\nTwo Way Anova SS 계산 공식 링크\n\\(SS_{AB}\\) 즉,\n\\[ SS_{AB}=SS_{total}-SS_A-SS_B-SS_{error} \\]\n\n\n1.3 Meaning\nANOVA는 집단 간 분산과 집단 내 분산의 비교하는 방식으로, 좀 더 구체적으로는 집단 간 분산과 집단 내 분산의 비를 계산하여, 집단 간 분산이 클수록 그리고 집단 분산이 작을 수록 집단 평균이 다를 가능성이 증가한다는 알고리즘에 기초한다.\n\n\n2 Application to Example\n\n2.1 Data Description\n\n2.1.1 Raw Data\n(…통계 컨설팅 일부 발췌…)\n\n\n\nexample data는 Day, Run, response의 변수들을 포함하고 있습니다. 공유해주신 정보에 따르면 아마도 Run은 오전과 오후를 나누는 변수인 것으로 생각 됩니다. 이 data만 보면 아마도 같은 샘플에 대해서 시약 제품이 시간에 따라 얼마나 안정적인 performance를 보여주는지 검사하는 실험으로 추측됩니다. 좀 더 분석하기 용이한 형태로 data structure를 바꾸겠습니다.\n\n\n2.1.2 Processed Data\n\n\n\n\n  \n\n\n\n재가공된 data는 120개의 샘플과 5개의 변수를 갖고있습니다. 변수 목록은 다음과 같습니다.\n\nid: 열번호, 총 20일간 하루 2회 구동(AM, PM) 구동, 오전 오후 각 각 3번씩 구동 총 120 \\((=20 \\times 3 \\times 2)\\) 샘플\n\nDay: Day1~20\n\nnoon: AM= before noon, PM= after noon\nRun: 1회 구동당 3번 반복씩1, 2, 3\n\nresponse: response variable, 낮을 수록 좋음\n\nANOVA의 Assumption\n\nresponse variable should follow normal distribution.\n\nhomoscedasticity, equality of variance: 각 집단의 분포는 모두 동일한 분산을 가짐\nANOVA의 가정들을 반드시 충족하지 않아도 되지만 충족하면 Power 가 올라감\n\n\n\n\n2.2 EDA (Explorator Data Analysis)\n이 data는 아래 처럼 1의 결측치를 갖고 있습니다.\n\n\n\n\n\nid\nDay\nnoon\nRun\nresponse\n\n\n\n\n117\n20\nAM\n3\nNA\n\n\n\n\n\nCt에 대한 Global Statistics는 다음과 같습니다.\n\n\n\n\n\ncount\nglobal_response_mean\nglobal_response_sd\nglobal_response_CV\n\n\n\n\n119\n38.727\n18.47\n47.694 %\n\n\n\n\n\nDay groups의 Statistics은 다음과 같습니다.\n\n\n\n\n\n\n\n\n\n\n\n\nDay\ncount\nDay_group_response_mean\nDay_group_response_sd\nDay_group_response_CV\n\n\n\n\n1\n6\n47.342\n18.7880\n39.686 %\n\n\n2\n6\n41.203\n14.1028\n34.227 %\n\n\n3\n6\n43.261\n27.9790\n64.674 %\n\n\n4\n6\n33.042\n12.0743\n36.542 %\n\n\n5\n6\n44.006\n7.5597\n17.179 %\n\n\n6\n6\n40.529\n17.6875\n43.641 %\n\n\n7\n6\n40.919\n20.5293\n50.17 %\n\n\n8\n6\n42.977\n24.1723\n56.244 %\n\n\n9\n6\n55.894\n25.1692\n45.031 %\n\n\n10\n6\n34.639\n10.3367\n29.841 %\n\n\n11\n6\n49.187\n28.0760\n57.08 %\n\n\n12\n6\n26.939\n9.0372\n33.547 %\n\n\n13\n6\n43.865\n11.2744\n25.703 %\n\n\n14\n6\n28.819\n18.3234\n63.58 %\n\n\n15\n6\n28.677\n25.0912\n87.495 %\n\n\n16\n6\n31.516\n13.0811\n41.506 %\n\n\n17\n6\n30.061\n16.0155\n53.276 %\n\n\n18\n6\n35.277\n14.7036\n41.68 %\n\n\n19\n6\n32.971\n18.9421\n57.451 %\n\n\n20\n5\n44.347\n10.2720\n23.163 %\n\n\n\n\n\nAM/PM groups의 Statistics은 다음과 같습니다.\n\n\n\n\n\n\n\n\n\n\n\n\nnoon\ncount\nnoon_group_response_mean\nnoon_group_response_sd\nnoon_group_response_CV\n\n\n\n\nAM\n59\n40.380\n18.701\n46.313 %\n\n\nPM\n60\n37.101\n18.250\n49.191 %\n\n\n\n\n\nDays와 AM/PM 조합 groups의 Statistics은 다음과 같습니다.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay\nnoon\ncount\ncombi_group_response_mean\ncombi_group_response_sd\ncombi_group_response_CV\n\n\n\n\n1\nAM\n3\n35.987\n20.9797\n58.298 %\n\n\n1\nPM\n3\n58.697\n7.4516\n12.695 %\n\n\n2\nAM\n3\n40.032\n18.6291\n46.535 %\n\n\n2\nPM\n3\n42.374\n12.0856\n28.521 %\n\n\n3\nAM\n3\n33.148\n22.1450\n66.806 %\n\n\n3\nPM\n3\n53.374\n34.0565\n63.807 %\n\n\n4\nAM\n3\n36.697\n16.3483\n44.55 %\n\n\n4\nPM\n3\n29.387\n7.5583\n25.72 %\n\n\n5\nAM\n3\n44.432\n4.6107\n10.377 %\n\n\n5\nPM\n3\n43.581\n11.0032\n25.248 %\n\n\n6\nAM\n3\n45.781\n23.6862\n51.739 %\n\n\n6\nPM\n3\n35.277\n11.7618\n33.341 %\n\n\n7\nAM\n3\n40.458\n12.3380\n30.496 %\n\n\n7\nPM\n3\n41.381\n30.0128\n72.529 %\n\n\n8\nAM\n3\n51.103\n33.4416\n65.439 %\n\n\n8\nPM\n3\n34.852\n12.0135\n34.47 %\n\n\n9\nAM\n3\n69.981\n7.7381\n11.057 %\n\n\n9\nPM\n3\n41.806\n30.4715\n72.887 %\n\n\n10\nAM\n3\n26.619\n3.4483\n12.954 %\n\n\n10\nPM\n3\n42.658\n7.8928\n18.502 %\n\n\n11\nAM\n3\n67.923\n28.8752\n42.512 %\n\n\n11\nPM\n3\n30.452\n9.1557\n30.066 %\n\n\n12\nAM\n3\n25.981\n5.9053\n22.729 %\n\n\n12\nPM\n3\n27.897\n12.9054\n46.261 %\n\n\n13\nAM\n3\n40.600\n15.2088\n37.46 %\n\n\n13\nPM\n3\n47.129\n7.3823\n15.664 %\n\n\n14\nAM\n3\n25.839\n8.4556\n32.725 %\n\n\n14\nPM\n3\n31.800\n27.2253\n85.614 %\n\n\n15\nAM\n3\n18.458\n4.5063\n24.414 %\n\n\n15\nPM\n3\n38.897\n35.2180\n90.542 %\n\n\n16\nAM\n3\n36.910\n18.3756\n49.785 %\n\n\n16\nPM\n3\n26.123\n1.6899\n6.469 %\n\n\n17\nAM\n3\n41.594\n13.3474\n32.09 %\n\n\n17\nPM\n3\n18.529\n8.0068\n43.212 %\n\n\n18\nAM\n3\n38.471\n6.0067\n15.614 %\n\n\n18\nPM\n3\n32.084\n21.7672\n67.845 %\n\n\n19\nAM\n3\n45.923\n19.7931\n43.101 %\n\n\n19\nPM\n3\n20.019\n1.4176\n7.081 %\n\n\n20\nAM\n2\n42.303\n3.9142\n9.253 %\n\n\n20\nPM\n3\n45.710\n14.0145\n30.66 %\n\n\n\n\n\n이제 ANOVA를 수행하기 위한 basic statistics는 모두 구했습니다. ANOVA를 수행하기 위해 집단 간 분산과 집단 내 분산을 계산하도록 하겠습니다.\n\n\n2.3 집단 간 분산\n앞에서 설명 드린바로 유추해보면 예시 data의 집단 간 분산의 범주형 변수는 Day로 설정하는 것이 합리적인 것으로 보입니다.\n\n\\(g=g\\) Day의 sample size = 20, 자유도 = 20-1 = 19 입니다.\n\\(n_g=g\\) group의 sample size, \\(\\overline{X}_g=g\\) 의 sample mean은 다음과 같습니다.\n\\(\\overline{X}\\) = global sample mean = 38.72681\n집단 간 분산: \\(\\frac{집단 간 제곱합}{자유도}=\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n2.3.1 SS_Day (집단간 분산 Day)\nDay sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(Day)간 분산 계산, 집단(Day)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDay\ncount\nDay_group_response_mean\nDay_group_response_sd\nDay_group_response_CV\nday_sq\nsum_day_ssq\ndf\nday_mean_ssq\nday_sd\n\n\n\n\n1\n6\n47.342\n18.7880\n39.686 %\n445.322\n7026\n19\n369.79\n19.23\n\n\n2\n6\n41.203\n14.1028\n34.227 %\n36.796\n7026\n19\n369.79\n19.23\n\n\n3\n6\n43.261\n27.9790\n64.674 %\n123.369\n7026\n19\n369.79\n19.23\n\n\n4\n6\n33.042\n12.0743\n36.542 %\n193.907\n7026\n19\n369.79\n19.23\n\n\n5\n6\n44.006\n7.5597\n17.179 %\n167.248\n7026\n19\n369.79\n19.23\n\n\n6\n6\n40.529\n17.6875\n43.641 %\n19.488\n7026\n19\n369.79\n19.23\n\n\n7\n6\n40.919\n20.5293\n50.17 %\n28.844\n7026\n19\n369.79\n19.23\n\n\n8\n6\n42.977\n24.1723\n56.244 %\n108.406\n7026\n19\n369.79\n19.23\n\n\n9\n6\n55.894\n25.1692\n45.031 %\n1768.182\n7026\n19\n369.79\n19.23\n\n\n10\n6\n34.639\n10.3367\n29.841 %\n100.275\n7026\n19\n369.79\n19.23\n\n\n11\n6\n49.187\n28.0760\n57.08 %\n656.506\n7026\n19\n369.79\n19.23\n\n\n12\n6\n26.939\n9.0372\n33.547 %\n833.756\n7026\n19\n369.79\n19.23\n\n\n13\n6\n43.865\n11.2744\n25.703 %\n158.376\n7026\n19\n369.79\n19.23\n\n\n14\n6\n28.819\n18.3234\n63.58 %\n588.946\n7026\n19\n369.79\n19.23\n\n\n15\n6\n28.677\n25.0912\n87.495 %\n605.941\n7026\n19\n369.79\n19.23\n\n\n16\n6\n31.516\n13.0811\n41.506 %\n311.963\n7026\n19\n369.79\n19.23\n\n\n17\n6\n30.061\n16.0155\n53.276 %\n450.547\n7026\n19\n369.79\n19.23\n\n\n18\n6\n35.277\n14.7036\n41.68 %\n71.390\n7026\n19\n369.79\n19.23\n\n\n19\n6\n32.971\n18.9421\n57.451 %\n198.778\n7026\n19\n369.79\n19.23\n\n\n20\n5\n44.347\n10.2720\n23.163 %\n157.938\n7026\n19\n369.79\n19.23\n\n\n\n\n\nAnalysis-In program의 ANOVA결과값과 일치하는 것을 볼 수 있습니다. $SS_{day} $= 7025.97838 with \\(df=19\\).\n\n\n2.3.2 SS_noon (집단간 분산 noon)\nnoon sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(noon)간 분산 계산, 집단(noon)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnoon\ncount\nnoon_group_response_mean\nnoon_group_response_sd\nnoon_group_response_CV\nnoon_sq\nsum_noon_ssq\ndf\nnoon_mean_ssq\nnoon_sd\n\n\n\n\nAM\n59\n40.380\n18.701\n46.313 %\n161.23\n319.76\n1\n319.76\n17.882\n\n\nPM\n60\n37.101\n18.250\n49.191 %\n158.54\n319.76\n1\n319.76\n17.882\n\n\n\n\n\nAnalysis-In program의 결과에서 찾아 볼 수 없죠? 이 결과는 숨어 있습니다. 상호 작용에 대한 분산값을 구하고 나면 정체를 알 수 있습니다.\n\\(SS_{noon}\\) = 319.76458 with \\(df=1\\).\n\n\n2.3.3 SS_error (집단내 분산)\n\n집단 내 분산 (within-groups variability)\n\n\n\n# A tibble: 119 × 10\n   Day   noon    Run response count combi_group_…¹ resid…²    df resid…³ mean_…⁴\n   <fct> <fct> <int>    <dbl> <int>          <dbl>   <dbl> <dbl>   <dbl>   <dbl>\n 1 1     AM        1     60.2     3           36.0 5.86e+2    79  24704.    313.\n 2 1     AM        2     22.9     3           36.0 1.71e+2    79  24704.    313.\n 3 1     AM        3     24.8     3           36.0 1.24e+2    79  24704.    313.\n 4 1     PM        1     61.9     3           58.7 1.02e+1    79  24704.    313.\n 5 1     PM        2     50.2     3           58.7 7.25e+1    79  24704.    313.\n 6 1     PM        3     64.0     3           58.7 2.83e+1    79  24704.    313.\n 7 2     AM        1     21.4     3           40.0 3.46e+2    79  24704.    313.\n 8 2     AM        2     40.0     3           40.0 5.04e-3    79  24704.    313.\n 9 2     AM        3     58.7     3           40.0 3.48e+2    79  24704.    313.\n10 2     PM        1     38.5     3           42.4 1.52e+1    79  24704.    313.\n# … with 109 more rows, and abbreviated variable names\n#   ¹​combi_group_response_mean, ²​residual_sq, ³​residual_ssq, ⁴​mean_residual_ssq\n\n\n\\(SS_{error}\\) = 2.47041^{4}\nAnalysis-In program의 결과와 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.4 SS_total\n\n\n# A tibble: 119 × 6\n      id Day   noon    Run response total_ssq\n   <int> <fct> <fct> <int>    <dbl>     <dbl>\n 1     1 1     AM        1     60.2    40256.\n 2     2 1     AM        2     22.9    40256.\n 3     3 1     AM        3     24.8    40256.\n 4     4 1     PM        1     61.9    40256.\n 5     5 1     PM        2     50.2    40256.\n 6     6 1     PM        3     64.0    40256.\n 7     7 2     AM        1     21.4    40256.\n 8     8 2     AM        2     40.0    40256.\n 9     9 2     AM        3     58.7    40256.\n10    10 2     PM        1     38.5    40256.\n# … with 109 more rows\n\n\n\\(SS_{total}\\) = 4.02557^{4}\nAnalysis-In program의 ANOVA 결과 table에 있는 SS들의 합과 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.5 상호 작용 분산\n\n\n\n\\(SS_{interaction}=SS_{DayNoon}= SS_{total}-SS_{Day}-SS_{noon}-SS_{error}\\) = 4.02557{4}-2.47041{4}-319.76458-7025.97838 = 8205.93974\nAnalysis-In program의 ANOVA 결과 table과 일치하는 것을 확인할 수 있습니다.\n위의 결과들을 종합하면 아래와 같이 요약됩니다.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370    1.18   0.29\nnoon         1    339     339    1.08   0.30\nDay:noon    19   8187     431    1.38   0.16\nResiduals   79  24704     313               \n1 observation deleted due to missingness\n\n\n\nRepeatability SD = \\(\\sqrt{V_{error}}=\\sqrt{MS_{error}}\\) = 17.6836\nRepeatability CV = \\(\\frac{repeatability \\space SD}{global \\space mean \\space response}\\) = 0.45662\n\n(생략, 다른 통계량들은 ANOVA_A repeat2.xlsx 참조)\n위의 결과를 간단히 해석해 보면\n\n집단간 범주 변수인 Day는 p-value =0.29>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 일별로 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 일별로 평균 response값이 다르지 않습니다.\n\n집단간 범주 변수인 noon은 p-value =0.30>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 오전/오후별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 오전/오후별 평균 response값이 다르지 않습니다.\n\nDay와 noon두 변수의 상호작용 변수는 p-value =0.16>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 다르지 않습니다.\n\n\n최종 결론, 제품의 response값이 Day별 오전/오후별 안정적인 performance를 보인다고 조심스럽게 결론을 내릴 수 있습니다.\n이제 까지는 질문에 대한 답이 되는 ANOVA의 원리 및 통계량의 재현 및 해석법에 대하여 알아봤습니다. 하지만 직관적으로 어떤 의미가 있을 까요? 원래는 시각화를 통해 데이터의 패턴을 짐작하고 통계 검정 결과를 예상하는데 우리는 반대로 가고 있네요 ㅎㅎ 시각화를 통해 ANOVA 결과가 얼마나 직관적인지 알아보겠습니다.\n\n\n\n2.4 Visualization\n\n2.4.1 One-way: Day\n\n\n\n\n\n\n\n\n자세히 보면 일별로 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다. 하지만 좀 더 세부적으로 관찰하면 1일~8일 평균 response의 경향이 constant한 패턴을 보입니다. 9일~13일 평균 response가 진동 하향하는 패턴을 보입니다. 14일~20일 평균 response가 상향하는 패턴을 보입니다.\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n Day \n        1    2     3     4     5     6     7     8     9    10    11    12\n    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94\nrep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n\nTables of effects\n\n Day \n        1     2     3      4    5     6     7     8     9     10    11     12\n    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79\nrep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00\n       13     14     15     16     17     18     19   20\n    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62\nrep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00\n\n\n위에 첫 번째표에서 Global Sample response Mean = 38.727 과 각 집단의 평균 response를 확인할 수 있습니다. 위에 두 번째표에서 Global Sample response Mean = 37.322 과 각 집단의 평균 response의 차이를 확인할 수 있습니다.\n\nDay 9에서 차이가 가장 큰 것으로 보아 9일째 실험에서 performance가 가장 낮은 것이 관측됐습니다.\n반대로, 12일에 performance 가장 좋은 것으로 관측됐습니다.\n\n9일과 12일에 response값에 영향을 미쳤던 요인이 있었는지 복기 하는것도 도움이 되겠군요.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370     1.1   0.36\nResiduals   99  33230     336               \n1 observation deleted due to missingness\n\n\nOne-way ANOVA의 결과값입니다. Day별 평균 response의 차이는 거의 없는 것으로 보입니다. 따라서 Day 별 평균 response의 경향이 일관되지 않고 One-way ANOVA에서 역시 통계적으로 유의하지 않아 Day 변수는 평균 response에 영향을 미치지 않는 것 같습니다.\n\n\n2.4.2 One-way: AM/PM\n\n\n\n\n\n\n\n\n오후에 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다.\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n noon \n       AM   PM\n    40.38 37.1\nrep 59.00 60.0\n\n\nTables of effects\n\n noon \n        AM     PM\n     1.653 -1.626\nrep 59.000 60.000\n\n\n위 첫 번째 표에서 AM/PM 간의 평균 response차이는 0.15 (농도가 약 0.5배) 차이가 나는 것을 확인할 수 있습니다. 생물학적으로 의미가 있는 수치일까요? 위 두 번째 표에서 Global Sample Mean 37.322와 오전/오후 별 약 0.07씩(농도가 약 0.25배) 차이가 납니다.\n\n\n             Df Sum Sq Mean Sq F value Pr(>F)\nnoon          1    320     320    0.94   0.34\nResiduals   117  39936     341               \n1 observation deleted due to missingness\n\n\n오전 오후별 One way ANOVA를 실행한 결과가 오전/오부 평균 response값의 차이가 다르지 않다는 것을 시사하고 있습니다. 아무래도 위의 차이는 우연에 의해 발생한 현상인 것 같습니다.\n\n\n\n\n\n일별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 Day 변수는 유의하다고 볼 수 없습니다.\n\n\n\n\n\n오전/오후별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 오전/오후 변수는 유의하다고 볼 수 없습니다.\n여기 까지 각 변수별 평균 response로의 영향도를 통계적으로 시각적으로 관찰했습니다. 하지만 Day별 오전/오후별 영향도가 있는지 확인하겠습니다. (이미 위에서 통계적으로 없다고 검정됐습니다.)\n\n\n\n2.5 Two way Anova\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n Day \n        1    2     3     4     5     6     7     8     9    10    11    12\n    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94\nrep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n noon \n       AM    PM\n    40.43 37.05\nrep 59.00 60.00\n\n Day:noon \n     noon\nDay   AM    PM   \n  1   35.99 58.70\n  rep  3.00  3.00\n  2   40.03 42.37\n  rep  3.00  3.00\n  3   33.15 53.37\n  rep  3.00  3.00\n  4   36.70 29.39\n  rep  3.00  3.00\n  5   44.43 43.58\n  rep  3.00  3.00\n  6   45.78 35.28\n  rep  3.00  3.00\n  7   40.46 41.38\n  rep  3.00  3.00\n  8   51.10 34.85\n  rep  3.00  3.00\n  9   69.98 41.81\n  rep  3.00  3.00\n  10  26.62 42.66\n  rep  3.00  3.00\n  11  67.92 30.45\n  rep  3.00  3.00\n  12  25.98 27.90\n  rep  3.00  3.00\n  13  40.60 47.13\n  rep  3.00  3.00\n  14  25.84 31.80\n  rep  3.00  3.00\n  15  18.46 38.90\n  rep  3.00  3.00\n  16  36.91 26.12\n  rep  3.00  3.00\n  17  41.59 18.53\n  rep  3.00  3.00\n  18  38.47 32.08\n  rep  3.00  3.00\n  19  45.92 20.02\n  rep  3.00  3.00\n  20  42.30 45.71\n  rep  2.00  3.00\n\n\nTables of effects\n\n Day \n        1     2     3      4    5     6     7     8     9     10    11     12\n    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79\nrep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00\n       13     14     15     16     17     18     19   20\n    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62\nrep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00\n\n noon \n        AM     PM\n     1.701 -1.672\nrep 59.000 60.000\n\n Day:noon \n     noon\nDay   AM      PM     \n  1   -13.044  13.044\n  rep   3.000   3.000\n  2    -2.860   2.860\n  rep   3.000   3.000\n  3   -11.802  11.802\n  rep   3.000   3.000\n  4     1.966  -1.966\n  rep   3.000   3.000\n  5    -1.263   1.263\n  rep   3.000   3.000\n  6     3.562  -3.562\n  rep   3.000   3.000\n  7    -2.151   2.151\n  rep   3.000   3.000\n  8     6.437  -6.437\n  rep   3.000   3.000\n  9    12.398 -12.398\n  rep   3.000   3.000\n  10   -9.709   9.709\n  rep   3.000   3.000\n  11   17.046 -17.046\n  rep   3.000   3.000\n  12   -2.647   2.647\n  rep   3.000   3.000\n  13   -4.954   4.954\n  rep   3.000   3.000\n  14   -4.670   4.670\n  rep   3.000   3.000\n  15  -11.909  11.909\n  rep   3.000   3.000\n  16    3.704  -3.704\n  rep   3.000   3.000\n  17    9.843  -9.843\n  rep   3.000   3.000\n  18    1.504  -1.504\n  rep   3.000   3.000\n  19   11.262 -11.262\n  rep   3.000   3.000\n  20   -4.071   2.714\n  rep   2.000   3.000\n\n\none way ANOVA와 같이 해석\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370    1.18   0.29\nnoon         1    339     339    1.08   0.30\nDay:noon    19   8187     431    1.38   0.16\nResiduals   79  24704     313               \n1 observation deleted due to missingness\n\n\n위 그림을 보듯이 두 변수의 영향도가 없음, ANOVA 역시 유의하지 않음\n\n\n\n\n\n\n Missing rows: 117 \n\n\n\n\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = response ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff     lwr     upr   p adj\n2-1    -6.138710 -43.575 31.2979 1.00000\n3-1    -4.080645 -41.517 33.3560 1.00000\n4-1   -14.300000 -51.737 23.1366 0.99700\n5-1    -3.335484 -40.772 34.1011 1.00000\n6-1    -6.812903 -44.250 30.6237 1.00000\n7-1    -6.422581 -43.859 31.0140 1.00000\n8-1    -4.364516 -41.801 33.0721 1.00000\n9-1     8.551613 -28.885 45.9882 1.00000\n10-1  -12.703226 -50.140 24.7334 0.99934\n11-1    1.845161 -35.591 39.2818 1.00000\n12-1  -20.403226 -57.840 17.0334 0.89330\n13-1   -3.477419 -40.914 33.9592 1.00000\n14-1  -18.522581 -55.959 18.9140 0.95243\n15-1  -18.664516 -56.101 18.7721 0.94905\n16-1  -15.825806 -53.262 21.6108 0.99024\n17-1  -17.280645 -54.717 20.1560 0.97539\n18-1  -12.064516 -49.501 25.3721 0.99968\n19-1  -14.370968 -51.808 23.0657 0.99682\n20-1   -2.994839 -42.259 36.2690 1.00000\n3-2     2.058065 -35.379 39.4947 1.00000\n4-2    -8.161290 -45.598 29.2753 1.00000\n5-2     2.803226 -34.633 40.2399 1.00000\n6-2    -0.674194 -38.111 36.7624 1.00000\n7-2    -0.283871 -37.721 37.1528 1.00000\n8-2     1.774194 -35.662 39.2108 1.00000\n9-2    14.690323 -22.746 52.1270 0.99585\n10-2   -6.564516 -44.001 30.8721 1.00000\n11-2    7.983871 -29.453 45.4205 1.00000\n12-2  -14.264516 -51.701 23.1721 0.99709\n13-2    2.661290 -34.775 40.0979 1.00000\n14-2  -12.383871 -49.821 25.0528 0.99953\n15-2  -12.525806 -49.962 24.9108 0.99946\n16-2   -9.687097 -47.124 27.7495 0.99999\n17-2  -11.141935 -48.579 26.2947 0.99990\n18-2   -5.925806 -43.362 31.5108 1.00000\n19-2   -8.232258 -45.669 29.2044 1.00000\n20-2    3.143871 -36.120 42.4077 1.00000\n4-3   -10.219355 -47.656 27.2173 0.99997\n5-3     0.745161 -36.691 38.1818 1.00000\n6-3    -2.732258 -40.169 34.7044 1.00000\n7-3    -2.341935 -39.779 35.0947 1.00000\n8-3    -0.283871 -37.721 37.1528 1.00000\n9-3    12.632258 -24.804 50.0689 0.99939\n10-3   -8.622581 -46.059 28.8140 1.00000\n11-3    5.925806 -31.511 43.3624 1.00000\n12-3  -16.322581 -53.759 21.1140 0.98634\n13-3    0.603226 -36.833 38.0399 1.00000\n14-3  -14.441935 -51.879 22.9947 0.99662\n15-3  -14.583871 -52.021 22.8528 0.99620\n16-3  -11.745161 -49.182 25.6915 0.99978\n17-3  -13.200000 -50.637 24.2366 0.99891\n18-3   -7.983871 -45.421 29.4528 1.00000\n19-3  -10.290323 -47.727 27.1463 0.99997\n20-3    1.085806 -38.178 40.3497 1.00000\n5-4    10.964516 -26.472 48.4011 0.99992\n6-4     7.487097 -29.950 44.9237 1.00000\n7-4     7.877419 -29.559 45.3140 1.00000\n8-4     9.935484 -27.501 47.3721 0.99998\n9-4    22.851613 -14.585 60.2882 0.76824\n10-4    1.596774 -35.840 39.0334 1.00000\n11-4   16.145161 -21.291 53.5818 0.98785\n12-4   -6.103226 -43.540 31.3334 1.00000\n13-4   10.822581 -26.614 48.2592 0.99993\n14-4   -4.222581 -41.659 33.2140 1.00000\n15-4   -4.364516 -41.801 33.0721 1.00000\n16-4   -1.525806 -38.962 35.9108 1.00000\n17-4   -2.980645 -40.417 34.4560 1.00000\n18-4    2.235484 -35.201 39.6721 1.00000\n19-4   -0.070968 -37.508 37.3657 1.00000\n20-4   11.305161 -27.959 50.5690 0.99994\n6-5    -3.477419 -40.914 33.9592 1.00000\n7-5    -3.087097 -40.524 34.3495 1.00000\n8-5    -1.029032 -38.466 36.4076 1.00000\n9-5    11.887097 -25.550 49.3237 0.99974\n10-5   -9.367742 -46.804 28.0689 0.99999\n11-5    5.180645 -32.256 42.6173 1.00000\n12-5  -17.067742 -54.504 20.3689 0.97827\n13-5   -0.141935 -37.579 37.2947 1.00000\n14-5  -15.187097 -52.624 22.2495 0.99387\n15-5  -15.329032 -52.766 22.1076 0.99318\n16-5  -12.490323 -49.927 24.9463 0.99948\n17-5  -13.945161 -51.382 23.4915 0.99780\n18-5   -8.729032 -46.166 28.7076 1.00000\n19-5  -11.035484 -48.472 26.4011 0.99991\n20-5    0.340645 -38.923 39.6045 1.00000\n7-6     0.390323 -37.046 37.8270 1.00000\n8-6     2.448387 -34.988 39.8850 1.00000\n9-6    15.364516 -22.072 52.8011 0.99300\n10-6   -5.890323 -43.327 31.5463 1.00000\n11-6    8.658065 -28.779 46.0947 1.00000\n12-6  -13.590323 -51.027 23.8463 0.99841\n13-6    3.335484 -34.101 40.7721 1.00000\n14-6  -11.709677 -49.146 25.7270 0.99979\n15-6  -11.851613 -49.288 25.5850 0.99975\n16-6   -9.012903 -46.450 28.4237 1.00000\n17-6  -10.467742 -47.904 26.9689 0.99996\n18-6   -5.251613 -42.688 32.1850 1.00000\n19-6   -7.558065 -44.995 29.8786 1.00000\n20-6    3.818065 -35.446 43.0819 1.00000\n8-7     2.058065 -35.379 39.4947 1.00000\n9-7    14.974194 -22.462 52.4108 0.99480\n10-7   -6.280645 -43.717 31.1560 1.00000\n11-7    8.267742 -29.169 45.7044 1.00000\n12-7  -13.980645 -51.417 23.4560 0.99773\n13-7    2.945161 -34.491 40.3818 1.00000\n14-7  -12.100000 -49.537 25.3366 0.99966\n15-7  -12.241935 -49.679 25.1947 0.99960\n16-7   -9.403226 -46.840 28.0334 0.99999\n17-7  -10.858065 -48.295 26.5786 0.99993\n18-7   -5.641935 -43.079 31.7947 1.00000\n19-7   -7.948387 -45.385 29.4882 1.00000\n20-7    3.427742 -35.836 42.6916 1.00000\n9-8    12.916129 -24.521 50.3528 0.99918\n10-8   -8.338710 -45.775 29.0979 1.00000\n11-8    6.209677 -31.227 43.6463 1.00000\n12-8  -16.038710 -53.475 21.3979 0.98869\n13-8    0.887097 -36.550 38.3237 1.00000\n14-8  -14.158065 -51.595 23.2786 0.99735\n15-8  -14.300000 -51.737 23.1366 0.99700\n16-8  -11.461290 -48.898 25.9753 0.99984\n17-8  -12.916129 -50.353 24.5205 0.99918\n18-8   -7.700000 -45.137 29.7366 1.00000\n19-8  -10.006452 -47.443 27.4302 0.99998\n20-8    1.369677 -37.894 40.6335 1.00000\n10-9  -21.254839 -58.691 16.1818 0.85576\n11-9   -6.706452 -44.143 30.7302 1.00000\n12-9  -28.954839 -66.391  8.4818 0.35269\n13-9  -12.029032 -49.466 25.4076 0.99969\n14-9  -27.074194 -64.511 10.3624 0.47719\n15-9  -27.216129 -64.653 10.2205 0.46731\n16-9  -24.377419 -61.814 13.0592 0.66832\n17-9  -25.832258 -63.269 11.6044 0.56535\n18-9  -20.616129 -58.053 16.8205 0.88455\n19-9  -22.922581 -60.359 14.5140 0.76389\n20-9  -11.546452 -50.810 27.7174 0.99991\n11-10  14.548387 -22.888 51.9850 0.99631\n12-10  -7.700000 -45.137 29.7366 1.00000\n13-10   9.225806 -28.211 46.6624 0.99999\n14-10  -5.819355 -43.256 31.6173 1.00000\n15-10  -5.961290 -43.398 31.4753 1.00000\n16-10  -3.122581 -40.559 34.3140 1.00000\n17-10  -4.577419 -42.014 32.8592 1.00000\n18-10   0.638710 -36.798 38.0753 1.00000\n19-10  -1.667742 -39.104 35.7689 1.00000\n20-10   9.708387 -29.555 48.9723 0.99999\n12-11 -22.248387 -59.685 15.1882 0.80373\n13-11  -5.322581 -42.759 32.1140 1.00000\n14-11 -20.367742 -57.804 17.0689 0.89472\n15-11 -20.509677 -57.946 16.9270 0.88898\n16-11 -17.670968 -55.108 19.7657 0.96936\n17-11 -19.125806 -56.562 18.3108 0.93692\n18-11 -13.909677 -51.346 23.5270 0.99787\n19-11 -16.216129 -53.653 21.2205 0.98726\n20-11  -4.840000 -44.104 34.4239 1.00000\n13-12  16.925806 -20.511 54.3624 0.98004\n14-12   1.880645 -35.556 39.3173 1.00000\n15-12   1.738710 -35.698 39.1753 1.00000\n16-12   4.577419 -32.859 42.0140 1.00000\n17-12   3.122581 -34.314 40.5592 1.00000\n18-12   8.338710 -29.098 45.7753 1.00000\n19-12   6.032258 -31.404 43.4689 1.00000\n20-12  17.408387 -21.855 56.6723 0.98369\n14-13 -15.045161 -52.482 22.3915 0.99450\n15-13 -15.187097 -52.624 22.2495 0.99387\n16-13 -12.348387 -49.785 25.0882 0.99955\n17-13 -13.803226 -51.240 23.6334 0.99807\n18-13  -8.587097 -46.024 28.8495 1.00000\n19-13 -10.893548 -48.330 26.5431 0.99992\n20-13   0.482581 -38.781 39.7464 1.00000\n15-14  -0.141935 -37.579 37.2947 1.00000\n16-14   2.696774 -34.740 40.1334 1.00000\n17-14   1.241935 -36.195 38.6786 1.00000\n18-14   6.458065 -30.979 43.8947 1.00000\n19-14   4.151613 -33.285 41.5882 1.00000\n20-14  15.527742 -23.736 54.7916 0.99545\n16-15   2.838710 -34.598 40.2753 1.00000\n17-15   1.383871 -36.053 38.8205 1.00000\n18-15   6.600000 -30.837 44.0366 1.00000\n19-15   4.293548 -33.143 41.7302 1.00000\n20-15  15.669677 -23.594 54.9335 0.99493\n17-16  -1.454839 -38.891 35.9818 1.00000\n18-16   3.761290 -33.675 41.1979 1.00000\n19-16   1.454839 -35.982 38.8915 1.00000\n20-16  12.830968 -26.433 52.0948 0.99961\n18-17   5.216129 -32.221 42.6528 1.00000\n19-17   2.909677 -34.527 40.3463 1.00000\n20-17  14.285806 -24.978 53.5497 0.99837\n19-18  -2.306452 -39.743 35.1302 1.00000\n20-18   9.069677 -30.194 48.3335 1.00000\n20-19  11.376129 -27.888 50.6400 0.99993\n\n$noon\n         diff     lwr    upr   p adj\nPM-AM -3.3731 -9.8265 3.0804 0.30135\n\n$`Day:noon`\n                  diff      lwr     upr   p adj\n2:AM-1:AM     4.045161  -54.344 62.4344 1.00000\n3:AM-1:AM    -2.838710  -61.228 55.5505 1.00000\n4:AM-1:AM     0.709677  -57.680 59.0989 1.00000\n5:AM-1:AM     8.445161  -49.944 66.8344 1.00000\n6:AM-1:AM     9.793548  -48.596 68.1827 1.00000\n7:AM-1:AM     4.470968  -53.918 62.8602 1.00000\n8:AM-1:AM    15.116129  -43.273 73.5053 1.00000\n9:AM-1:AM    33.993548  -24.396 92.3827 0.92887\n10:AM-1:AM   -9.367742  -67.757 49.0215 1.00000\n11:AM-1:AM   31.935484  -26.454 90.3247 0.96592\n12:AM-1:AM  -10.006452  -68.396 48.3827 1.00000\n13:AM-1:AM    4.612903  -53.776 63.0021 1.00000\n14:AM-1:AM  -10.148387  -68.538 48.2408 1.00000\n15:AM-1:AM  -17.529032  -75.918 40.8602 1.00000\n16:AM-1:AM    0.922581  -57.467 59.3118 1.00000\n17:AM-1:AM    5.606452  -52.783 63.9956 1.00000\n18:AM-1:AM    2.483871  -55.905 60.8731 1.00000\n19:AM-1:AM    9.935484  -48.454 68.3247 1.00000\n20:AM-1:AM    6.316129  -58.965 71.5972 1.00000\n1:PM-1:AM    22.709677  -35.680 81.0989 0.99990\n2:PM-1:AM     6.387097  -52.002 64.7763 1.00000\n3:PM-1:AM    17.387097  -41.002 75.7763 1.00000\n4:PM-1:AM    -6.600000  -64.989 51.7892 1.00000\n5:PM-1:AM     7.593548  -50.796 65.9827 1.00000\n6:PM-1:AM    -0.709677  -59.099 57.6795 1.00000\n7:PM-1:AM     5.393548  -52.996 63.7827 1.00000\n8:PM-1:AM    -1.135484  -59.525 57.2537 1.00000\n9:PM-1:AM     5.819355  -52.570 64.2086 1.00000\n10:PM-1:AM    6.670968  -51.718 65.0602 1.00000\n11:PM-1:AM   -5.535484  -63.925 52.8537 1.00000\n12:PM-1:AM   -8.090323  -66.480 50.2989 1.00000\n13:PM-1:AM   11.141935  -47.247 69.5311 1.00000\n14:PM-1:AM   -4.187097  -62.576 54.2021 1.00000\n15:PM-1:AM    2.909677  -55.480 61.2989 1.00000\n16:PM-1:AM   -9.864516  -68.254 48.5247 1.00000\n17:PM-1:AM  -17.458065  -75.847 40.9311 1.00000\n18:PM-1:AM   -3.903226  -62.292 54.4860 1.00000\n19:PM-1:AM  -15.967742  -74.357 42.4215 1.00000\n20:PM-1:AM    9.722581  -48.667 68.1118 1.00000\n3:AM-2:AM    -6.883871  -65.273 51.5053 1.00000\n4:AM-2:AM    -3.335484  -61.725 55.0537 1.00000\n5:AM-2:AM     4.400000  -53.989 62.7892 1.00000\n6:AM-2:AM     5.748387  -52.641 64.1376 1.00000\n7:AM-2:AM     0.425806  -57.963 58.8150 1.00000\n8:AM-2:AM    11.070968  -47.318 69.4602 1.00000\n9:AM-2:AM    29.948387  -28.441 88.3376 0.98570\n10:AM-2:AM  -13.412903  -71.802 44.9763 1.00000\n11:AM-2:AM   27.890323  -30.499 86.2795 0.99521\n12:AM-2:AM  -14.051613  -72.441 44.3376 1.00000\n13:AM-2:AM    0.567742  -57.821 58.9569 1.00000\n14:AM-2:AM  -14.193548  -72.583 44.1956 1.00000\n15:AM-2:AM  -21.574194  -79.963 36.8150 0.99997\n16:AM-2:AM   -3.122581  -61.512 55.2666 1.00000\n17:AM-2:AM    1.561290  -56.828 59.9505 1.00000\n18:AM-2:AM   -1.561290  -59.950 56.8279 1.00000\n19:AM-2:AM    5.890323  -52.499 64.2795 1.00000\n20:AM-2:AM    2.270968  -63.010 67.5521 1.00000\n1:PM-2:AM    18.664516  -39.725 77.0537 1.00000\n2:PM-2:AM     2.341935  -56.047 60.7311 1.00000\n3:PM-2:AM    13.341935  -45.047 71.7311 1.00000\n4:PM-2:AM   -10.645161  -69.034 47.7440 1.00000\n5:PM-2:AM     3.548387  -54.841 61.9376 1.00000\n6:PM-2:AM    -4.754839  -63.144 53.6344 1.00000\n7:PM-2:AM     1.348387  -57.041 59.7376 1.00000\n8:PM-2:AM    -5.180645  -63.570 53.2086 1.00000\n9:PM-2:AM     1.774194  -56.615 60.1634 1.00000\n10:PM-2:AM    2.625806  -55.763 61.0150 1.00000\n11:PM-2:AM   -9.580645  -67.970 48.8086 1.00000\n12:PM-2:AM  -12.135484  -70.525 46.2537 1.00000\n13:PM-2:AM    7.096774  -51.292 65.4860 1.00000\n14:PM-2:AM   -8.232258  -66.621 50.1569 1.00000\n15:PM-2:AM   -1.135484  -59.525 57.2537 1.00000\n16:PM-2:AM  -13.909677  -72.299 44.4795 1.00000\n17:PM-2:AM  -21.503226  -79.892 36.8860 0.99997\n18:PM-2:AM   -7.948387  -66.338 50.4408 1.00000\n19:PM-2:AM  -20.012903  -78.402 38.3763 0.99999\n20:PM-2:AM    5.677419  -52.712 64.0666 1.00000\n4:AM-3:AM     3.548387  -54.841 61.9376 1.00000\n5:AM-3:AM    11.283871  -47.105 69.6731 1.00000\n6:AM-3:AM    12.632258  -45.757 71.0215 1.00000\n7:AM-3:AM     7.309677  -51.080 65.6989 1.00000\n8:AM-3:AM    17.954839  -40.434 76.3440 1.00000\n9:AM-3:AM    36.832258  -21.557 95.2215 0.84321\n10:AM-3:AM   -6.529032  -64.918 51.8602 1.00000\n11:AM-3:AM   34.774194  -23.615 93.1634 0.90946\n12:AM-3:AM   -7.167742  -65.557 51.2215 1.00000\n13:AM-3:AM    7.451613  -50.938 65.8408 1.00000\n14:AM-3:AM   -7.309677  -65.699 51.0795 1.00000\n15:AM-3:AM  -14.690323  -73.080 43.6989 1.00000\n16:AM-3:AM    3.761290  -54.628 62.1505 1.00000\n17:AM-3:AM    8.445161  -49.944 66.8344 1.00000\n18:AM-3:AM    5.322581  -53.067 63.7118 1.00000\n19:AM-3:AM   12.774194  -45.615 71.1634 1.00000\n20:AM-3:AM    9.154839  -56.126 74.4359 1.00000\n1:PM-3:AM    25.548387  -32.841 83.9376 0.99897\n2:PM-3:AM     9.225806  -49.163 67.6150 1.00000\n3:PM-3:AM    20.225806  -38.163 78.6150 0.99999\n4:PM-3:AM    -3.761290  -62.150 54.6279 1.00000\n5:PM-3:AM    10.432258  -47.957 68.8215 1.00000\n6:PM-3:AM     2.129032  -56.260 60.5182 1.00000\n7:PM-3:AM     8.232258  -50.157 66.6215 1.00000\n8:PM-3:AM     1.703226  -56.686 60.0924 1.00000\n9:PM-3:AM     8.658065  -49.731 67.0473 1.00000\n10:PM-3:AM    9.509677  -48.880 67.8989 1.00000\n11:PM-3:AM   -2.696774  -61.086 55.6924 1.00000\n12:PM-3:AM   -5.251613  -63.641 53.1376 1.00000\n13:PM-3:AM   13.980645  -44.409 72.3698 1.00000\n14:PM-3:AM   -1.348387  -59.738 57.0408 1.00000\n15:PM-3:AM    5.748387  -52.641 64.1376 1.00000\n16:PM-3:AM   -7.025806  -65.415 51.3634 1.00000\n17:PM-3:AM  -14.619355  -73.009 43.7698 1.00000\n18:PM-3:AM   -1.064516  -59.454 57.3247 1.00000\n19:PM-3:AM  -13.129032  -71.518 45.2602 1.00000\n20:PM-3:AM   12.561290  -45.828 70.9505 1.00000\n5:AM-4:AM     7.735484  -50.654 66.1247 1.00000\n6:AM-4:AM     9.083871  -49.305 67.4731 1.00000\n7:AM-4:AM     3.761290  -54.628 62.1505 1.00000\n8:AM-4:AM    14.406452  -43.983 72.7956 1.00000\n9:AM-4:AM    33.283871  -25.105 91.6731 0.94386\n10:AM-4:AM  -10.077419  -68.467 48.3118 1.00000\n11:AM-4:AM   31.225806  -27.163 89.6150 0.97452\n12:AM-4:AM  -10.716129  -69.105 47.6731 1.00000\n13:AM-4:AM    3.903226  -54.486 62.2924 1.00000\n14:AM-4:AM  -10.858065  -69.247 47.5311 1.00000\n15:AM-4:AM  -18.238710  -76.628 40.1505 1.00000\n16:AM-4:AM    0.212903  -58.176 58.6021 1.00000\n17:AM-4:AM    4.896774  -53.492 63.2860 1.00000\n18:AM-4:AM    1.774194  -56.615 60.1634 1.00000\n19:AM-4:AM    9.225806  -49.163 67.6150 1.00000\n20:AM-4:AM    5.606452  -59.675 70.8876 1.00000\n1:PM-4:AM    22.000000  -36.389 80.3892 0.99995\n2:PM-4:AM     5.677419  -52.712 64.0666 1.00000\n3:PM-4:AM    16.677419  -41.712 75.0666 1.00000\n4:PM-4:AM    -7.309677  -65.699 51.0795 1.00000\n5:PM-4:AM     6.883871  -51.505 65.2731 1.00000\n6:PM-4:AM    -1.419355  -59.809 56.9698 1.00000\n7:PM-4:AM     4.683871  -53.705 63.0731 1.00000\n8:PM-4:AM    -1.845161  -60.234 56.5440 1.00000\n9:PM-4:AM     5.109677  -53.280 63.4989 1.00000\n10:PM-4:AM    5.961290  -52.428 64.3505 1.00000\n11:PM-4:AM   -6.245161  -64.634 52.1440 1.00000\n12:PM-4:AM   -8.800000  -67.189 49.5892 1.00000\n13:PM-4:AM   10.432258  -47.957 68.8215 1.00000\n14:PM-4:AM   -4.896774  -63.286 53.4924 1.00000\n15:PM-4:AM    2.200000  -56.189 60.5892 1.00000\n16:PM-4:AM  -10.574194  -68.963 47.8150 1.00000\n17:PM-4:AM  -18.167742  -76.557 40.2215 1.00000\n18:PM-4:AM   -4.612903  -63.002 53.7763 1.00000\n19:PM-4:AM  -16.677419  -75.067 41.7118 1.00000\n20:PM-4:AM    9.012903  -49.376 67.4021 1.00000\n6:AM-5:AM     1.348387  -57.041 59.7376 1.00000\n7:AM-5:AM    -3.974194  -62.363 54.4150 1.00000\n8:AM-5:AM     6.670968  -51.718 65.0602 1.00000\n9:AM-5:AM    25.548387  -32.841 83.9376 0.99897\n10:AM-5:AM  -17.812903  -76.202 40.5763 1.00000\n11:AM-5:AM   23.490323  -34.899 81.8795 0.99980\n12:AM-5:AM  -18.451613  -76.841 39.9376 1.00000\n13:AM-5:AM   -3.832258  -62.221 54.5569 1.00000\n14:AM-5:AM  -18.593548  -76.983 39.7956 1.00000\n15:AM-5:AM  -25.974194  -84.363 32.4150 0.99860\n16:AM-5:AM   -7.522581  -65.912 50.8666 1.00000\n17:AM-5:AM   -2.838710  -61.228 55.5505 1.00000\n18:AM-5:AM   -5.961290  -64.350 52.4279 1.00000\n19:AM-5:AM    1.490323  -56.899 59.8795 1.00000\n20:AM-5:AM   -2.129032  -67.410 63.1521 1.00000\n1:PM-5:AM    14.264516  -44.125 72.6537 1.00000\n2:PM-5:AM    -2.058065  -60.447 56.3311 1.00000\n3:PM-5:AM     8.941935  -49.447 67.3311 1.00000\n4:PM-5:AM   -15.045161  -73.434 43.3440 1.00000\n5:PM-5:AM    -0.851613  -59.241 57.5376 1.00000\n6:PM-5:AM    -9.154839  -67.544 49.2344 1.00000\n7:PM-5:AM    -3.051613  -61.441 55.3376 1.00000\n8:PM-5:AM    -9.580645  -67.970 48.8086 1.00000\n9:PM-5:AM    -2.625806  -61.015 55.7634 1.00000\n10:PM-5:AM   -1.774194  -60.163 56.6150 1.00000\n11:PM-5:AM  -13.980645  -72.370 44.4086 1.00000\n12:PM-5:AM  -16.535484  -74.925 41.8537 1.00000\n13:PM-5:AM    2.696774  -55.692 61.0860 1.00000\n14:PM-5:AM  -12.632258  -71.021 45.7569 1.00000\n15:PM-5:AM   -5.535484  -63.925 52.8537 1.00000\n16:PM-5:AM  -18.309677  -76.699 40.0795 1.00000\n17:PM-5:AM  -25.903226  -84.292 32.4860 0.99867\n18:PM-5:AM  -12.348387  -70.738 46.0408 1.00000\n19:PM-5:AM  -24.412903  -82.802 33.9763 0.99957\n20:PM-5:AM    1.277419  -57.112 59.6666 1.00000\n7:AM-6:AM    -5.322581  -63.712 53.0666 1.00000\n8:AM-6:AM     5.322581  -53.067 63.7118 1.00000\n9:AM-6:AM    24.200000  -34.189 82.5892 0.99964\n10:AM-6:AM  -19.161290  -77.550 39.2279 1.00000\n11:AM-6:AM   22.141935  -36.247 80.5311 0.99994\n12:AM-6:AM  -19.800000  -78.189 38.5892 1.00000\n13:AM-6:AM   -5.180645  -63.570 53.2086 1.00000\n14:AM-6:AM  -19.941935  -78.331 38.4473 1.00000\n15:AM-6:AM  -27.322581  -85.712 31.0666 0.99660\n16:AM-6:AM   -8.870968  -67.260 49.5182 1.00000\n17:AM-6:AM   -4.187097  -62.576 54.2021 1.00000\n18:AM-6:AM   -7.309677  -65.699 51.0795 1.00000\n19:AM-6:AM    0.141935  -58.247 58.5311 1.00000\n20:AM-6:AM   -3.477419  -68.759 61.8037 1.00000\n1:PM-6:AM    12.916129  -45.473 71.3053 1.00000\n2:PM-6:AM    -3.406452  -61.796 54.9827 1.00000\n3:PM-6:AM     7.593548  -50.796 65.9827 1.00000\n4:PM-6:AM   -16.393548  -74.783 41.9956 1.00000\n5:PM-6:AM    -2.200000  -60.589 56.1892 1.00000\n6:PM-6:AM   -10.503226  -68.892 47.8860 1.00000\n7:PM-6:AM    -4.400000  -62.789 53.9892 1.00000\n8:PM-6:AM   -10.929032  -69.318 47.4602 1.00000\n9:PM-6:AM    -3.974194  -62.363 54.4150 1.00000\n10:PM-6:AM   -3.122581  -61.512 55.2666 1.00000\n11:PM-6:AM  -15.329032  -73.718 43.0602 1.00000\n12:PM-6:AM  -17.883871  -76.273 40.5053 1.00000\n13:PM-6:AM    1.348387  -57.041 59.7376 1.00000\n14:PM-6:AM  -13.980645  -72.370 44.4086 1.00000\n15:PM-6:AM   -6.883871  -65.273 51.5053 1.00000\n16:PM-6:AM  -19.658065  -78.047 38.7311 1.00000\n17:PM-6:AM  -27.251613  -85.641 31.1376 0.99674\n18:PM-6:AM  -13.696774  -72.086 44.6924 1.00000\n19:PM-6:AM  -25.761290  -84.150 32.6279 0.99880\n20:PM-6:AM   -0.070968  -58.460 58.3182 1.00000\n8:AM-7:AM    10.645161  -47.744 69.0344 1.00000\n9:AM-7:AM    29.522581  -28.867 87.9118 0.98840\n10:AM-7:AM  -13.838710  -72.228 44.5505 1.00000\n11:AM-7:AM   27.464516  -30.925 85.8537 0.99629\n12:AM-7:AM  -14.477419  -72.867 43.9118 1.00000\n13:AM-7:AM    0.141935  -58.247 58.5311 1.00000\n14:AM-7:AM  -14.619355  -73.009 43.7698 1.00000\n15:AM-7:AM  -22.000000  -80.389 36.3892 0.99995\n16:AM-7:AM   -3.548387  -61.938 54.8408 1.00000\n17:AM-7:AM    1.135484  -57.254 59.5247 1.00000\n18:AM-7:AM   -1.987097  -60.376 56.4021 1.00000\n19:AM-7:AM    5.464516  -52.925 63.8537 1.00000\n20:AM-7:AM    1.845161  -63.436 67.1263 1.00000\n1:PM-7:AM    18.238710  -40.150 76.6279 1.00000\n2:PM-7:AM     1.916129  -56.473 60.3053 1.00000\n3:PM-7:AM    12.916129  -45.473 71.3053 1.00000\n4:PM-7:AM   -11.070968  -69.460 47.3182 1.00000\n5:PM-7:AM     3.122581  -55.267 61.5118 1.00000\n6:PM-7:AM    -5.180645  -63.570 53.2086 1.00000\n7:PM-7:AM     0.922581  -57.467 59.3118 1.00000\n8:PM-7:AM    -5.606452  -63.996 52.7827 1.00000\n9:PM-7:AM     1.348387  -57.041 59.7376 1.00000\n10:PM-7:AM    2.200000  -56.189 60.5892 1.00000\n11:PM-7:AM  -10.006452  -68.396 48.3827 1.00000\n12:PM-7:AM  -12.561290  -70.950 45.8279 1.00000\n13:PM-7:AM    6.670968  -51.718 65.0602 1.00000\n14:PM-7:AM   -8.658065  -67.047 49.7311 1.00000\n15:PM-7:AM   -1.561290  -59.950 56.8279 1.00000\n16:PM-7:AM  -14.335484  -72.725 44.0537 1.00000\n17:PM-7:AM  -21.929032  -80.318 36.4602 0.99996\n18:PM-7:AM   -8.374194  -66.763 50.0150 1.00000\n19:PM-7:AM  -20.438710  -78.828 37.9505 0.99999\n20:PM-7:AM    5.251613  -53.138 63.6408 1.00000\n9:AM-8:AM    18.877419  -39.512 77.2666 1.00000\n10:AM-8:AM  -24.483871  -82.873 33.9053 0.99954\n11:AM-8:AM   16.819355  -41.570 75.2086 1.00000\n12:AM-8:AM  -25.122581  -83.512 33.2666 0.99925\n13:AM-8:AM  -10.503226  -68.892 47.8860 1.00000\n14:AM-8:AM  -25.264516  -83.654 33.1247 0.99916\n15:AM-8:AM  -32.645161  -91.034 25.7440 0.95531\n16:AM-8:AM  -14.193548  -72.583 44.1956 1.00000\n17:AM-8:AM   -9.509677  -67.899 48.8795 1.00000\n18:AM-8:AM  -12.632258  -71.021 45.7569 1.00000\n19:AM-8:AM   -5.180645  -63.570 53.2086 1.00000\n20:AM-8:AM   -8.800000  -74.081 56.4811 1.00000\n1:PM-8:AM     7.593548  -50.796 65.9827 1.00000\n2:PM-8:AM    -8.729032  -67.118 49.6602 1.00000\n3:PM-8:AM     2.270968  -56.118 60.6602 1.00000\n4:PM-8:AM   -21.716129  -80.105 36.6731 0.99996\n5:PM-8:AM    -7.522581  -65.912 50.8666 1.00000\n6:PM-8:AM   -15.825806  -74.215 42.5634 1.00000\n7:PM-8:AM    -9.722581  -68.112 48.6666 1.00000\n8:PM-8:AM   -16.251613  -74.641 42.1376 1.00000\n9:PM-8:AM    -9.296774  -67.686 49.0924 1.00000\n10:PM-8:AM   -8.445161  -66.834 49.9440 1.00000\n11:PM-8:AM  -20.651613  -79.041 37.7376 0.99999\n12:PM-8:AM  -23.206452  -81.596 35.1827 0.99985\n13:PM-8:AM   -3.974194  -62.363 54.4150 1.00000\n14:PM-8:AM  -19.303226  -77.692 39.0860 1.00000\n15:PM-8:AM  -12.206452  -70.596 46.1827 1.00000\n16:PM-8:AM  -24.980645  -83.370 33.4086 0.99933\n17:PM-8:AM  -32.574194  -90.963 25.8150 0.95647\n18:PM-8:AM  -19.019355  -77.409 39.3698 1.00000\n19:PM-8:AM  -31.083871  -89.473 27.3053 0.97602\n20:PM-8:AM   -5.393548  -63.783 52.9956 1.00000\n10:AM-9:AM  -43.361290 -101.750 15.0279 0.52759\n11:AM-9:AM   -2.058065  -60.447 56.3311 1.00000\n12:AM-9:AM  -44.000000 -102.389 14.3892 0.49403\n13:AM-9:AM  -29.380645  -87.770 29.0086 0.98920\n14:AM-9:AM  -44.141935 -102.531 14.2473 0.48663\n15:AM-9:AM  -51.522581 -109.912  6.8666 0.17781\n16:AM-9:AM  -33.070968  -91.460 25.3182 0.94789\n17:AM-9:AM  -28.387097  -86.776 30.0021 0.99364\n18:AM-9:AM  -31.509677  -89.899 26.8795 0.97131\n19:AM-9:AM  -24.058065  -82.447 34.3311 0.99968\n20:AM-9:AM  -27.677419  -92.959 37.6037 0.99943\n1:PM-9:AM   -11.283871  -69.673 47.1053 1.00000\n2:PM-9:AM   -27.606452  -85.996 30.7827 0.99595\n3:PM-9:AM   -16.606452  -74.996 41.7827 1.00000\n4:PM-9:AM   -40.593548  -98.983 17.7956 0.67322\n5:PM-9:AM   -26.400000  -84.789 31.9892 0.99812\n6:PM-9:AM   -34.703226  -93.092 23.6860 0.91136\n7:PM-9:AM   -28.600000  -86.989 29.7892 0.99284\n8:PM-9:AM   -35.129032  -93.518 23.2602 0.89961\n9:PM-9:AM   -28.174194  -86.563 30.2150 0.99436\n10:PM-9:AM  -27.322581  -85.712 31.0666 0.99660\n11:PM-9:AM  -39.529032  -97.918 18.8602 0.72631\n12:PM-9:AM  -42.083871 -100.473 16.3053 0.59536\n13:PM-9:AM  -22.851613  -81.241 35.5376 0.99989\n14:PM-9:AM  -38.180645  -96.570 20.2086 0.78850\n15:PM-9:AM  -31.083871  -89.473 27.3053 0.97602\n16:PM-9:AM  -43.858065 -102.247 14.5311 0.50145\n17:PM-9:AM  -51.451613 -109.841  6.9376 0.17988\n18:PM-9:AM  -37.896774  -96.286 20.4924 0.80070\n19:PM-9:AM  -49.961290 -108.350  8.4279 0.22767\n20:PM-9:AM  -24.270968  -82.660 34.1182 0.99962\n11:AM-10:AM  41.303226  -17.086 99.6924 0.63649\n12:AM-10:AM  -0.638710  -59.028 57.7505 1.00000\n13:AM-10:AM  13.980645  -44.409 72.3698 1.00000\n14:AM-10:AM  -0.780645  -59.170 57.6086 1.00000\n15:AM-10:AM  -8.161290  -66.550 50.2279 1.00000\n16:AM-10:AM  10.290323  -48.099 68.6795 1.00000\n17:AM-10:AM  14.974194  -43.415 73.3634 1.00000\n18:AM-10:AM  11.851613  -46.538 70.2408 1.00000\n19:AM-10:AM  19.303226  -39.086 77.6924 1.00000\n20:AM-10:AM  15.683871  -49.597 80.9650 1.00000\n1:PM-10:AM   32.077419  -26.312 90.4666 0.96397\n2:PM-10:AM   15.754839  -42.634 74.1440 1.00000\n3:PM-10:AM   26.754839  -31.634 85.1440 0.99763\n4:PM-10:AM    2.767742  -55.621 61.1569 1.00000\n5:PM-10:AM   16.961290  -41.428 75.3505 1.00000\n6:PM-10:AM    8.658065  -49.731 67.0473 1.00000\n7:PM-10:AM   14.761290  -43.628 73.1505 1.00000\n8:PM-10:AM    8.232258  -50.157 66.6215 1.00000\n9:PM-10:AM   15.187097  -43.202 73.5763 1.00000\n10:PM-10:AM  16.038710  -42.350 74.4279 1.00000\n11:PM-10:AM   3.832258  -54.557 62.2215 1.00000\n12:PM-10:AM   1.277419  -57.112 59.6666 1.00000\n13:PM-10:AM  20.509677  -37.880 78.8989 0.99999\n14:PM-10:AM   5.180645  -53.209 63.5698 1.00000\n15:PM-10:AM  12.277419  -46.112 70.6666 1.00000\n16:PM-10:AM  -0.496774  -58.886 57.8924 1.00000\n17:PM-10:AM  -8.090323  -66.480 50.2989 1.00000\n18:PM-10:AM   5.464516  -52.925 63.8537 1.00000\n19:PM-10:AM  -6.600000  -64.989 51.7892 1.00000\n20:PM-10:AM  19.090323  -39.299 77.4795 1.00000\n12:AM-11:AM -41.941935 -100.331 16.4473 0.60287\n13:AM-11:AM -27.322581  -85.712 31.0666 0.99660\n14:AM-11:AM -42.083871 -100.473 16.3053 0.59536\n15:AM-11:AM -49.464516 -107.854  8.9247 0.24541\n16:AM-11:AM -31.012903  -89.402 27.3763 0.97675\n17:AM-11:AM -26.329032  -84.718 32.0602 0.99821\n18:AM-11:AM -29.451613  -87.841 28.9376 0.98880\n19:AM-11:AM -22.000000  -80.389 36.3892 0.99995\n20:AM-11:AM -25.619355  -90.900 39.6618 0.99988\n1:PM-11:AM   -9.225806  -67.615 49.1634 1.00000\n2:PM-11:AM  -25.548387  -83.938 32.8408 0.99897\n3:PM-11:AM  -14.548387  -72.938 43.8408 1.00000\n4:PM-11:AM  -38.535484  -96.925 19.8537 0.77279\n5:PM-11:AM  -24.341935  -82.731 34.0473 0.99959\n6:PM-11:AM  -32.645161  -91.034 25.7440 0.95531\n7:PM-11:AM  -26.541935  -84.931 31.8473 0.99794\n8:PM-11:AM  -33.070968  -91.460 25.3182 0.94789\n9:PM-11:AM  -26.116129  -84.505 32.2731 0.99846\n10:PM-11:AM -25.264516  -83.654 33.1247 0.99916\n11:PM-11:AM -37.470968  -95.860 20.9182 0.81833\n12:PM-11:AM -40.025806  -98.415 18.3634 0.70190\n13:PM-11:AM -20.793548  -79.183 37.5956 0.99999\n14:PM-11:AM -36.122581  -94.512 22.2666 0.86852\n15:PM-11:AM -29.025806  -87.415 29.3634 0.99101\n16:PM-11:AM -41.800000 -100.189 16.5892 0.61038\n17:PM-11:AM -49.393548 -107.783  8.9956 0.24802\n18:PM-11:AM -35.838710  -94.228 22.5505 0.87792\n19:PM-11:AM -47.903226 -106.292 10.4860 0.30702\n20:PM-11:AM -22.212903  -80.602 36.1763 0.99994\n13:AM-12:AM  14.619355  -43.770 73.0086 1.00000\n14:AM-12:AM  -0.141935  -58.531 58.2473 1.00000\n15:AM-12:AM  -7.522581  -65.912 50.8666 1.00000\n16:AM-12:AM  10.929032  -47.460 69.3182 1.00000\n17:AM-12:AM  15.612903  -42.776 74.0021 1.00000\n18:AM-12:AM  12.490323  -45.899 70.8795 1.00000\n19:AM-12:AM  19.941935  -38.447 78.3311 1.00000\n20:AM-12:AM  16.322581  -48.959 81.6037 1.00000\n1:PM-12:AM   32.716129  -25.673 91.1053 0.95413\n2:PM-12:AM   16.393548  -41.996 74.7827 1.00000\n3:PM-12:AM   27.393548  -30.996 85.7827 0.99645\n4:PM-12:AM    3.406452  -54.983 61.7956 1.00000\n5:PM-12:AM   17.600000  -40.789 75.9892 1.00000\n6:PM-12:AM    9.296774  -49.092 67.6860 1.00000\n7:PM-12:AM   15.400000  -42.989 73.7892 1.00000\n8:PM-12:AM    8.870968  -49.518 67.2602 1.00000\n9:PM-12:AM   15.825806  -42.563 74.2150 1.00000\n10:PM-12:AM  16.677419  -41.712 75.0666 1.00000\n11:PM-12:AM   4.470968  -53.918 62.8602 1.00000\n12:PM-12:AM   1.916129  -56.473 60.3053 1.00000\n13:PM-12:AM  21.148387  -37.241 79.5376 0.99998\n14:PM-12:AM   5.819355  -52.570 64.2086 1.00000\n15:PM-12:AM  12.916129  -45.473 71.3053 1.00000\n16:PM-12:AM   0.141935  -58.247 58.5311 1.00000\n17:PM-12:AM  -7.451613  -65.841 50.9376 1.00000\n18:PM-12:AM   6.103226  -52.286 64.4924 1.00000\n19:PM-12:AM  -5.961290  -64.350 52.4279 1.00000\n20:PM-12:AM  19.729032  -38.660 78.1182 1.00000\n14:AM-13:AM -14.761290  -73.150 43.6279 1.00000\n15:AM-13:AM -22.141935  -80.531 36.2473 0.99994\n16:AM-13:AM  -3.690323  -62.080 54.6989 1.00000\n17:AM-13:AM   0.993548  -57.396 59.3827 1.00000\n18:AM-13:AM  -2.129032  -60.518 56.2602 1.00000\n19:AM-13:AM   5.322581  -53.067 63.7118 1.00000\n20:AM-13:AM   1.703226  -63.578 66.9843 1.00000\n1:PM-13:AM   18.096774  -40.292 76.4860 1.00000\n2:PM-13:AM    1.774194  -56.615 60.1634 1.00000\n3:PM-13:AM   12.774194  -45.615 71.1634 1.00000\n4:PM-13:AM  -11.212903  -69.602 47.1763 1.00000\n5:PM-13:AM    2.980645  -55.409 61.3698 1.00000\n6:PM-13:AM   -5.322581  -63.712 53.0666 1.00000\n7:PM-13:AM    0.780645  -57.609 59.1698 1.00000\n8:PM-13:AM   -5.748387  -64.138 52.6408 1.00000\n9:PM-13:AM    1.206452  -57.183 59.5956 1.00000\n10:PM-13:AM   2.058065  -56.331 60.4473 1.00000\n11:PM-13:AM -10.148387  -68.538 48.2408 1.00000\n12:PM-13:AM -12.703226  -71.092 45.6860 1.00000\n13:PM-13:AM   6.529032  -51.860 64.9182 1.00000\n14:PM-13:AM  -8.800000  -67.189 49.5892 1.00000\n15:PM-13:AM  -1.703226  -60.092 56.6860 1.00000\n16:PM-13:AM -14.477419  -72.867 43.9118 1.00000\n17:PM-13:AM -22.070968  -80.460 36.3182 0.99995\n18:PM-13:AM  -8.516129  -66.905 49.8731 1.00000\n19:PM-13:AM -20.580645  -78.970 37.8086 0.99999\n20:PM-13:AM   5.109677  -53.280 63.4989 1.00000\n15:AM-14:AM  -7.380645  -65.770 51.0086 1.00000\n16:AM-14:AM  11.070968  -47.318 69.4602 1.00000\n17:AM-14:AM  15.754839  -42.634 74.1440 1.00000\n18:AM-14:AM  12.632258  -45.757 71.0215 1.00000\n19:AM-14:AM  20.083871  -38.305 78.4731 0.99999\n20:AM-14:AM  16.464516  -48.817 81.7456 1.00000\n1:PM-14:AM   32.858065  -25.531 91.2473 0.95170\n2:PM-14:AM   16.535484  -41.854 74.9247 1.00000\n3:PM-14:AM   27.535484  -30.854 85.9247 0.99612\n4:PM-14:AM    3.548387  -54.841 61.9376 1.00000\n5:PM-14:AM   17.741935  -40.647 76.1311 1.00000\n6:PM-14:AM    9.438710  -48.950 67.8279 1.00000\n7:PM-14:AM   15.541935  -42.847 73.9311 1.00000\n8:PM-14:AM    9.012903  -49.376 67.4021 1.00000\n9:PM-14:AM   15.967742  -42.421 74.3569 1.00000\n10:PM-14:AM  16.819355  -41.570 75.2086 1.00000\n11:PM-14:AM   4.612903  -53.776 63.0021 1.00000\n12:PM-14:AM   2.058065  -56.331 60.4473 1.00000\n13:PM-14:AM  21.290323  -37.099 79.6795 0.99998\n14:PM-14:AM   5.961290  -52.428 64.3505 1.00000\n15:PM-14:AM  13.058065  -45.331 71.4473 1.00000\n16:PM-14:AM   0.283871  -58.105 58.6731 1.00000\n17:PM-14:AM  -7.309677  -65.699 51.0795 1.00000\n18:PM-14:AM   6.245161  -52.144 64.6344 1.00000\n19:PM-14:AM  -5.819355  -64.209 52.5698 1.00000\n20:PM-14:AM  19.870968  -38.518 78.2602 1.00000\n16:AM-15:AM  18.451613  -39.938 76.8408 1.00000\n17:AM-15:AM  23.135484  -35.254 81.5247 0.99986\n18:AM-15:AM  20.012903  -38.376 78.4021 0.99999\n19:AM-15:AM  27.464516  -30.925 85.8537 0.99629\n20:AM-15:AM  23.845161  -41.436 89.1263 0.99998\n1:PM-15:AM   40.238710  -18.150 98.6279 0.69123\n2:PM-15:AM   23.916129  -34.473 82.3053 0.99972\n3:PM-15:AM   34.916129  -23.473 93.3053 0.90560\n4:PM-15:AM   10.929032  -47.460 69.3182 1.00000\n5:PM-15:AM   25.122581  -33.267 83.5118 0.99925\n6:PM-15:AM   16.819355  -41.570 75.2086 1.00000\n7:PM-15:AM   22.922581  -35.467 81.3118 0.99988\n8:PM-15:AM   16.393548  -41.996 74.7827 1.00000\n9:PM-15:AM   23.348387  -35.041 81.7376 0.99983\n10:PM-15:AM  24.200000  -34.189 82.5892 0.99964\n11:PM-15:AM  11.993548  -46.396 70.3827 1.00000\n12:PM-15:AM   9.438710  -48.950 67.8279 1.00000\n13:PM-15:AM  28.670968  -29.718 87.0602 0.99256\n14:PM-15:AM  13.341935  -45.047 71.7311 1.00000\n15:PM-15:AM  20.438710  -37.950 78.8279 0.99999\n16:PM-15:AM   7.664516  -50.725 66.0537 1.00000\n17:PM-15:AM   0.070968  -58.318 58.4602 1.00000\n18:PM-15:AM  13.625806  -44.763 72.0150 1.00000\n19:PM-15:AM   1.561290  -56.828 59.9505 1.00000\n20:PM-15:AM  27.251613  -31.138 85.6408 0.99674\n17:AM-16:AM   4.683871  -53.705 63.0731 1.00000\n18:AM-16:AM   1.561290  -56.828 59.9505 1.00000\n19:AM-16:AM   9.012903  -49.376 67.4021 1.00000\n20:AM-16:AM   5.393548  -59.888 70.6747 1.00000\n1:PM-16:AM   21.787097  -36.602 80.1763 0.99996\n2:PM-16:AM    5.464516  -52.925 63.8537 1.00000\n3:PM-16:AM   16.464516  -41.925 74.8537 1.00000\n4:PM-16:AM   -7.522581  -65.912 50.8666 1.00000\n5:PM-16:AM    6.670968  -51.718 65.0602 1.00000\n6:PM-16:AM   -1.632258  -60.021 56.7569 1.00000\n7:PM-16:AM    4.470968  -53.918 62.8602 1.00000\n8:PM-16:AM   -2.058065  -60.447 56.3311 1.00000\n9:PM-16:AM    4.896774  -53.492 63.2860 1.00000\n10:PM-16:AM   5.748387  -52.641 64.1376 1.00000\n11:PM-16:AM  -6.458065  -64.847 51.9311 1.00000\n12:PM-16:AM  -9.012903  -67.402 49.3763 1.00000\n13:PM-16:AM  10.219355  -48.170 68.6086 1.00000\n14:PM-16:AM  -5.109677  -63.499 53.2795 1.00000\n15:PM-16:AM   1.987097  -56.402 60.3763 1.00000\n16:PM-16:AM -10.787097  -69.176 47.6021 1.00000\n17:PM-16:AM -18.380645  -76.770 40.0086 1.00000\n18:PM-16:AM  -4.825806  -63.215 53.5634 1.00000\n19:PM-16:AM -16.890323  -75.280 41.4989 1.00000\n20:PM-16:AM   8.800000  -49.589 67.1892 1.00000\n18:AM-17:AM  -3.122581  -61.512 55.2666 1.00000\n19:AM-17:AM   4.329032  -54.060 62.7182 1.00000\n20:AM-17:AM   0.709677  -64.571 65.9908 1.00000\n1:PM-17:AM   17.103226  -41.286 75.4924 1.00000\n2:PM-17:AM    0.780645  -57.609 59.1698 1.00000\n3:PM-17:AM   11.780645  -46.609 70.1698 1.00000\n4:PM-17:AM  -12.206452  -70.596 46.1827 1.00000\n5:PM-17:AM    1.987097  -56.402 60.3763 1.00000\n6:PM-17:AM   -6.316129  -64.705 52.0731 1.00000\n7:PM-17:AM   -0.212903  -58.602 58.1763 1.00000\n8:PM-17:AM   -6.741935  -65.131 51.6473 1.00000\n9:PM-17:AM    0.212903  -58.176 58.6021 1.00000\n10:PM-17:AM   1.064516  -57.325 59.4537 1.00000\n11:PM-17:AM -11.141935  -69.531 47.2473 1.00000\n12:PM-17:AM -13.696774  -72.086 44.6924 1.00000\n13:PM-17:AM   5.535484  -52.854 63.9247 1.00000\n14:PM-17:AM  -9.793548  -68.183 48.5956 1.00000\n15:PM-17:AM  -2.696774  -61.086 55.6924 1.00000\n16:PM-17:AM -15.470968  -73.860 42.9182 1.00000\n17:PM-17:AM -23.064516  -81.454 35.3247 0.99987\n18:PM-17:AM  -9.509677  -67.899 48.8795 1.00000\n19:PM-17:AM -21.574194  -79.963 36.8150 0.99997\n20:PM-17:AM   4.116129  -54.273 62.5053 1.00000\n19:AM-18:AM   7.451613  -50.938 65.8408 1.00000\n20:AM-18:AM   3.832258  -61.449 69.1134 1.00000\n1:PM-18:AM   20.225806  -38.163 78.6150 0.99999\n2:PM-18:AM    3.903226  -54.486 62.2924 1.00000\n3:PM-18:AM   14.903226  -43.486 73.2924 1.00000\n4:PM-18:AM   -9.083871  -67.473 49.3053 1.00000\n5:PM-18:AM    5.109677  -53.280 63.4989 1.00000\n6:PM-18:AM   -3.193548  -61.583 55.1956 1.00000\n7:PM-18:AM    2.909677  -55.480 61.2989 1.00000\n8:PM-18:AM   -3.619355  -62.009 54.7698 1.00000\n9:PM-18:AM    3.335484  -55.054 61.7247 1.00000\n10:PM-18:AM   4.187097  -54.202 62.5763 1.00000\n11:PM-18:AM  -8.019355  -66.409 50.3698 1.00000\n12:PM-18:AM -10.574194  -68.963 47.8150 1.00000\n13:PM-18:AM   8.658065  -49.731 67.0473 1.00000\n14:PM-18:AM  -6.670968  -65.060 51.7182 1.00000\n15:PM-18:AM   0.425806  -57.963 58.8150 1.00000\n16:PM-18:AM -12.348387  -70.738 46.0408 1.00000\n17:PM-18:AM -19.941935  -78.331 38.4473 1.00000\n18:PM-18:AM  -6.387097  -64.776 52.0021 1.00000\n19:PM-18:AM -18.451613  -76.841 39.9376 1.00000\n20:PM-18:AM   7.238710  -51.150 65.6279 1.00000\n20:AM-19:AM  -3.619355  -68.900 61.6618 1.00000\n1:PM-19:AM   12.774194  -45.615 71.1634 1.00000\n2:PM-19:AM   -3.548387  -61.938 54.8408 1.00000\n3:PM-19:AM    7.451613  -50.938 65.8408 1.00000\n4:PM-19:AM  -16.535484  -74.925 41.8537 1.00000\n5:PM-19:AM   -2.341935  -60.731 56.0473 1.00000\n6:PM-19:AM  -10.645161  -69.034 47.7440 1.00000\n7:PM-19:AM   -4.541935  -62.931 53.8473 1.00000\n8:PM-19:AM  -11.070968  -69.460 47.3182 1.00000\n9:PM-19:AM   -4.116129  -62.505 54.2731 1.00000\n10:PM-19:AM  -3.264516  -61.654 55.1247 1.00000\n11:PM-19:AM -15.470968  -73.860 42.9182 1.00000\n12:PM-19:AM -18.025806  -76.415 40.3634 1.00000\n13:PM-19:AM   1.206452  -57.183 59.5956 1.00000\n14:PM-19:AM -14.122581  -72.512 44.2666 1.00000\n15:PM-19:AM  -7.025806  -65.415 51.3634 1.00000\n16:PM-19:AM -19.800000  -78.189 38.5892 1.00000\n17:PM-19:AM -27.393548  -85.783 30.9956 0.99645\n18:PM-19:AM -13.838710  -72.228 44.5505 1.00000\n19:PM-19:AM -25.903226  -84.292 32.4860 0.99867\n20:PM-19:AM  -0.212903  -58.602 58.1763 1.00000\n1:PM-20:AM   16.393548  -48.888 81.6747 1.00000\n2:PM-20:AM    0.070968  -65.210 65.3521 1.00000\n3:PM-20:AM   11.070968  -54.210 76.3521 1.00000\n4:PM-20:AM  -12.916129  -78.197 52.3650 1.00000\n5:PM-20:AM    1.277419  -64.004 66.5585 1.00000\n6:PM-20:AM   -7.025806  -72.307 58.2553 1.00000\n7:PM-20:AM   -0.922581  -66.204 64.3585 1.00000\n8:PM-20:AM   -7.451613  -72.733 57.8295 1.00000\n9:PM-20:AM   -0.496774  -65.778 64.7843 1.00000\n10:PM-20:AM   0.354839  -64.926 65.6359 1.00000\n11:PM-20:AM -11.851613  -77.133 53.4295 1.00000\n12:PM-20:AM -14.406452  -79.688 50.8747 1.00000\n13:PM-20:AM   4.825806  -60.455 70.1069 1.00000\n14:PM-20:AM -10.503226  -75.784 54.7779 1.00000\n15:PM-20:AM  -3.406452  -68.688 61.8747 1.00000\n16:PM-20:AM -16.180645  -81.462 49.1005 1.00000\n17:PM-20:AM -23.774194  -89.055 41.5069 0.99998\n18:PM-20:AM -10.219355  -75.500 55.0618 1.00000\n19:PM-20:AM -22.283871  -87.565 42.9972 1.00000\n20:PM-20:AM   3.406452  -61.875 68.6876 1.00000\n2:PM-1:PM   -16.322581  -74.712 42.0666 1.00000\n3:PM-1:PM    -5.322581  -63.712 53.0666 1.00000\n4:PM-1:PM   -29.309677  -87.699 29.0795 0.98958\n5:PM-1:PM   -15.116129  -73.505 43.2731 1.00000\n6:PM-1:PM   -23.419355  -81.809 34.9698 0.99982\n7:PM-1:PM   -17.316129  -75.705 41.0731 1.00000\n8:PM-1:PM   -23.845161  -82.234 34.5440 0.99973\n9:PM-1:PM   -16.890323  -75.280 41.4989 1.00000\n10:PM-1:PM  -16.038710  -74.428 42.3505 1.00000\n11:PM-1:PM  -28.245161  -86.634 30.1440 0.99413\n12:PM-1:PM  -30.800000  -89.189 27.5892 0.97882\n13:PM-1:PM  -11.567742  -69.957 46.8215 1.00000\n14:PM-1:PM  -26.896774  -85.286 31.4924 0.99740\n15:PM-1:PM  -19.800000  -78.189 38.5892 1.00000\n16:PM-1:PM  -32.574194  -90.963 25.8150 0.95647\n17:PM-1:PM  -40.167742  -98.557 18.2215 0.69480\n18:PM-1:PM  -26.612903  -85.002 31.7763 0.99784\n19:PM-1:PM  -38.677419  -97.067 19.7118 0.76637\n20:PM-1:PM  -12.987097  -71.376 45.4021 1.00000\n3:PM-2:PM    11.000000  -47.389 69.3892 1.00000\n4:PM-2:PM   -12.987097  -71.376 45.4021 1.00000\n5:PM-2:PM     1.206452  -57.183 59.5956 1.00000\n6:PM-2:PM    -7.096774  -65.486 51.2924 1.00000\n7:PM-2:PM    -0.993548  -59.383 57.3956 1.00000\n8:PM-2:PM    -7.522581  -65.912 50.8666 1.00000\n9:PM-2:PM    -0.567742  -58.957 57.8215 1.00000\n10:PM-2:PM    0.283871  -58.105 58.6731 1.00000\n11:PM-2:PM  -11.922581  -70.312 46.4666 1.00000\n12:PM-2:PM  -14.477419  -72.867 43.9118 1.00000\n13:PM-2:PM    4.754839  -53.634 63.1440 1.00000\n14:PM-2:PM  -10.574194  -68.963 47.8150 1.00000\n15:PM-2:PM   -3.477419  -61.867 54.9118 1.00000\n16:PM-2:PM  -16.251613  -74.641 42.1376 1.00000\n17:PM-2:PM  -23.845161  -82.234 34.5440 0.99973\n18:PM-2:PM  -10.290323  -68.680 48.0989 1.00000\n19:PM-2:PM  -22.354839  -80.744 36.0344 0.99993\n20:PM-2:PM    3.335484  -55.054 61.7247 1.00000\n4:PM-3:PM   -23.987097  -82.376 34.4021 0.99970\n5:PM-3:PM    -9.793548  -68.183 48.5956 1.00000\n6:PM-3:PM   -18.096774  -76.486 40.2924 1.00000\n7:PM-3:PM   -11.993548  -70.383 46.3956 1.00000\n8:PM-3:PM   -18.522581  -76.912 39.8666 1.00000\n9:PM-3:PM   -11.567742  -69.957 46.8215 1.00000\n10:PM-3:PM  -10.716129  -69.105 47.6731 1.00000\n11:PM-3:PM  -22.922581  -81.312 35.4666 0.99988\n12:PM-3:PM  -25.477419  -83.867 32.9118 0.99902\n13:PM-3:PM   -6.245161  -64.634 52.1440 1.00000\n14:PM-3:PM  -21.574194  -79.963 36.8150 0.99997\n15:PM-3:PM  -14.477419  -72.867 43.9118 1.00000\n16:PM-3:PM  -27.251613  -85.641 31.1376 0.99674\n17:PM-3:PM  -34.845161  -93.234 23.5440 0.90755\n18:PM-3:PM  -21.290323  -79.680 37.0989 0.99998\n19:PM-3:PM  -33.354839  -91.744 25.0344 0.94247\n20:PM-3:PM   -7.664516  -66.054 50.7247 1.00000\n5:PM-4:PM    14.193548  -44.196 72.5827 1.00000\n6:PM-4:PM     5.890323  -52.499 64.2795 1.00000\n7:PM-4:PM    11.993548  -46.396 70.3827 1.00000\n8:PM-4:PM     5.464516  -52.925 63.8537 1.00000\n9:PM-4:PM    12.419355  -45.970 70.8086 1.00000\n10:PM-4:PM   13.270968  -45.118 71.6602 1.00000\n11:PM-4:PM    1.064516  -57.325 59.4537 1.00000\n12:PM-4:PM   -1.490323  -59.880 56.8989 1.00000\n13:PM-4:PM   17.741935  -40.647 76.1311 1.00000\n14:PM-4:PM    2.412903  -55.976 60.8021 1.00000\n15:PM-4:PM    9.509677  -48.880 67.8989 1.00000\n16:PM-4:PM   -3.264516  -61.654 55.1247 1.00000\n17:PM-4:PM  -10.858065  -69.247 47.5311 1.00000\n18:PM-4:PM    2.696774  -55.692 61.0860 1.00000\n19:PM-4:PM   -9.367742  -67.757 49.0215 1.00000\n20:PM-4:PM   16.322581  -42.067 74.7118 1.00000\n6:PM-5:PM    -8.303226  -66.692 50.0860 1.00000\n7:PM-5:PM    -2.200000  -60.589 56.1892 1.00000\n8:PM-5:PM    -8.729032  -67.118 49.6602 1.00000\n9:PM-5:PM    -1.774194  -60.163 56.6150 1.00000\n10:PM-5:PM   -0.922581  -59.312 57.4666 1.00000\n11:PM-5:PM  -13.129032  -71.518 45.2602 1.00000\n12:PM-5:PM  -15.683871  -74.073 42.7053 1.00000\n13:PM-5:PM    3.548387  -54.841 61.9376 1.00000\n14:PM-5:PM  -11.780645  -70.170 46.6086 1.00000\n15:PM-5:PM   -4.683871  -63.073 53.7053 1.00000\n16:PM-5:PM  -17.458065  -75.847 40.9311 1.00000\n17:PM-5:PM  -25.051613  -83.441 33.3376 0.99929\n18:PM-5:PM  -11.496774  -69.886 46.8924 1.00000\n19:PM-5:PM  -23.561290  -81.950 34.8279 0.99979\n20:PM-5:PM    2.129032  -56.260 60.5182 1.00000\n7:PM-6:PM     6.103226  -52.286 64.4924 1.00000\n8:PM-6:PM    -0.425806  -58.815 57.9634 1.00000\n9:PM-6:PM     6.529032  -51.860 64.9182 1.00000\n10:PM-6:PM    7.380645  -51.009 65.7698 1.00000\n11:PM-6:PM   -4.825806  -63.215 53.5634 1.00000\n12:PM-6:PM   -7.380645  -65.770 51.0086 1.00000\n13:PM-6:PM   11.851613  -46.538 70.2408 1.00000\n14:PM-6:PM   -3.477419  -61.867 54.9118 1.00000\n15:PM-6:PM    3.619355  -54.770 62.0086 1.00000\n16:PM-6:PM   -9.154839  -67.544 49.2344 1.00000\n17:PM-6:PM  -16.748387  -75.138 41.6408 1.00000\n18:PM-6:PM   -3.193548  -61.583 55.1956 1.00000\n19:PM-6:PM  -15.258065  -73.647 43.1311 1.00000\n20:PM-6:PM   10.432258  -47.957 68.8215 1.00000\n8:PM-7:PM    -6.529032  -64.918 51.8602 1.00000\n9:PM-7:PM     0.425806  -57.963 58.8150 1.00000\n10:PM-7:PM    1.277419  -57.112 59.6666 1.00000\n11:PM-7:PM  -10.929032  -69.318 47.4602 1.00000\n12:PM-7:PM  -13.483871  -71.873 44.9053 1.00000\n13:PM-7:PM    5.748387  -52.641 64.1376 1.00000\n14:PM-7:PM   -9.580645  -67.970 48.8086 1.00000\n15:PM-7:PM   -2.483871  -60.873 55.9053 1.00000\n16:PM-7:PM  -15.258065  -73.647 43.1311 1.00000\n17:PM-7:PM  -22.851613  -81.241 35.5376 0.99989\n18:PM-7:PM   -9.296774  -67.686 49.0924 1.00000\n19:PM-7:PM  -21.361290  -79.750 37.0279 0.99998\n20:PM-7:PM    4.329032  -54.060 62.7182 1.00000\n9:PM-8:PM     6.954839  -51.434 65.3440 1.00000\n10:PM-8:PM    7.806452  -50.583 66.1956 1.00000\n11:PM-8:PM   -4.400000  -62.789 53.9892 1.00000\n12:PM-8:PM   -6.954839  -65.344 51.4344 1.00000\n13:PM-8:PM   12.277419  -46.112 70.6666 1.00000\n14:PM-8:PM   -3.051613  -61.441 55.3376 1.00000\n15:PM-8:PM    4.045161  -54.344 62.4344 1.00000\n16:PM-8:PM   -8.729032  -67.118 49.6602 1.00000\n17:PM-8:PM  -16.322581  -74.712 42.0666 1.00000\n18:PM-8:PM   -2.767742  -61.157 55.6215 1.00000\n19:PM-8:PM  -14.832258  -73.221 43.5569 1.00000\n20:PM-8:PM   10.858065  -47.531 69.2473 1.00000\n10:PM-9:PM    0.851613  -57.538 59.2408 1.00000\n11:PM-9:PM  -11.354839  -69.744 47.0344 1.00000\n12:PM-9:PM  -13.909677  -72.299 44.4795 1.00000\n13:PM-9:PM    5.322581  -53.067 63.7118 1.00000\n14:PM-9:PM  -10.006452  -68.396 48.3827 1.00000\n15:PM-9:PM   -2.909677  -61.299 55.4795 1.00000\n16:PM-9:PM  -15.683871  -74.073 42.7053 1.00000\n17:PM-9:PM  -23.277419  -81.667 35.1118 0.99984\n18:PM-9:PM   -9.722581  -68.112 48.6666 1.00000\n19:PM-9:PM  -21.787097  -80.176 36.6021 0.99996\n20:PM-9:PM    3.903226  -54.486 62.2924 1.00000\n11:PM-10:PM -12.206452  -70.596 46.1827 1.00000\n12:PM-10:PM -14.761290  -73.150 43.6279 1.00000\n13:PM-10:PM   4.470968  -53.918 62.8602 1.00000\n14:PM-10:PM -10.858065  -69.247 47.5311 1.00000\n15:PM-10:PM  -3.761290  -62.150 54.6279 1.00000\n16:PM-10:PM -16.535484  -74.925 41.8537 1.00000\n17:PM-10:PM -24.129032  -82.518 34.2602 0.99966\n18:PM-10:PM -10.574194  -68.963 47.8150 1.00000\n19:PM-10:PM -22.638710  -81.028 35.7505 0.99991\n20:PM-10:PM   3.051613  -55.338 61.4408 1.00000\n12:PM-11:PM  -2.554839  -60.944 55.8344 1.00000\n13:PM-11:PM  16.677419  -41.712 75.0666 1.00000\n14:PM-11:PM   1.348387  -57.041 59.7376 1.00000\n15:PM-11:PM   8.445161  -49.944 66.8344 1.00000\n16:PM-11:PM  -4.329032  -62.718 54.0602 1.00000\n17:PM-11:PM -11.922581  -70.312 46.4666 1.00000\n18:PM-11:PM   1.632258  -56.757 60.0215 1.00000\n19:PM-11:PM -10.432258  -68.821 47.9569 1.00000\n20:PM-11:PM  15.258065  -43.131 73.6473 1.00000\n13:PM-12:PM  19.232258  -39.157 77.6215 1.00000\n14:PM-12:PM   3.903226  -54.486 62.2924 1.00000\n15:PM-12:PM  11.000000  -47.389 69.3892 1.00000\n16:PM-12:PM  -1.774194  -60.163 56.6150 1.00000\n17:PM-12:PM  -9.367742  -67.757 49.0215 1.00000\n18:PM-12:PM   4.187097  -54.202 62.5763 1.00000\n19:PM-12:PM  -7.877419  -66.267 50.5118 1.00000\n20:PM-12:PM  17.812903  -40.576 76.2021 1.00000\n14:PM-13:PM -15.329032  -73.718 43.0602 1.00000\n15:PM-13:PM  -8.232258  -66.621 50.1569 1.00000\n16:PM-13:PM -21.006452  -79.396 37.3827 0.99998\n17:PM-13:PM -28.600000  -86.989 29.7892 0.99284\n18:PM-13:PM -15.045161  -73.434 43.3440 1.00000\n19:PM-13:PM -27.109677  -85.499 31.2795 0.99702\n20:PM-13:PM  -1.419355  -59.809 56.9698 1.00000\n15:PM-14:PM   7.096774  -51.292 65.4860 1.00000\n16:PM-14:PM  -5.677419  -64.067 52.7118 1.00000\n17:PM-14:PM -13.270968  -71.660 45.1182 1.00000\n18:PM-14:PM   0.283871  -58.105 58.6731 1.00000\n19:PM-14:PM -11.780645  -70.170 46.6086 1.00000\n20:PM-14:PM  13.909677  -44.480 72.2989 1.00000\n16:PM-15:PM -12.774194  -71.163 45.6150 1.00000\n17:PM-15:PM -20.367742  -78.757 38.0215 0.99999\n18:PM-15:PM  -6.812903  -65.202 51.5763 1.00000\n19:PM-15:PM -18.877419  -77.267 39.5118 1.00000\n20:PM-15:PM   6.812903  -51.576 65.2021 1.00000\n17:PM-16:PM  -7.593548  -65.983 50.7956 1.00000\n18:PM-16:PM   5.961290  -52.428 64.3505 1.00000\n19:PM-16:PM  -6.103226  -64.492 52.2860 1.00000\n20:PM-16:PM  19.587097  -38.802 77.9763 1.00000\n18:PM-17:PM  13.554839  -44.834 71.9440 1.00000\n19:PM-17:PM   1.490323  -56.899 59.8795 1.00000\n20:PM-17:PM  27.180645  -31.209 85.5698 0.99689\n19:PM-18:PM -12.064516  -70.454 46.3247 1.00000\n20:PM-18:PM  13.625806  -44.763 72.0150 1.00000\n20:PM-19:PM  25.690323  -32.699 84.0795 0.99886\n\n\n  Tukey multiple comparisons of means\n    99% family-wise confidence level\n\nFit: aov(formula = response ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff     lwr    upr   p adj\n2-1    -6.138710 -48.905 36.628 1.00000\n3-1    -4.080645 -46.847 38.686 1.00000\n4-1   -14.300000 -57.066 28.466 0.99700\n5-1    -3.335484 -46.102 39.431 1.00000\n6-1    -6.812903 -49.579 35.953 1.00000\n7-1    -6.422581 -49.189 36.344 1.00000\n8-1    -4.364516 -47.131 38.402 1.00000\n9-1     8.551613 -34.215 51.318 1.00000\n10-1  -12.703226 -55.470 30.063 0.99934\n11-1    1.845161 -40.921 44.611 1.00000\n12-1  -20.403226 -63.170 22.363 0.89330\n13-1   -3.477419 -46.244 39.289 1.00000\n14-1  -18.522581 -61.289 24.244 0.95243\n15-1  -18.664516 -61.431 24.102 0.94905\n16-1  -15.825806 -58.592 26.941 0.99024\n17-1  -17.280645 -60.047 25.486 0.97539\n18-1  -12.064516 -54.831 30.702 0.99968\n19-1  -14.370968 -57.137 28.395 0.99682\n20-1   -2.994839 -47.849 41.859 1.00000\n3-2     2.058065 -40.708 44.824 1.00000\n4-2    -8.161290 -50.928 34.605 1.00000\n5-2     2.803226 -39.963 45.570 1.00000\n6-2    -0.674194 -43.441 42.092 1.00000\n7-2    -0.283871 -43.050 42.482 1.00000\n8-2     1.774194 -40.992 44.541 1.00000\n9-2    14.690323 -28.076 57.457 0.99585\n10-2   -6.564516 -49.331 36.202 1.00000\n11-2    7.983871 -34.782 50.750 1.00000\n12-2  -14.264516 -57.031 28.502 0.99709\n13-2    2.661290 -40.105 45.428 1.00000\n14-2  -12.383871 -55.150 30.382 0.99953\n15-2  -12.525806 -55.292 30.241 0.99946\n16-2   -9.687097 -52.453 33.079 0.99999\n17-2  -11.141935 -53.908 31.624 0.99990\n18-2   -5.925806 -48.692 36.841 1.00000\n19-2   -8.232258 -50.999 34.534 1.00000\n20-2    3.143871 -41.710 47.998 1.00000\n4-3   -10.219355 -52.986 32.547 0.99997\n5-3     0.745161 -42.021 43.511 1.00000\n6-3    -2.732258 -45.499 40.034 1.00000\n7-3    -2.341935 -45.108 40.424 1.00000\n8-3    -0.283871 -43.050 42.482 1.00000\n9-3    12.632258 -30.134 55.399 0.99939\n10-3   -8.622581 -51.389 34.144 1.00000\n11-3    5.925806 -36.841 48.692 1.00000\n12-3  -16.322581 -59.089 26.444 0.98634\n13-3    0.603226 -42.163 43.370 1.00000\n14-3  -14.441935 -57.208 28.324 0.99662\n15-3  -14.583871 -57.350 28.182 0.99620\n16-3  -11.745161 -54.511 31.021 0.99978\n17-3  -13.200000 -55.966 29.566 0.99891\n18-3   -7.983871 -50.750 34.782 1.00000\n19-3  -10.290323 -53.057 32.476 0.99997\n20-3    1.085806 -43.768 45.939 1.00000\n5-4    10.964516 -31.802 53.731 0.99992\n6-4     7.487097 -35.279 50.253 1.00000\n7-4     7.877419 -34.889 50.644 1.00000\n8-4     9.935484 -32.831 52.702 0.99998\n9-4    22.851613 -19.915 65.618 0.76824\n10-4    1.596774 -41.170 44.363 1.00000\n11-4   16.145161 -26.621 58.911 0.98785\n12-4   -6.103226 -48.870 36.663 1.00000\n13-4   10.822581 -31.944 53.589 0.99993\n14-4   -4.222581 -46.989 38.544 1.00000\n15-4   -4.364516 -47.131 38.402 1.00000\n16-4   -1.525806 -44.292 41.241 1.00000\n17-4   -2.980645 -45.747 39.786 1.00000\n18-4    2.235484 -40.531 45.002 1.00000\n19-4   -0.070968 -42.837 42.695 1.00000\n20-4   11.305161 -33.549 56.159 0.99994\n6-5    -3.477419 -46.244 39.289 1.00000\n7-5    -3.087097 -45.853 39.679 1.00000\n8-5    -1.029032 -43.795 41.737 1.00000\n9-5    11.887097 -30.879 54.653 0.99974\n10-5   -9.367742 -52.134 33.399 0.99999\n11-5    5.180645 -37.586 47.947 1.00000\n12-5  -17.067742 -59.834 25.699 0.97827\n13-5   -0.141935 -42.908 42.624 1.00000\n14-5  -15.187097 -57.953 27.579 0.99387\n15-5  -15.329032 -58.095 27.437 0.99318\n16-5  -12.490323 -55.257 30.276 0.99948\n17-5  -13.945161 -56.711 28.821 0.99780\n18-5   -8.729032 -51.495 34.037 1.00000\n19-5  -11.035484 -53.802 31.731 0.99991\n20-5    0.340645 -44.513 45.194 1.00000\n7-6     0.390323 -42.376 43.157 1.00000\n8-6     2.448387 -40.318 45.215 1.00000\n9-6    15.364516 -27.402 58.131 0.99300\n10-6   -5.890323 -48.657 36.876 1.00000\n11-6    8.658065 -34.108 51.424 1.00000\n12-6  -13.590323 -56.357 29.176 0.99841\n13-6    3.335484 -39.431 46.102 1.00000\n14-6  -11.709677 -54.476 31.057 0.99979\n15-6  -11.851613 -54.618 30.915 0.99975\n16-6   -9.012903 -51.779 33.753 1.00000\n17-6  -10.467742 -53.234 32.299 0.99996\n18-6   -5.251613 -48.018 37.515 1.00000\n19-6   -7.558065 -50.324 35.208 1.00000\n20-6    3.818065 -41.036 48.672 1.00000\n8-7     2.058065 -40.708 44.824 1.00000\n9-7    14.974194 -27.792 57.741 0.99480\n10-7   -6.280645 -49.047 36.486 1.00000\n11-7    8.267742 -34.499 51.034 1.00000\n12-7  -13.980645 -56.747 28.786 0.99773\n13-7    2.945161 -39.821 45.711 1.00000\n14-7  -12.100000 -54.866 30.666 0.99966\n15-7  -12.241935 -55.008 30.524 0.99960\n16-7   -9.403226 -52.170 33.363 0.99999\n17-7  -10.858065 -53.624 31.908 0.99993\n18-7   -5.641935 -48.408 37.124 1.00000\n19-7   -7.948387 -50.715 34.818 1.00000\n20-7    3.427742 -41.426 48.281 1.00000\n9-8    12.916129 -29.850 55.682 0.99918\n10-8   -8.338710 -51.105 34.428 1.00000\n11-8    6.209677 -36.557 48.976 1.00000\n12-8  -16.038710 -58.805 26.728 0.98869\n13-8    0.887097 -41.879 43.653 1.00000\n14-8  -14.158065 -56.924 28.608 0.99735\n15-8  -14.300000 -57.066 28.466 0.99700\n16-8  -11.461290 -54.228 31.305 0.99984\n17-8  -12.916129 -55.682 29.850 0.99918\n18-8   -7.700000 -50.466 35.066 1.00000\n19-8  -10.006452 -52.773 32.760 0.99998\n20-8    1.369677 -43.484 46.223 1.00000\n10-9  -21.254839 -64.021 21.511 0.85576\n11-9   -6.706452 -49.473 36.060 1.00000\n12-9  -28.954839 -71.721 13.811 0.35269\n13-9  -12.029032 -54.795 30.737 0.99969\n14-9  -27.074194 -69.841 15.692 0.47719\n15-9  -27.216129 -69.982 15.550 0.46731\n16-9  -24.377419 -67.144 18.389 0.66832\n17-9  -25.832258 -68.599 16.934 0.56535\n18-9  -20.616129 -63.382 22.150 0.88455\n19-9  -22.922581 -65.689 19.844 0.76389\n20-9  -11.546452 -56.400 33.307 0.99991\n11-10  14.548387 -28.218 57.315 0.99631\n12-10  -7.700000 -50.466 35.066 1.00000\n13-10   9.225806 -33.541 51.992 0.99999\n14-10  -5.819355 -48.586 36.947 1.00000\n15-10  -5.961290 -48.728 36.805 1.00000\n16-10  -3.122581 -45.889 39.644 1.00000\n17-10  -4.577419 -47.344 38.189 1.00000\n18-10   0.638710 -42.128 43.405 1.00000\n19-10  -1.667742 -44.434 41.099 1.00000\n20-10   9.708387 -35.145 54.562 0.99999\n12-11 -22.248387 -65.015 20.518 0.80373\n13-11  -5.322581 -48.089 37.444 1.00000\n14-11 -20.367742 -63.134 22.399 0.89472\n15-11 -20.509677 -63.276 22.257 0.88898\n16-11 -17.670968 -60.437 25.095 0.96936\n17-11 -19.125806 -61.892 23.641 0.93692\n18-11 -13.909677 -56.676 28.857 0.99787\n19-11 -16.216129 -58.982 26.550 0.98726\n20-11  -4.840000 -49.694 40.014 1.00000\n13-12  16.925806 -25.841 59.692 0.98004\n14-12   1.880645 -40.886 44.647 1.00000\n15-12   1.738710 -41.028 44.505 1.00000\n16-12   4.577419 -38.189 47.344 1.00000\n17-12   3.122581 -39.644 45.889 1.00000\n18-12   8.338710 -34.428 51.105 1.00000\n19-12   6.032258 -36.734 48.799 1.00000\n20-12  17.408387 -27.445 62.262 0.98369\n14-13 -15.045161 -57.811 27.721 0.99450\n15-13 -15.187097 -57.953 27.579 0.99387\n16-13 -12.348387 -55.115 30.418 0.99955\n17-13 -13.803226 -56.570 28.963 0.99807\n18-13  -8.587097 -51.353 34.179 1.00000\n19-13 -10.893548 -53.660 31.873 0.99992\n20-13   0.482581 -44.371 45.336 1.00000\n15-14  -0.141935 -42.908 42.624 1.00000\n16-14   2.696774 -40.070 45.463 1.00000\n17-14   1.241935 -41.524 44.008 1.00000\n18-14   6.458065 -36.308 49.224 1.00000\n19-14   4.151613 -38.615 46.918 1.00000\n20-14  15.527742 -29.326 60.381 0.99545\n16-15   2.838710 -39.928 45.605 1.00000\n17-15   1.383871 -41.382 44.150 1.00000\n18-15   6.600000 -36.166 49.366 1.00000\n19-15   4.293548 -38.473 47.060 1.00000\n20-15  15.669677 -29.184 60.523 0.99493\n17-16  -1.454839 -44.221 41.311 1.00000\n18-16   3.761290 -39.005 46.528 1.00000\n19-16   1.454839 -41.311 44.221 1.00000\n20-16  12.830968 -32.023 57.685 0.99961\n18-17   5.216129 -37.550 47.982 1.00000\n19-17   2.909677 -39.857 45.676 1.00000\n20-17  14.285806 -30.568 59.139 0.99837\n19-18  -2.306452 -45.073 40.460 1.00000\n20-18   9.069677 -35.784 53.923 1.00000\n20-19  11.376129 -33.478 56.230 0.99993\n\n\n유의한 패턴 없음 Tukey 검정 결과 (보통 유의할때 함) 테이블 도 유의한 수치가 없음"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-07-anova/index.html#statistical-methods-similar-to-anova",
    "href": "docs/blog/posts/statistics/2023-01-07-anova/index.html#statistical-methods-similar-to-anova",
    "title": "ANOVA",
    "section": "1 Statistical Methods Similar to ANOVA",
    "text": "1 Statistical Methods Similar to ANOVA\n\n2023-01-27, repeated measures ANOVA\n2023-01-27, ANCOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA\n\n\n\n\nKorean\n\n\n\n\nEnglish\n\n\n\n\n\n\n1.1 Description\nANOVA는 3개 이상의 모집단 사이의 평균의 동일성을 검정하는 통계 분석 방법이다.\n\n일원 분산 분석 (One-way ANOVA)\n\n그룹을 구분하는 변수가 1개\nBetween-Groups one-way ANOVA(집단간 일원분산분석): 관측치를 grouping하는 범주형 변수가 1개이며 각 관측치는 범주형 변수에 의해 구분되는 그룹들 가운데 반드시 하나에만 할당되어야한다. 즉, 어떠한 경우에도 하나의 관측치 또는 샘플이 여러 groups에 동시에 들어가면 안된다. 이 때 이렇게 그룹을 나누는 범주형 변수를 집단간 요인이라고 한다.\nWithin-groups one-way ANOVA (집단 내 일원분산분석) or repeated measures ANOVA: 시간과 같은 하나의 범주형 변수로 샘플들을 측정한다. 시간의 경과에 따라 측정된 샘플들을 범주형 변수의 여러 기간에 걸쳐 모두 할당시킨다. 즉, 하나의 샘플이 여러 그룹에 다른 측정치로 관찰될 수 있다. 예를들어, sample A가 4주, 8주, 12주, 16주 그룹에 모두 측정 된다. 이때 기간변수는 집단 내 요인이라고 부른다.\n\n이원 분산 분석 (Two-way ANOVA)\n\n집단을 구분하는 변수가 2개이며 각 집단 간 요인과 집단 내 요인을 나타낸다.\n이원 분석 부터는 main effect와 interaction effect가 존재한다.\n범주형 변수 A와 범주형 변수 B의 Main effect 계산\n범주형 변수 A와 범주형 변수 B의 상호 작용 효과 or 교호 작용 효과 (Interaction effect) 계산\ngroup을 구분하는 독립변수가 2개 일때 모집단 간 평균의 동일성 검정\n\n2개의 주효과(main effect) 검정: 각 독립 변수에 의해 만들어지는 집단 간 평균의 차이에 대한 검정\n\n먼저, 두 독립변수가 종속변수에 개별적으로 영향을 미치는지 검정\n\n\n1개의 상호작용효과(interaction effect) 검정: 두 독립 변수의 조합에 의해 만들어지는 집단 간 평균의 차이에 대한 검정\n\n두 독립변수의 조합이 종속변수와 유의한 영향관계를 갖는지 검정\n\n만약에 유의하다면 2개의 독립변수가 합쳐져서 나온 파생효과이기 때문에 1개만 골라서 분석해서 해석 할 수 없음\n\n\n\n\n\n1.2 How to conduct ANOVA?\n\n분산 분석은 F검정(F test)을 통해 수행한다.\nF 검정은 집단 간 분산 (between-groups variability)과 집단 내 분산 (within-groups variability)의 ratio로 계산된 F값 (F value or F statistic)을 토대로 가설검정을 수행한다. 이때 F value or F statistic을 통계 검정을 위한 검정통계량 (test statistic) 라고 부른다.\nF 검정 결과가 통계적으로 유의하면 집단 간 평균의 차이가 존재한다. (즉, 독립 변수가 종속변수에 영향을 미침)\nF 분포 2개의 자유도에 의해 분포의 모양이 결정되며 대체로 오른쪽으로 긴 꼬리를 갖는다\n\n첫 번째 자유도: 집단 간(between-group)의 자유도\n두 번째 자유도: 집단 내(within-group)의 자유도\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(gplots)\nlibrary(rmarkdown)\nknitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)\noptions(digits = 5)\nset.seed(20230109)\n\n\n\n\n\n\n\n종속 변수의 변동성은 다음과 같이 설명되기 때문에 아래의 식을 만족한다.\n\\[SS_{total}=SS_A+SS_B+SS_{AB}+SS_{error}\\]\n\\(SS_{total}\\)은 쉽게 구할 수 있고 \\(SS_A\\), \\(SS_B\\), \\(SS_{error}\\)를 계산하여 빼준다.\nTwo Way Anova SS 계산 공식 링크\n\\(SS_{AB}\\) 즉,\n\\[ SS_{AB}=SS_{total}-SS_A-SS_B-SS_{error} \\]\n\n\n1.3 Meaning\nANOVA는 집단 간 분산과 집단 내 분산의 비교하는 방식으로, 좀 더 구체적으로는 집단 간 분산과 집단 내 분산의 비를 계산하여, 집단 간 분산이 클수록 그리고 집단 분산이 작을 수록 집단 평균이 다를 가능성이 증가한다는 알고리즘에 기초한다.\n\n\n2 Application to Example\n\n2.1 Data Description\n\n2.1.1 Raw Data\n(…민감 정보 제거 및 데이터 변환 후 컨설팅 내용 일부 발췌…)\n\n\n\nexample data는 Day, Run, response의 변수들을 포함하고 있습니다. 공유해주신 정보에 따르면 아마도 Run은 오전과 오후를 나누는 변수인 것으로 생각 됩니다. 이 data만 보면 아마도 같은 샘플에 대해서 시약 제품이 시간에 따라 얼마나 안정적인 performance를 보여주는지 검사하는 실험으로 추측됩니다. 좀 더 분석하기 용이한 형태로 data structure를 바꾸겠습니다.\n\n\n2.1.2 Processed Data\n\n\n\n\n  \n\n\n\n재가공된 data는 120개의 샘플과 5개의 변수를 갖고있습니다. 변수 목록은 다음과 같습니다.\n\nid: 열번호, 총 20일간 하루 2회 구동(AM, PM) 구동, 오전 오후 각 각 3번씩 구동 총 120 \\((=20 \\times 3 \\times 2)\\) 샘플\n\nDay: Day1~20\n\nnoon: AM= before noon, PM= after noon\nRun: 1회 구동당 3번 반복씩1, 2, 3\n\nresponse: response variable, 낮을 수록 좋음\n\nANOVA의 Assumption\n\nresponse variable should follow normal distribution.\n\nhomoscedasticity, equality of variance: 각 집단의 분포는 모두 동일한 분산을 가짐\nANOVA의 가정들을 반드시 충족하지 않아도 되지만 충족하면 Power 가 올라감\n\n\n\n\n2.2 EDA (Explorator Data Analysis)\n이 data는 아래 처럼 1의 결측치를 갖고 있습니다.\n\n\n\n\n\nid\nDay\nnoon\nRun\nresponse\n\n\n\n\n117\n20\nAM\n3\nNA\n\n\n\n\n\nCt에 대한 Global Statistics는 다음과 같습니다.\n\n\n\n\n\ncount\nglobal_response_mean\nglobal_response_sd\nglobal_response_CV\n\n\n\n\n119\n38.727\n18.47\n47.694 %\n\n\n\n\n\nDay groups의 Statistics은 다음과 같습니다.\n\n\n\n\n  \n\n\n\nAM/PM groups의 Statistics은 다음과 같습니다.\n\n\n\n\n  \n\n\n\nDays와 AM/PM 조합 groups의 Statistics은 다음과 같습니다.\n\n\n\n\n  \n\n\n\n이제 ANOVA를 수행하기 위한 basic statistics는 모두 구했습니다. ANOVA를 수행하기 위해 집단 간 분산과 집단 내 분산을 계산하도록 하겠습니다.\n\n\n2.3 집단 간 분산\n앞에서 설명 드린바로 유추해보면 예시 data의 집단 간 분산의 범주형 변수는 Day로 설정하는 것이 합리적인 것으로 보입니다.\n\n\\(g=g\\) Day의 sample size = 20, 자유도 = 20-1 = 19 입니다.\n\\(n_g=g\\) group의 sample size, \\(\\overline{X}_g=g\\) 의 sample mean은 다음과 같습니다.\n\\(\\overline{X}\\) = global sample mean = 38.72681\n집단 간 분산: \\(\\frac{집단 간 제곱합}{자유도}=\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n2.3.1 SS_Day (집단간 분산 Day)\nDay sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(Day)간 분산 계산, 집단(Day)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n  \n\n\n\nAnalysis-In program의 ANOVA결과값과 일치하는 것을 볼 수 있습니다. $SS_{day} $= 7025.97838 with \\(df=19\\).\n\n\n2.3.2 SS_noon (집단간 분산 noon)\nnoon sq = \\([(\\overline{X}_g-\\overline{X})^2n_g]\\) 집단(noon)간 분산 계산, 집단(noon)간 분산 = \\(\\frac{\\sum_g[(\\overline{X}_g-\\overline{X})^2n_g]}{g-1}\\)\n\n\n\n\n  \n\n\n\nAnalysis-In program의 결과에서 찾아 볼 수 없죠? 이 결과는 숨어 있습니다. 상호 작용에 대한 분산값을 구하고 나면 정체를 알 수 있습니다.\n\\(SS_{noon}\\) = 319.76458 with \\(df=1\\).\n\n\n2.3.3 SS_error (집단내 분산)\n\n집단 내 분산 (within-groups variability)\n\n\n\n\n\n  \n\n\n\n\\(SS_{error}\\) = 2.47041^{4}\nAnalysis-In program의 결과와 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.4 SS_total\n\n\n\n\n  \n\n\n\n\\(SS_{total}\\) = 4.02557^{4}\nAnalysis-In program의 ANOVA 결과 table에 있는 SS들의 합과 일치하는 것을 확인할 수 있습니다.\n\n\n2.3.5 상호 작용 분산\n\n\n\n\\(SS_{interaction}=SS_{DayNoon}= SS_{total}-SS_{Day}-SS_{noon}-SS_{error}\\)\n= 4.02557{4}-2.47041{4}-319.76458-7025.97838 = 8205.93974\nAnalysis-In program의 ANOVA 결과 table과 일치하는 것을 확인할 수 있습니다.\n위의 결과들을 종합하면 아래와 같이 요약됩니다.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370    1.18   0.29\nnoon         1    339     339    1.08   0.30\nDay:noon    19   8187     431    1.38   0.16\nResiduals   79  24704     313               \n1 observation deleted due to missingness\n\n\n\nRepeatability SD = \\(\\sqrt{V_{error}}=\\sqrt{MS_{error}}\\) = 17.6836\nRepeatability CV = \\(\\frac{repeatability \\space SD}{global \\space mean \\space response}\\) = 0.45662\n\n위의 결과를 간단히 해석해 보면\n\n집단간 범주 변수인 Day는 p-value =0.29>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 일별로 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 일별로 평균 response값이 다르지 않습니다.\n\n집단간 범주 변수인 noon은 p-value =0.30>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, 오전/오후별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, 오전/오후별 평균 response값이 다르지 않습니다.\n\nDay와 noon두 변수의 상호작용 변수는 p-value =0.16>0.05 이므로 5% 유의 수준에서, 유의하지 않습니다.\n\n즉, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 같다는 가설을 기각하는데 실패했습니다.\n다시 말하면, 5% 유의 수준에서, Day별 Noon(오전/오후)별 평균 response값이 다르지 않습니다.\n\n\n최종 결론, 제품의 response값이 Day별 오전/오후별 안정적인 performance를 보인다고 조심스럽게 결론을 내릴 수 있습니다.\n이제 까지는 질문에 대한 답이 되는 ANOVA의 원리 및 통계량의 재현 및 해석법에 대하여 알아봤습니다. 하지만 직관적으로 어떤 의미가 있을 까요? 원래는 시각화를 통해 데이터의 패턴을 짐작하고 통계 검정 결과를 예상하는데 우리는 반대로 가고 있네요 ㅎㅎ 시각화를 통해 ANOVA 결과가 얼마나 직관적인지 알아보겠습니다.\n\n\n\n2.4 Visualization\n\n2.4.1 One-way: Day\n\n\n\n\n\n\n\n\n자세히 보면 일별로 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다. 하지만 좀 더 세부적으로 관찰하면 1일~8일 평균 response의 경향이 constant한 패턴을 보입니다. 9일~13일 평균 response가 진동 하향하는 패턴을 보입니다. 14일~20일 평균 response가 상향하는 패턴을 보입니다.\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n Day \n        1    2     3     4     5     6     7     8     9    10    11    12\n    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94\nrep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n\nTables of effects\n\n Day \n        1     2     3      4    5     6     7     8     9     10    11     12\n    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79\nrep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00\n       13     14     15     16     17     18     19   20\n    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62\nrep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00\n\n\n위에 첫 번째표에서 Global Sample response Mean = 38.727 과 각 집단의 평균 response를 확인할 수 있습니다. 위에 두 번째표에서 Global Sample response Mean = 37.322 과 각 집단의 평균 response의 차이를 확인할 수 있습니다.\n\nDay 9에서 차이가 가장 큰 것으로 보아 9일째 실험에서 performance가 가장 낮은 것이 관측됐습니다.\n반대로, 12일에 performance 가장 좋은 것으로 관측됐습니다.\n\n9일과 12일에 response값에 영향을 미쳤던 요인이 있었는지 복기 하는것도 도움이 되겠군요.\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370     1.1   0.36\nResiduals   99  33230     336               \n1 observation deleted due to missingness\n\n\nOne-way ANOVA의 결과값입니다. Day별 평균 response의 차이는 거의 없는 것으로 보입니다. 따라서 Day 별 평균 response의 경향이 일관되지 않고 One-way ANOVA에서 역시 통계적으로 유의하지 않아 Day 변수는 평균 response에 영향을 미치지 않는 것 같습니다.\n\n\n2.4.2 One-way: AM/PM\n\n\n\n\n\n\n\n\n오후에 시간의 경과에 따라 전체적으로 평균 response값이 약간 하향하는 것으로 보입니다.\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n noon \n       AM   PM\n    40.38 37.1\nrep 59.00 60.0\n\n\nTables of effects\n\n noon \n        AM     PM\n     1.653 -1.626\nrep 59.000 60.000\n\n\n위 첫 번째 표에서 AM/PM 간의 평균 response차이는 0.15 (농도가 약 0.5배) 차이가 나는 것을 확인할 수 있습니다. 생물학적으로 의미가 있는 수치일까요? 위 두 번째 표에서 Global Sample Mean 37.322와 오전/오후 별 약 0.07씩(농도가 약 0.25배) 차이가 납니다.\n\n\n             Df Sum Sq Mean Sq F value Pr(>F)\nnoon          1    320     320    0.94   0.34\nResiduals   117  39936     341               \n1 observation deleted due to missingness\n\n\n오전 오후별 One way ANOVA를 실행한 결과가 오전/오부 평균 response값의 차이가 다르지 않다는 것을 시사하고 있습니다. 아무래도 위의 차이는 우연에 의해 발생한 현상인 것 같습니다.\n\n\n\n\n\n일별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 Day 변수는 유의하다고 볼 수 없습니다.\n\n\n\n\n\n오전/오후별로 평균 response값이 차이를 모든 경우의 수에서 차이가 나는지 확인한 결과 신뢰구간 모두가 0을 포함하고 있으므로 오전/오후 변수는 유의하다고 볼 수 없습니다.\n여기 까지 각 변수별 평균 response로의 영향도를 통계적으로 시각적으로 관찰했습니다. 하지만 Day별 오전/오후별 영향도가 있는지 확인하겠습니다. (이미 위에서 통계적으로 없다고 검정됐습니다.)\n\n\n\n2.5 Two way Anova\n\n\n       AM     PM\n1  35.987 58.697\n2  40.032 42.374\n3  33.148 53.374\n4  36.697 29.387\n5  44.432 43.581\n6  45.781 35.277\n7  40.458 41.381\n8  51.103 34.852\n9  69.981 41.806\n10 26.619 42.658\n11 67.923 30.452\n12 25.981 27.897\n13 40.600 47.129\n14 25.839 31.800\n15 18.458 38.897\n16 36.910 26.123\n17 41.594 18.529\n18 38.471 32.084\n19 45.923 20.019\n20 42.303 45.710\n\n\n        AM      PM\n1  20.9797  7.4516\n2  18.6291 12.0856\n3  22.1450 34.0565\n4  16.3483  7.5583\n5   4.6107 11.0032\n6  23.6862 11.7618\n7  12.3380 30.0128\n8  33.4416 12.0135\n9   7.7381 30.4715\n10  3.4483  7.8927\n11 28.8752  9.1557\n12  5.9053 12.9054\n13 15.2088  7.3824\n14  8.4556 27.2253\n15  4.5063 35.2180\n16 18.3756  1.6899\n17 13.3474  8.0068\n18  6.0067 21.7672\n19 19.7931  1.4176\n20  3.9142 14.0145\n\n\n\n\nTables of means\nGrand mean\n       \n38.727 \n\n Day \n        1    2     3     4     5     6     7     8     9    10    11    12\n    47.34 41.2 43.26 33.04 44.01 40.53 40.92 42.98 55.89 34.64 49.19 26.94\nrep  6.00  6.0  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00  6.00\n       13    14    15    16    17    18    19    20\n    43.86 28.82 28.68 31.52 30.06 35.28 32.97 44.35\nrep  6.00  6.00  6.00  6.00  6.00  6.00  6.00  5.00\n\n noon \n       AM    PM\n    40.43 37.05\nrep 59.00 60.00\n\n Day:noon \n     noon\nDay   AM    PM   \n  1   35.99 58.70\n  rep  3.00  3.00\n  2   40.03 42.37\n  rep  3.00  3.00\n  3   33.15 53.37\n  rep  3.00  3.00\n  4   36.70 29.39\n  rep  3.00  3.00\n  5   44.43 43.58\n  rep  3.00  3.00\n  6   45.78 35.28\n  rep  3.00  3.00\n  7   40.46 41.38\n  rep  3.00  3.00\n  8   51.10 34.85\n  rep  3.00  3.00\n  9   69.98 41.81\n  rep  3.00  3.00\n  10  26.62 42.66\n  rep  3.00  3.00\n  11  67.92 30.45\n  rep  3.00  3.00\n  12  25.98 27.90\n  rep  3.00  3.00\n  13  40.60 47.13\n  rep  3.00  3.00\n  14  25.84 31.80\n  rep  3.00  3.00\n  15  18.46 38.90\n  rep  3.00  3.00\n  16  36.91 26.12\n  rep  3.00  3.00\n  17  41.59 18.53\n  rep  3.00  3.00\n  18  38.47 32.08\n  rep  3.00  3.00\n  19  45.92 20.02\n  rep  3.00  3.00\n  20  42.30 45.71\n  rep  2.00  3.00\n\n\nTables of effects\n\n Day \n        1     2     3      4    5     6     7     8     9     10    11     12\n    8.615 2.476 4.534 -5.685 5.28 1.802 2.193 4.251 17.17 -4.088 10.46 -11.79\nrep 6.000 6.000 6.000  6.000 6.00 6.000 6.000 6.000  6.00  6.000  6.00   6.00\n       13     14     15     16     17     18     19   20\n    5.138 -9.907 -10.05 -7.211 -8.666 -3.449 -5.756 5.62\nrep 6.000  6.000   6.00  6.000  6.000  6.000  6.000 5.00\n\n noon \n        AM     PM\n     1.701 -1.672\nrep 59.000 60.000\n\n Day:noon \n     noon\nDay   AM      PM     \n  1   -13.044  13.044\n  rep   3.000   3.000\n  2    -2.860   2.860\n  rep   3.000   3.000\n  3   -11.802  11.802\n  rep   3.000   3.000\n  4     1.966  -1.966\n  rep   3.000   3.000\n  5    -1.263   1.263\n  rep   3.000   3.000\n  6     3.562  -3.562\n  rep   3.000   3.000\n  7    -2.151   2.151\n  rep   3.000   3.000\n  8     6.437  -6.437\n  rep   3.000   3.000\n  9    12.398 -12.398\n  rep   3.000   3.000\n  10   -9.709   9.709\n  rep   3.000   3.000\n  11   17.046 -17.046\n  rep   3.000   3.000\n  12   -2.647   2.647\n  rep   3.000   3.000\n  13   -4.954   4.954\n  rep   3.000   3.000\n  14   -4.670   4.670\n  rep   3.000   3.000\n  15  -11.909  11.909\n  rep   3.000   3.000\n  16    3.704  -3.704\n  rep   3.000   3.000\n  17    9.843  -9.843\n  rep   3.000   3.000\n  18    1.504  -1.504\n  rep   3.000   3.000\n  19   11.262 -11.262\n  rep   3.000   3.000\n  20   -4.071   2.714\n  rep   2.000   3.000\n\n\none way ANOVA와 같이 해석\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            Df Sum Sq Mean Sq F value Pr(>F)\nDay         19   7026     370    1.18   0.29\nnoon         1    339     339    1.08   0.30\nDay:noon    19   8187     431    1.38   0.16\nResiduals   79  24704     313               \n1 observation deleted due to missingness\n\n\n위 그림을 보듯이 두 변수의 영향도가 없음, ANOVA 역시 유의하지 않음\n\n\n\n\n\n\n Missing rows: 117 \n\n\n\n\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = response ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff     lwr     upr   p adj\n2-1    -6.138710 -43.575 31.2979 1.00000\n3-1    -4.080645 -41.517 33.3560 1.00000\n4-1   -14.300000 -51.737 23.1366 0.99700\n5-1    -3.335484 -40.772 34.1011 1.00000\n6-1    -6.812903 -44.250 30.6237 1.00000\n7-1    -6.422581 -43.859 31.0140 1.00000\n8-1    -4.364516 -41.801 33.0721 1.00000\n9-1     8.551613 -28.885 45.9882 1.00000\n10-1  -12.703226 -50.140 24.7334 0.99934\n11-1    1.845161 -35.591 39.2818 1.00000\n12-1  -20.403226 -57.840 17.0334 0.89330\n13-1   -3.477419 -40.914 33.9592 1.00000\n14-1  -18.522581 -55.959 18.9140 0.95243\n15-1  -18.664516 -56.101 18.7721 0.94905\n16-1  -15.825806 -53.262 21.6108 0.99024\n17-1  -17.280645 -54.717 20.1560 0.97539\n18-1  -12.064516 -49.501 25.3721 0.99968\n19-1  -14.370968 -51.808 23.0657 0.99682\n20-1   -2.994839 -42.259 36.2690 1.00000\n3-2     2.058065 -35.379 39.4947 1.00000\n4-2    -8.161290 -45.598 29.2753 1.00000\n5-2     2.803226 -34.633 40.2399 1.00000\n6-2    -0.674194 -38.111 36.7624 1.00000\n7-2    -0.283871 -37.721 37.1528 1.00000\n8-2     1.774194 -35.662 39.2108 1.00000\n9-2    14.690323 -22.746 52.1270 0.99585\n10-2   -6.564516 -44.001 30.8721 1.00000\n11-2    7.983871 -29.453 45.4205 1.00000\n12-2  -14.264516 -51.701 23.1721 0.99709\n13-2    2.661290 -34.775 40.0979 1.00000\n14-2  -12.383871 -49.821 25.0528 0.99953\n15-2  -12.525806 -49.962 24.9108 0.99946\n16-2   -9.687097 -47.124 27.7495 0.99999\n17-2  -11.141935 -48.579 26.2947 0.99990\n18-2   -5.925806 -43.362 31.5108 1.00000\n19-2   -8.232258 -45.669 29.2044 1.00000\n20-2    3.143871 -36.120 42.4077 1.00000\n4-3   -10.219355 -47.656 27.2173 0.99997\n5-3     0.745161 -36.691 38.1818 1.00000\n6-3    -2.732258 -40.169 34.7044 1.00000\n7-3    -2.341935 -39.779 35.0947 1.00000\n8-3    -0.283871 -37.721 37.1528 1.00000\n9-3    12.632258 -24.804 50.0689 0.99939\n10-3   -8.622581 -46.059 28.8140 1.00000\n11-3    5.925806 -31.511 43.3624 1.00000\n12-3  -16.322581 -53.759 21.1140 0.98634\n13-3    0.603226 -36.833 38.0399 1.00000\n14-3  -14.441935 -51.879 22.9947 0.99662\n15-3  -14.583871 -52.021 22.8528 0.99620\n16-3  -11.745161 -49.182 25.6915 0.99978\n17-3  -13.200000 -50.637 24.2366 0.99891\n18-3   -7.983871 -45.421 29.4528 1.00000\n19-3  -10.290323 -47.727 27.1463 0.99997\n20-3    1.085806 -38.178 40.3497 1.00000\n5-4    10.964516 -26.472 48.4011 0.99992\n6-4     7.487097 -29.950 44.9237 1.00000\n7-4     7.877419 -29.559 45.3140 1.00000\n8-4     9.935484 -27.501 47.3721 0.99998\n9-4    22.851613 -14.585 60.2882 0.76824\n10-4    1.596774 -35.840 39.0334 1.00000\n11-4   16.145161 -21.291 53.5818 0.98785\n12-4   -6.103226 -43.540 31.3334 1.00000\n13-4   10.822581 -26.614 48.2592 0.99993\n14-4   -4.222581 -41.659 33.2140 1.00000\n15-4   -4.364516 -41.801 33.0721 1.00000\n16-4   -1.525806 -38.962 35.9108 1.00000\n17-4   -2.980645 -40.417 34.4560 1.00000\n18-4    2.235484 -35.201 39.6721 1.00000\n19-4   -0.070968 -37.508 37.3657 1.00000\n20-4   11.305161 -27.959 50.5690 0.99994\n6-5    -3.477419 -40.914 33.9592 1.00000\n7-5    -3.087097 -40.524 34.3495 1.00000\n8-5    -1.029032 -38.466 36.4076 1.00000\n9-5    11.887097 -25.550 49.3237 0.99974\n10-5   -9.367742 -46.804 28.0689 0.99999\n11-5    5.180645 -32.256 42.6173 1.00000\n12-5  -17.067742 -54.504 20.3689 0.97827\n13-5   -0.141935 -37.579 37.2947 1.00000\n14-5  -15.187097 -52.624 22.2495 0.99387\n15-5  -15.329032 -52.766 22.1076 0.99318\n16-5  -12.490323 -49.927 24.9463 0.99948\n17-5  -13.945161 -51.382 23.4915 0.99780\n18-5   -8.729032 -46.166 28.7076 1.00000\n19-5  -11.035484 -48.472 26.4011 0.99991\n20-5    0.340645 -38.923 39.6045 1.00000\n7-6     0.390323 -37.046 37.8270 1.00000\n8-6     2.448387 -34.988 39.8850 1.00000\n9-6    15.364516 -22.072 52.8011 0.99300\n10-6   -5.890323 -43.327 31.5463 1.00000\n11-6    8.658065 -28.779 46.0947 1.00000\n12-6  -13.590323 -51.027 23.8463 0.99841\n13-6    3.335484 -34.101 40.7721 1.00000\n14-6  -11.709677 -49.146 25.7270 0.99979\n15-6  -11.851613 -49.288 25.5850 0.99975\n16-6   -9.012903 -46.450 28.4237 1.00000\n17-6  -10.467742 -47.904 26.9689 0.99996\n18-6   -5.251613 -42.688 32.1850 1.00000\n19-6   -7.558065 -44.995 29.8786 1.00000\n20-6    3.818065 -35.446 43.0819 1.00000\n8-7     2.058065 -35.379 39.4947 1.00000\n9-7    14.974194 -22.462 52.4108 0.99480\n10-7   -6.280645 -43.717 31.1560 1.00000\n11-7    8.267742 -29.169 45.7044 1.00000\n12-7  -13.980645 -51.417 23.4560 0.99773\n13-7    2.945161 -34.491 40.3818 1.00000\n14-7  -12.100000 -49.537 25.3366 0.99966\n15-7  -12.241935 -49.679 25.1947 0.99960\n16-7   -9.403226 -46.840 28.0334 0.99999\n17-7  -10.858065 -48.295 26.5786 0.99993\n18-7   -5.641935 -43.079 31.7947 1.00000\n19-7   -7.948387 -45.385 29.4882 1.00000\n20-7    3.427742 -35.836 42.6916 1.00000\n9-8    12.916129 -24.521 50.3528 0.99918\n10-8   -8.338710 -45.775 29.0979 1.00000\n11-8    6.209677 -31.227 43.6463 1.00000\n12-8  -16.038710 -53.475 21.3979 0.98869\n13-8    0.887097 -36.550 38.3237 1.00000\n14-8  -14.158065 -51.595 23.2786 0.99735\n15-8  -14.300000 -51.737 23.1366 0.99700\n16-8  -11.461290 -48.898 25.9753 0.99984\n17-8  -12.916129 -50.353 24.5205 0.99918\n18-8   -7.700000 -45.137 29.7366 1.00000\n19-8  -10.006452 -47.443 27.4302 0.99998\n20-8    1.369677 -37.894 40.6335 1.00000\n10-9  -21.254839 -58.691 16.1818 0.85576\n11-9   -6.706452 -44.143 30.7302 1.00000\n12-9  -28.954839 -66.391  8.4818 0.35269\n13-9  -12.029032 -49.466 25.4076 0.99969\n14-9  -27.074194 -64.511 10.3624 0.47719\n15-9  -27.216129 -64.653 10.2205 0.46731\n16-9  -24.377419 -61.814 13.0592 0.66832\n17-9  -25.832258 -63.269 11.6044 0.56535\n18-9  -20.616129 -58.053 16.8205 0.88455\n19-9  -22.922581 -60.359 14.5140 0.76389\n20-9  -11.546452 -50.810 27.7174 0.99991\n11-10  14.548387 -22.888 51.9850 0.99631\n12-10  -7.700000 -45.137 29.7366 1.00000\n13-10   9.225806 -28.211 46.6624 0.99999\n14-10  -5.819355 -43.256 31.6173 1.00000\n15-10  -5.961290 -43.398 31.4753 1.00000\n16-10  -3.122581 -40.559 34.3140 1.00000\n17-10  -4.577419 -42.014 32.8592 1.00000\n18-10   0.638710 -36.798 38.0753 1.00000\n19-10  -1.667742 -39.104 35.7689 1.00000\n20-10   9.708387 -29.555 48.9723 0.99999\n12-11 -22.248387 -59.685 15.1882 0.80373\n13-11  -5.322581 -42.759 32.1140 1.00000\n14-11 -20.367742 -57.804 17.0689 0.89472\n15-11 -20.509677 -57.946 16.9270 0.88898\n16-11 -17.670968 -55.108 19.7657 0.96936\n17-11 -19.125806 -56.562 18.3108 0.93692\n18-11 -13.909677 -51.346 23.5270 0.99787\n19-11 -16.216129 -53.653 21.2205 0.98726\n20-11  -4.840000 -44.104 34.4239 1.00000\n13-12  16.925806 -20.511 54.3624 0.98004\n14-12   1.880645 -35.556 39.3173 1.00000\n15-12   1.738710 -35.698 39.1753 1.00000\n16-12   4.577419 -32.859 42.0140 1.00000\n17-12   3.122581 -34.314 40.5592 1.00000\n18-12   8.338710 -29.098 45.7753 1.00000\n19-12   6.032258 -31.404 43.4689 1.00000\n20-12  17.408387 -21.855 56.6723 0.98369\n14-13 -15.045161 -52.482 22.3915 0.99450\n15-13 -15.187097 -52.624 22.2495 0.99387\n16-13 -12.348387 -49.785 25.0882 0.99955\n17-13 -13.803226 -51.240 23.6334 0.99807\n18-13  -8.587097 -46.024 28.8495 1.00000\n19-13 -10.893548 -48.330 26.5431 0.99992\n20-13   0.482581 -38.781 39.7464 1.00000\n15-14  -0.141935 -37.579 37.2947 1.00000\n16-14   2.696774 -34.740 40.1334 1.00000\n17-14   1.241935 -36.195 38.6786 1.00000\n18-14   6.458065 -30.979 43.8947 1.00000\n19-14   4.151613 -33.285 41.5882 1.00000\n20-14  15.527742 -23.736 54.7916 0.99545\n16-15   2.838710 -34.598 40.2753 1.00000\n17-15   1.383871 -36.053 38.8205 1.00000\n18-15   6.600000 -30.837 44.0366 1.00000\n19-15   4.293548 -33.143 41.7302 1.00000\n20-15  15.669677 -23.594 54.9335 0.99493\n17-16  -1.454839 -38.891 35.9818 1.00000\n18-16   3.761290 -33.675 41.1979 1.00000\n19-16   1.454839 -35.982 38.8915 1.00000\n20-16  12.830968 -26.433 52.0948 0.99961\n18-17   5.216129 -32.221 42.6528 1.00000\n19-17   2.909677 -34.527 40.3463 1.00000\n20-17  14.285806 -24.978 53.5497 0.99837\n19-18  -2.306452 -39.743 35.1302 1.00000\n20-18   9.069677 -30.194 48.3335 1.00000\n20-19  11.376129 -27.888 50.6400 0.99993\n\n$noon\n         diff     lwr    upr   p adj\nPM-AM -3.3731 -9.8265 3.0804 0.30135\n\n$`Day:noon`\n                  diff      lwr     upr   p adj\n2:AM-1:AM     4.045161  -54.344 62.4344 1.00000\n3:AM-1:AM    -2.838710  -61.228 55.5505 1.00000\n4:AM-1:AM     0.709677  -57.680 59.0989 1.00000\n5:AM-1:AM     8.445161  -49.944 66.8344 1.00000\n6:AM-1:AM     9.793548  -48.596 68.1827 1.00000\n7:AM-1:AM     4.470968  -53.918 62.8602 1.00000\n8:AM-1:AM    15.116129  -43.273 73.5053 1.00000\n9:AM-1:AM    33.993548  -24.396 92.3827 0.92887\n10:AM-1:AM   -9.367742  -67.757 49.0215 1.00000\n11:AM-1:AM   31.935484  -26.454 90.3247 0.96592\n12:AM-1:AM  -10.006452  -68.396 48.3827 1.00000\n13:AM-1:AM    4.612903  -53.776 63.0021 1.00000\n14:AM-1:AM  -10.148387  -68.538 48.2408 1.00000\n15:AM-1:AM  -17.529032  -75.918 40.8602 1.00000\n16:AM-1:AM    0.922581  -57.467 59.3118 1.00000\n17:AM-1:AM    5.606452  -52.783 63.9956 1.00000\n18:AM-1:AM    2.483871  -55.905 60.8731 1.00000\n19:AM-1:AM    9.935484  -48.454 68.3247 1.00000\n20:AM-1:AM    6.316129  -58.965 71.5972 1.00000\n1:PM-1:AM    22.709677  -35.680 81.0989 0.99990\n2:PM-1:AM     6.387097  -52.002 64.7763 1.00000\n3:PM-1:AM    17.387097  -41.002 75.7763 1.00000\n4:PM-1:AM    -6.600000  -64.989 51.7892 1.00000\n5:PM-1:AM     7.593548  -50.796 65.9827 1.00000\n6:PM-1:AM    -0.709677  -59.099 57.6795 1.00000\n7:PM-1:AM     5.393548  -52.996 63.7827 1.00000\n8:PM-1:AM    -1.135484  -59.525 57.2537 1.00000\n9:PM-1:AM     5.819355  -52.570 64.2086 1.00000\n10:PM-1:AM    6.670968  -51.718 65.0602 1.00000\n11:PM-1:AM   -5.535484  -63.925 52.8537 1.00000\n12:PM-1:AM   -8.090323  -66.480 50.2989 1.00000\n13:PM-1:AM   11.141935  -47.247 69.5311 1.00000\n14:PM-1:AM   -4.187097  -62.576 54.2021 1.00000\n15:PM-1:AM    2.909677  -55.480 61.2989 1.00000\n16:PM-1:AM   -9.864516  -68.254 48.5247 1.00000\n17:PM-1:AM  -17.458065  -75.847 40.9311 1.00000\n18:PM-1:AM   -3.903226  -62.292 54.4860 1.00000\n19:PM-1:AM  -15.967742  -74.357 42.4215 1.00000\n20:PM-1:AM    9.722581  -48.667 68.1118 1.00000\n3:AM-2:AM    -6.883871  -65.273 51.5053 1.00000\n4:AM-2:AM    -3.335484  -61.725 55.0537 1.00000\n5:AM-2:AM     4.400000  -53.989 62.7892 1.00000\n6:AM-2:AM     5.748387  -52.641 64.1376 1.00000\n7:AM-2:AM     0.425806  -57.963 58.8150 1.00000\n8:AM-2:AM    11.070968  -47.318 69.4602 1.00000\n9:AM-2:AM    29.948387  -28.441 88.3376 0.98570\n10:AM-2:AM  -13.412903  -71.802 44.9763 1.00000\n11:AM-2:AM   27.890323  -30.499 86.2795 0.99521\n12:AM-2:AM  -14.051613  -72.441 44.3376 1.00000\n13:AM-2:AM    0.567742  -57.821 58.9569 1.00000\n14:AM-2:AM  -14.193548  -72.583 44.1956 1.00000\n15:AM-2:AM  -21.574194  -79.963 36.8150 0.99997\n16:AM-2:AM   -3.122581  -61.512 55.2666 1.00000\n17:AM-2:AM    1.561290  -56.828 59.9505 1.00000\n18:AM-2:AM   -1.561290  -59.950 56.8279 1.00000\n19:AM-2:AM    5.890323  -52.499 64.2795 1.00000\n20:AM-2:AM    2.270968  -63.010 67.5521 1.00000\n1:PM-2:AM    18.664516  -39.725 77.0537 1.00000\n2:PM-2:AM     2.341935  -56.047 60.7311 1.00000\n3:PM-2:AM    13.341935  -45.047 71.7311 1.00000\n4:PM-2:AM   -10.645161  -69.034 47.7440 1.00000\n5:PM-2:AM     3.548387  -54.841 61.9376 1.00000\n6:PM-2:AM    -4.754839  -63.144 53.6344 1.00000\n7:PM-2:AM     1.348387  -57.041 59.7376 1.00000\n8:PM-2:AM    -5.180645  -63.570 53.2086 1.00000\n9:PM-2:AM     1.774194  -56.615 60.1634 1.00000\n10:PM-2:AM    2.625806  -55.763 61.0150 1.00000\n11:PM-2:AM   -9.580645  -67.970 48.8086 1.00000\n12:PM-2:AM  -12.135484  -70.525 46.2537 1.00000\n13:PM-2:AM    7.096774  -51.292 65.4860 1.00000\n14:PM-2:AM   -8.232258  -66.621 50.1569 1.00000\n15:PM-2:AM   -1.135484  -59.525 57.2537 1.00000\n16:PM-2:AM  -13.909677  -72.299 44.4795 1.00000\n17:PM-2:AM  -21.503226  -79.892 36.8860 0.99997\n18:PM-2:AM   -7.948387  -66.338 50.4408 1.00000\n19:PM-2:AM  -20.012903  -78.402 38.3763 0.99999\n20:PM-2:AM    5.677419  -52.712 64.0666 1.00000\n4:AM-3:AM     3.548387  -54.841 61.9376 1.00000\n5:AM-3:AM    11.283871  -47.105 69.6731 1.00000\n6:AM-3:AM    12.632258  -45.757 71.0215 1.00000\n7:AM-3:AM     7.309677  -51.080 65.6989 1.00000\n8:AM-3:AM    17.954839  -40.434 76.3440 1.00000\n9:AM-3:AM    36.832258  -21.557 95.2215 0.84321\n10:AM-3:AM   -6.529032  -64.918 51.8602 1.00000\n11:AM-3:AM   34.774194  -23.615 93.1634 0.90946\n12:AM-3:AM   -7.167742  -65.557 51.2215 1.00000\n13:AM-3:AM    7.451613  -50.938 65.8408 1.00000\n14:AM-3:AM   -7.309677  -65.699 51.0795 1.00000\n15:AM-3:AM  -14.690323  -73.080 43.6989 1.00000\n16:AM-3:AM    3.761290  -54.628 62.1505 1.00000\n17:AM-3:AM    8.445161  -49.944 66.8344 1.00000\n18:AM-3:AM    5.322581  -53.067 63.7118 1.00000\n19:AM-3:AM   12.774194  -45.615 71.1634 1.00000\n20:AM-3:AM    9.154839  -56.126 74.4359 1.00000\n1:PM-3:AM    25.548387  -32.841 83.9376 0.99897\n2:PM-3:AM     9.225806  -49.163 67.6150 1.00000\n3:PM-3:AM    20.225806  -38.163 78.6150 0.99999\n4:PM-3:AM    -3.761290  -62.150 54.6279 1.00000\n5:PM-3:AM    10.432258  -47.957 68.8215 1.00000\n6:PM-3:AM     2.129032  -56.260 60.5182 1.00000\n7:PM-3:AM     8.232258  -50.157 66.6215 1.00000\n8:PM-3:AM     1.703226  -56.686 60.0924 1.00000\n9:PM-3:AM     8.658065  -49.731 67.0473 1.00000\n10:PM-3:AM    9.509677  -48.880 67.8989 1.00000\n11:PM-3:AM   -2.696774  -61.086 55.6924 1.00000\n12:PM-3:AM   -5.251613  -63.641 53.1376 1.00000\n13:PM-3:AM   13.980645  -44.409 72.3698 1.00000\n14:PM-3:AM   -1.348387  -59.738 57.0408 1.00000\n15:PM-3:AM    5.748387  -52.641 64.1376 1.00000\n16:PM-3:AM   -7.025806  -65.415 51.3634 1.00000\n17:PM-3:AM  -14.619355  -73.009 43.7698 1.00000\n18:PM-3:AM   -1.064516  -59.454 57.3247 1.00000\n19:PM-3:AM  -13.129032  -71.518 45.2602 1.00000\n20:PM-3:AM   12.561290  -45.828 70.9505 1.00000\n5:AM-4:AM     7.735484  -50.654 66.1247 1.00000\n6:AM-4:AM     9.083871  -49.305 67.4731 1.00000\n7:AM-4:AM     3.761290  -54.628 62.1505 1.00000\n8:AM-4:AM    14.406452  -43.983 72.7956 1.00000\n9:AM-4:AM    33.283871  -25.105 91.6731 0.94386\n10:AM-4:AM  -10.077419  -68.467 48.3118 1.00000\n11:AM-4:AM   31.225806  -27.163 89.6150 0.97452\n12:AM-4:AM  -10.716129  -69.105 47.6731 1.00000\n13:AM-4:AM    3.903226  -54.486 62.2924 1.00000\n14:AM-4:AM  -10.858065  -69.247 47.5311 1.00000\n15:AM-4:AM  -18.238710  -76.628 40.1505 1.00000\n16:AM-4:AM    0.212903  -58.176 58.6021 1.00000\n17:AM-4:AM    4.896774  -53.492 63.2860 1.00000\n18:AM-4:AM    1.774194  -56.615 60.1634 1.00000\n19:AM-4:AM    9.225806  -49.163 67.6150 1.00000\n20:AM-4:AM    5.606452  -59.675 70.8876 1.00000\n1:PM-4:AM    22.000000  -36.389 80.3892 0.99995\n2:PM-4:AM     5.677419  -52.712 64.0666 1.00000\n3:PM-4:AM    16.677419  -41.712 75.0666 1.00000\n4:PM-4:AM    -7.309677  -65.699 51.0795 1.00000\n5:PM-4:AM     6.883871  -51.505 65.2731 1.00000\n6:PM-4:AM    -1.419355  -59.809 56.9698 1.00000\n7:PM-4:AM     4.683871  -53.705 63.0731 1.00000\n8:PM-4:AM    -1.845161  -60.234 56.5440 1.00000\n9:PM-4:AM     5.109677  -53.280 63.4989 1.00000\n10:PM-4:AM    5.961290  -52.428 64.3505 1.00000\n11:PM-4:AM   -6.245161  -64.634 52.1440 1.00000\n12:PM-4:AM   -8.800000  -67.189 49.5892 1.00000\n13:PM-4:AM   10.432258  -47.957 68.8215 1.00000\n14:PM-4:AM   -4.896774  -63.286 53.4924 1.00000\n15:PM-4:AM    2.200000  -56.189 60.5892 1.00000\n16:PM-4:AM  -10.574194  -68.963 47.8150 1.00000\n17:PM-4:AM  -18.167742  -76.557 40.2215 1.00000\n18:PM-4:AM   -4.612903  -63.002 53.7763 1.00000\n19:PM-4:AM  -16.677419  -75.067 41.7118 1.00000\n20:PM-4:AM    9.012903  -49.376 67.4021 1.00000\n6:AM-5:AM     1.348387  -57.041 59.7376 1.00000\n7:AM-5:AM    -3.974194  -62.363 54.4150 1.00000\n8:AM-5:AM     6.670968  -51.718 65.0602 1.00000\n9:AM-5:AM    25.548387  -32.841 83.9376 0.99897\n10:AM-5:AM  -17.812903  -76.202 40.5763 1.00000\n11:AM-5:AM   23.490323  -34.899 81.8795 0.99980\n12:AM-5:AM  -18.451613  -76.841 39.9376 1.00000\n13:AM-5:AM   -3.832258  -62.221 54.5569 1.00000\n14:AM-5:AM  -18.593548  -76.983 39.7956 1.00000\n15:AM-5:AM  -25.974194  -84.363 32.4150 0.99860\n16:AM-5:AM   -7.522581  -65.912 50.8666 1.00000\n17:AM-5:AM   -2.838710  -61.228 55.5505 1.00000\n18:AM-5:AM   -5.961290  -64.350 52.4279 1.00000\n19:AM-5:AM    1.490323  -56.899 59.8795 1.00000\n20:AM-5:AM   -2.129032  -67.410 63.1521 1.00000\n1:PM-5:AM    14.264516  -44.125 72.6537 1.00000\n2:PM-5:AM    -2.058065  -60.447 56.3311 1.00000\n3:PM-5:AM     8.941935  -49.447 67.3311 1.00000\n4:PM-5:AM   -15.045161  -73.434 43.3440 1.00000\n5:PM-5:AM    -0.851613  -59.241 57.5376 1.00000\n6:PM-5:AM    -9.154839  -67.544 49.2344 1.00000\n7:PM-5:AM    -3.051613  -61.441 55.3376 1.00000\n8:PM-5:AM    -9.580645  -67.970 48.8086 1.00000\n9:PM-5:AM    -2.625806  -61.015 55.7634 1.00000\n10:PM-5:AM   -1.774194  -60.163 56.6150 1.00000\n11:PM-5:AM  -13.980645  -72.370 44.4086 1.00000\n12:PM-5:AM  -16.535484  -74.925 41.8537 1.00000\n13:PM-5:AM    2.696774  -55.692 61.0860 1.00000\n14:PM-5:AM  -12.632258  -71.021 45.7569 1.00000\n15:PM-5:AM   -5.535484  -63.925 52.8537 1.00000\n16:PM-5:AM  -18.309677  -76.699 40.0795 1.00000\n17:PM-5:AM  -25.903226  -84.292 32.4860 0.99867\n18:PM-5:AM  -12.348387  -70.738 46.0408 1.00000\n19:PM-5:AM  -24.412903  -82.802 33.9763 0.99957\n20:PM-5:AM    1.277419  -57.112 59.6666 1.00000\n7:AM-6:AM    -5.322581  -63.712 53.0666 1.00000\n8:AM-6:AM     5.322581  -53.067 63.7118 1.00000\n9:AM-6:AM    24.200000  -34.189 82.5892 0.99964\n10:AM-6:AM  -19.161290  -77.550 39.2279 1.00000\n11:AM-6:AM   22.141935  -36.247 80.5311 0.99994\n12:AM-6:AM  -19.800000  -78.189 38.5892 1.00000\n13:AM-6:AM   -5.180645  -63.570 53.2086 1.00000\n14:AM-6:AM  -19.941935  -78.331 38.4473 1.00000\n15:AM-6:AM  -27.322581  -85.712 31.0666 0.99660\n16:AM-6:AM   -8.870968  -67.260 49.5182 1.00000\n17:AM-6:AM   -4.187097  -62.576 54.2021 1.00000\n18:AM-6:AM   -7.309677  -65.699 51.0795 1.00000\n19:AM-6:AM    0.141935  -58.247 58.5311 1.00000\n20:AM-6:AM   -3.477419  -68.759 61.8037 1.00000\n1:PM-6:AM    12.916129  -45.473 71.3053 1.00000\n2:PM-6:AM    -3.406452  -61.796 54.9827 1.00000\n3:PM-6:AM     7.593548  -50.796 65.9827 1.00000\n4:PM-6:AM   -16.393548  -74.783 41.9956 1.00000\n5:PM-6:AM    -2.200000  -60.589 56.1892 1.00000\n6:PM-6:AM   -10.503226  -68.892 47.8860 1.00000\n7:PM-6:AM    -4.400000  -62.789 53.9892 1.00000\n8:PM-6:AM   -10.929032  -69.318 47.4602 1.00000\n9:PM-6:AM    -3.974194  -62.363 54.4150 1.00000\n10:PM-6:AM   -3.122581  -61.512 55.2666 1.00000\n11:PM-6:AM  -15.329032  -73.718 43.0602 1.00000\n12:PM-6:AM  -17.883871  -76.273 40.5053 1.00000\n13:PM-6:AM    1.348387  -57.041 59.7376 1.00000\n14:PM-6:AM  -13.980645  -72.370 44.4086 1.00000\n15:PM-6:AM   -6.883871  -65.273 51.5053 1.00000\n16:PM-6:AM  -19.658065  -78.047 38.7311 1.00000\n17:PM-6:AM  -27.251613  -85.641 31.1376 0.99674\n18:PM-6:AM  -13.696774  -72.086 44.6924 1.00000\n19:PM-6:AM  -25.761290  -84.150 32.6279 0.99880\n20:PM-6:AM   -0.070968  -58.460 58.3182 1.00000\n8:AM-7:AM    10.645161  -47.744 69.0344 1.00000\n9:AM-7:AM    29.522581  -28.867 87.9118 0.98840\n10:AM-7:AM  -13.838710  -72.228 44.5505 1.00000\n11:AM-7:AM   27.464516  -30.925 85.8537 0.99629\n12:AM-7:AM  -14.477419  -72.867 43.9118 1.00000\n13:AM-7:AM    0.141935  -58.247 58.5311 1.00000\n14:AM-7:AM  -14.619355  -73.009 43.7698 1.00000\n15:AM-7:AM  -22.000000  -80.389 36.3892 0.99995\n16:AM-7:AM   -3.548387  -61.938 54.8408 1.00000\n17:AM-7:AM    1.135484  -57.254 59.5247 1.00000\n18:AM-7:AM   -1.987097  -60.376 56.4021 1.00000\n19:AM-7:AM    5.464516  -52.925 63.8537 1.00000\n20:AM-7:AM    1.845161  -63.436 67.1263 1.00000\n1:PM-7:AM    18.238710  -40.150 76.6279 1.00000\n2:PM-7:AM     1.916129  -56.473 60.3053 1.00000\n3:PM-7:AM    12.916129  -45.473 71.3053 1.00000\n4:PM-7:AM   -11.070968  -69.460 47.3182 1.00000\n5:PM-7:AM     3.122581  -55.267 61.5118 1.00000\n6:PM-7:AM    -5.180645  -63.570 53.2086 1.00000\n7:PM-7:AM     0.922581  -57.467 59.3118 1.00000\n8:PM-7:AM    -5.606452  -63.996 52.7827 1.00000\n9:PM-7:AM     1.348387  -57.041 59.7376 1.00000\n10:PM-7:AM    2.200000  -56.189 60.5892 1.00000\n11:PM-7:AM  -10.006452  -68.396 48.3827 1.00000\n12:PM-7:AM  -12.561290  -70.950 45.8279 1.00000\n13:PM-7:AM    6.670968  -51.718 65.0602 1.00000\n14:PM-7:AM   -8.658065  -67.047 49.7311 1.00000\n15:PM-7:AM   -1.561290  -59.950 56.8279 1.00000\n16:PM-7:AM  -14.335484  -72.725 44.0537 1.00000\n17:PM-7:AM  -21.929032  -80.318 36.4602 0.99996\n18:PM-7:AM   -8.374194  -66.763 50.0150 1.00000\n19:PM-7:AM  -20.438710  -78.828 37.9505 0.99999\n20:PM-7:AM    5.251613  -53.138 63.6408 1.00000\n9:AM-8:AM    18.877419  -39.512 77.2666 1.00000\n10:AM-8:AM  -24.483871  -82.873 33.9053 0.99954\n11:AM-8:AM   16.819355  -41.570 75.2086 1.00000\n12:AM-8:AM  -25.122581  -83.512 33.2666 0.99925\n13:AM-8:AM  -10.503226  -68.892 47.8860 1.00000\n14:AM-8:AM  -25.264516  -83.654 33.1247 0.99916\n15:AM-8:AM  -32.645161  -91.034 25.7440 0.95531\n16:AM-8:AM  -14.193548  -72.583 44.1956 1.00000\n17:AM-8:AM   -9.509677  -67.899 48.8795 1.00000\n18:AM-8:AM  -12.632258  -71.021 45.7569 1.00000\n19:AM-8:AM   -5.180645  -63.570 53.2086 1.00000\n20:AM-8:AM   -8.800000  -74.081 56.4811 1.00000\n1:PM-8:AM     7.593548  -50.796 65.9827 1.00000\n2:PM-8:AM    -8.729032  -67.118 49.6602 1.00000\n3:PM-8:AM     2.270968  -56.118 60.6602 1.00000\n4:PM-8:AM   -21.716129  -80.105 36.6731 0.99996\n5:PM-8:AM    -7.522581  -65.912 50.8666 1.00000\n6:PM-8:AM   -15.825806  -74.215 42.5634 1.00000\n7:PM-8:AM    -9.722581  -68.112 48.6666 1.00000\n8:PM-8:AM   -16.251613  -74.641 42.1376 1.00000\n9:PM-8:AM    -9.296774  -67.686 49.0924 1.00000\n10:PM-8:AM   -8.445161  -66.834 49.9440 1.00000\n11:PM-8:AM  -20.651613  -79.041 37.7376 0.99999\n12:PM-8:AM  -23.206452  -81.596 35.1827 0.99985\n13:PM-8:AM   -3.974194  -62.363 54.4150 1.00000\n14:PM-8:AM  -19.303226  -77.692 39.0860 1.00000\n15:PM-8:AM  -12.206452  -70.596 46.1827 1.00000\n16:PM-8:AM  -24.980645  -83.370 33.4086 0.99933\n17:PM-8:AM  -32.574194  -90.963 25.8150 0.95647\n18:PM-8:AM  -19.019355  -77.409 39.3698 1.00000\n19:PM-8:AM  -31.083871  -89.473 27.3053 0.97602\n20:PM-8:AM   -5.393548  -63.783 52.9956 1.00000\n10:AM-9:AM  -43.361290 -101.750 15.0279 0.52759\n11:AM-9:AM   -2.058065  -60.447 56.3311 1.00000\n12:AM-9:AM  -44.000000 -102.389 14.3892 0.49403\n13:AM-9:AM  -29.380645  -87.770 29.0086 0.98920\n14:AM-9:AM  -44.141935 -102.531 14.2473 0.48663\n15:AM-9:AM  -51.522581 -109.912  6.8666 0.17781\n16:AM-9:AM  -33.070968  -91.460 25.3182 0.94789\n17:AM-9:AM  -28.387097  -86.776 30.0021 0.99364\n18:AM-9:AM  -31.509677  -89.899 26.8795 0.97131\n19:AM-9:AM  -24.058065  -82.447 34.3311 0.99968\n20:AM-9:AM  -27.677419  -92.959 37.6037 0.99943\n1:PM-9:AM   -11.283871  -69.673 47.1053 1.00000\n2:PM-9:AM   -27.606452  -85.996 30.7827 0.99595\n3:PM-9:AM   -16.606452  -74.996 41.7827 1.00000\n4:PM-9:AM   -40.593548  -98.983 17.7956 0.67322\n5:PM-9:AM   -26.400000  -84.789 31.9892 0.99812\n6:PM-9:AM   -34.703226  -93.092 23.6860 0.91136\n7:PM-9:AM   -28.600000  -86.989 29.7892 0.99284\n8:PM-9:AM   -35.129032  -93.518 23.2602 0.89961\n9:PM-9:AM   -28.174194  -86.563 30.2150 0.99436\n10:PM-9:AM  -27.322581  -85.712 31.0666 0.99660\n11:PM-9:AM  -39.529032  -97.918 18.8602 0.72631\n12:PM-9:AM  -42.083871 -100.473 16.3053 0.59536\n13:PM-9:AM  -22.851613  -81.241 35.5376 0.99989\n14:PM-9:AM  -38.180645  -96.570 20.2086 0.78850\n15:PM-9:AM  -31.083871  -89.473 27.3053 0.97602\n16:PM-9:AM  -43.858065 -102.247 14.5311 0.50145\n17:PM-9:AM  -51.451613 -109.841  6.9376 0.17988\n18:PM-9:AM  -37.896774  -96.286 20.4924 0.80070\n19:PM-9:AM  -49.961290 -108.350  8.4279 0.22767\n20:PM-9:AM  -24.270968  -82.660 34.1182 0.99962\n11:AM-10:AM  41.303226  -17.086 99.6924 0.63649\n12:AM-10:AM  -0.638710  -59.028 57.7505 1.00000\n13:AM-10:AM  13.980645  -44.409 72.3698 1.00000\n14:AM-10:AM  -0.780645  -59.170 57.6086 1.00000\n15:AM-10:AM  -8.161290  -66.550 50.2279 1.00000\n16:AM-10:AM  10.290323  -48.099 68.6795 1.00000\n17:AM-10:AM  14.974194  -43.415 73.3634 1.00000\n18:AM-10:AM  11.851613  -46.538 70.2408 1.00000\n19:AM-10:AM  19.303226  -39.086 77.6924 1.00000\n20:AM-10:AM  15.683871  -49.597 80.9650 1.00000\n1:PM-10:AM   32.077419  -26.312 90.4666 0.96397\n2:PM-10:AM   15.754839  -42.634 74.1440 1.00000\n3:PM-10:AM   26.754839  -31.634 85.1440 0.99763\n4:PM-10:AM    2.767742  -55.621 61.1569 1.00000\n5:PM-10:AM   16.961290  -41.428 75.3505 1.00000\n6:PM-10:AM    8.658065  -49.731 67.0473 1.00000\n7:PM-10:AM   14.761290  -43.628 73.1505 1.00000\n8:PM-10:AM    8.232258  -50.157 66.6215 1.00000\n9:PM-10:AM   15.187097  -43.202 73.5763 1.00000\n10:PM-10:AM  16.038710  -42.350 74.4279 1.00000\n11:PM-10:AM   3.832258  -54.557 62.2215 1.00000\n12:PM-10:AM   1.277419  -57.112 59.6666 1.00000\n13:PM-10:AM  20.509677  -37.880 78.8989 0.99999\n14:PM-10:AM   5.180645  -53.209 63.5698 1.00000\n15:PM-10:AM  12.277419  -46.112 70.6666 1.00000\n16:PM-10:AM  -0.496774  -58.886 57.8924 1.00000\n17:PM-10:AM  -8.090323  -66.480 50.2989 1.00000\n18:PM-10:AM   5.464516  -52.925 63.8537 1.00000\n19:PM-10:AM  -6.600000  -64.989 51.7892 1.00000\n20:PM-10:AM  19.090323  -39.299 77.4795 1.00000\n12:AM-11:AM -41.941935 -100.331 16.4473 0.60287\n13:AM-11:AM -27.322581  -85.712 31.0666 0.99660\n14:AM-11:AM -42.083871 -100.473 16.3053 0.59536\n15:AM-11:AM -49.464516 -107.854  8.9247 0.24541\n16:AM-11:AM -31.012903  -89.402 27.3763 0.97675\n17:AM-11:AM -26.329032  -84.718 32.0602 0.99821\n18:AM-11:AM -29.451613  -87.841 28.9376 0.98880\n19:AM-11:AM -22.000000  -80.389 36.3892 0.99995\n20:AM-11:AM -25.619355  -90.900 39.6618 0.99988\n1:PM-11:AM   -9.225806  -67.615 49.1634 1.00000\n2:PM-11:AM  -25.548387  -83.938 32.8408 0.99897\n3:PM-11:AM  -14.548387  -72.938 43.8408 1.00000\n4:PM-11:AM  -38.535484  -96.925 19.8537 0.77279\n5:PM-11:AM  -24.341935  -82.731 34.0473 0.99959\n6:PM-11:AM  -32.645161  -91.034 25.7440 0.95531\n7:PM-11:AM  -26.541935  -84.931 31.8473 0.99794\n8:PM-11:AM  -33.070968  -91.460 25.3182 0.94789\n9:PM-11:AM  -26.116129  -84.505 32.2731 0.99846\n10:PM-11:AM -25.264516  -83.654 33.1247 0.99916\n11:PM-11:AM -37.470968  -95.860 20.9182 0.81833\n12:PM-11:AM -40.025806  -98.415 18.3634 0.70190\n13:PM-11:AM -20.793548  -79.183 37.5956 0.99999\n14:PM-11:AM -36.122581  -94.512 22.2666 0.86852\n15:PM-11:AM -29.025806  -87.415 29.3634 0.99101\n16:PM-11:AM -41.800000 -100.189 16.5892 0.61038\n17:PM-11:AM -49.393548 -107.783  8.9956 0.24802\n18:PM-11:AM -35.838710  -94.228 22.5505 0.87792\n19:PM-11:AM -47.903226 -106.292 10.4860 0.30702\n20:PM-11:AM -22.212903  -80.602 36.1763 0.99994\n13:AM-12:AM  14.619355  -43.770 73.0086 1.00000\n14:AM-12:AM  -0.141935  -58.531 58.2473 1.00000\n15:AM-12:AM  -7.522581  -65.912 50.8666 1.00000\n16:AM-12:AM  10.929032  -47.460 69.3182 1.00000\n17:AM-12:AM  15.612903  -42.776 74.0021 1.00000\n18:AM-12:AM  12.490323  -45.899 70.8795 1.00000\n19:AM-12:AM  19.941935  -38.447 78.3311 1.00000\n20:AM-12:AM  16.322581  -48.959 81.6037 1.00000\n1:PM-12:AM   32.716129  -25.673 91.1053 0.95413\n2:PM-12:AM   16.393548  -41.996 74.7827 1.00000\n3:PM-12:AM   27.393548  -30.996 85.7827 0.99645\n4:PM-12:AM    3.406452  -54.983 61.7956 1.00000\n5:PM-12:AM   17.600000  -40.789 75.9892 1.00000\n6:PM-12:AM    9.296774  -49.092 67.6860 1.00000\n7:PM-12:AM   15.400000  -42.989 73.7892 1.00000\n8:PM-12:AM    8.870968  -49.518 67.2602 1.00000\n9:PM-12:AM   15.825806  -42.563 74.2150 1.00000\n10:PM-12:AM  16.677419  -41.712 75.0666 1.00000\n11:PM-12:AM   4.470968  -53.918 62.8602 1.00000\n12:PM-12:AM   1.916129  -56.473 60.3053 1.00000\n13:PM-12:AM  21.148387  -37.241 79.5376 0.99998\n14:PM-12:AM   5.819355  -52.570 64.2086 1.00000\n15:PM-12:AM  12.916129  -45.473 71.3053 1.00000\n16:PM-12:AM   0.141935  -58.247 58.5311 1.00000\n17:PM-12:AM  -7.451613  -65.841 50.9376 1.00000\n18:PM-12:AM   6.103226  -52.286 64.4924 1.00000\n19:PM-12:AM  -5.961290  -64.350 52.4279 1.00000\n20:PM-12:AM  19.729032  -38.660 78.1182 1.00000\n14:AM-13:AM -14.761290  -73.150 43.6279 1.00000\n15:AM-13:AM -22.141935  -80.531 36.2473 0.99994\n16:AM-13:AM  -3.690323  -62.080 54.6989 1.00000\n17:AM-13:AM   0.993548  -57.396 59.3827 1.00000\n18:AM-13:AM  -2.129032  -60.518 56.2602 1.00000\n19:AM-13:AM   5.322581  -53.067 63.7118 1.00000\n20:AM-13:AM   1.703226  -63.578 66.9843 1.00000\n1:PM-13:AM   18.096774  -40.292 76.4860 1.00000\n2:PM-13:AM    1.774194  -56.615 60.1634 1.00000\n3:PM-13:AM   12.774194  -45.615 71.1634 1.00000\n4:PM-13:AM  -11.212903  -69.602 47.1763 1.00000\n5:PM-13:AM    2.980645  -55.409 61.3698 1.00000\n6:PM-13:AM   -5.322581  -63.712 53.0666 1.00000\n7:PM-13:AM    0.780645  -57.609 59.1698 1.00000\n8:PM-13:AM   -5.748387  -64.138 52.6408 1.00000\n9:PM-13:AM    1.206452  -57.183 59.5956 1.00000\n10:PM-13:AM   2.058065  -56.331 60.4473 1.00000\n11:PM-13:AM -10.148387  -68.538 48.2408 1.00000\n12:PM-13:AM -12.703226  -71.092 45.6860 1.00000\n13:PM-13:AM   6.529032  -51.860 64.9182 1.00000\n14:PM-13:AM  -8.800000  -67.189 49.5892 1.00000\n15:PM-13:AM  -1.703226  -60.092 56.6860 1.00000\n16:PM-13:AM -14.477419  -72.867 43.9118 1.00000\n17:PM-13:AM -22.070968  -80.460 36.3182 0.99995\n18:PM-13:AM  -8.516129  -66.905 49.8731 1.00000\n19:PM-13:AM -20.580645  -78.970 37.8086 0.99999\n20:PM-13:AM   5.109677  -53.280 63.4989 1.00000\n15:AM-14:AM  -7.380645  -65.770 51.0086 1.00000\n16:AM-14:AM  11.070968  -47.318 69.4602 1.00000\n17:AM-14:AM  15.754839  -42.634 74.1440 1.00000\n18:AM-14:AM  12.632258  -45.757 71.0215 1.00000\n19:AM-14:AM  20.083871  -38.305 78.4731 0.99999\n20:AM-14:AM  16.464516  -48.817 81.7456 1.00000\n1:PM-14:AM   32.858065  -25.531 91.2473 0.95170\n2:PM-14:AM   16.535484  -41.854 74.9247 1.00000\n3:PM-14:AM   27.535484  -30.854 85.9247 0.99612\n4:PM-14:AM    3.548387  -54.841 61.9376 1.00000\n5:PM-14:AM   17.741935  -40.647 76.1311 1.00000\n6:PM-14:AM    9.438710  -48.950 67.8279 1.00000\n7:PM-14:AM   15.541935  -42.847 73.9311 1.00000\n8:PM-14:AM    9.012903  -49.376 67.4021 1.00000\n9:PM-14:AM   15.967742  -42.421 74.3569 1.00000\n10:PM-14:AM  16.819355  -41.570 75.2086 1.00000\n11:PM-14:AM   4.612903  -53.776 63.0021 1.00000\n12:PM-14:AM   2.058065  -56.331 60.4473 1.00000\n13:PM-14:AM  21.290323  -37.099 79.6795 0.99998\n14:PM-14:AM   5.961290  -52.428 64.3505 1.00000\n15:PM-14:AM  13.058065  -45.331 71.4473 1.00000\n16:PM-14:AM   0.283871  -58.105 58.6731 1.00000\n17:PM-14:AM  -7.309677  -65.699 51.0795 1.00000\n18:PM-14:AM   6.245161  -52.144 64.6344 1.00000\n19:PM-14:AM  -5.819355  -64.209 52.5698 1.00000\n20:PM-14:AM  19.870968  -38.518 78.2602 1.00000\n16:AM-15:AM  18.451613  -39.938 76.8408 1.00000\n17:AM-15:AM  23.135484  -35.254 81.5247 0.99986\n18:AM-15:AM  20.012903  -38.376 78.4021 0.99999\n19:AM-15:AM  27.464516  -30.925 85.8537 0.99629\n20:AM-15:AM  23.845161  -41.436 89.1263 0.99998\n1:PM-15:AM   40.238710  -18.150 98.6279 0.69123\n2:PM-15:AM   23.916129  -34.473 82.3053 0.99972\n3:PM-15:AM   34.916129  -23.473 93.3053 0.90560\n4:PM-15:AM   10.929032  -47.460 69.3182 1.00000\n5:PM-15:AM   25.122581  -33.267 83.5118 0.99925\n6:PM-15:AM   16.819355  -41.570 75.2086 1.00000\n7:PM-15:AM   22.922581  -35.467 81.3118 0.99988\n8:PM-15:AM   16.393548  -41.996 74.7827 1.00000\n9:PM-15:AM   23.348387  -35.041 81.7376 0.99983\n10:PM-15:AM  24.200000  -34.189 82.5892 0.99964\n11:PM-15:AM  11.993548  -46.396 70.3827 1.00000\n12:PM-15:AM   9.438710  -48.950 67.8279 1.00000\n13:PM-15:AM  28.670968  -29.718 87.0602 0.99256\n14:PM-15:AM  13.341935  -45.047 71.7311 1.00000\n15:PM-15:AM  20.438710  -37.950 78.8279 0.99999\n16:PM-15:AM   7.664516  -50.725 66.0537 1.00000\n17:PM-15:AM   0.070968  -58.318 58.4602 1.00000\n18:PM-15:AM  13.625806  -44.763 72.0150 1.00000\n19:PM-15:AM   1.561290  -56.828 59.9505 1.00000\n20:PM-15:AM  27.251613  -31.138 85.6408 0.99674\n17:AM-16:AM   4.683871  -53.705 63.0731 1.00000\n18:AM-16:AM   1.561290  -56.828 59.9505 1.00000\n19:AM-16:AM   9.012903  -49.376 67.4021 1.00000\n20:AM-16:AM   5.393548  -59.888 70.6747 1.00000\n1:PM-16:AM   21.787097  -36.602 80.1763 0.99996\n2:PM-16:AM    5.464516  -52.925 63.8537 1.00000\n3:PM-16:AM   16.464516  -41.925 74.8537 1.00000\n4:PM-16:AM   -7.522581  -65.912 50.8666 1.00000\n5:PM-16:AM    6.670968  -51.718 65.0602 1.00000\n6:PM-16:AM   -1.632258  -60.021 56.7569 1.00000\n7:PM-16:AM    4.470968  -53.918 62.8602 1.00000\n8:PM-16:AM   -2.058065  -60.447 56.3311 1.00000\n9:PM-16:AM    4.896774  -53.492 63.2860 1.00000\n10:PM-16:AM   5.748387  -52.641 64.1376 1.00000\n11:PM-16:AM  -6.458065  -64.847 51.9311 1.00000\n12:PM-16:AM  -9.012903  -67.402 49.3763 1.00000\n13:PM-16:AM  10.219355  -48.170 68.6086 1.00000\n14:PM-16:AM  -5.109677  -63.499 53.2795 1.00000\n15:PM-16:AM   1.987097  -56.402 60.3763 1.00000\n16:PM-16:AM -10.787097  -69.176 47.6021 1.00000\n17:PM-16:AM -18.380645  -76.770 40.0086 1.00000\n18:PM-16:AM  -4.825806  -63.215 53.5634 1.00000\n19:PM-16:AM -16.890323  -75.280 41.4989 1.00000\n20:PM-16:AM   8.800000  -49.589 67.1892 1.00000\n18:AM-17:AM  -3.122581  -61.512 55.2666 1.00000\n19:AM-17:AM   4.329032  -54.060 62.7182 1.00000\n20:AM-17:AM   0.709677  -64.571 65.9908 1.00000\n1:PM-17:AM   17.103226  -41.286 75.4924 1.00000\n2:PM-17:AM    0.780645  -57.609 59.1698 1.00000\n3:PM-17:AM   11.780645  -46.609 70.1698 1.00000\n4:PM-17:AM  -12.206452  -70.596 46.1827 1.00000\n5:PM-17:AM    1.987097  -56.402 60.3763 1.00000\n6:PM-17:AM   -6.316129  -64.705 52.0731 1.00000\n7:PM-17:AM   -0.212903  -58.602 58.1763 1.00000\n8:PM-17:AM   -6.741935  -65.131 51.6473 1.00000\n9:PM-17:AM    0.212903  -58.176 58.6021 1.00000\n10:PM-17:AM   1.064516  -57.325 59.4537 1.00000\n11:PM-17:AM -11.141935  -69.531 47.2473 1.00000\n12:PM-17:AM -13.696774  -72.086 44.6924 1.00000\n13:PM-17:AM   5.535484  -52.854 63.9247 1.00000\n14:PM-17:AM  -9.793548  -68.183 48.5956 1.00000\n15:PM-17:AM  -2.696774  -61.086 55.6924 1.00000\n16:PM-17:AM -15.470968  -73.860 42.9182 1.00000\n17:PM-17:AM -23.064516  -81.454 35.3247 0.99987\n18:PM-17:AM  -9.509677  -67.899 48.8795 1.00000\n19:PM-17:AM -21.574194  -79.963 36.8150 0.99997\n20:PM-17:AM   4.116129  -54.273 62.5053 1.00000\n19:AM-18:AM   7.451613  -50.938 65.8408 1.00000\n20:AM-18:AM   3.832258  -61.449 69.1134 1.00000\n1:PM-18:AM   20.225806  -38.163 78.6150 0.99999\n2:PM-18:AM    3.903226  -54.486 62.2924 1.00000\n3:PM-18:AM   14.903226  -43.486 73.2924 1.00000\n4:PM-18:AM   -9.083871  -67.473 49.3053 1.00000\n5:PM-18:AM    5.109677  -53.280 63.4989 1.00000\n6:PM-18:AM   -3.193548  -61.583 55.1956 1.00000\n7:PM-18:AM    2.909677  -55.480 61.2989 1.00000\n8:PM-18:AM   -3.619355  -62.009 54.7698 1.00000\n9:PM-18:AM    3.335484  -55.054 61.7247 1.00000\n10:PM-18:AM   4.187097  -54.202 62.5763 1.00000\n11:PM-18:AM  -8.019355  -66.409 50.3698 1.00000\n12:PM-18:AM -10.574194  -68.963 47.8150 1.00000\n13:PM-18:AM   8.658065  -49.731 67.0473 1.00000\n14:PM-18:AM  -6.670968  -65.060 51.7182 1.00000\n15:PM-18:AM   0.425806  -57.963 58.8150 1.00000\n16:PM-18:AM -12.348387  -70.738 46.0408 1.00000\n17:PM-18:AM -19.941935  -78.331 38.4473 1.00000\n18:PM-18:AM  -6.387097  -64.776 52.0021 1.00000\n19:PM-18:AM -18.451613  -76.841 39.9376 1.00000\n20:PM-18:AM   7.238710  -51.150 65.6279 1.00000\n20:AM-19:AM  -3.619355  -68.900 61.6618 1.00000\n1:PM-19:AM   12.774194  -45.615 71.1634 1.00000\n2:PM-19:AM   -3.548387  -61.938 54.8408 1.00000\n3:PM-19:AM    7.451613  -50.938 65.8408 1.00000\n4:PM-19:AM  -16.535484  -74.925 41.8537 1.00000\n5:PM-19:AM   -2.341935  -60.731 56.0473 1.00000\n6:PM-19:AM  -10.645161  -69.034 47.7440 1.00000\n7:PM-19:AM   -4.541935  -62.931 53.8473 1.00000\n8:PM-19:AM  -11.070968  -69.460 47.3182 1.00000\n9:PM-19:AM   -4.116129  -62.505 54.2731 1.00000\n10:PM-19:AM  -3.264516  -61.654 55.1247 1.00000\n11:PM-19:AM -15.470968  -73.860 42.9182 1.00000\n12:PM-19:AM -18.025806  -76.415 40.3634 1.00000\n13:PM-19:AM   1.206452  -57.183 59.5956 1.00000\n14:PM-19:AM -14.122581  -72.512 44.2666 1.00000\n15:PM-19:AM  -7.025806  -65.415 51.3634 1.00000\n16:PM-19:AM -19.800000  -78.189 38.5892 1.00000\n17:PM-19:AM -27.393548  -85.783 30.9956 0.99645\n18:PM-19:AM -13.838710  -72.228 44.5505 1.00000\n19:PM-19:AM -25.903226  -84.292 32.4860 0.99867\n20:PM-19:AM  -0.212903  -58.602 58.1763 1.00000\n1:PM-20:AM   16.393548  -48.888 81.6747 1.00000\n2:PM-20:AM    0.070968  -65.210 65.3521 1.00000\n3:PM-20:AM   11.070968  -54.210 76.3521 1.00000\n4:PM-20:AM  -12.916129  -78.197 52.3650 1.00000\n5:PM-20:AM    1.277419  -64.004 66.5585 1.00000\n6:PM-20:AM   -7.025806  -72.307 58.2553 1.00000\n7:PM-20:AM   -0.922581  -66.204 64.3585 1.00000\n8:PM-20:AM   -7.451613  -72.733 57.8295 1.00000\n9:PM-20:AM   -0.496774  -65.778 64.7843 1.00000\n10:PM-20:AM   0.354839  -64.926 65.6359 1.00000\n11:PM-20:AM -11.851613  -77.133 53.4295 1.00000\n12:PM-20:AM -14.406452  -79.688 50.8747 1.00000\n13:PM-20:AM   4.825806  -60.455 70.1069 1.00000\n14:PM-20:AM -10.503226  -75.784 54.7779 1.00000\n15:PM-20:AM  -3.406452  -68.688 61.8747 1.00000\n16:PM-20:AM -16.180645  -81.462 49.1005 1.00000\n17:PM-20:AM -23.774194  -89.055 41.5069 0.99998\n18:PM-20:AM -10.219355  -75.500 55.0618 1.00000\n19:PM-20:AM -22.283871  -87.565 42.9972 1.00000\n20:PM-20:AM   3.406452  -61.875 68.6876 1.00000\n2:PM-1:PM   -16.322581  -74.712 42.0666 1.00000\n3:PM-1:PM    -5.322581  -63.712 53.0666 1.00000\n4:PM-1:PM   -29.309677  -87.699 29.0795 0.98958\n5:PM-1:PM   -15.116129  -73.505 43.2731 1.00000\n6:PM-1:PM   -23.419355  -81.809 34.9698 0.99982\n7:PM-1:PM   -17.316129  -75.705 41.0731 1.00000\n8:PM-1:PM   -23.845161  -82.234 34.5440 0.99973\n9:PM-1:PM   -16.890323  -75.280 41.4989 1.00000\n10:PM-1:PM  -16.038710  -74.428 42.3505 1.00000\n11:PM-1:PM  -28.245161  -86.634 30.1440 0.99413\n12:PM-1:PM  -30.800000  -89.189 27.5892 0.97882\n13:PM-1:PM  -11.567742  -69.957 46.8215 1.00000\n14:PM-1:PM  -26.896774  -85.286 31.4924 0.99740\n15:PM-1:PM  -19.800000  -78.189 38.5892 1.00000\n16:PM-1:PM  -32.574194  -90.963 25.8150 0.95647\n17:PM-1:PM  -40.167742  -98.557 18.2215 0.69480\n18:PM-1:PM  -26.612903  -85.002 31.7763 0.99784\n19:PM-1:PM  -38.677419  -97.067 19.7118 0.76637\n20:PM-1:PM  -12.987097  -71.376 45.4021 1.00000\n3:PM-2:PM    11.000000  -47.389 69.3892 1.00000\n4:PM-2:PM   -12.987097  -71.376 45.4021 1.00000\n5:PM-2:PM     1.206452  -57.183 59.5956 1.00000\n6:PM-2:PM    -7.096774  -65.486 51.2924 1.00000\n7:PM-2:PM    -0.993548  -59.383 57.3956 1.00000\n8:PM-2:PM    -7.522581  -65.912 50.8666 1.00000\n9:PM-2:PM    -0.567742  -58.957 57.8215 1.00000\n10:PM-2:PM    0.283871  -58.105 58.6731 1.00000\n11:PM-2:PM  -11.922581  -70.312 46.4666 1.00000\n12:PM-2:PM  -14.477419  -72.867 43.9118 1.00000\n13:PM-2:PM    4.754839  -53.634 63.1440 1.00000\n14:PM-2:PM  -10.574194  -68.963 47.8150 1.00000\n15:PM-2:PM   -3.477419  -61.867 54.9118 1.00000\n16:PM-2:PM  -16.251613  -74.641 42.1376 1.00000\n17:PM-2:PM  -23.845161  -82.234 34.5440 0.99973\n18:PM-2:PM  -10.290323  -68.680 48.0989 1.00000\n19:PM-2:PM  -22.354839  -80.744 36.0344 0.99993\n20:PM-2:PM    3.335484  -55.054 61.7247 1.00000\n4:PM-3:PM   -23.987097  -82.376 34.4021 0.99970\n5:PM-3:PM    -9.793548  -68.183 48.5956 1.00000\n6:PM-3:PM   -18.096774  -76.486 40.2924 1.00000\n7:PM-3:PM   -11.993548  -70.383 46.3956 1.00000\n8:PM-3:PM   -18.522581  -76.912 39.8666 1.00000\n9:PM-3:PM   -11.567742  -69.957 46.8215 1.00000\n10:PM-3:PM  -10.716129  -69.105 47.6731 1.00000\n11:PM-3:PM  -22.922581  -81.312 35.4666 0.99988\n12:PM-3:PM  -25.477419  -83.867 32.9118 0.99902\n13:PM-3:PM   -6.245161  -64.634 52.1440 1.00000\n14:PM-3:PM  -21.574194  -79.963 36.8150 0.99997\n15:PM-3:PM  -14.477419  -72.867 43.9118 1.00000\n16:PM-3:PM  -27.251613  -85.641 31.1376 0.99674\n17:PM-3:PM  -34.845161  -93.234 23.5440 0.90755\n18:PM-3:PM  -21.290323  -79.680 37.0989 0.99998\n19:PM-3:PM  -33.354839  -91.744 25.0344 0.94247\n20:PM-3:PM   -7.664516  -66.054 50.7247 1.00000\n5:PM-4:PM    14.193548  -44.196 72.5827 1.00000\n6:PM-4:PM     5.890323  -52.499 64.2795 1.00000\n7:PM-4:PM    11.993548  -46.396 70.3827 1.00000\n8:PM-4:PM     5.464516  -52.925 63.8537 1.00000\n9:PM-4:PM    12.419355  -45.970 70.8086 1.00000\n10:PM-4:PM   13.270968  -45.118 71.6602 1.00000\n11:PM-4:PM    1.064516  -57.325 59.4537 1.00000\n12:PM-4:PM   -1.490323  -59.880 56.8989 1.00000\n13:PM-4:PM   17.741935  -40.647 76.1311 1.00000\n14:PM-4:PM    2.412903  -55.976 60.8021 1.00000\n15:PM-4:PM    9.509677  -48.880 67.8989 1.00000\n16:PM-4:PM   -3.264516  -61.654 55.1247 1.00000\n17:PM-4:PM  -10.858065  -69.247 47.5311 1.00000\n18:PM-4:PM    2.696774  -55.692 61.0860 1.00000\n19:PM-4:PM   -9.367742  -67.757 49.0215 1.00000\n20:PM-4:PM   16.322581  -42.067 74.7118 1.00000\n6:PM-5:PM    -8.303226  -66.692 50.0860 1.00000\n7:PM-5:PM    -2.200000  -60.589 56.1892 1.00000\n8:PM-5:PM    -8.729032  -67.118 49.6602 1.00000\n9:PM-5:PM    -1.774194  -60.163 56.6150 1.00000\n10:PM-5:PM   -0.922581  -59.312 57.4666 1.00000\n11:PM-5:PM  -13.129032  -71.518 45.2602 1.00000\n12:PM-5:PM  -15.683871  -74.073 42.7053 1.00000\n13:PM-5:PM    3.548387  -54.841 61.9376 1.00000\n14:PM-5:PM  -11.780645  -70.170 46.6086 1.00000\n15:PM-5:PM   -4.683871  -63.073 53.7053 1.00000\n16:PM-5:PM  -17.458065  -75.847 40.9311 1.00000\n17:PM-5:PM  -25.051613  -83.441 33.3376 0.99929\n18:PM-5:PM  -11.496774  -69.886 46.8924 1.00000\n19:PM-5:PM  -23.561290  -81.950 34.8279 0.99979\n20:PM-5:PM    2.129032  -56.260 60.5182 1.00000\n7:PM-6:PM     6.103226  -52.286 64.4924 1.00000\n8:PM-6:PM    -0.425806  -58.815 57.9634 1.00000\n9:PM-6:PM     6.529032  -51.860 64.9182 1.00000\n10:PM-6:PM    7.380645  -51.009 65.7698 1.00000\n11:PM-6:PM   -4.825806  -63.215 53.5634 1.00000\n12:PM-6:PM   -7.380645  -65.770 51.0086 1.00000\n13:PM-6:PM   11.851613  -46.538 70.2408 1.00000\n14:PM-6:PM   -3.477419  -61.867 54.9118 1.00000\n15:PM-6:PM    3.619355  -54.770 62.0086 1.00000\n16:PM-6:PM   -9.154839  -67.544 49.2344 1.00000\n17:PM-6:PM  -16.748387  -75.138 41.6408 1.00000\n18:PM-6:PM   -3.193548  -61.583 55.1956 1.00000\n19:PM-6:PM  -15.258065  -73.647 43.1311 1.00000\n20:PM-6:PM   10.432258  -47.957 68.8215 1.00000\n8:PM-7:PM    -6.529032  -64.918 51.8602 1.00000\n9:PM-7:PM     0.425806  -57.963 58.8150 1.00000\n10:PM-7:PM    1.277419  -57.112 59.6666 1.00000\n11:PM-7:PM  -10.929032  -69.318 47.4602 1.00000\n12:PM-7:PM  -13.483871  -71.873 44.9053 1.00000\n13:PM-7:PM    5.748387  -52.641 64.1376 1.00000\n14:PM-7:PM   -9.580645  -67.970 48.8086 1.00000\n15:PM-7:PM   -2.483871  -60.873 55.9053 1.00000\n16:PM-7:PM  -15.258065  -73.647 43.1311 1.00000\n17:PM-7:PM  -22.851613  -81.241 35.5376 0.99989\n18:PM-7:PM   -9.296774  -67.686 49.0924 1.00000\n19:PM-7:PM  -21.361290  -79.750 37.0279 0.99998\n20:PM-7:PM    4.329032  -54.060 62.7182 1.00000\n9:PM-8:PM     6.954839  -51.434 65.3440 1.00000\n10:PM-8:PM    7.806452  -50.583 66.1956 1.00000\n11:PM-8:PM   -4.400000  -62.789 53.9892 1.00000\n12:PM-8:PM   -6.954839  -65.344 51.4344 1.00000\n13:PM-8:PM   12.277419  -46.112 70.6666 1.00000\n14:PM-8:PM   -3.051613  -61.441 55.3376 1.00000\n15:PM-8:PM    4.045161  -54.344 62.4344 1.00000\n16:PM-8:PM   -8.729032  -67.118 49.6602 1.00000\n17:PM-8:PM  -16.322581  -74.712 42.0666 1.00000\n18:PM-8:PM   -2.767742  -61.157 55.6215 1.00000\n19:PM-8:PM  -14.832258  -73.221 43.5569 1.00000\n20:PM-8:PM   10.858065  -47.531 69.2473 1.00000\n10:PM-9:PM    0.851613  -57.538 59.2408 1.00000\n11:PM-9:PM  -11.354839  -69.744 47.0344 1.00000\n12:PM-9:PM  -13.909677  -72.299 44.4795 1.00000\n13:PM-9:PM    5.322581  -53.067 63.7118 1.00000\n14:PM-9:PM  -10.006452  -68.396 48.3827 1.00000\n15:PM-9:PM   -2.909677  -61.299 55.4795 1.00000\n16:PM-9:PM  -15.683871  -74.073 42.7053 1.00000\n17:PM-9:PM  -23.277419  -81.667 35.1118 0.99984\n18:PM-9:PM   -9.722581  -68.112 48.6666 1.00000\n19:PM-9:PM  -21.787097  -80.176 36.6021 0.99996\n20:PM-9:PM    3.903226  -54.486 62.2924 1.00000\n11:PM-10:PM -12.206452  -70.596 46.1827 1.00000\n12:PM-10:PM -14.761290  -73.150 43.6279 1.00000\n13:PM-10:PM   4.470968  -53.918 62.8602 1.00000\n14:PM-10:PM -10.858065  -69.247 47.5311 1.00000\n15:PM-10:PM  -3.761290  -62.150 54.6279 1.00000\n16:PM-10:PM -16.535484  -74.925 41.8537 1.00000\n17:PM-10:PM -24.129032  -82.518 34.2602 0.99966\n18:PM-10:PM -10.574194  -68.963 47.8150 1.00000\n19:PM-10:PM -22.638710  -81.028 35.7505 0.99991\n20:PM-10:PM   3.051613  -55.338 61.4408 1.00000\n12:PM-11:PM  -2.554839  -60.944 55.8344 1.00000\n13:PM-11:PM  16.677419  -41.712 75.0666 1.00000\n14:PM-11:PM   1.348387  -57.041 59.7376 1.00000\n15:PM-11:PM   8.445161  -49.944 66.8344 1.00000\n16:PM-11:PM  -4.329032  -62.718 54.0602 1.00000\n17:PM-11:PM -11.922581  -70.312 46.4666 1.00000\n18:PM-11:PM   1.632258  -56.757 60.0215 1.00000\n19:PM-11:PM -10.432258  -68.821 47.9569 1.00000\n20:PM-11:PM  15.258065  -43.131 73.6473 1.00000\n13:PM-12:PM  19.232258  -39.157 77.6215 1.00000\n14:PM-12:PM   3.903226  -54.486 62.2924 1.00000\n15:PM-12:PM  11.000000  -47.389 69.3892 1.00000\n16:PM-12:PM  -1.774194  -60.163 56.6150 1.00000\n17:PM-12:PM  -9.367742  -67.757 49.0215 1.00000\n18:PM-12:PM   4.187097  -54.202 62.5763 1.00000\n19:PM-12:PM  -7.877419  -66.267 50.5118 1.00000\n20:PM-12:PM  17.812903  -40.576 76.2021 1.00000\n14:PM-13:PM -15.329032  -73.718 43.0602 1.00000\n15:PM-13:PM  -8.232258  -66.621 50.1569 1.00000\n16:PM-13:PM -21.006452  -79.396 37.3827 0.99998\n17:PM-13:PM -28.600000  -86.989 29.7892 0.99284\n18:PM-13:PM -15.045161  -73.434 43.3440 1.00000\n19:PM-13:PM -27.109677  -85.499 31.2795 0.99702\n20:PM-13:PM  -1.419355  -59.809 56.9698 1.00000\n15:PM-14:PM   7.096774  -51.292 65.4860 1.00000\n16:PM-14:PM  -5.677419  -64.067 52.7118 1.00000\n17:PM-14:PM -13.270968  -71.660 45.1182 1.00000\n18:PM-14:PM   0.283871  -58.105 58.6731 1.00000\n19:PM-14:PM -11.780645  -70.170 46.6086 1.00000\n20:PM-14:PM  13.909677  -44.480 72.2989 1.00000\n16:PM-15:PM -12.774194  -71.163 45.6150 1.00000\n17:PM-15:PM -20.367742  -78.757 38.0215 0.99999\n18:PM-15:PM  -6.812903  -65.202 51.5763 1.00000\n19:PM-15:PM -18.877419  -77.267 39.5118 1.00000\n20:PM-15:PM   6.812903  -51.576 65.2021 1.00000\n17:PM-16:PM  -7.593548  -65.983 50.7956 1.00000\n18:PM-16:PM   5.961290  -52.428 64.3505 1.00000\n19:PM-16:PM  -6.103226  -64.492 52.2860 1.00000\n20:PM-16:PM  19.587097  -38.802 77.9763 1.00000\n18:PM-17:PM  13.554839  -44.834 71.9440 1.00000\n19:PM-17:PM   1.490323  -56.899 59.8795 1.00000\n20:PM-17:PM  27.180645  -31.209 85.5698 0.99689\n19:PM-18:PM -12.064516  -70.454 46.3247 1.00000\n20:PM-18:PM  13.625806  -44.763 72.0150 1.00000\n20:PM-19:PM  25.690323  -32.699 84.0795 0.99886\n\n\n  Tukey multiple comparisons of means\n    99% family-wise confidence level\n\nFit: aov(formula = response ~ Day + noon + Day:noon, data = data)\n\n$Day\n            diff     lwr    upr   p adj\n2-1    -6.138710 -48.905 36.628 1.00000\n3-1    -4.080645 -46.847 38.686 1.00000\n4-1   -14.300000 -57.066 28.466 0.99700\n5-1    -3.335484 -46.102 39.431 1.00000\n6-1    -6.812903 -49.579 35.953 1.00000\n7-1    -6.422581 -49.189 36.344 1.00000\n8-1    -4.364516 -47.131 38.402 1.00000\n9-1     8.551613 -34.215 51.318 1.00000\n10-1  -12.703226 -55.470 30.063 0.99934\n11-1    1.845161 -40.921 44.611 1.00000\n12-1  -20.403226 -63.170 22.363 0.89330\n13-1   -3.477419 -46.244 39.289 1.00000\n14-1  -18.522581 -61.289 24.244 0.95243\n15-1  -18.664516 -61.431 24.102 0.94905\n16-1  -15.825806 -58.592 26.941 0.99024\n17-1  -17.280645 -60.047 25.486 0.97539\n18-1  -12.064516 -54.831 30.702 0.99968\n19-1  -14.370968 -57.137 28.395 0.99682\n20-1   -2.994839 -47.849 41.859 1.00000\n3-2     2.058065 -40.708 44.824 1.00000\n4-2    -8.161290 -50.928 34.605 1.00000\n5-2     2.803226 -39.963 45.570 1.00000\n6-2    -0.674194 -43.441 42.092 1.00000\n7-2    -0.283871 -43.050 42.482 1.00000\n8-2     1.774194 -40.992 44.541 1.00000\n9-2    14.690323 -28.076 57.457 0.99585\n10-2   -6.564516 -49.331 36.202 1.00000\n11-2    7.983871 -34.782 50.750 1.00000\n12-2  -14.264516 -57.031 28.502 0.99709\n13-2    2.661290 -40.105 45.428 1.00000\n14-2  -12.383871 -55.150 30.382 0.99953\n15-2  -12.525806 -55.292 30.241 0.99946\n16-2   -9.687097 -52.453 33.079 0.99999\n17-2  -11.141935 -53.908 31.624 0.99990\n18-2   -5.925806 -48.692 36.841 1.00000\n19-2   -8.232258 -50.999 34.534 1.00000\n20-2    3.143871 -41.710 47.998 1.00000\n4-3   -10.219355 -52.986 32.547 0.99997\n5-3     0.745161 -42.021 43.511 1.00000\n6-3    -2.732258 -45.499 40.034 1.00000\n7-3    -2.341935 -45.108 40.424 1.00000\n8-3    -0.283871 -43.050 42.482 1.00000\n9-3    12.632258 -30.134 55.399 0.99939\n10-3   -8.622581 -51.389 34.144 1.00000\n11-3    5.925806 -36.841 48.692 1.00000\n12-3  -16.322581 -59.089 26.444 0.98634\n13-3    0.603226 -42.163 43.370 1.00000\n14-3  -14.441935 -57.208 28.324 0.99662\n15-3  -14.583871 -57.350 28.182 0.99620\n16-3  -11.745161 -54.511 31.021 0.99978\n17-3  -13.200000 -55.966 29.566 0.99891\n18-3   -7.983871 -50.750 34.782 1.00000\n19-3  -10.290323 -53.057 32.476 0.99997\n20-3    1.085806 -43.768 45.939 1.00000\n5-4    10.964516 -31.802 53.731 0.99992\n6-4     7.487097 -35.279 50.253 1.00000\n7-4     7.877419 -34.889 50.644 1.00000\n8-4     9.935484 -32.831 52.702 0.99998\n9-4    22.851613 -19.915 65.618 0.76824\n10-4    1.596774 -41.170 44.363 1.00000\n11-4   16.145161 -26.621 58.911 0.98785\n12-4   -6.103226 -48.870 36.663 1.00000\n13-4   10.822581 -31.944 53.589 0.99993\n14-4   -4.222581 -46.989 38.544 1.00000\n15-4   -4.364516 -47.131 38.402 1.00000\n16-4   -1.525806 -44.292 41.241 1.00000\n17-4   -2.980645 -45.747 39.786 1.00000\n18-4    2.235484 -40.531 45.002 1.00000\n19-4   -0.070968 -42.837 42.695 1.00000\n20-4   11.305161 -33.549 56.159 0.99994\n6-5    -3.477419 -46.244 39.289 1.00000\n7-5    -3.087097 -45.853 39.679 1.00000\n8-5    -1.029032 -43.795 41.737 1.00000\n9-5    11.887097 -30.879 54.653 0.99974\n10-5   -9.367742 -52.134 33.399 0.99999\n11-5    5.180645 -37.586 47.947 1.00000\n12-5  -17.067742 -59.834 25.699 0.97827\n13-5   -0.141935 -42.908 42.624 1.00000\n14-5  -15.187097 -57.953 27.579 0.99387\n15-5  -15.329032 -58.095 27.437 0.99318\n16-5  -12.490323 -55.257 30.276 0.99948\n17-5  -13.945161 -56.711 28.821 0.99780\n18-5   -8.729032 -51.495 34.037 1.00000\n19-5  -11.035484 -53.802 31.731 0.99991\n20-5    0.340645 -44.513 45.194 1.00000\n7-6     0.390323 -42.376 43.157 1.00000\n8-6     2.448387 -40.318 45.215 1.00000\n9-6    15.364516 -27.402 58.131 0.99300\n10-6   -5.890323 -48.657 36.876 1.00000\n11-6    8.658065 -34.108 51.424 1.00000\n12-6  -13.590323 -56.357 29.176 0.99841\n13-6    3.335484 -39.431 46.102 1.00000\n14-6  -11.709677 -54.476 31.057 0.99979\n15-6  -11.851613 -54.618 30.915 0.99975\n16-6   -9.012903 -51.779 33.753 1.00000\n17-6  -10.467742 -53.234 32.299 0.99996\n18-6   -5.251613 -48.018 37.515 1.00000\n19-6   -7.558065 -50.324 35.208 1.00000\n20-6    3.818065 -41.036 48.672 1.00000\n8-7     2.058065 -40.708 44.824 1.00000\n9-7    14.974194 -27.792 57.741 0.99480\n10-7   -6.280645 -49.047 36.486 1.00000\n11-7    8.267742 -34.499 51.034 1.00000\n12-7  -13.980645 -56.747 28.786 0.99773\n13-7    2.945161 -39.821 45.711 1.00000\n14-7  -12.100000 -54.866 30.666 0.99966\n15-7  -12.241935 -55.008 30.524 0.99960\n16-7   -9.403226 -52.170 33.363 0.99999\n17-7  -10.858065 -53.624 31.908 0.99993\n18-7   -5.641935 -48.408 37.124 1.00000\n19-7   -7.948387 -50.715 34.818 1.00000\n20-7    3.427742 -41.426 48.281 1.00000\n9-8    12.916129 -29.850 55.682 0.99918\n10-8   -8.338710 -51.105 34.428 1.00000\n11-8    6.209677 -36.557 48.976 1.00000\n12-8  -16.038710 -58.805 26.728 0.98869\n13-8    0.887097 -41.879 43.653 1.00000\n14-8  -14.158065 -56.924 28.608 0.99735\n15-8  -14.300000 -57.066 28.466 0.99700\n16-8  -11.461290 -54.228 31.305 0.99984\n17-8  -12.916129 -55.682 29.850 0.99918\n18-8   -7.700000 -50.466 35.066 1.00000\n19-8  -10.006452 -52.773 32.760 0.99998\n20-8    1.369677 -43.484 46.223 1.00000\n10-9  -21.254839 -64.021 21.511 0.85576\n11-9   -6.706452 -49.473 36.060 1.00000\n12-9  -28.954839 -71.721 13.811 0.35269\n13-9  -12.029032 -54.795 30.737 0.99969\n14-9  -27.074194 -69.841 15.692 0.47719\n15-9  -27.216129 -69.982 15.550 0.46731\n16-9  -24.377419 -67.144 18.389 0.66832\n17-9  -25.832258 -68.599 16.934 0.56535\n18-9  -20.616129 -63.382 22.150 0.88455\n19-9  -22.922581 -65.689 19.844 0.76389\n20-9  -11.546452 -56.400 33.307 0.99991\n11-10  14.548387 -28.218 57.315 0.99631\n12-10  -7.700000 -50.466 35.066 1.00000\n13-10   9.225806 -33.541 51.992 0.99999\n14-10  -5.819355 -48.586 36.947 1.00000\n15-10  -5.961290 -48.728 36.805 1.00000\n16-10  -3.122581 -45.889 39.644 1.00000\n17-10  -4.577419 -47.344 38.189 1.00000\n18-10   0.638710 -42.128 43.405 1.00000\n19-10  -1.667742 -44.434 41.099 1.00000\n20-10   9.708387 -35.145 54.562 0.99999\n12-11 -22.248387 -65.015 20.518 0.80373\n13-11  -5.322581 -48.089 37.444 1.00000\n14-11 -20.367742 -63.134 22.399 0.89472\n15-11 -20.509677 -63.276 22.257 0.88898\n16-11 -17.670968 -60.437 25.095 0.96936\n17-11 -19.125806 -61.892 23.641 0.93692\n18-11 -13.909677 -56.676 28.857 0.99787\n19-11 -16.216129 -58.982 26.550 0.98726\n20-11  -4.840000 -49.694 40.014 1.00000\n13-12  16.925806 -25.841 59.692 0.98004\n14-12   1.880645 -40.886 44.647 1.00000\n15-12   1.738710 -41.028 44.505 1.00000\n16-12   4.577419 -38.189 47.344 1.00000\n17-12   3.122581 -39.644 45.889 1.00000\n18-12   8.338710 -34.428 51.105 1.00000\n19-12   6.032258 -36.734 48.799 1.00000\n20-12  17.408387 -27.445 62.262 0.98369\n14-13 -15.045161 -57.811 27.721 0.99450\n15-13 -15.187097 -57.953 27.579 0.99387\n16-13 -12.348387 -55.115 30.418 0.99955\n17-13 -13.803226 -56.570 28.963 0.99807\n18-13  -8.587097 -51.353 34.179 1.00000\n19-13 -10.893548 -53.660 31.873 0.99992\n20-13   0.482581 -44.371 45.336 1.00000\n15-14  -0.141935 -42.908 42.624 1.00000\n16-14   2.696774 -40.070 45.463 1.00000\n17-14   1.241935 -41.524 44.008 1.00000\n18-14   6.458065 -36.308 49.224 1.00000\n19-14   4.151613 -38.615 46.918 1.00000\n20-14  15.527742 -29.326 60.381 0.99545\n16-15   2.838710 -39.928 45.605 1.00000\n17-15   1.383871 -41.382 44.150 1.00000\n18-15   6.600000 -36.166 49.366 1.00000\n19-15   4.293548 -38.473 47.060 1.00000\n20-15  15.669677 -29.184 60.523 0.99493\n17-16  -1.454839 -44.221 41.311 1.00000\n18-16   3.761290 -39.005 46.528 1.00000\n19-16   1.454839 -41.311 44.221 1.00000\n20-16  12.830968 -32.023 57.685 0.99961\n18-17   5.216129 -37.550 47.982 1.00000\n19-17   2.909677 -39.857 45.676 1.00000\n20-17  14.285806 -30.568 59.139 0.99837\n19-18  -2.306452 -45.073 40.460 1.00000\n20-18   9.069677 -35.784 53.923 1.00000\n20-19  11.376129 -33.478 56.230 0.99993\n\n\n유의한 패턴 없음 Tukey 검정 결과 (보통 유의할때 함) 테이블 도 유의한 수치가 없음"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html",
    "href": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html",
    "title": "ANCOVA",
    "section": "",
    "text": "(Draft, 바쁘니까 일단 대충이라도 적어놓음 ㅠ)"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#description",
    "href": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#description",
    "title": "ANCOVA",
    "section": "1 Description",
    "text": "1 Description\nANCOVA (Analysis of Covariance, ANCOVA)\n\nANOVA에 공변량 (covariate)을 추가하여 분석 수행\n공변량을 조정하여 독립변수의 순수한 영향을 검정\n공변량: 연속형 변수로 한정"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#example",
    "href": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#example",
    "title": "ANCOVA",
    "section": "2 Example",
    "text": "2 Example\n\n2.1 Load Libraries and Data\n\n\nCode\nlibrary(tidyverse)\nlibrary(faraway)\nlibrary(markdown)\nlibrary(effects)\nlibrary(HH)\nlibrary(psych)\n\n\n\n\n2.2 Data Description\n\n\nCode\nstr(sexab)\n\n\n'data.frame':   76 obs. of  3 variables:\n $ cpa : num  2.048 0.839 -0.241 -1.115 2.015 ...\n $ ptsd: num  9.71 6.17 15.16 11.31 9.95 ...\n $ csa : Factor w/ 2 levels \"Abused\",\"NotAbused\": 1 1 1 1 1 1 1 1 1 1 ...\n\n\nR console에 ?sexab를 입력하면 다음과 같은 설명이 나온다.\nPost traumatic stress disorder in abused adult females\nThe data for this example come from a study of the effects of childhood sexual abuse on adult females. 45 women being treated at a clinic, who reported childhood sexual abuse, were measured for post traumatic stress disorder and childhood physical abuse both on standardized scales. 31 women also being treated at the same clinic, who did not report childhood sexual abuse were also measured. The full study was more complex than reported here and so readers interested in the subject matter should refer to the original article.\n즉, 요약하면 아동기에 성폭력을 겸험한 성인들의 정신 건강을 측정한 데이터로서, 아동기의 성폭력 경험과 학대 경험이 성인기의 정신건강에 유의한 영향을 미치는지에 대한 실험을 한 것이다.\n이 data는 3개의 변수와 76개의 samples을 포함한다.\n\ncpa : Childhood physical abuse on standard scale, covariate\nptsd : post-traumatic stress disorder on standard scale, response variable\ncsa : Childhood sexual abuse - abused or not abused, independent variable\n\n친절하게 response variable, independent variable 및 covariate을 규명해놓았다."
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html",
    "href": "docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html",
    "title": "MANOVA",
    "section": "",
    "text": "Code\nlibrary(heplots)\n#skulls 고대 이집트 왕조 부터 로마시대까지 이집트 지역에서 발군된 두개골의 크기를 측정한 데이터\n# 이집트 역사를 5개의 시대로 구분하고 각 시대별로 30개씩의 두개골을 4개의 지표로 측정\n# epoch: 이집트의 시대를 5개로 구분, 독립변수\n# mb : 두개골의 폭, 종속 변수\n# bh : 두개골의 높이, 종속 변수\n# bl : 두개골의 길이, 종속 변수\n# nh : 코의 높이, 종속 변수\n\nlibrary(dplyr)\nsample_n(Skulls,10)\n\n\n      epoch  mb  bh  bl nh\n36  c3300BC 135 136  98 52\n127  cAD150 136 138  97 58\n96   c200BC 131 135  90 50\n43  c3300BC 131 136  99 56\n115  c200BC 133 128  92 51\n35  c3300BC 126 124  95 45\n17  c4000BC 135 137 103 50\n142  cAD150 131 129  97 44\n32  c3300BC 133 134  97 48\n28  c4000BC 127 129 106 48\n\n\nCode\nattach(Skulls)# Skulls를 작업 경로에 포함시키기\nsearch() # 작업 경로 확인인\n\n\n [1] \".GlobalEnv\"        \"Skulls\"            \"package:dplyr\"    \n [4] \"package:heplots\"   \"package:broom\"     \"package:car\"      \n [7] \"package:carData\"   \"tools:quarto\"      \"tools:quarto\"     \n[10] \"package:stats\"     \"package:graphics\"  \"package:grDevices\"\n[13] \"package:utils\"     \"package:datasets\"  \"package:methods\"  \n[16] \"Autoloads\"         \"package:base\"     \n\n\nCode\n# 종속 변수를 결합시켜 하나의 행렬로 만들기\ny<-cbind(mb,bh,bl,nh)\n# 시대별 두개골  길이의 평균 보기\naggregate(y,by=list(epoch),mean) # 언뜻 보기에 차이가 있는 것 처럼 보임\n\n\n  Group.1       mb       bh       bl       nh\n1 c4000BC 131.3667 133.6000 99.16667 50.53333\n2 c3300BC 132.3667 132.7000 99.06667 50.23333\n3 c1850BC 134.4667 133.8000 96.03333 50.56667\n4  c200BC 135.5000 132.3000 94.53333 51.96667\n5  cAD150 136.1667 130.3333 93.50000 51.36667\n\n\nCode\n# 모집단으로 일반화하기 위해 통계적 검정 시행\nskulls_manova<-manova(y~epoch)\nsummary(skulls_manova)\n\n\n           Df  Pillai approx F num Df den Df    Pr(>F)    \nepoch       4 0.35331    3.512     16    580 4.675e-06 ***\nResiduals 145                                             \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\n# 시대별 두개골 측정값이 차이가 있는 것으로 보임\n\n# 구체적으로 어느 두개 골 측정값에서 차이가 나는지 확인\nsummary.aov(skulls_manova)\n\n\n Response mb :\n             Df  Sum Sq Mean Sq F value    Pr(>F)    \nepoch         4  502.83 125.707  5.9546 0.0001826 ***\nResiduals   145 3061.07  21.111                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n Response bh :\n             Df Sum Sq Mean Sq F value  Pr(>F)  \nepoch         4  229.9  57.477  2.4474 0.04897 *\nResiduals   145 3405.3  23.485                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n Response bl :\n             Df Sum Sq Mean Sq F value    Pr(>F)    \nepoch         4  803.3 200.823  8.3057 4.636e-06 ***\nResiduals   145 3506.0  24.179                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n Response nh :\n             Df Sum Sq Mean Sq F value Pr(>F)\nepoch         4   61.2  15.300   1.507 0.2032\nResiduals   145 1472.1  10.153               \n\n\nCode\n# nh는 차이가 없는 것으로 보임\n\n## 시간에 따라 두개골 측정이 다르다는 것은 이민족 유입의 혼혈 가능성이 있음\n\ndetach(Skulls)# 작업경로에서 삭제제"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html#시간에-따라-두개골-측정이-다르다는-것은-이민족-유입의-혼혈-가능성이-있음",
    "href": "docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html#시간에-따라-두개골-측정이-다르다는-것은-이민족-유입의-혼혈-가능성이-있음",
    "title": "MANOVA",
    "section": "1.1 시간에 따라 두개골 측정이 다르다는 것은 이민족 유입의 혼혈 가능성이 있음",
    "text": "1.1 시간에 따라 두개골 측정이 다르다는 것은 이민족 유입의 혼혈 가능성이 있음\ndetach(Skulls)# 작업경로에서 삭제제\n`"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#eda",
    "href": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#eda",
    "title": "ANCOVA",
    "section": "3 EDA",
    "text": "3 EDA\n\n3.1 Descriptive Statistics\n\n\nCode\ntemp<-describeBy(ptsd~csa,data=sexab)\ntemp<-rbind('abused'=temp$Abused,'notAbused'=temp$NotAbused)%>%\nas.data.frame()\ntemp%>%knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvars\nn\nmean\nsd\nmedian\ntrimmed\nmad\nmin\nmax\nrange\nskew\nkurtosis\nse\n\n\n\n\nabused\n1\n45\n11.941093\n3.440151\n11.31277\n11.883422\n3.857355\n5.98491\n18.99251\n13.00760\n0.1556159\n-0.9124483\n0.5128275\n\n\nnotAbused\n1\n31\n4.695874\n3.519743\n5.79447\n4.903441\n1.978841\n-3.34921\n10.91447\n14.26368\n-0.6589170\n-0.2008051\n0.6321645\n\n\n\n\n\n위의 요약된 기술 통계량들 중 표준 편차는 유사하지만 평균 ptsd가 약 7.245219의 차이를 보여준다. 아래의 histogram역시 성폭력을 경험한 그룹과 경험하지 않은 그룹간의 PTSD 수치가 다른것을 볼 수 있다.\n\n\nCode\nggplot(data=sexab,aes(x=ptsd,color=csa,fill=csa))+\ngeom_histogram(aes(y=..density..),position=\"identity\",fill='white')+\ngeom_density(alpha=0.5)+\nlabs(title=\"Histogram, PTSD Grouped by Childhood Sexual Abuse Experience\", x=\"PTSD\", y=\"Desnsity\")\n\n\n\n\n\n\n\n3.2 One-Way ANOVA\n성폭력 경험 유무에 따른 PTSD 평균 차이가 통계적으로 유의한지 확인하기 위해 ANOVA를 수행한다.\n\n\nCode\nsexab_aov<-aov(ptsd~csa, data=sexab)\nsummary(sexab_aov)\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncsa          1  963.5   963.5    79.9 2.17e-13 ***\nResiduals   74  892.4    12.1                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n집단간 변수 csa p value가 <0.05 인 것을 확인할 수 있다. csa는 5% 유의수준에서 유의하다.\n하지만 PTSD의 변동량은 아동 학대에 의해 설명될 수도 있기 때문에 ptsd의 평균은 csa뿐만 아니라 cpa에 또한 고려되어야한다.\n\n\nCode\nggplot(data=sexab,aes(x=cpa,y=ptsd))+geom_point()+geom_smooth(method=\"lm\")+\nlabs(title=\"Scatter Plot, PTSD vs CPA\", x=\"CPA\", y=\"PTSD\")\n\n\n\n\n\nCode\ncorrelation<-cor.test(sexab$cpa,sexab$ptsd, method='pearson')\n\n\n그림과 같이 CPA가 증가하면서 PTSD또한 선형적으로 증가하는 패턴을 관찰할 수 있다. 두 변수간의 상관계수 = 0.49이고 p value= 6.2715909^{-6}으로 보아 두 변수 사이에 선형적인 상관관계가 있는 것으로 보인다.\n\n\nCode\nggplot(data=sexab,aes(x=cpa,y=ptsd))+geom_point()+geom_smooth(method=\"lm\")+\nfacet_wrap(.~csa)+\nlabs(title=\"Scatter Plot, PTSD vs CPA Grouped By CSA\", x=\"CPA\", y=\"PTSD\")\n\n\n\n\n\n아동기 성폭력 경험 유/무에도 PTSD와 CPA와 선형적인 관계가 있는 것으로 보이기 때문에 CSA의 PTSD로의 효과를 검정하기 위해선 CPA를 조정할 필요가 있는것으로 보인다.\n\n\nCode\n# ptsd로의 순수한 성폭력 경험의 영향도를 얻기 위해서는 아동기 신체적 학대(공변량)에 대해서 고려를 해줘야함\n\nsexab_aov<-aov(ptsd~cpa+csa, data=sexab) \nsummary(sexab_aov)\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncpa          1  449.8   449.8   41.98 9.46e-09 ***\ncsa          1  624.0   624.0   58.25 6.91e-11 ***\nResiduals   73  782.1    10.7                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n아동기의 신체적 학대가 일정하다는 가정하에서 PTSD와 성폭력의 순수한 관계는 5% 유의수준에서 유의하고 공변량, CPA를 조정하기전과 그 유의성이 차이가 있음을 관찰할 수 있다.\n\n\nCode\n# CPA가 제거 된 후에 CSA의 순수한 효과를 알아보기\n\nancova(ptsd~cpa+csa, data=sexab) \n\n\nAnalysis of Variance Table\n\nResponse: ptsd\n          Df Sum Sq Mean Sq F value    Pr(>F)    \ncpa        1 449.80  449.80  41.984 9.462e-09 ***\ncsa        1 624.03  624.03  58.247 6.907e-11 ***\nResiduals 73 782.08   10.71                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n두 csa집단에서 두 회귀선의 기울기 같고 절편이 다르게 나타나는 것을 관찰 할 수있다. 기울기가 같은 이유는 cpa가 ptsd에 영향을 미치는 정도가 두집단에서 일정하도록 공변량으로서 통제 했기 때문이다."
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html",
    "href": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html",
    "title": "Repeated Meausres ANOVA",
    "section": "",
    "text": "(Draft, 바쁘니까 일단 대충이라도 적어놓음 ㅠ)"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html#description",
    "href": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html#description",
    "title": "Repeated Meausres ANOVA",
    "section": "1 Description",
    "text": "1 Description\nRepeated Meausres ANOVA (반복 측정 분산 분석)\n\n동일한 대상에 대해 여러 번 반복측정하여 반복측정(3번 이상) 집단 간에 차이가 존재하는지 검정\n\n대응 표본 검정은 동일한 대상에 2번 반복 측정함 2개의 대응표본에 대한 검정\n\n이 때, 반복 측정 기간은 집단 내 요인이라 부르고 이를 반복측정 일원분산분석-집단내요인이라고 부름\n반복측정 기간외에 대상을 구분하는 집단 변수가 포함되면 반복측정 이원분산분석- 집단내요인 & 집단간 요인"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html#example",
    "href": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html#example",
    "title": "Repeated Meausres ANOVA",
    "section": "2 Example",
    "text": "2 Example\n\n\nCode\nstr(CO2)\n\n\nClasses 'nfnGroupedData', 'nfGroupedData', 'groupedData' and 'data.frame':  84 obs. of  5 variables:\n $ Plant    : Ord.factor w/ 12 levels \"Qn1\"<\"Qn2\"<\"Qn3\"<..: 1 1 1 1 1 1 1 2 2 2 ...\n $ Type     : Factor w/ 2 levels \"Quebec\",\"Mississippi\": 1 1 1 1 1 1 1 1 1 1 ...\n $ Treatment: Factor w/ 2 levels \"nonchilled\",\"chilled\": 1 1 1 1 1 1 1 1 1 1 ...\n $ conc     : num  95 175 250 350 500 675 1000 95 175 250 ...\n $ uptake   : num  16 30.4 34.8 37.2 35.3 39.2 39.7 13.6 27.3 37.1 ...\n - attr(*, \"formula\")=Class 'formula'  language uptake ~ conc | Plant\n  .. ..- attr(*, \".Environment\")=<environment: R_EmptyEnv> \n - attr(*, \"outer\")=Class 'formula'  language ~Treatment * Type\n  .. ..- attr(*, \".Environment\")=<environment: R_EmptyEnv> \n - attr(*, \"labels\")=List of 2\n  ..$ x: chr \"Ambient carbon dioxide concentration\"\n  ..$ y: chr \"CO2 uptake rate\"\n - attr(*, \"units\")=List of 2\n  ..$ x: chr \"(uL/L)\"\n  ..$ y: chr \"(umol/m^2 s)\"\n\n\nCode\nnames(CO2)\n\n\n[1] \"Plant\"     \"Type\"      \"Treatment\" \"conc\"      \"uptake\"   \n\n\nR console에 ?CO2를 입력하면 다음과 같은 설명이 나온다.\nThe CO2 data frame has 84 rows and 5 columns of data from an experiment on the cold tolerance of the grass species Echinochloa crus-galli.The \\(CO_2\\) uptake of six plants from Quebec and six plants from Mississippi was measured at several levels of ambient \\(CO_2\\) concentration. Half the plants of each type were chilled overnight before the experiment was conducted.\n즉, 식물이 저온의 환경에서 견디는 정도를 실험한 데이터로 퀘벡 지역의 6개의 나무와 미시시피 지역의 6개 나무의 이산화 탄소 흡수율을 7개의 서로 다른 이산화 탄소 농도 하에서 반복적으로 측정했다.\n\n2.1 Goals\n분석의 편의를 위해 저온 처리된 나무에 한정하여 분석\n\n두 지역간의 CO2흡수율의 차이를 검정\n7개의 서로 다른 이산화탄소 농도에 따라서 이산화 탄소의 흡수율 차이를 검정\n나무의 출신 지역과 이산화 탄소 흡수율 간의 관계가 이산화탄소 농도에 따라 달라지는 지도 검정\n\n\n\n2.2 Data Description\n\nPlant: plant id\nType: 나무의 출신 지역, 2개의 범주, 집단간 요인\nTreatment: 퀘벡 지역 나무와 미시시피 지역 나무dp 각 각 절반씩 실험 전에 저온 처리 했음, 저온 처리 여부가 treatment 변수에 저장됨\nconc: co2농도, 7개의 범주, 집단 내 요인\nuptake: 종속 변수, 이산화 탄소 흡수율\n\n\n\n2.3 Load Libraries and Data\n\n\nCode\nlibrary(tidyverse)\nlibrary(faraway)\nlibrary(markdown)\nlibrary(effects)\nlibrary(HH)\nlibrary(psych)\n\n\n\n\n2.4 EDA\n\n\nCode\ndata=CO2%>%\nfilter(Treatment=='chilled')%>%\nmutate(conc=factor(conc),\ntype=factor(conc))\n\n\n\n\n2.5 Descriptive Statistics\n\n\nCode\ndata%>%\ngroup_by(Type)%>%\nsummarise(count=n(),\nmean_uptake=mean(uptake),\nsd_uptake=sd(uptake)\n)%>%knitr::kable()\n\n\n\n\n\nType\ncount\nmean_uptake\nsd_uptake\n\n\n\n\nQuebec\n21\n31.75238\n9.644823\n\n\nMississippi\n21\n15.81429\n4.058976\n\n\n\n\n\n두 지역의 분산과 평균 흡수율이 차이가 남\n\n\nCode\ndata%>%\ngroup_by(conc)%>%\nsummarise(count=n(),\nmean_uptake=mean(uptake),\nsd_uptake=sd(uptake)\n)%>%knitr::kable()\n\n\n\n\n\nconc\ncount\nmean_uptake\nsd_uptake\n\n\n\n\n95\n6\n11.23333\n2.860536\n\n\n175\n6\n19.45000\n5.886510\n\n\n250\n6\n25.28333\n10.569090\n\n\n350\n6\n26.20000\n10.831251\n\n\n500\n6\n26.65000\n11.445479\n\n\n675\n6\n27.88333\n10.958361\n\n\n1000\n6\n29.78333\n12.410547\n\n\n\n\n\n농도에 따라서 평균 흡수율과 분산이 약간 차이가 나는 것 같음. 다만, 고농도가 될수록 변화량이 줄어드는 것으로 보임\n\n\nCode\ndata%>%\ngroup_by(Type,conc)%>%\nsummarise(count=n(),\nmean_uptake=mean(uptake),\nsd_uptake=sd(uptake)\n)%>%knitr::kable()\n\n\n\n\n\nType\nconc\ncount\nmean_uptake\nsd_uptake\n\n\n\n\nQuebec\n95\n3\n12.86667\n3.121431\n\n\nQuebec\n175\n3\n24.13333\n3.150132\n\n\nQuebec\n250\n3\n34.46667\n3.927255\n\n\nQuebec\n350\n3\n35.80000\n2.615339\n\n\nQuebec\n500\n3\n36.66667\n3.611556\n\n\nQuebec\n675\n3\n37.50000\n2.100000\n\n\nQuebec\n1000\n3\n40.83333\n1.913984\n\n\nMississippi\n95\n3\n9.60000\n1.646208\n\n\nMississippi\n175\n3\n14.76667\n3.302020\n\n\nMississippi\n250\n3\n16.10000\n3.292416\n\n\nMississippi\n350\n3\n16.60000\n3.157531\n\n\nMississippi\n500\n3\n16.63333\n3.667879\n\n\nMississippi\n675\n3\n18.26667\n4.285246\n\n\nMississippi\n1000\n3\n18.73333\n3.883727\n\n\n\n\n\n농도가 증가함에 따라 지역간 평균 흡수율의 차이가 커지는 것을 관찰할 수 있음\n\n\nCode\nboxplot(uptake~Type*conc,data=data,col=c(\"darkblue\",\"darkred\"),\n        las=2,cex.axis=0.7,xlab=\"\",ylab=\"Carbon Dioxide Uptake Rate\",\n        main=\"Effects of Plant Ype and CO2 on Carbon Dioxide Uptake\")\nlegend(\"topleft\",inset=0.025, legend=c(\"Quebec\",\"Mississippi\"),\n       fill=c(\"darkblue\",\"darkred\"))\n\n\n\n\n\n\n\n2.6 One-Wway ANOVA\n반복 측정 일원분산분석: y~W+Error(subject) where W= a within grouping variable, subject= a sample identifier\n\n\nCode\naov(uptake~Type+Error(Plant),data=data)%>%summary()\n\n\n\nError: Plant\n          Df Sum Sq Mean Sq F value  Pr(>F)   \nType       1 2667.2  2667.2   60.41 0.00148 **\nResiduals  4  176.6    44.1                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: Within\n          Df Sum Sq Mean Sq F value Pr(>F)\nResiduals 36   2013   55.93               \n\n\nCode\naov(uptake~conc+Error(Plant),data=data)%>%summary()\n\n\n\nError: Plant\n          Df Sum Sq Mean Sq F value Pr(>F)\nResiduals  5   2844   568.8               \n\nError: Within\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nconc       6   1472  245.40   13.61 2.09e-07 ***\nResiduals 30    541   18.03                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n지역간 농도간 평균 흡수율이 차이가 5% 유의수준에서 유의하다.\n\n\n2.7 Two-Wway ANOVA\n반복측정 이원분산 분석: y~B*W+Error(subject/W) where W= within grouping variable, B =Between Group Variable, and subject= a sample identifier\n\n\nCode\naov(uptake~Type*conc+Error(Plant/conc),data=data)%>%summary()\n\n\n\nError: Plant\n          Df Sum Sq Mean Sq F value  Pr(>F)   \nType       1 2667.2  2667.2   60.41 0.00148 **\nResiduals  4  176.6    44.1                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: Plant:conc\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nconc       6 1472.4  245.40   52.52 1.26e-12 ***\nType:conc  6  428.8   71.47   15.30 3.75e-07 ***\nResiduals 24  112.1    4.67                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n지역간 농도간 집단간에서 흡수율 차이가 유의한것으로 나타나고 둘의 상호작용 또한 5% 유의수준에서 유의하다."
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html#blog-guide-map-link",
    "href": "docs/blog/posts/statistics/2023-01-27_rmANOVA/index.html#blog-guide-map-link",
    "title": "Repeated Meausres ANOVA",
    "section": "3 Blog Guide Map Link",
    "text": "3 Blog Guide Map Link\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/DL/guide_map/index.html",
    "href": "docs/blog/posts/DL/guide_map/index.html",
    "title": "Blog Guide Map, Statistics",
    "section": "",
    "text": "(Draft)"
  },
  {
    "objectID": "docs/blog/posts/DL/guide_map/index.html#basic",
    "href": "docs/blog/posts/DL/guide_map/index.html#basic",
    "title": "Blog Guide Map, Statistics",
    "section": "Basic",
    "text": "Basic\n\n1111-11-11, Probability\n1111-11-11, Random Variable\n1111-11-11, Probability Distribution\n1111-11-11, Discrete Random Variable\n1111-11-11, Continuous Random Variable\n1111-11-11, Normal Distribution\n1111-11-11, Dependent Variable and Independent Variable\n1111-11-11, Joint Distribution and Marginal Distribution\n1111-11-11, Conditional Probability\n1111-11-11, Bayes’ Theorem\n1111-11-11, Expected Value vs Realizaed Value\n1111-11-11, Variance\n1111-11-11, Covariance and Correlation\n1111-11-11, Estimation\n1111-11-11, Maximum Likelihood Estimation (MLE)\n1111-11-11, Variance and Bias\n1111-11-11, Exponential Family Distributions\n\n1111-11-11, Bernoulli Distribution\n1111-11-11, Binomial Distribution\n1111-11-11, Poisson Distribution\n1111-11-11, Normal Distribution\n1111-11-11, Exponential Distribution\n1111-11-11, Beta Distribution\n1111-11-11, Chi-squared Distribution\n1111-11-11, Geometric Distribution\n1111-11-11, Hypergeometric Distribution\n1111-11-11,"
  },
  {
    "objectID": "docs/blog/posts/DL/guide_map/index.html#inferencce",
    "href": "docs/blog/posts/DL/guide_map/index.html#inferencce",
    "title": "Blog Guide Map, Statistics",
    "section": "Inferencce",
    "text": "Inferencce\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n2023-01-27, ANCOVA\n2023-01-27, repeated measures ANOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA"
  },
  {
    "objectID": "docs/blog/posts/DL/guide_map/index.html#regression",
    "href": "docs/blog/posts/DL/guide_map/index.html#regression",
    "title": "Blog Guide Map, Statistics",
    "section": "Regression",
    "text": "Regression\n\n1111-11-11, Least Square and Simple Linear Regression\n1111-11-11, Multiple Linear Regression\n\n\nGeneralized Linear Models\n\n1111-11-11, Logistic Regression\n1111-11-11, Multinomial Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n\n\n\nMixed Models\n\n1111-11-11, Linear Mixed Models"
  },
  {
    "objectID": "docs/blog/posts/DL/guide_map/index.html#generalized-additive-models",
    "href": "docs/blog/posts/DL/guide_map/index.html#generalized-additive-models",
    "title": "Blog Guide Map, Statistics",
    "section": "Generalized Additive Models",
    "text": "Generalized Additive Models"
  },
  {
    "objectID": "docs/blog/posts/DL/guide_map/index.html#survival-analysis",
    "href": "docs/blog/posts/DL/guide_map/index.html#survival-analysis",
    "title": "Blog Guide Map, Statistics",
    "section": "Survival Analysis",
    "text": "Survival Analysis\n\n1111-11-11, Cox-Hazard Model"
  },
  {
    "objectID": "docs/blog/posts/Mathmatics/guide_map/index.html",
    "href": "docs/blog/posts/Mathmatics/guide_map/index.html",
    "title": "Blog Guide Map, Statistics",
    "section": "",
    "text": "(Draft)"
  },
  {
    "objectID": "docs/blog/posts/Mathmatics/guide_map/index.html#basic",
    "href": "docs/blog/posts/Mathmatics/guide_map/index.html#basic",
    "title": "Blog Guide Map, Statistics",
    "section": "Basic",
    "text": "Basic\n\n1111-11-11, Probability\n1111-11-11, Random Variable\n1111-11-11, Probability Distribution\n1111-11-11, Discrete Random Variable\n1111-11-11, Continuous Random Variable\n1111-11-11, Normal Distribution\n1111-11-11, Dependent Variable and Independent Variable\n1111-11-11, Joint Distribution and Marginal Distribution\n1111-11-11, Conditional Probability\n1111-11-11, Bayes’ Theorem\n1111-11-11, Expected Value vs Realizaed Value\n1111-11-11, Variance\n1111-11-11, Covariance and Correlation\n1111-11-11, Estimation\n1111-11-11, Maximum Likelihood Estimation (MLE)\n1111-11-11, Variance and Bias\n1111-11-11, Exponential Family Distributions\n\n1111-11-11, Bernoulli Distribution\n1111-11-11, Binomial Distribution\n1111-11-11, Poisson Distribution\n1111-11-11, Normal Distribution\n1111-11-11, Exponential Distribution\n1111-11-11, Beta Distribution\n1111-11-11, Chi-squared Distribution\n1111-11-11, Geometric Distribution\n1111-11-11, Hypergeometric Distribution\n1111-11-11,"
  },
  {
    "objectID": "docs/blog/posts/Mathmatics/guide_map/index.html#inferencce",
    "href": "docs/blog/posts/Mathmatics/guide_map/index.html#inferencce",
    "title": "Blog Guide Map, Statistics",
    "section": "Inferencce",
    "text": "Inferencce\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n2023-01-27, ANCOVA\n2023-01-27, repeated measures ANOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA"
  },
  {
    "objectID": "docs/blog/posts/Mathmatics/guide_map/index.html#regression",
    "href": "docs/blog/posts/Mathmatics/guide_map/index.html#regression",
    "title": "Blog Guide Map, Statistics",
    "section": "Regression",
    "text": "Regression\n\n1111-11-11, Least Square and Simple Linear Regression\n1111-11-11, Multiple Linear Regression\n\n\nGeneralized Linear Models\n\n1111-11-11, Logistic Regression\n1111-11-11, Multinomial Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n\n\n\nMixed Models\n\n1111-11-11, Linear Mixed Models"
  },
  {
    "objectID": "docs/blog/posts/Mathmatics/guide_map/index.html#generalized-additive-models",
    "href": "docs/blog/posts/Mathmatics/guide_map/index.html#generalized-additive-models",
    "title": "Blog Guide Map, Statistics",
    "section": "Generalized Additive Models",
    "text": "Generalized Additive Models"
  },
  {
    "objectID": "docs/blog/posts/Mathmatics/guide_map/index.html#survival-analysis",
    "href": "docs/blog/posts/Mathmatics/guide_map/index.html#survival-analysis",
    "title": "Blog Guide Map, Statistics",
    "section": "Survival Analysis",
    "text": "Survival Analysis\n\n1111-11-11, Cox-Hazard Model"
  },
  {
    "objectID": "docs/blog/posts/ML/guide_map/index.html",
    "href": "docs/blog/posts/ML/guide_map/index.html",
    "title": "Blog Guide Map, Statistics",
    "section": "",
    "text": "(Draft)"
  },
  {
    "objectID": "docs/blog/posts/ML/guide_map/index.html#basic",
    "href": "docs/blog/posts/ML/guide_map/index.html#basic",
    "title": "Blog Guide Map, Statistics",
    "section": "Basic",
    "text": "Basic\n\n1111-11-11, Probability\n1111-11-11, Random Variable\n1111-11-11, Probability Distribution\n1111-11-11, Discrete Random Variable\n1111-11-11, Continuous Random Variable\n1111-11-11, Normal Distribution\n1111-11-11, Dependent Variable and Independent Variable\n1111-11-11, Joint Distribution and Marginal Distribution\n1111-11-11, Conditional Probability\n1111-11-11, Bayes’ Theorem\n1111-11-11, Expected Value vs Realizaed Value\n1111-11-11, Variance\n1111-11-11, Covariance and Correlation\n1111-11-11, Estimation\n1111-11-11, Maximum Likelihood Estimation (MLE)\n1111-11-11, Variance and Bias\n1111-11-11, Exponential Family Distributions\n\n1111-11-11, Bernoulli Distribution\n1111-11-11, Binomial Distribution\n1111-11-11, Poisson Distribution\n1111-11-11, Normal Distribution\n1111-11-11, Exponential Distribution\n1111-11-11, Beta Distribution\n1111-11-11, Chi-squared Distribution\n1111-11-11, Geometric Distribution\n1111-11-11, Hypergeometric Distribution\n1111-11-11,"
  },
  {
    "objectID": "docs/blog/posts/ML/guide_map/index.html#inferencce",
    "href": "docs/blog/posts/ML/guide_map/index.html#inferencce",
    "title": "Blog Guide Map, Statistics",
    "section": "Inferencce",
    "text": "Inferencce\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n2023-01-27, ANCOVA\n2023-01-27, repeated measures ANOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA"
  },
  {
    "objectID": "docs/blog/posts/ML/guide_map/index.html#regression",
    "href": "docs/blog/posts/ML/guide_map/index.html#regression",
    "title": "Blog Guide Map, Statistics",
    "section": "Regression",
    "text": "Regression\n\n1111-11-11, Least Square and Simple Linear Regression\n1111-11-11, Multiple Linear Regression\n\n\nGeneralized Linear Models\n\n1111-11-11, Logistic Regression\n1111-11-11, Multinomial Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n\n\n\nMixed Models\n\n1111-11-11, Linear Mixed Models"
  },
  {
    "objectID": "docs/blog/posts/ML/guide_map/index.html#generalized-additive-models",
    "href": "docs/blog/posts/ML/guide_map/index.html#generalized-additive-models",
    "title": "Blog Guide Map, Statistics",
    "section": "Generalized Additive Models",
    "text": "Generalized Additive Models"
  },
  {
    "objectID": "docs/blog/posts/ML/guide_map/index.html#survival-analysis",
    "href": "docs/blog/posts/ML/guide_map/index.html#survival-analysis",
    "title": "Blog Guide Map, Statistics",
    "section": "Survival Analysis",
    "text": "Survival Analysis\n\n1111-11-11, Cox-Hazard Model"
  },
  {
    "objectID": "docs/blog/posts/Patent/guide_map/index.html",
    "href": "docs/blog/posts/Patent/guide_map/index.html",
    "title": "Blog Guide Map, Statistics",
    "section": "",
    "text": "(Draft)"
  },
  {
    "objectID": "docs/blog/posts/Patent/guide_map/index.html#basic",
    "href": "docs/blog/posts/Patent/guide_map/index.html#basic",
    "title": "Blog Guide Map, Statistics",
    "section": "Basic",
    "text": "Basic\n\n1111-11-11, Probability\n1111-11-11, Random Variable\n1111-11-11, Probability Distribution\n1111-11-11, Discrete Random Variable\n1111-11-11, Continuous Random Variable\n1111-11-11, Normal Distribution\n1111-11-11, Dependent Variable and Independent Variable\n1111-11-11, Joint Distribution and Marginal Distribution\n1111-11-11, Conditional Probability\n1111-11-11, Bayes’ Theorem\n1111-11-11, Expected Value vs Realizaed Value\n1111-11-11, Variance\n1111-11-11, Covariance and Correlation\n1111-11-11, Estimation\n1111-11-11, Maximum Likelihood Estimation (MLE)\n1111-11-11, Variance and Bias\n1111-11-11, Exponential Family Distributions\n\n1111-11-11, Bernoulli Distribution\n1111-11-11, Binomial Distribution\n1111-11-11, Poisson Distribution\n1111-11-11, Normal Distribution\n1111-11-11, Exponential Distribution\n1111-11-11, Beta Distribution\n1111-11-11, Chi-squared Distribution\n1111-11-11, Geometric Distribution\n1111-11-11, Hypergeometric Distribution\n1111-11-11,"
  },
  {
    "objectID": "docs/blog/posts/Patent/guide_map/index.html#inferencce",
    "href": "docs/blog/posts/Patent/guide_map/index.html#inferencce",
    "title": "Blog Guide Map, Statistics",
    "section": "Inferencce",
    "text": "Inferencce\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n2023-01-27, ANCOVA\n2023-01-27, repeated measures ANOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA"
  },
  {
    "objectID": "docs/blog/posts/Patent/guide_map/index.html#regression",
    "href": "docs/blog/posts/Patent/guide_map/index.html#regression",
    "title": "Blog Guide Map, Statistics",
    "section": "Regression",
    "text": "Regression\n\n1111-11-11, Least Square and Simple Linear Regression\n1111-11-11, Multiple Linear Regression\n\n\nGeneralized Linear Models\n\n1111-11-11, Logistic Regression\n1111-11-11, Multinomial Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n1111-11-11, Poisson Regression\n\n\n\nMixed Models\n\n1111-11-11, Linear Mixed Models"
  },
  {
    "objectID": "docs/blog/posts/Patent/guide_map/index.html#generalized-additive-models",
    "href": "docs/blog/posts/Patent/guide_map/index.html#generalized-additive-models",
    "title": "Blog Guide Map, Statistics",
    "section": "Generalized Additive Models",
    "text": "Generalized Additive Models"
  },
  {
    "objectID": "docs/blog/posts/Patent/guide_map/index.html#survival-analysis",
    "href": "docs/blog/posts/Patent/guide_map/index.html#survival-analysis",
    "title": "Blog Guide Map, Statistics",
    "section": "Survival Analysis",
    "text": "Survival Analysis\n\n1111-11-11, Cox-Hazard Model"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html",
    "href": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html",
    "title": "MANOVA",
    "section": "",
    "text": "다변량 분산분석(Multivariate Analysis of Variance, MANOVA)\n\n2개 이상의 종속변수가 있을 경우 집단별 차이를 동시에 검정\n연구의 타당성 증가"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#blog-guide-map-link",
    "href": "docs/blog/posts/statistics/2023-01-27_ANCOVA/index.html#blog-guide-map-link",
    "title": "ANCOVA",
    "section": "4 Blog Guide Map Link",
    "text": "4 Blog Guide Map Link\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html#example",
    "href": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html#example",
    "title": "MANOVA",
    "section": "2 Example",
    "text": "2 Example\n\n2.1 Load Libraries and Data\n\n\nCode\nlibrary(tidyverse)\nlibrary(faraway)\nlibrary(markdown)\nlibrary(heplots)\nlibrary(HH)\nlibrary(psych)\n\n\n\n\n2.2 Data Description\n\n\nCode\nstr(Skulls)\n\n\n'data.frame':   150 obs. of  5 variables:\n $ epoch: Ord.factor w/ 5 levels \"c4000BC\"<\"c3300BC\"<..: 1 1 1 1 1 1 1 1 1 1 ...\n $ mb   : num  131 125 131 119 136 138 139 125 131 134 ...\n $ bh   : num  138 131 132 132 143 137 130 136 134 134 ...\n $ bl   : num  89 92 99 96 100 89 108 93 102 99 ...\n $ nh   : num  49 48 50 44 54 56 48 48 51 51 ...\n\n\nR console에 ?Skulls를 입력하면 다음과 같은 설명이 나온다.\nMeasurements made on Egyptian skulls from five epochs.\n\nThe epochs correspond to the following periods of Egyptian history:\n\nthe early predynstic period (circa 4000 BC);\nthe late predynatic period (circa 3300 BC);\nthe 12th and 13t dynasties (circa 1850 BC);\nthe Ptolemiac peiod (circa 200 BC);\nthe Roman period(circa 150 AD).\n\n\nThe question is hether the measurements change over time. Non-constant measurements of the skulls over time would indicate interbreeding with immigrant populations. Note that using polynomial contrasts for epoch essentially treats the time points as equally spaced\n즉, skulls 고대 이집트 왕조 부터 로마시대까지 이집트 지역에서 발군된 두개골의 크기를 측정한 데이터 이집트 역사를 5개의 시대로 구분하고 각 시대별로 30개씩의 두개골을 4개의 지표로 측정\n이 data는 3개의 변수와 76개의 samples을 포함한다.\n\ncpa : Childhood physical abuse on standard scale, covariate\nptsd : post-traumatic stress disorder on standard scale, response variable\ncsa : Childhood sexual abuse - abused or not abused, independent variable\n\n친절하게 response variable, independent variable 및 covariate을 규명해놓았다."
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html#eda",
    "href": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html#eda",
    "title": "MANOVA",
    "section": "3 EDA",
    "text": "3 EDA\n\n3.1 Descriptive Statistics\n\n\nCode\ntemp<-describeBy(ptsd~csa,data=sexab)\ntemp<-rbind('abused'=temp$Abused,'notAbused'=temp$NotAbused)%>%\nas.data.frame()\ntemp%>%knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvars\nn\nmean\nsd\nmedian\ntrimmed\nmad\nmin\nmax\nrange\nskew\nkurtosis\nse\n\n\n\n\nabused\n1\n45\n11.941093\n3.440151\n11.31277\n11.883422\n3.857355\n5.98491\n18.99251\n13.00760\n0.1556159\n-0.9124483\n0.5128275\n\n\nnotAbused\n1\n31\n4.695874\n3.519743\n5.79447\n4.903441\n1.978841\n-3.34921\n10.91447\n14.26368\n-0.6589170\n-0.2008051\n0.6321645\n\n\n\n\n\n위의 요약된 기술 통계량들 중 표준 편차는 유사하지만 평균 ptsd가 약 7.245219의 차이를 보여준다. 아래의 histogram역시 성폭력을 경험한 그룹과 경험하지 않은 그룹간의 PTSD 수치가 다른것을 볼 수 있다.\n\n\nCode\nggplot(data=sexab,aes(x=ptsd,color=csa,fill=csa))+\ngeom_histogram(aes(y=..density..),position=\"identity\",fill='white')+\ngeom_density(alpha=0.5)+\nlabs(title=\"Histogram, PTSD Grouped by Childhood Sexual Abuse Experience\", x=\"PTSD\", y=\"Desnsity\")\n\n\n\n\n\n\n\n3.2 One-Way ANOVA\n성폭력 경험 유무에 따른 PTSD 평균 차이가 통계적으로 유의한지 확인하기 위해 ANOVA를 수행한다.\n\n\nCode\nsexab_aov<-aov(ptsd~csa, data=sexab)\nsummary(sexab_aov)\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncsa          1  963.5   963.5    79.9 2.17e-13 ***\nResiduals   74  892.4    12.1                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n집단간 변수 csa p value가 <0.05 인 것을 확인할 수 있다. csa는 5% 유의수준에서 유의하다.\n하지만 PTSD의 변동량은 아동 학대에 의해 설명될 수도 있기 때문에 ptsd의 평균은 csa뿐만 아니라 cpa에 또한 고려되어야한다.\n\n\nCode\nggplot(data=sexab,aes(x=cpa,y=ptsd))+geom_point()+geom_smooth(method=\"lm\")+\nlabs(title=\"Scatter Plot, PTSD vs CPA\", x=\"CPA\", y=\"PTSD\")\n\n\n\n\n\nCode\ncorrelation<-cor.test(sexab$cpa,sexab$ptsd, method='pearson')\n\n\n그림과 같이 CPA가 증가하면서 PTSD또한 선형적으로 증가하는 패턴을 관찰할 수 있다. 두 변수간의 상관계수 = 0.49이고 p value= 6.2715909^{-6}으로 보아 두 변수 사이에 선형적인 상관관계가 있는 것으로 보인다.\n\n\nCode\nggplot(data=sexab,aes(x=cpa,y=ptsd))+geom_point()+geom_smooth(method=\"lm\")+\nfacet_wrap(.~csa)+\nlabs(title=\"Scatter Plot, PTSD vs CPA Grouped By CSA\", x=\"CPA\", y=\"PTSD\")\n\n\n\n\n\n아동기 성폭력 경험 유/무에도 PTSD와 CPA와 선형적인 관계가 있는 것으로 보이기 때문에 CSA의 PTSD로의 효과를 검정하기 위해선 CPA를 조정할 필요가 있는것으로 보인다.\n\n\nCode\n# ptsd로의 순수한 성폭력 경험의 영향도를 얻기 위해서는 아동기 신체적 학대(공변량)에 대해서 고려를 해줘야함\n\nsexab_aov<-aov(ptsd~cpa+csa, data=sexab) \nsummary(sexab_aov)\n\n\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncpa          1  449.8   449.8   41.98 9.46e-09 ***\ncsa          1  624.0   624.0   58.25 6.91e-11 ***\nResiduals   73  782.1    10.7                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n아동기의 신체적 학대가 일정하다는 가정하에서 PTSD와 성폭력의 순수한 관계는 5% 유의수준에서 유의하고 공변량, CPA를 조정하기전과 그 유의성이 차이가 있음을 관찰할 수 있다.\n\n\nCode\n# CPA가 제거 된 후에 CSA의 순수한 효과를 알아보기\n\nancova(ptsd~cpa+csa, data=sexab) \n\n\nAnalysis of Variance Table\n\nResponse: ptsd\n          Df Sum Sq Mean Sq F value    Pr(>F)    \ncpa        1 449.80  449.80  41.984 9.462e-09 ***\ncsa        1 624.03  624.03  58.247 6.907e-11 ***\nResiduals 73 782.08   10.71                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n두 csa집단에서 두 회귀선의 기울기 같고 절편이 다르게 나타나는 것을 관찰 할 수있다. 기울기가 같은 이유는 cpa가 ptsd에 영향을 미치는 정도가 두집단에서 일정하도록 공변량으로서 통제 했기 때문이다."
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html#blog-guide-map-link",
    "href": "docs/blog/posts/statistics/2023-01-28_MANOVA/index.html#blog-guide-map-link",
    "title": "MANOVA",
    "section": "4 Blog Guide Map Link",
    "text": "4 Blog Guide Map Link\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-07-anova/index.html#blog-guide-map-link",
    "href": "docs/blog/posts/statistics/2023-01-07-anova/index.html#blog-guide-map-link",
    "title": "ANOVA",
    "section": "5 Blog Guide Map Link",
    "text": "5 Blog Guide Map Link\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-16_normality/index.html#blog-guide-map-link",
    "href": "docs/blog/posts/statistics/2023-01-16_normality/index.html#blog-guide-map-link",
    "title": "Normality Check",
    "section": "2 Blog Guide Map Link",
    "text": "2 Blog Guide Map Link\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html#blog-guide-map-link",
    "href": "docs/blog/posts/statistics/2023-01-28_MANCOVA/index.html#blog-guide-map-link",
    "title": "MANOVA",
    "section": "1 Blog Guide Map Link",
    "text": "1 Blog Guide Map Link\n\nStatistics Blog\nEngineering Blog\nDeep Learning Blog\nMachine Learning Blog\nMathematics Blog\nPatent Blog\nValidation Blog"
  },
  {
    "objectID": "docs/blog/posts/statistics/guide_map/index.html#test",
    "href": "docs/blog/posts/statistics/guide_map/index.html#test",
    "title": "Blog Guide Map, Statistics",
    "section": "Test",
    "text": "Test\n\n1111-11-11, Hypothesis Testing\n2022-12-28, p-values\n1111-11-11, Permutation Test\n1111-11-11, Power\n1111-11-11, Multiple Testing\n1111-11-11, Sample Size Calculation\n1111-11-11, A/B Testing\n2023-01-07, ANOVA\n\n2023-01-27, ANCOVA\n2023-01-27, repeated measures ANOVA\n2023-01-28, MANOVA\n2023-01-28, MANCOVA"
  }
]